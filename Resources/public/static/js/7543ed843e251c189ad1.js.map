{"version":3,"sources":["webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-delivery/sw-product-variants-delivery-listing/sw-product-variants-delivery-listing.scss","webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-delivery/sw-product-variants-delivery-listing/index.js","webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-delivery/sw-product-variants-delivery-listing/sw-product-variants-delivery-listing.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Criteria","Shopware","Data","template","props","product","type","Object","required","selectedGroups","Array","data","searchTerm","computed","listingModeOptions","value","name","this","$tc","listingMode","mainVariant","variantListingConfig","displayParent","mainVariantModeOptions","mainVariantId","variantCriteria","criteria","addFilter","equals","id","addAssociation","length","addQuery","contains","context","_objectSpread","Context","api","inheritance","selectedGroupsSorted","sortedGroups","selectedGroupsCopy","_toConsumableArray","configuratorGroupConfig","reduce","acc","configGroup","relatedGroup","find","group","push","splice","indexOf","concat","created","createdComponent","methods","updateListingMode","updateVariantMode","updateMainVariant","isActiveGroupInListing","groupId","_this$product$variant","activeGroupConfig","expressionForListings","onChangeGroupListing","_this$product$variant2","existingGroup","representation","isActiveListingMode","mode","isDisabledListingMode","isSelected","item","onSearchTermChange","onSelectCollapsed"],"mappings":"wGAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAA8EL,SAC/E,WAAYF,GAAS,EAAM,K,yrBCF5C,IAAQQ,EAAaC,SAASC,KAAtBF,SAGO,WACXG,SCXW,6uNDaXC,MAAO,CACHC,QAAS,CACLC,KAAMC,OACNC,UAAU,GAGdC,eAAgB,CACZH,KAAMI,MACNF,UAAU,IAIlBG,KAAI,WACA,MAAO,CACHC,WAAY,KAIpBC,SAAU,CACNC,mBAAkB,WACd,MAAO,CACH,CACIC,MAAO,SACPC,KAAMC,KAAKC,IAAI,+DAEnB,CACIH,MAAO,WACPC,KAAMC,KAAKC,IAAI,mEAK3BC,YAAW,WACP,OAAOF,KAAKG,cAAmE,IAApDH,KAAKZ,QAAQgB,qBAAqBC,cACvD,SAAW,YAGrBC,uBAAsB,WAClB,MAAO,CACH,CACIR,OAAO,EACPC,KAAMC,KAAKC,IAAI,sEAEnB,CACIH,OAAO,EACPC,KAAMC,KAAKC,IAAI,kEAK3BE,YAAW,WACP,OAAOH,KAAKZ,QAAQgB,qBAAqBG,eAG7CC,gBAAe,WACX,IAAMC,EAAW,IAAI1B,EAAS,EAAG,IAQjC,OAPA0B,EAASC,UAAU3B,EAAS4B,OAAO,mBAAoBX,KAAKZ,QAAQwB,KACpEH,EAASI,eAAe,iBAEO,iBAApBb,KAAKL,YAA2BK,KAAKL,WAAWmB,OAAS,GAChEL,EAASM,SAAShC,EAASiC,SAAS,uBAAwBhB,KAAKL,YAAa,KAG3Ec,GAGXQ,QAAO,WACH,IAAMA,EAAOC,IAAA,GAAQlC,SAASmC,QAAQC,KAAG,IAAEC,aAAa,IAExD,OAAOJ,GAGXK,qBAAoB,WAEhB,IAAIC,EAAe,GACbC,EAAkBC,IAAOzB,KAAKR,gBAwBpC,OArBIQ,KAAKZ,QAAQgB,qBAAqBsB,yBAC/B1B,KAAKZ,QAAQgB,qBAAqBsB,wBAAwBZ,OAAS,IAEtES,EAAevB,KAAKZ,QAAQgB,qBAAqBsB,wBAC5CC,QAAO,SAACC,EAAKC,GACV,IAAMC,EAAeN,EAAmBO,MAAK,SAAAC,GAAK,OAAIA,EAAMpB,KAAOiB,EAAYjB,MAS/E,OAPIkB,IACAF,EAAIK,KAAKH,GAGTN,EAAmBU,OAAOV,EAAmBW,QAAQL,GAAe,IAGjEF,IACR,KAIXL,EAAY,GAAAa,OAAAX,IAAOF,GAAYE,IAAKD,MAM5Ca,QAAO,WACHrC,KAAKsC,oBAGTC,QAAS,CACLD,iBAAgB,WACZtC,KAAKwC,kBAAkBxC,KAAKE,cAGhCsC,kBAAiB,SAAC1C,GACA,aAAVA,IACAE,KAAKZ,QAAQgB,qBAAqBC,eAAgB,GAGtDL,KAAKZ,QAAQc,YAAcJ,GAG/B2C,kBAAiB,SAAC3C,GACdE,KAAKZ,QAAQgB,qBAAqBC,cAAgBP,GAGtD4C,kBAAiB,SAAC5C,GACdE,KAAKZ,QAAQgB,qBAAqBG,cAAgBT,GAGtD6C,uBAAsB,SAACC,GAAU,IAADC,EAG5B,MAFiE,QAAjCA,EAAA7C,KAAKZ,QAAQgB,4BAAoB,IAAAyC,OAAA,EAAjCA,EAAmCnB,0BAA2B,IAEjEZ,OACzB,OAAO,EAGX,IAAMgC,EAAoB9C,KAAKZ,QAAQgB,qBAAqBsB,wBAAwBK,MAAK,SAACC,GACtF,OAAOA,EAAMpB,KAAOgC,KAGxB,QAAOE,GAAoBA,EAAkBC,uBAGjDC,qBAAoB,SAAClD,EAAO8C,GAAU,IAADK,EAC3BvB,GAA2D,QAAjCuB,EAAAjD,KAAKZ,QAAQgB,4BAAoB,IAAA6C,OAAA,EAAjCA,EAAmCvB,0BAA2B,GACxFwB,EAAgBxB,EAAwBK,MAAK,SAACC,GAAK,OAAKA,EAAMpB,KAAOgC,KAEvEM,EACAA,EAAcH,sBAAwBjD,GAI1C4B,EAAwBO,KAAK,CACzBrB,GAAIgC,EACJG,sBAAuBjD,EACvBqD,eAAgB,QAGpBnD,KAAKZ,QAAQgB,qBAAqBsB,wBAA0BA,IAGhE0B,oBAAmB,SAACC,GAChB,OAAOA,IAASrD,KAAKZ,QAAQc,aAGjCoD,sBAAqB,SAACD,GAClB,OAAQrD,KAAKoD,oBAAoBC,IAGrCE,WAAU,SAACC,GACP,OAAOxD,KAAKG,cAAgBqD,EAAK5C,IAGrC6C,mBAAkB,SAAC3D,GACfE,KAAKL,WAAaG,GAGtB4D,kBAAiB,WACb1D,KAAKL,WAAa","file":"static/js/7543ed843e251c189ad1.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-variants-delivery-listing.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"63a71098\", content, true, {});","/*\n * @package inventory\n */\n\nimport template from './sw-product-variants-delivery-listing.html.twig';\nimport './sw-product-variants-delivery-listing.scss';\n\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    props: {\n        product: {\n            type: Object,\n            required: true,\n        },\n\n        selectedGroups: {\n            type: Array,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            searchTerm: '',\n        };\n    },\n\n    computed: {\n        listingModeOptions() {\n            return [\n                {\n                    value: 'single',\n                    name: this.$tc('sw-product.variations.deliveryModal.listingLabelModeSingle'),\n                },\n                {\n                    value: 'expanded',\n                    name: this.$tc('sw-product.variations.deliveryModal.listingLabelModeExpanded'),\n                },\n            ];\n        },\n\n        listingMode() {\n            return this.mainVariant || this.product.variantListingConfig.displayParent === true\n                ? 'single' : 'expanded';\n        },\n\n        mainVariantModeOptions() {\n            return [\n                {\n                    value: true,\n                    name: this.$tc('sw-product.variations.deliveryModal.listingLabelModeDisplayParent'),\n                },\n                {\n                    value: false,\n                    name: this.$tc('sw-product.variations.deliveryModal.listingLabelMainVariant'),\n                },\n            ];\n        },\n\n        mainVariant() {\n            return this.product.variantListingConfig.mainVariantId;\n        },\n\n        variantCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(Criteria.equals('product.parentId', this.product.id));\n            criteria.addAssociation('options.group');\n\n            if (typeof this.searchTerm === 'string' && this.searchTerm.length > 0) {\n                criteria.addQuery(Criteria.contains('product.options.name', this.searchTerm), 500);\n            }\n\n            return criteria;\n        },\n\n        context() {\n            const context = { ...Shopware.Context.api, inheritance: true };\n\n            return context;\n        },\n\n        selectedGroupsSorted() {\n            // prepare group sorting\n            let sortedGroups = [];\n            const selectedGroupsCopy = [...this.selectedGroups];\n\n            // check if sorting exists on server\n            if (this.product.variantListingConfig.configuratorGroupConfig\n                && this.product.variantListingConfig.configuratorGroupConfig.length > 0) {\n                // add server sorting to the sortedGroups\n                sortedGroups = this.product.variantListingConfig.configuratorGroupConfig\n                    .reduce((acc, configGroup) => {\n                        const relatedGroup = selectedGroupsCopy.find(group => group.id === configGroup.id);\n\n                        if (relatedGroup) {\n                            acc.push(relatedGroup);\n\n                            // remove from original array\n                            selectedGroupsCopy.splice(selectedGroupsCopy.indexOf(relatedGroup), 1);\n                        }\n\n                        return acc;\n                    }, []);\n            }\n\n            // add non sorted groups at the end of the sorted array\n            sortedGroups = [...sortedGroups, ...selectedGroupsCopy];\n\n            return sortedGroups;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.updateListingMode(this.listingMode);\n        },\n\n        updateListingMode(value) {\n            if (value === 'expanded') {\n                this.product.variantListingConfig.displayParent = true;\n            }\n\n            this.product.listingMode = value;\n        },\n\n        updateVariantMode(value) {\n            this.product.variantListingConfig.displayParent = value;\n        },\n\n        updateMainVariant(value) {\n            this.product.variantListingConfig.mainVariantId = value;\n        },\n\n        isActiveGroupInListing(groupId) {\n            const configuratorGroupConfig = this.product.variantListingConfig?.configuratorGroupConfig || [];\n\n            if (!configuratorGroupConfig.length) {\n                return false;\n            }\n\n            const activeGroupConfig = this.product.variantListingConfig.configuratorGroupConfig.find((group) => {\n                return group.id === groupId;\n            });\n\n            return activeGroupConfig ? activeGroupConfig.expressionForListings : false;\n        },\n\n        onChangeGroupListing(value, groupId) {\n            const configuratorGroupConfig = this.product.variantListingConfig?.configuratorGroupConfig || [];\n            const existingGroup = configuratorGroupConfig.find((group) => group.id === groupId);\n\n            if (existingGroup) {\n                existingGroup.expressionForListings = value;\n                return;\n            }\n\n            configuratorGroupConfig.push({\n                id: groupId,\n                expressionForListings: value,\n                representation: 'box',\n            });\n\n            this.product.variantListingConfig.configuratorGroupConfig = configuratorGroupConfig;\n        },\n\n        isActiveListingMode(mode) {\n            return mode === this.product.listingMode;\n        },\n\n        isDisabledListingMode(mode) {\n            return !this.isActiveListingMode(mode);\n        },\n\n        isSelected(item) {\n            return this.mainVariant === item.id;\n        },\n\n        onSearchTermChange(value) {\n            this.searchTerm = value;\n        },\n\n        onSelectCollapsed() {\n            this.searchTerm = '';\n        },\n    },\n};\n","export default \"\\n{% block sw_product_variants_delivery_listing %}\\n<div class=\\\"sw-product-variants-delivery-listing\\\">\\n    \\n    {% block sw_product_variants_delivery_listing_mode %}\\n    <div class=\\\"sw-product-variants-delivery-listing-mode\\\">\\n        \\n        {% block sw_product_variants_delivery_listing_mode_selection %}\\n        <sw-radio-field\\n            :value=\\\"product.listingMode\\\"\\n            :options=\\\"listingModeOptions\\\"\\n            {% if VUE3 %}\\n            @update:value=\\\"updateListingMode\\\"\\n            {% else %}\\n            @change=\\\"updateListingMode\\\"\\n            {% endif %}\\n        />\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variants_delivery_listing_config %}\\n    <div class=\\\"sw-product-variants-delivery-listing-config\\\">\\n\\n        \\n        {% block sw_product_variants_delivery_listing_config_single %}\\n        <div\\n            class=\\\"sw-product-variants-delivery-listing-config-options\\\"\\n            :class=\\\"{ 'is--disabled': isDisabledListingMode('single') }\\\"\\n        >\\n\\n            \\n            {% block sw_product_variants_delivery_variant_mode_selection %}\\n            <sw-radio-field\\n                class=\\\"sw-product-variants-delivery-listing_variant-selection\\\"\\n                :value=\\\"product.variantListingConfig.displayParent\\\"\\n                :options=\\\"mainVariantModeOptions\\\"\\n                :disabled=\\\"isDisabledListingMode('single')\\\"\\n                {% if VUE3 %}\\n                @update:value=\\\"updateVariantMode\\\"\\n                {% else %}\\n                @change=\\\"updateVariantMode\\\"\\n                {% endif %}\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variants_delivery_listing_config_single_main_variant_label %}\\n            <p>{{ $tc('sw-product.variations.deliveryModal.listingLabelMainVariant') }}</p>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variants_delivery_listing_config_single_main_variant_select %}\\n            <sw-entity-single-select\\n                id=\\\"mainVariant\\\"\\n                :key=\\\"product.id\\\"\\n                class=\\\"sw-product-variants-delivery-listing_entity-select\\\"\\n                :value=\\\"mainVariant\\\"\\n                entity=\\\"product\\\"\\n                label-property=\\\"name\\\"\\n                :criteria=\\\"variantCriteria\\\"\\n                :context=\\\"context\\\"\\n                :disabled=\\\"isDisabledListingMode('single')\\\"\\n                :placeholder=\\\"$tc('sw-product.variations.deliveryModal.listingPlaceholderSelectMainVariant')\\\"\\n                show-clearable-button\\n                {% if VUE3 %}\\n                @update:value=\\\"updateMainVariant\\\"\\n                {% else %}\\n                @change=\\\"updateMainVariant\\\"\\n                {% endif %}\\n                @select-collapsed=\\\"onSelectCollapsed\\\"\\n                @search-term-change=\\\"onSearchTermChange\\\"\\n            >\\n                <template #selection-label-property=\\\"{ item }\\\">\\n                    <slot\\n                        name=\\\"selection-label-property\\\"\\n                        v-bind=\\\"{ item }\\\"\\n                    >\\n                        <sw-product-variant-info\\n                            :variations=\\\"item.variation\\\"\\n                        >\\n                            {{ item.name || item.translated.name }}\\n                        </sw-product-variant-info>\\n                    </slot>\\n                </template>\\n\\n                <template #result-item=\\\"{ item, index }\\\">\\n                    <slot\\n                        name=\\\"result-item\\\"\\n                        v-bind=\\\"{ item, index, isSelected }\\\"\\n                    >\\n                        <sw-select-result\\n                            :selected=\\\"isSelected(item)\\\"\\n                            v-bind=\\\"{ item, index }\\\"\\n                        >\\n                            \\n                            {% block sw_product_variants_results_list_result_label %}\\n                            <span class=\\\"sw-select-result__result-item-text\\\">\\n                                <sw-product-variant-info\\n                                    :variations=\\\"item.variation\\\"\\n                                >\\n                                    {{ item.translated.name || item.name }}\\n                                </sw-product-variant-info>\\n                            </span>\\n                            {% endblock %}\\n                        </sw-select-result>\\n                    </slot>\\n                </template>\\n            </sw-entity-single-select>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variants_delivery_listing_config_single_main_variant_explanation %}\\n            <div class=\\\"sw-product-variants-delivery-listing__option-explanation\\\">\\n                <p v-if=\\\"product.variantListingConfig.displayParent\\\">\\n                    {{ $tc('sw-product.variations.deliveryModal.listingExplanationModeMainProduct') }}\\n                </p>\\n                <p v-else>\\n                    {{ $tc('sw-product.variations.deliveryModal.listingExplanationModeSingle') }}\\n                </p>\\n            </div>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variants_delivery_listing_config_expanded %}\\n        <div\\n            class=\\\"sw-product-variants-delivery-listing-config-options\\\"\\n            :class=\\\"{ 'is--disabled': isDisabledListingMode('expanded') }\\\"\\n        >\\n            \\n            {% block sw_product_variants_delivery_listing_config_expanded_group_list %}\\n            <dl>\\n                \\n                {% block sw_product_variants_delivery_listing_config_expanded_group_list_items %}\\n                <dd\\n                    v-for=\\\"group in selectedGroupsSorted\\\"\\n                    :key=\\\"group.id\\\"\\n                    :disabled=\\\"isDisabledListingMode('expanded')\\\"\\n                    class=\\\"sw-product-variants-delivery-listing__groupElement\\\"\\n                >\\n                    \\n                    {% block sw_product_variants_delivery_listing_config_expanded_group_list_item %}\\n                    <sw-checkbox-field\\n                        :value=\\\"isActiveGroupInListing(group.id)\\\"\\n                        :disabled=\\\"isDisabledListingMode('expanded')\\\"\\n                        :label=\\\"group.translated.name\\\"\\n                        {% if VUE3 %}\\n                        @update:value=\\\"onChangeGroupListing($event, group.id)\\\"\\n                        {% else %}\\n                        @change=\\\"onChangeGroupListing($event, group.id)\\\"\\n                        {% endif %}\\n                    />\\n                    {% endblock %}\\n                </dd>\\n                {% endblock %}\\n            </dl>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}