{"version":3,"sources":["webpack:///./src/module/sw-integration/page/sw-integration-list/sw-integration-list.scss","webpack:///./src/module/sw-integration/page/sw-integration-list/sw-integration-list.html.twig","webpack:///./src/module/sw-integration/page/sw-integration-list/index.js"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Mixin","Criteria","Data","template","inject","mixins","getByName","data","integrations","isLoading","isModalLoading","showDeleteModal","currentIntegration","showSecretAccessKey","metaInfo","title","this","$createTitle","computed","integrationRepository","repositoryFactory","create","integrationCriteria","criteria","addFilter","equals","addSorting","sort","addAssociation","secretAccessKeyFieldType","secretAccessKeyFieldTypeIsText","secretAccessKeyFieldTypeIsPassword","integrationColumns","property","label","$tc","primary","created","createdComponent","methods","getList","_this","search","then","finally","onSaveIntegration","_this2","integration","find","a","id","createIntegration","updateIntegration","_this3","save","createSavedSuccessNotification","onCloseDetailModal","catch","createSavedErrorNotification","_this4","length","$nextTick","createNotificationSuccess","message","createNotificationError","onGenerateKeys","_this5","integrationService","generateKey","response","accessKey","secretAccessKey","onShowDetailModal","onCreateIntegration","onCloseDeleteModal","onConfirmDelete","_this6","delete"],"mappings":"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","file":"static/js/b9d2389ed1e1ab14cdd0.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-integration-list.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5df35fd3\", content, true, {});","export default \"\\n{% block sw_integration_list %}\\n<sw-page class=\\\"sw-integration-list\\\">\\n    \\n    {% block sw_integration_list_smart_bar_header %}\\n    <template #smart-bar-header>\\n        \\n        {% block sw_integration_list_smart_bar_header_title %}\\n        <h2>\\n            \\n            {% block sw_integration_list_smart_bar_header_title_text %}\\n            {{ $tc('sw-settings.index.title') }}\\n            <sw-icon\\n                name=\\\"regular-chevron-right-xs\\\"\\n                small\\n            />\\n            {{ $tc('sw-integration.general.headlineIntegrations') }}\\n            {% endblock %}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_integration_list_smart_bar_actions %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"{\\n                message: $tc('sw-privileges.tooltip.warning'),\\n                disabled: acl.can('integration.creator'),\\n                showOnDisabledElements: true\\n            }\\\"\\n            class=\\\"sw-integration-list__add-integration-action\\\"\\n            variant=\\\"primary\\\"\\n            :disabled=\\\"!acl.can('integration.creator')\\\"\\n            @click=\\\"onCreateIntegration\\\"\\n        >\\n            {{ $tc('sw-integration.general.buttonCreateIntegration') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n\\n    \\n    {% block sw_integration_list_content %}\\n    <template #content>\\n        <sw-card-view class=\\\"sw-integration-list__content\\\">\\n\\n            \\n            {% block sw_integration_list_introduction %}\\n            <sw-card\\n                :hero=\\\"true\\\"\\n                position-identifier=\\\"sw-integration-list-introduction\\\"\\n            >\\n                <h3 class=\\\"sw-integration-list__welcome-headline\\\">\\n                    {{ $tc('sw-integration.general.heroHeadlineIntegrations') }}\\n                </h3>\\n                <p>{{ $tc('sw-integration.general.heroDescriptionIntegrations') }}</p>\\n            </sw-card>\\n            {% endblock %}\\n\\n            \\n            {% block sw_integration_list_overview %}\\n            <sw-card\\n                :is-loading=\\\"isLoading\\\"\\n                class=\\\"sw-integration-list__overview\\\"\\n                position-identifier=\\\"sw-integration-list-overview\\\"\\n            >\\n                \\n                {% block sw_integration_list_overview_inner %}\\n                \\n                {% block sw_integration_list_detail_modal %}\\n                <sw-modal\\n                    v-if=\\\"currentIntegration\\\"\\n                    size=\\\"550px\\\"\\n                    class=\\\"sw-integration-list__detail\\\"\\n                    :is-loading=\\\"isModalLoading\\\"\\n                    :title=\\\"showSecretAccessKey ? $tc('sw-integration.detail.detailModalTitle') : $tc('sw-integration.detail.detailModalTitleEdit') + ' ' + currentIntegration.label\\\"\\n                    @modal-close=\\\"onCloseDetailModal\\\"\\n                >\\n                    \\n                    {% block sw_integration_list_detail_modal_inner %}\\n\\n                    \\n                    {% block sw_integration_list_detail_modal_inner_field_label %}\\n                    <sw-container\\n                        columns=\\\"2fr 1fr\\\"\\n                        gap=\\\"24px\\\"\\n                    >\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"currentIntegration.label\\\"\\n                            {% else %}\\n                            v-model=\\\"currentIntegration.label\\\"\\n                            {% endif %}\\n                            :label=\\\"$tc('sw-integration.detail.labelFieldLabel')\\\"\\n                            :disabled=\\\"!acl.can('integration.editor')\\\"\\n                        />\\n\\n                        \\n                        {% block sw_integration_list_detail_modal_inner_acl_is_admin %}\\n                        <sw-switch-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"currentIntegration.admin\\\"\\n                            {% else %}\\n                            v-model=\\\"currentIntegration.admin\\\"\\n                            {% endif %}\\n                            class=\\\"sw-settings-user-detail__grid-is-admin\\\"\\n                            :label=\\\"$tc('sw-users-permissions.users.user-detail.labelAdministrator')\\\"\\n                            :disabled=\\\"!acl.can('admin')\\\"\\n                        />\\n                        {% endblock %}\\n                    </sw-container>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_integration_list_detail_modal_inner_acl_roles %}\\n                    <sw-entity-multi-select\\n                        {% if VUE3 %}\\n                        v-model:entityCollection=\\\"currentIntegration.aclRoles\\\"\\n                        {% else %}\\n                        v-model=\\\"currentIntegration.aclRoles\\\"\\n                        {% endif %}\\n                        v-tooltip=\\\"{\\n                            showDelay: 300,\\n                            message: $tc('sw-users-permissions.users.user-detail.disabledRoleSelectWarning'),\\n                            disabled: !currentIntegration.admin || !acl.can('integration.editor')\\n                        }\\\"\\n                        class=\\\"sw-settings-user-detail__grid-aclRoles\\\"\\n                        :label=\\\"$tc('sw-users-permissions.users.user-detail.labelRoles')\\\"\\n                        :disabled=\\\"currentIntegration.admin || !acl.can('integration.editor')\\\"\\n                        label-property=\\\"name\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_integration_list_detail_modal_inner_field_accesskey %}\\n                    <sw-text-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"currentIntegration.accessKey\\\"\\n                        {% else %}\\n                        v-model=\\\"currentIntegration.accessKey\\\"\\n                        {% endif %}\\n                        :label=\\\"$tc('sw-integration.detail.idFieldLabel')\\\"\\n                        :disabled=\\\"true\\\"\\n                        :copyable=\\\"true\\\"\\n                        :copyable-tooltip=\\\"true\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_integration_list_detail_modal_inner_field_secretaccesskey %}\\n                    <template v-if=\\\"showSecretAccessKey\\\">\\n                        <sw-text-field\\n                            v-if=\\\"secretAccessKeyFieldTypeIsText\\\"\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"currentIntegration.secretAccessKey\\\"\\n                            {% else %}\\n                            v-model=\\\"currentIntegration.secretAccessKey\\\"\\n                            {% endif %}\\n                            :type=\\\"secretAccessKeyFieldType\\\"\\n                            :label=\\\"$tc('sw-integration.detail.secretFieldLabel')\\\"\\n                            :disabled=\\\"true\\\"\\n                            :password-toggle-able=\\\"false\\\"\\n                            :copyable=\\\"showSecretAccessKey\\\"\\n                            :copyable-tooltip=\\\"true\\\"\\n                        />\\n\\n                        <sw-password-field\\n                            v-if=\\\"secretAccessKeyFieldTypeIsPassword\\\"\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"currentIntegration.secretAccessKey\\\"\\n                            {% else %}\\n                            v-model=\\\"currentIntegration.secretAccessKey\\\"\\n                            {% endif %}\\n                            :type=\\\"secretAccessKeyFieldType\\\"\\n                            :label=\\\"$tc('sw-integration.detail.secretFieldLabel')\\\"\\n                            :disabled=\\\"true\\\"\\n                            :password-toggle-able=\\\"false\\\"\\n                            :copyable=\\\"showSecretAccessKey\\\"\\n                            :copyable-tooltip=\\\"true\\\"\\n                        />\\n                    </template>\\n\\n                    <sw-button\\n                        v-if=\\\"!showSecretAccessKey\\\"\\n                        variant=\\\"danger\\\"\\n                        :disabled=\\\"!acl.can('integration.editor')\\\"\\n                        :block=\\\"true\\\"\\n                        @click=\\\"onGenerateKeys\\\"\\n                    >\\n                        {{ $tc('sw-integration.detail.buttonCreateNewApiKeys') }}\\n                    </sw-button>\\n\\n                    \\n                    {% block sw_integration_list_detail_modal_inner_field_helpText %}\\n                    <div\\n                        v-if=\\\"!showSecretAccessKey\\\"\\n                        class=\\\"sw-integration-list__help-text\\\"\\n                    >\\n                        {{ $tc('sw-integration.detail.hintCreateNewApiKeys') }}\\n                    </div>\\n                    {% endblock %}\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_integration_list_detail_modal_inner_helptext %}\\n                    <sw-alert\\n                        v-if=\\\"showSecretAccessKey\\\"\\n                        variant=\\\"warning\\\"\\n                        class=\\\"sw-integration-list__secret-help-text-alert\\\"\\n                    >\\n                        {{ $tc('sw-integration.detail.secretHelpText') }}\\n                    </sw-alert>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_integration_list_detail_modal_inner_footer %}\\n                    <template #modal-footer>\\n                        \\n                        {% block sw_integration_list_detail_modal_inner_footer_cancel %}\\n                        <sw-button\\n                            size=\\\"small\\\"\\n                            :disabled=\\\"isModalLoading\\\"\\n                            @click=\\\"onCloseDetailModal\\\"\\n                        >\\n                            {{ $tc('sw-integration.detail.buttonCancel') }}\\n                        </sw-button>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_integration_list_detail_modal_inner_footer_apply %}\\n                        <sw-button\\n                            size=\\\"small\\\"\\n                            class=\\\"sw-integration-detail-modal__save-action\\\"\\n                            :disabled=\\\"(isModalLoading && !!currentIntegration.label) || !acl.can('integration.editor')\\\"\\n                            variant=\\\"primary\\\"\\n                            @click=\\\"onSaveIntegration\\\"\\n                        >\\n                            {{ showSecretAccessKey ? $tc('sw-integration.detail.buttonApply') : $tc('sw-integration.detail.buttonApplyEdit') }}\\n                        </sw-button>\\n                        {% endblock %}\\n                    </template>\\n                    {% endblock %}\\n                    {% endblock %}\\n                </sw-modal>\\n                {% endblock %}\\n\\n                \\n                {% block sw_integration_list_grid %}\\n                <sw-entity-listing\\n                    v-if=\\\"integrations && integrations.length > 0\\\"\\n                    :items=\\\"integrations\\\"\\n                    :columns=\\\"integrationColumns\\\"\\n                    :repository=\\\"integrationRepository\\\"\\n                    :full-page=\\\"false\\\"\\n                    :compact-mode=\\\"false\\\"\\n                    :allow-column-edit=\\\"false\\\"\\n                    :show-selection=\\\"false\\\"\\n                    :show-settings=\\\"false\\\"\\n                    :allow-view=\\\"acl.can('integration.viewer')\\\"\\n                    :is-loading=\\\"isLoading\\\"\\n                >\\n\\n                    \\n                    {% block sw_integration_list_grid_inner_slot_columns_label %}\\n                    <template #column-label=\\\"{ item }\\\">\\n                        <span class=\\\"sw-integration-list__app-icon\\\">\\n                            <sw-icon name=\\\"regular-share\\\" />\\n                        </span>\\n                        <a\\n                            href=\\\"#\\\"\\n                            @click.prevent=\\\"onShowDetailModal(item)\\\"\\n                        >\\n                            {{ item.label }}\\n                        </a>\\n                    </template>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_integration_list_grid_inner_slot_columns_writeAccess %}\\n                    <template #column-writeAccess=\\\"{ item }\\\">\\n                        <sw-label\\n                            v-if=\\\"item.admin\\\"\\n                            size=\\\"medium\\\"\\n                            ghost\\n                            caps\\n                            light\\n                        >\\n                            {{ $tc('sw-users-permissions.users.user-detail.labelAdministrator') }}\\n                        </sw-label>\\n\\n                        <span v-if=\\\"!item.admin && item.aclRoles && item.aclRoles.length\\\">\\n                            <sw-label\\n                                v-for=\\\"role in item.aclRoles\\\"\\n                                :key=\\\"role.name\\\"\\n                                size=\\\"medium\\\"\\n                                ghost\\n                                caps\\n                                light\\n                            >\\n                                {{ role.name }}\\n                            </sw-label>\\n                        </span>\\n                    </template>\\n                    {% endblock %}\\n\\n                    <template #actions=\\\"{ item }\\\">\\n                        \\n                        {% block sw_integration_list_grid_inner_slot_columns_actions_edit %}\\n                        <sw-context-menu-item\\n                            class=\\\"sw_integration_list__edit-action\\\"\\n                            :disabled=\\\"!acl.can('integration.editor')\\\"\\n                            @click=\\\"onShowDetailModal(item)\\\"\\n                        >\\n                            {{ $tc('sw-integration.list.contextMenuEdit') }}\\n                        </sw-context-menu-item>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_integration_list_grid_inner_slot_columns_actions_delete %}\\n                        <sw-context-menu-item\\n                            class=\\\"sw_integration_list__delete-action\\\"\\n                            variant=\\\"danger\\\"\\n                            :disabled=\\\"!acl.can('integration.deleter')\\\"\\n                            @click=\\\"showDeleteModal = item.id\\\"\\n                        >\\n                            {{ $tc('sw-integration.list.contextMenuDelete') }}\\n                        </sw-context-menu-item>\\n                        {% endblock %}\\n                    </template>\\n\\n                    <template #action-modals=\\\"{ item }\\\">\\n                        \\n                        {% block sw_integration_list_grid_inner_slot_delete_modal %}\\n                        <sw-modal\\n                            v-if=\\\"showDeleteModal === item.id\\\"\\n                            :title=\\\"$tc('sw-integration.detail.deleteModalTitle')\\\"\\n                            @modal-close=\\\"onCloseDeleteModal\\\"\\n                        >\\n                            \\n                            {% block sw_integration_list_grid_inner_slot_delete_modal_confirmtext %}\\n                            <p>\\n                                {{ $tc('sw-integration.detail.confirmDelete') }}\\n                                <strong>\\\"{{ item.label }}\\\"</strong>\\n                            </p>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_integration_list_grid_inner_slot_delete_modal_footer %}\\n                            <template #modal-footer>\\n                                <sw-button\\n                                    size=\\\"small\\\"\\n                                    @click=\\\"onCloseDeleteModal\\\"\\n                                >\\n                                    {{ $tc('sw-integration.detail.buttonCancel') }}\\n                                </sw-button>\\n\\n                                <sw-button\\n                                    size=\\\"small\\\"\\n                                    variant=\\\"primary\\\"\\n                                    @click=\\\"onConfirmDelete(item.id)\\\"\\n                                >\\n                                    {{ $tc('sw-integration.detail.buttonDelete') }}\\n                                </sw-button>\\n                            </template>\\n                            {% endblock %}\\n                        </sw-modal>\\n                        {% endblock %}\\n                    </template>\\n                </sw-entity-listing>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_list_empty_state %}\\n                <sw-empty-state\\n                    v-else\\n                    :title=\\\"$tc('sw-integration.list.messageEmpty')\\\"\\n                    :subline=\\\"$tc('sw-integration.list.sublineEmpty')\\\"\\n                />\\n                {% endblock %}\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n        </sw-card-view>\\n        {% endblock %}\\n    </template>\\n</sw-page>\\n{% endblock %}\\n\";","/**\n * @package services-settings\n */\nimport template from './sw-integration-list.html.twig';\nimport './sw-integration-list.scss';\n\nconst { Mixin, Data: { Criteria } } = Shopware;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['integrationService', 'repositoryFactory', 'acl'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            integrations: null,\n            isLoading: false,\n            isModalLoading: false,\n            showDeleteModal: null,\n            currentIntegration: null,\n            showSecretAccessKey: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        integrationRepository() {\n            return this.repositoryFactory.create('integration');\n        },\n\n        integrationCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(Criteria.equals('deletedAt', null));\n            criteria.addFilter(Criteria.equals('app.id', null));\n            criteria.addSorting(Criteria.sort('label', 'ASC'));\n            criteria.addAssociation('aclRoles');\n\n            return criteria;\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - will be removed\n         * Use `secretAccessKeyFieldTypeIsText` and `secretAccessKeyFieldTypeIsPassword` instead\n         */\n        secretAccessKeyFieldType() {\n            return this.showSecretAccessKey ? 'text' : 'password';\n        },\n\n        secretAccessKeyFieldTypeIsText() {\n            return this.secretAccessKeyFieldType === 'text';\n        },\n\n        secretAccessKeyFieldTypeIsPassword() {\n            return this.secretAccessKeyFieldType === 'password';\n        },\n\n        integrationColumns() {\n            return [\n                {\n                    property: 'label',\n                    label: this.$tc('sw-integration.list.integrationName'),\n                    primary: true,\n                }, {\n                    property: 'writeAccess',\n                    label: this.$tc('sw-integration.list.permissions'),\n                },\n            ];\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.getList();\n        },\n\n        getList() {\n            this.isLoading = true;\n\n            this.integrationRepository.search(this.integrationCriteria)\n                .then((integrations) => {\n                    this.integrations = integrations;\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        onSaveIntegration() {\n            if (!this.currentIntegration) {\n                return;\n            }\n\n            const integration = this.integrations.find(a => a.id === this.currentIntegration.id);\n\n            if (typeof integration === 'undefined') {\n                this.createIntegration();\n            } else {\n                this.updateIntegration(integration);\n            }\n        },\n\n        updateIntegration(integration) {\n            this.isModalLoading = true;\n\n            this.integrationRepository.save(integration)\n                .then(() => {\n                    this.createSavedSuccessNotification();\n                    this.onCloseDetailModal();\n                })\n                .catch(() => {\n                    this.createSavedErrorNotification();\n                    this.onCloseDetailModal();\n                });\n        },\n\n        createIntegration() {\n            if (!this.currentIntegration.label || !this.currentIntegration.label.length) {\n                this.createSavedErrorNotification();\n                return;\n            }\n\n            this.isModalLoading = true;\n\n            this.integrationRepository.save(this.currentIntegration)\n                .then(() => {\n                    this.createSavedSuccessNotification();\n                    this.getList();\n                })\n                .catch(() => {\n                    this.createSavedErrorNotification();\n                })\n                .finally(() => {\n                    this.$nextTick(() => {\n                        this.onCloseDetailModal();\n                    });\n                });\n        },\n\n        createSavedSuccessNotification() {\n            this.createNotificationSuccess({\n                message: this.$tc('sw-integration.detail.messageSaveSuccess'),\n            });\n        },\n\n        createSavedErrorNotification() {\n            this.createNotificationError({\n                message: this.$tc('sw-integration.detail.messageSaveError'),\n            });\n        },\n\n        onGenerateKeys() {\n            if (!this.currentIntegration) {\n                return;\n            }\n\n            this.isModalLoading = true;\n\n            this.integrationService.generateKey().then((response) => {\n                this.currentIntegration = this.currentIntegration || this.integrationRepository.create();\n                this.currentIntegration.accessKey = response.accessKey;\n                this.currentIntegration.secretAccessKey = response.secretAccessKey;\n                this.showSecretAccessKey = true;\n                this.isModalLoading = false;\n            }).catch(() => {\n                this.createNotificationError({\n                    message: this.$tc('sw-integration.detail.messageCreateNewError'),\n                });\n            });\n        },\n\n        onShowDetailModal(integration) {\n            this.currentIntegration = integration;\n        },\n\n        onCreateIntegration() {\n            this.currentIntegration = this.integrationRepository.create();\n\n            this.onGenerateKeys();\n        },\n\n        onCloseDetailModal() {\n            this.currentIntegration = null;\n            this.showSecretAccessKey = false;\n            this.isModalLoading = false;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = null;\n        },\n\n        onConfirmDelete(id) {\n            if (!id) {\n                return;\n            }\n\n            this.onCloseDeleteModal();\n\n            this.integrationRepository.delete(id)\n                .then(() => {\n                    this.getList();\n                });\n        },\n    },\n};\n"],"sourceRoot":""}