{"version":3,"sources":["webpack:///./src/module/sw-users-permissions/page/sw-users-permissions-role-detail/index.js","webpack:///./src/module/sw-users-permissions/page/sw-users-permissions-role-detail/sw-users-permissions-role-detail.html.twig"],"names":["Mixin","Shopware","template","inject","mixins","getByName","shortcuts","ESCAPE","data","isLoading","isSaveSuccessful","role","confirmPasswordModal","detailedPrivileges","metaInfo","title","this","$createTitle","identifier","computed","tooltipSave","systemKey","$device","getSystemKey","message","concat","appearance","tooltipCancel","languageId","State","get","roleRepository","repositoryFactory","create","roleId","$route","params","id","watch","createdComponent","created","methods","ExtensionAPI","publishData","path","scope","getRole","createNewRole","name","description","privileges","_this","appAclService","addAppPermissions","then","filteredPrivileges","filterPrivilegesRoles","allGeneralPrivileges","getPrivilegesForAdminPrivilegeKeys","filter","privilege","includes","finally","onSave","saveRole","context","_this2","_toConsumableArray","sort","save","updateCurrentUser","isNew","$router","push","catch","createNotificationError","$tc","entityName","userService","getUser","response","password","commit","onCloseConfirmPasswordModal","saveFinish","onCancel"],"mappings":"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","file":"static/js/86e8e851a356d0cc767c.js","sourcesContent":["/**\n * @package services-settings\n */\nimport template from './sw-users-permissions-role-detail.html.twig';\n\nconst { Mixin } = Shopware;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'privileges',\n        'userService',\n        'loginService',\n        'acl',\n        'appAclService',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n\n    shortcuts: {\n        'SYSTEMKEY+S': 'onSave',\n        ESCAPE: 'onCancel',\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            isSaveSuccessful: false,\n            role: null,\n            confirmPasswordModal: false,\n            detailedPrivileges: [],\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        tooltipSave() {\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        tooltipCancel() {\n            return {\n                message: 'ESC',\n                appearance: 'light',\n            };\n        },\n\n        languageId() {\n            return Shopware.State.get('session').languageId;\n        },\n\n        roleRepository() {\n            return this.repositoryFactory.create('acl_role');\n        },\n\n        roleId() {\n            return this.$route.params.id;\n        },\n    },\n\n    watch: {\n        languageId() {\n            this.createdComponent();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-users-permissions-role-detail__detailedPrivileges',\n                path: 'detailedPrivileges',\n                scope: this,\n            });\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-users-permissions-role-detail__role',\n                path: 'role',\n                scope: this,\n            });\n            if (!this.roleId) {\n                this.createNewRole();\n                return;\n            }\n\n            this.getRole();\n        },\n\n        createNewRole() {\n            this.isLoading = true;\n\n            this.role = this.roleRepository.create();\n\n            this.role.name = '';\n            this.role.description = '';\n            this.role.privileges = [];\n\n            this.isLoading = false;\n        },\n\n        getRole() {\n            this.isLoading = true;\n\n            this.appAclService.addAppPermissions().then(() => {\n                this.roleRepository.get(this.roleId)\n                    .then((role) => {\n                        this.role = role;\n\n                        const filteredPrivileges = this.privileges.filterPrivilegesRoles(this.role.privileges);\n                        const allGeneralPrivileges = this.privileges.getPrivilegesForAdminPrivilegeKeys(filteredPrivileges);\n\n                        this.detailedPrivileges = this.role.privileges.filter(privilege => {\n                            return !allGeneralPrivileges.includes(privilege);\n                        });\n                        this.role.privileges = filteredPrivileges;\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            });\n        },\n\n        onSave() {\n            this.confirmPasswordModal = true;\n        },\n\n        saveRole(context) {\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            this.role.privileges = [\n                ...this.privileges.getPrivilegesForAdminPrivilegeKeys(this.role.privileges),\n                ...this.detailedPrivileges,\n            ].sort();\n\n            this.confirmPasswordModal = false;\n\n            return this.roleRepository.save(this.role, context)\n                .then(() => {\n                    return this.updateCurrentUser();\n                }).then(() => {\n                    if (this.role.isNew()) {\n                        this.$router.push({ name: 'sw.users.permissions.role.detail', params: { id: this.role.id } });\n                    }\n\n                    this.getRole();\n                    this.isSaveSuccessful = true;\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc(\n                            'global.notification.notificationSaveErrorMessage',\n                            0,\n                            { entityName: this.role.name },\n                        ),\n                    });\n\n                    this.role.privileges = this.privileges.filterPrivilegesRoles(this.role.privileges);\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        updateCurrentUser() {\n            return this.userService.getUser().then((response) => {\n                const data = response.data;\n                delete data.password;\n\n                return Shopware.State.commit('setCurrentUser', data);\n            });\n        },\n\n        onCloseConfirmPasswordModal() {\n            this.confirmPasswordModal = false;\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'sw.users.permissions.index' });\n        },\n    },\n};\n","export default \"\\n{% block sw_users_permissions_role_detail %}\\n<sw-page class=\\\"sw-users-permissions-role-detail\\\">\\n\\n    \\n    {% block sw_users_permissions_role_detail_smart_bar_header %}\\n    <template #smart-bar-header>\\n        \\n        {% block sw_users_permissions_role_detail_smart_bar_header_title %}\\n        <h2 v-if=\\\"role && role.isNew() && role.name.length <= 0\\\">\\n            {{ $tc('sw-users-permissions.roles.general.labelCreateNewRole') }}\\n        </h2>\\n        <h2 v-else-if=\\\"role\\\">\\n            {{ role.name }}\\n        </h2>\\n        <h2 v-else>\\n            {{ $tc('sw-users-permissions.roles.detail.role') }}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_users_permissions_role_detail_smart_bar_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_users_permissions_role_detail_smart_bar_actions_button_cancel %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"tooltipCancel\\\"\\n            @click=\\\"onCancel\\\"\\n        >\\n            {{ $tc('global.default.cancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_users_permissions_role_detail_smart_bar_actions_button_save %}\\n        <sw-button-process\\n            v-tooltip.bottom=\\\"tooltipSave\\\"\\n            class=\\\"sw-users-permissions-role-detail__button-save\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :process-success=\\\"isSaveSuccessful\\\"\\n            :disabled=\\\"isLoading || !acl.can('users_and_permissions.editor')\\\"\\n            variant=\\\"primary\\\"\\n            {% if VUE3 %}\\n            @update:process-success=\\\"saveFinish\\\"\\n            {% else %}\\n            @process-finish=\\\"saveFinish\\\"\\n            {% endif %}\\n            @click.prevent=\\\"onSave\\\"\\n        >\\n            {{ $tc('global.default.save') }}\\n        </sw-button-process>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_users_permissions_role_detail_content %}\\n    <template #content>\\n        \\n        {% block sw_users_permissions_role_detail_content_card_view %}\\n        <sw-card-view>\\n            \\n            {% block sw_users_permissions_role_detail_content_card_view_tabs %}\\n            <sw-tabs\\n                default-item=\\\"general\\\"\\n                position-identifier=\\\"sw-users-permissions-role-detail-content\\\"\\n            >\\n                <template #default=\\\"{ active }\\\">\\n                    <sw-tabs-item\\n                        :route=\\\"{ name: 'sw.users.permissions.role.detail.general', params: { id: $route.params.id } }\\\"\\n                        :title=\\\"$tc('sw-users-permissions.roles.tabs.general')\\\"\\n                    >\\n                        {{ $tc('sw-users-permissions.roles.tabs.general') }}\\n                    </sw-tabs-item>\\n\\n                    <sw-tabs-item\\n                        :route=\\\"{ name: 'sw.users.permissions.role.detail.detailed-privileges', params: { id: $route.params.id } }\\\"\\n                        :title=\\\"$tc('sw-users-permissions.roles.tabs.detailed')\\\"\\n                    >\\n                        {{ $tc('sw-users-permissions.roles.tabs.detailed') }}\\n                    </sw-tabs-item>\\n                </template>\\n            </sw-tabs>\\n            {% endblock %}\\n\\n            <template v-if=\\\"isLoading\\\">\\n                <sw-skeleton variant=\\\"detail-bold\\\" />\\n                <sw-skeleton />\\n            </template>\\n\\n            <template v-else>\\n                {% if VUE3 %}\\n                <router-view\\n                    v-slot=\\\"{ Component }\\\"\\n                >\\n                    <component\\n                        :is=\\\"Component\\\"\\n                        :role=\\\"role\\\"\\n                        :detailed-privileges=\\\"detailedPrivileges\\\"\\n                    />\\n                </router-view>\\n                {% else %}\\n                <router-view\\n                    :role=\\\"role\\\"\\n                    :detailed-privileges=\\\"detailedPrivileges\\\"\\n                />\\n                {% endif %}\\n            </template>\\n        </sw-card-view>\\n        {% endblock %}\\n\\n        \\n        {% block sw_users_permissions_role_detail_content_verify_modal %}\\n        <sw-verify-user-modal\\n            v-if=\\\"confirmPasswordModal\\\"\\n            @verified=\\\"saveRole\\\"\\n            @close=\\\"onCloseConfirmPasswordModal\\\"\\n        />\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}