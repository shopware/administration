"use strict";(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[49546],{549546:function(e,t,a){a.r(t),a.d(t,{default:function(){return l}});let{Mixin:i}=Shopware,{Criteria:n}=Shopware.Data;var l={template:'\n{% block sw_mail_header_footer_list_grid %}\n<sw-card\n    :title="$tc(\'sw-mail-header-footer.list.textMailHeaderFooterOverview\')"\n    position-identifier="sw-mail-header-footer-list"\n>\n\n    \n    {% block sw_mail_header_footer_list_grid_empty_state %}\n    <sw-empty-state\n        v-if="!isLoading && !showListing"\n        :title="$tc(\'sw-mail-header-footer.list.emptyStateTitle\')"\n        :subline="$tc(\'sw-mail-header-footer.list.emptyStateSubTitle\')"\n        :absolute="false"\n    >\n\n        \n        {% block sw_mail_header_footer_list_grid_empty_state_icon %}\n        <template #icon>\n            <img\n                :src="assetFilter(\'/administration/static/img/empty-states/settings-empty-state.svg\')"\n                :alt="$tc(\'sw-mail-header-footer.list.emptyStateTitle\')"\n            >\n        </template>\n        {% endblock %}\n\n    </sw-empty-state>\n    {% endblock %}\n\n    \n    {% block sw_mail_template_list_grid %}\n    <template #grid>\n        <sw-entity-listing\n            v-if="isLoading || showListing"\n            id="mailHeaderFooterGrid"\n            ref="listing"\n            class="sw-mail-templates-list-grid"\n            detail-route="sw.mail.template.detail_head_foot"\n            identifier="sw-mail-header-footer-list"\n            :items="mailHeaderFooters"\n            :columns="getListColumns()"\n            :repository="mailHeaderFooterRepository"\n            :full-page="false"\n            :is-loading="isLoading"\n            :allow-view="acl.can(\'mail_templates.viewer\')"\n            :allow-edit="acl.can(\'mail_templates.editor\')"\n            :allow-delete="acl.can(\'mail_templates.deleter\')"\n            :show-selection="acl.can(\'mail_templates.deleter\') || undefined"\n            :skeleton-item-amount="skeletonItemAmount"\n            @update-records="updateRecords"\n        >\n            <template #column-salesChannels.name="{ item }">\n                \n                {% block sw_mail_template_list_columns_sales_channels_label %}\n                {{ getSalesChannelsString(item) }}\n                {% endblock %}\n            </template>\n\n            <template #bulk-modal-delete-items>\n                <sw-button\n                    variant="danger"\n                    size="small"\n                    @click="onMultipleDelete"\n                >\n                    {{ $tc(\'global.default.delete\') }}\n                </sw-button>\n            </template>\n\n            <template #delete-modal-delete-item="{ item }">\n                <sw-button\n                    variant="danger"\n                    size="small"\n                    @click="onDelete(item)"\n                >\n                    {{ $tc(\'global.default.delete\') }}\n                </sw-button>\n            </template>\n\n            <template #more-actions="{ item }">\n                \n                {% block sw_mail_header_footer_list_grid_columns_actions_duplicate %}\n                <sw-context-menu-item\n                    class="sw-mail-header-footer-list-grid__duplicate-action"\n                    :disabled="!acl.can(\'mail_templates.creator\') || undefined"\n                    @click="onDuplicate(item.id)"\n                >\n                    {{ $tc(\'sw-mail-header-footer.list.contextMenuDuplicate\') }}\n                </sw-context-menu-item>\n                {% endblock %}\n            </template>\n        </sw-entity-listing>\n    </template>\n    {% endblock %}\n\n</sw-card>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory","acl"],mixins:[i.getByName("listing"),i.getByName("notification")],props:{searchTerm:{type:String,required:!1,default:""}},data(){return{mailHeaderFooters:null,showDeleteModal:null,isLoading:!1}},computed:{mailHeaderFooterRepository(){return this.repositoryFactory.create("mail_header_footer")},skeletonItemAmount(){return this.mailHeaderFooters&&0!==this.mailHeaderFooters.length?this.mailHeaderFooters.length:3},showListing(){return!!this.mailHeaderFooters&&0!==this.mailHeaderFooters.length},assetFilter(){return Shopware.Filter.getByName("asset")}},watch:{searchTerm(){this.getList()}},methods:{onEdit(e){e?.id&&this.$router.push({name:"sw.mail.template.detail_head_foot",params:{id:e.id}})},getList(){this.isLoading=!0;let e=new n(this.page,this.limit);e.addAssociation("salesChannels").addSorting(n.sort("name")),this.searchTerm&&e.setTerm(this.searchTerm),this.mailHeaderFooterRepository.search(e).then(e=>(this.total=e.total,this.mailHeaderFooters=e,this.isLoading=!1,this.mailHeaderFooters))},getListColumns(){return[{property:"name",dataIndex:"name",label:"sw-mail-header-footer.list.columnName",allowResize:!0,routerLink:"sw.mail.template.detail_head_foot",primary:!0},{property:"description",dataIndex:"description",label:"sw-mail-header-footer.list.columnDescription",allowResize:!0},{property:"salesChannels.name",dataIndex:"salesChannels.name",label:"sw-mail-header-footer.list.columnSalesChannels",allowResize:!0,sortable:!1}]},getSalesChannelsString(e){if(void 0===e.salesChannels)return"";let t="";return e.salesChannels.forEach(e=>{""!==t&&(t+=", "),t+=`${e.translated.name}`}),e.salesChannels.length>=5&&(t+="..."),t},onDuplicate(e){this.mailHeaderFooterRepository.clone(e).then(e=>{this.$router.push({name:"sw.mail.template.detail_head_foot",params:{id:e.id}})})},checkCanBeDeleted(e){return!e.salesChannels.length},onDelete(e){return this.$refs.listing.deleteId=null,this.checkCanBeDeleted(e)||this.showDeleteErrorNotification(e),this.mailHeaderFooterRepository.delete(e.id).then(()=>{this.$refs.listing.resetSelection(),this.$refs.listing.doSearch()})},getMailHeaderFooterCriteria(e){let t=new n(1,25);return t.addFilter(n.equalsAny("id",e)),t.addAssociation("salesChannels"),t},onMultipleDelete(){let e=Object.values(this.$refs.listing.selection).map(e=>e.id);this.mailHeaderFooterRepository.search(this.getMailHeaderFooterCriteria(e)).then(e=>{e.forEach(e=>{this.checkCanBeDeleted(e)||this.showDeleteErrorNotification(e)}),this.$refs.listing.deleteItems()})},showDeleteErrorNotification(e){return this.createNotificationError({message:this.$tc("sw-mail-header-footer.list.messageDeleteError",0,{name:e.name})})},updateRecords(e){this.mailHeaderFooters=e}}}}}]);