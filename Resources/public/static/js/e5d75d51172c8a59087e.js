(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[75310],{540961:function(){},975310:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return o}}),n(247389);let{Context:i}=Shopware,{Criteria:s}=Shopware.Data,{cloneDeep:a}=Shopware.Utils.object;var o={template:'\n{% block sw_settings_rule_add_assignment_listing %}\n<sw-card\n    class="sw-settings-rule-add-assignment-listing__card"\n    position-identifier="sw-settings-rule-add-assignment-listing"\n>\n    <template #toolbar>\n        \n        {% block sw_settings_rule_add_assignment_listing_toolbar %}\n        <sw-card-filter @sw-card-filter-term-change="doSearch" />\n        {% endblock %}\n    </template>\n\n    \n    {% block sw_settings_rule_add_assignment_listing_grid %}\n    <sw-data-grid\n        class="sw-settings-rule-add-assignment-listing__grid"\n        :is-loading="loading"\n        :data-source="items"\n        :columns="entityContext.addContext.gridColumns"\n        :is-record-selectable="isNotAssigned"\n        :show-actions="false"\n        @select-item="onSelectItem"\n    >\n        <template\n            #selection-content="{\n                item,\n                isSelected,\n                isRecordSelectable,\n                selectItem,\n                itemIdentifierProperty,\n            }"\n        >\n            \n            {% block sw_settings_rule_add_assignment_listing_checkbox %}\n            <div class="sw-data-grid__cell-content">\n                <sw-checkbox-field\n                    :disabled="!isRecordSelectable(item)"\n                    :value="isSelected(item[itemIdentifierProperty]) || !isNotAssigned(item)"\n                    @update:value="selectItem($event, item)"\n                />\n            </div>\n            {% endblock %}\n        </template>\n\n        <template #column-name="{ item }">\n            \n            {% block sw_settings_rule_add_assignment_listing_name %}\n            <sw-product-variant-info\n                v-if="item.variation"\n                :variations="item.variation"\n            >\n                {{ item.translated.name }}\n            </sw-product-variant-info>\n            <span v-else>\n                {{ item.translated.name }}\n            </span>\n            {% endblock %}\n        </template>\n\n        <template #column-active="{ item }">\n            \n            {% block sw_settings_rule_add_assignment_listing_active_flag %}\n            <sw-icon\n                v-if="item.active"\n                name="regular-checkmark-xs"\n                small\n                class="is--active"\n            />\n            <sw-icon\n                v-else\n                name="regular-times-s"\n                small\n                class="is--inactive"\n            />\n            {% endblock %}\n        </template>\n\n        <template #column-taxType="{ item }">\n            \n            {% block sw_settings_rule_add_assignment_listing_tax_type %}\n            {{ shippingTaxTypeLabel(item.taxType) }}\n            {% endblock %}\n        </template>\n\n        <template #pagination>\n            \n            {% block sw_settings_rule_add_assignment_listing_pagination %}\n            <sw-pagination\n                :limit="limit"\n                :page="page"\n                :total="total"\n                @page-change="paginate"\n            />\n            {% endblock %}\n        </template>\n    </sw-data-grid>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n',props:{ruleId:{type:String,required:!0},entityContext:{type:Object,required:!0}},data(){return{loading:!0,repository:null,items:[],preselectedIds:[],limit:10,page:1,total:0}},computed:{criteria(){let t=new s(this.page,this.limit);return this.entityContext.addContext.association&&(t.addAssociation(this.entityContext.addContext.association),t.getAssociation(this.entityContext.addContext.association).addFilter(s.equals("id",this.ruleId))),"product"===this.entityContext.entityName&&t.addAssociation("options.group"),t},shippingCostTaxOptions(){return[{label:this.$tc("sw-settings-shipping.shippingCostOptions.auto"),value:"auto"},{label:this.$tc("sw-settings-shipping.shippingCostOptions.highest"),value:"highest"},{label:this.$tc("sw-settings-shipping.shippingCostOptions.fixed"),value:"fixed"}]}},created(){this.createdComponent()},methods:{createdComponent(){this.repository=this.entityContext.repository,this.doSearch()},onSelectItem(t,e,n){this.$emit("select-item",t,e,n)},isNotAssigned(t){return this.entityContext.addContext.association?t[this.entityContext.addContext.association].length<=0:t[this.entityContext.addContext.column]!==this.ruleId},paginate({page:t,limit:e}){return this.page=t,this.limit=e,this.doSearch()},doSearch(t){this.loading=!0;let e=this.entityContext.api?this.entityContext.api():i.api,n=a(this.criteria);return t&&n.addFilter(s.contains(this.entityContext.addContext.searchColumn??"name",t)),this.repository.search(n,e).then(t=>{this.items=t,this.total=t.total}).finally(()=>{this.loading=!1})},shippingTaxTypeLabel(t){if(!t)return"";let e=this.shippingCostTaxOptions.find(e=>t===e.value)||"";return e?.label}}}},247389:function(t,e,n){var i=n(540961);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),n(745346).Z("56fbe21d",i,!0,{})}}]);