{"version":3,"sources":["webpack:///./src/module/sw-promotion-v2/component/discount/sw-promotion-v2-settings-discount-type/index.js","webpack:///./src/module/sw-promotion-v2/component/discount/sw-promotion-v2-settings-discount-type/sw-promotion-v2-settings-discount-type.html.twig","webpack:///./src/module/sw-promotion-v2/component/discount/sw-promotion-v2-settings-discount-type/sw-promotion-v2-settings-discount-type.scss"],"names":["Criteria","Shopware","Data","template","inject","props","discount","type","Object","required","discountScope","String","validator","value","includes","preselectedDiscountType","default","preselectedApplyDiscountTo","data","displayAdvancedPricesModal","currencies","defaultCurrency","currencySymbol","computed","isPercentageType","this","labelValue","$tc","showAdvancedPricesLink","currencyPriceColumns","property","label","dataIndex","currencyRepository","repositoryFactory","create","advancedPricesRepo","currencyCriteria","addSorting","sort","showMaxValueAdvancedPrices","maxValue","watch","oldValue","applierKey","usageKey","Math","min","created","createdComponent","methods","_this","search","then","response","find","currency","isSystemDefault","symbol","isNew","config","_objectSpread","scope","assign","getDiscountTypeSelection","prefix","display","concat","getApplyDiscountToSelection","onClickAdvancedPrices","_this2","forEach","setCurrencyForDiscountPrices","prepareAdvancedPrices","clearAdvancedPrices","_this3","promotionDiscountPrices","getIds","id","remove","currencyId","some","advancedPrice","basePrice","arguments","length","undefined","setPrice","max","factor","newAdvancedCurrencyPrices","discountId","price","add","onMaxValueChanged","onCloseAdvancedPricesModal","_this4","getMaxValue","content","__esModule","module","i","locals","exports"],"mappings":"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","file":"static/js/7b4de15f2d9f54224346.js","sourcesContent":["/**\n * @package buyers-experience\n */\nimport template from './sw-promotion-v2-settings-discount-type.html.twig';\nimport './sw-promotion-v2-settings-discount-type.scss';\n\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'acl',\n        'repositoryFactory',\n    ],\n\n    props: {\n        discount: {\n            type: Object,\n            required: true,\n        },\n\n        discountScope: {\n            type: String,\n            required: true,\n            validator(value) {\n                return ['basic', 'buy-x-get-y', 'shipping-discount'].includes(value);\n            },\n        },\n\n        preselectedDiscountType: {\n            type: String,\n            required: false,\n            validator(value) {\n                return ['fixed', 'fixed_unit', 'percentage', 'free'].includes(value);\n            },\n            default() {\n                return 'fixed';\n            },\n        },\n\n        preselectedApplyDiscountTo: {\n            type: String,\n            required: false,\n            validator(value) {\n                return ['ALL', 'SELECT'].includes(value);\n            },\n            default() {\n                return 'ALL';\n            },\n        },\n    },\n\n    data() {\n        return {\n            displayAdvancedPricesModal: false,\n            currencies: [],\n            defaultCurrency: null,\n            currencySymbol: null,\n        };\n    },\n\n    computed: {\n        isPercentageType() {\n            return ['percentage', 'free'].includes(this.discount.type);\n        },\n\n        labelValue() {\n            return this.$tc(\n                'sw-promotion-v2.detail.discounts.settings.discountType.labelValue',\n                !this.isPercentageType,\n            );\n        },\n\n        showAdvancedPricesLink() {\n            return ['absolute', 'fixed', 'fixed_unit'].includes(this.discount.type);\n        },\n\n        currencyPriceColumns() {\n            return [{\n                property: 'currency.translated.name',\n                label: this.$tc('sw-promotion-v2.detail.discounts.pricesModal.labelCurrency'),\n            }, {\n                property: 'price',\n                dataIndex: 'price',\n                label: this.$tc('sw-promotion-v2.detail.discounts.pricesModal.labelPrice'),\n            }];\n        },\n\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n\n        advancedPricesRepo() {\n            return this.repositoryFactory.create('promotion_discount_prices');\n        },\n\n        currencyCriteria() {\n            return (new Criteria(1, 25))\n                .addSorting(Criteria.sort('name', 'ASC'));\n        },\n\n        showMaxValueAdvancedPrices() {\n            return this.discount.type === 'percentage' && this.discount.maxValue !== null;\n        },\n    },\n\n    watch: {\n        'discount.type'(value, oldValue) {\n            if (oldValue === 'percentage') {\n                this.discount.maxValue = null;\n            }\n\n            if (value === 'free') {\n                this.discount.applierKey = 'SELECT';\n                this.discount.value = 100;\n\n                return;\n            }\n\n            if (value === 'absolute') {\n                this.discount.applierKey = 'SELECT';\n                this.discount.usageKey = 'ALL';\n            } else if (value === 'percentage') {\n                this.discount.value = Math.min(this.discount.value, 100);\n            }\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.currencyRepository.search(this.currencyCriteria).then((response) => {\n                this.currencies = response;\n\n                this.defaultCurrency = this.currencies.find(currency => currency.isSystemDefault);\n                this.currencySymbol = this.defaultCurrency.symbol;\n            });\n\n            if (!this.discount.isNew) {\n                return;\n            }\n\n            let config = {\n                type: this.discount.type || this.preselectedDiscountType,\n                applierKey: this.discount.applierKey || this.preselectedApplyDiscountTo,\n            };\n\n            if (this.discountScope === 'basic') {\n                config = {\n                    ...config,\n                    scope: 'cart',\n                };\n            } else if (this.discountScope === 'buy-x-get-y') {\n                config = {\n                    ...config,\n                    scope: 'set',\n                };\n            } else if (this.discountScope === 'shipping-discount') {\n                config = {\n                    ...config,\n                    scope: 'delivery',\n                };\n            }\n\n            Object.assign(this.discount, config);\n        },\n\n        getDiscountTypeSelection() {\n            const prefix = 'sw-promotion-v2.detail.discounts.settings.discountType.discountTypeSelection';\n            return [{\n                value: 'percentage',\n                display: this.$tc(`${prefix}.displayPercentage`),\n            }, {\n                value: (this.discount.scope === 'delivery' ? 'absolute' : 'fixed'),\n                display: this.$tc(`${prefix}.displayFixedDiscount`),\n            }, {\n                value: 'fixed_unit',\n                display: this.$tc(`${prefix}.displayFixedPrice`),\n            }, {\n                value: 'free',\n                display: this.$tc(`${prefix}.displayFree`),\n            }];\n        },\n\n        getApplyDiscountToSelection() {\n            const prefix = 'sw-promotion-v2.detail.discounts.settings.discountType.applyDiscountTo';\n\n            return [{\n                value: 'ALL',\n                display: this.$tc(`${prefix}.displayTotalPrice`),\n            }, {\n                value: 'SELECT',\n                display: this.$tc(`${prefix}.displayProductPrice`),\n            }];\n        },\n\n        onClickAdvancedPrices() {\n            this.currencies.forEach((currency) => {\n                if (!this.setCurrencyForDiscountPrices(currency)) {\n                    if (this.showMaxValueAdvancedPrices) {\n                        this.prepareAdvancedPrices(currency, this.discount.maxValue);\n                    } else {\n                        this.prepareAdvancedPrices(currency, this.discount.value);\n                    }\n                }\n            });\n\n            this.displayAdvancedPricesModal = true;\n        },\n\n        clearAdvancedPrices() {\n            const ids = this.discount.promotionDiscountPrices.getIds();\n\n            ids.forEach((id) => {\n                this.discount.promotionDiscountPrices.remove(id);\n            });\n        },\n\n        setCurrencyForDiscountPrices(currency) {\n            const currencyId = currency.id;\n            return this.discount.promotionDiscountPrices.some((advancedPrice) => {\n                if (advancedPrice.currencyId === currencyId) {\n                    advancedPrice.currency = currency;\n                    return true;\n                }\n                return false;\n            });\n        },\n\n        prepareAdvancedPrices(currency, basePrice = 0.0) {\n            const setPrice = Math.max(basePrice * currency.factor, 0.0);\n\n            const newAdvancedCurrencyPrices = this.advancedPricesRepo.create();\n            Object.assign(newAdvancedCurrencyPrices, {\n                discountId: this.discount.id,\n                price: setPrice,\n                currencyId: currency.id,\n                currency: currency,\n            });\n\n            this.discount.promotionDiscountPrices.add(newAdvancedCurrencyPrices);\n        },\n\n        onMaxValueChanged(value) {\n            if (value !== null && value !== 0) {\n                return;\n            }\n\n            if (value === 0) {\n                this.discount.maxValue = null;\n            }\n\n            this.clearAdvancedPrices();\n        },\n\n        onCloseAdvancedPricesModal() {\n            if (this.discount.type === 'percentage' && this.discount.maxValue === null) {\n                this.clearAdvancedPrices();\n                this.displayAdvancedPricesModal = false;\n\n                return;\n            }\n\n            this.discount.promotionDiscountPrices.forEach((advancedPrice) => {\n                if (this.discount.type === 'percentage') {\n                    advancedPrice.price = (advancedPrice.price > 100) ?\n                        this.getMaxValue(this.discount.type) :\n                        advancedPrice.price;\n                }\n\n                if (advancedPrice.price <= 0.00) {\n                    advancedPrice.price = 0.00;\n                }\n\n                advancedPrice.price = Math.max(advancedPrice.price, 0.0);\n            });\n\n            this.displayAdvancedPricesModal = false;\n        },\n    },\n};\n","export default \"\\n{% block sw_promotion_v2_settings_discount_type %}\\n<div class=\\\"sw-promotion-v2-settings-discount-type\\\">\\n    <sw-container\\n        columns=\\\"1fr 1fr\\\"\\n        gap=\\\"20px\\\"\\n    >\\n\\n        \\n        {% block sw_promotion_v2_settings_discount_type_type %}\\n        <sw-select-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"discount.type\\\"\\n            {% else %}\\n            v-model=\\\"discount.type\\\"\\n            {% endif %}\\n            class=\\\"sw-promotion-v2-settings-discount-type__field-select-discount-type\\\"\\n            :label=\\\"$tc('sw-promotion-v2.detail.discounts.settings.discountType.labelDiscountType')\\\"\\n            :disabled=\\\"!acl.can('promotion.editor')\\\"\\n        >\\n\\n            \\n            {% block sw_promotion_v2_settings_discount_type_type_options %}\\n            <option\\n                v-for=\\\"selection in getDiscountTypeSelection()\\\"\\n                :key=\\\"selection.value\\\"\\n                :disabled=\\\"selection.disabled\\\"\\n                :value=\\\"selection.value\\\"\\n            >\\n                {{ selection.display }}\\n            </option>\\n            {% endblock %}\\n\\n        </sw-select-field>\\n        {% endblock %}\\n\\n        \\n        {% block sw_promotion_v2_settings_discount_type_price %}\\n        <sw-number-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"discount.value\\\"\\n            {% else %}\\n            v-model=\\\"discount.value\\\"\\n            {% endif %}\\n            class=\\\"sw-promotion-v2-settings-discount-type__field-price\\\"\\n            :id-suffix=\\\"discount.id\\\"\\n            :min=\\\"0\\\"\\n            :max=\\\"discount.type === 'percentage' ? 100 : null\\\"\\n            :label=\\\"labelValue\\\"\\n            :disabled=\\\"discount.type === 'free' || !acl.can('promotion.editor')\\\"\\n        >\\n\\n            \\n            {% block sw_promotion_v2_settings_discount_type_price_suffix %}\\n            <template #suffix>\\n                <span v-if=\\\"isPercentageType\\\">%</span>\\n                <span v-else>{{ currencySymbol }}</span>\\n            </template>\\n            {% endblock %}\\n\\n        </sw-number-field>\\n        {% endblock %}\\n\\n    </sw-container>\\n\\n    <sw-container\\n        columns=\\\"1fr 1fr\\\"\\n        gap=\\\"20px\\\"\\n    >\\n\\n        \\n        {% block sw_promotion_v2_settings_discount_type_apply_discount_to %}\\n        <sw-select-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"discount.applierKey\\\"\\n            {% else %}\\n            v-model=\\\"discount.applierKey\\\"\\n            {% endif %}\\n            class=\\\"sw-promotion-v2-settings-discount-type__field-apply-discount-to\\\"\\n            :label=\\\"$tc('sw-promotion-v2.detail.discounts.settings.discountType.labelApplyDiscountTo')\\\"\\n            :disabled=\\\"discount.type === 'free' || !acl.can('promotion.editor')\\\"\\n        >\\n\\n            \\n            {% block sw_promotion_v2_settings_discount_type_apply_discount_to_options %}\\n            <option\\n                v-for=\\\"selection in getApplyDiscountToSelection()\\\"\\n                :key=\\\"selection.value\\\"\\n                :disabled=\\\"selection.disabled\\\"\\n                :value=\\\"selection.value\\\"\\n            >\\n                {{ selection.display }}\\n            </option>\\n            {% endblock %}\\n\\n        </sw-select-field>\\n        {% endblock %}\\n\\n        \\n        {% block sw_promotion_v2_settings_discount_type_max_discount_value %}\\n        <sw-number-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"discount.maxValue\\\"\\n            {% else %}\\n            v-model=\\\"discount.maxValue\\\"\\n            {% endif %}\\n            class=\\\"sw-promotion-v2-settings-discount-type__field-max-discount\\\"\\n            :id-suffix=\\\"discount.id\\\"\\n            :label=\\\"$tc('sw-promotion-v2.detail.discounts.settings.discountType.labelMaxDiscountValue')\\\"\\n            :disabled=\\\"discount.type !== 'percentage' || !acl.can('promotion.editor')\\\"\\n            allow-empty\\n            {% if VUE3 %}\\n            @update:value=\\\"onMaxValueChanged\\\"\\n            {% else %}\\n            @change=\\\"onMaxValueChanged\\\"\\n            {% endif %}\\n        >\\n\\n            \\n            {% block sw_promotion_v2_settings_discount_type_max_discount_value_suffix %}\\n            <template #suffix>\\n                <span>{{ currencySymbol }}</span>\\n            </template>\\n            {% endblock %}\\n\\n        </sw-number-field>\\n        {% endblock %}\\n\\n    </sw-container>\\n\\n    \\n    {% block sw_promotion_v2_settings_discount_type_advanced_prices_link %}\\n    <a\\n        v-if=\\\"showAdvancedPricesLink\\\"\\n        class=\\\"sw-promotion-v2-settings-discount-type__advanced-prices\\\"\\n        role=\\\"button\\\"\\n        tabindex=\\\"0\\\"\\n        @click=\\\"onClickAdvancedPrices\\\"\\n        @keydown.enter=\\\"onClickAdvancedPrices\\\"\\n    >\\n        {{ $tc('sw-promotion-v2.detail.discounts.pricesModal.linkAdvancedPrices') }}\\n        <sw-icon\\n            name=\\\"regular-long-arrow-right\\\"\\n            small\\n        />\\n    </a>\\n    {% endblock %}\\n\\n    \\n    {% block sw_promotion_v2_settings_discount_type_advanced_prices_modal %}\\n    <sw-modal\\n        v-if=\\\"displayAdvancedPricesModal\\\"\\n        :title=\\\"$tc('sw-promotion-v2.detail.discounts.pricesModal.advancedPricesHeader')\\\"\\n        class=\\\"sw-promotion-v2-settings-discounts-type__advanced-prices-modal\\\"\\n        @modal-close=\\\"onCloseAdvancedPricesModal\\\"\\n    >\\n\\n        \\n        {% block sw_promotion_v2_settings_discount_type_advanced_prices_modal_grid %}\\n        <sw-one-to-many-grid\\n            :collection=\\\"discount.promotionDiscountPrices\\\"\\n            :local-mode=\\\"true\\\"\\n            :columns=\\\"currencyPriceColumns\\\"\\n            :show-selection=\\\"false\\\"\\n            :show-actions=\\\"!acl.can('promotion.editor')\\\"\\n        >\\n\\n            \\n            {% block sw_promotion_v2_settings_discount_type_advanced_prices_modal_grid_column_name %}\\n            <template #column-currency.translated.name=\\\"{ item }\\\">\\n                <p class=\\\"sw-promotion-v2-settings-discounts-type__advances-prices-column-name\\\">\\n                    {{ item.currency.translated.name }}\\n                </p>\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_promotion_v2_settings_discount_type_advanced_prices_modal_grid_column_price %}\\n            <template #column-price=\\\"{ item }\\\">\\n                <sw-number-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"item.price\\\"\\n                    {% else %}\\n                    v-model=\\\"item.price\\\"\\n                    {% endif %}\\n                    class=\\\"sw-promotion-v2-settings-discounts-type__advanced-prices-column-price\\\"\\n                    type=\\\"text\\\"\\n                    size=\\\"small\\\"\\n                    :disabled=\\\"!acl.can('promotion.editor')\\\"\\n                >\\n\\n                    \\n                    {% block sw_promotion_v2_settings_discount_type_advanced_prices_modal_grid_column_price_suffix %}\\n                    <template #suffix>\\n                        {{ item.currency.symbol }}\\n                    </template>\\n                    {% endblock %}\\n\\n                </sw-number-field>\\n            </template>\\n            {% endblock %}\\n\\n        </sw-one-to-many-grid>\\n        {% endblock %}\\n\\n        \\n        {% block sw_promotion_v2_settings_discount_type_advanced_prices_modal_footer %}\\n        <template #modal-footer>\\n\\n            \\n            {% block sw_promotion_v2_settings_discount_type_advanced_prices_modal_footer_button_close %}\\n            <sw-button\\n                variant=\\\"primary\\\"\\n                size=\\\"small\\\"\\n                @click=\\\"onCloseAdvancedPricesModal\\\"\\n            >\\n                {{ $tc('sw-promotion-v2.detail.discounts.pricesModal.closeModal') }}\\n            </sw-button>\\n            {% endblock %}\\n\\n        </template>\\n        {% endblock %}\\n\\n    </sw-modal>\\n    {% endblock %}\\n\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-promotion-v2-settings-discount-type.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0aa49d2a\", content, true, {});"],"sourceRoot":""}