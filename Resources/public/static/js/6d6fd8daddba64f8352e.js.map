{"version":3,"sources":["webpack:///./src/module/sw-mail-template/page/sw-mail-template-detail/sw-mail-template-detail.scss","webpack:///./src/module/sw-mail-template/page/sw-mail-template-detail/index.js","webpack:///./src/module/sw-mail-template/page/sw-mail-template-detail/sw-mail-template-detail.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","_Shopware$Data","Data","Criteria","EntityCollection","warn","Utils","debug","mapPropertyErrors","Component","getComponentHelper","template","inject","mixins","getByName","shortcuts","active","this","allowSave","method","ESCAPE","data","mailTemplate","testerMail","mailTemplateId","mailPreview","isLoading","isSaveSuccessful","mailTemplateType","selectedType","editorConfig","enableBasicAutocompletion","mailTemplateMedia","mailTemplateMediaSelected","fileAccept","testMailSalesChannelId","availableVariables","entitySchema","Object","fromEntries","EntityDefinition","getDefinitionRegistry","metaInfo","title","$createTitle","identifier","computed","_objectSpread","loadedAvailableVariables","templateData","values","length","loadInitialAvailableVariables","placeholder","mailTemplateRepository","repositoryFactory","create","mediaRepository","mailTemplateMediaRepository","outerCompleterFunction","entityMappingService","innerMailTemplateType","prefix","properties","keys","getEntityMapping","availableEntities","forEach","val","push","value","mailTemplateTypeRepository","testMailRequirementsMet","_this$mailTemplate$tr","_this$mailTemplate$tr2","_this$mailTemplate$tr3","_this$mailTemplate$tr4","subject","translated","contentPlain","contentHtml","senderName","mediaColumns","getMediaColumns","isNew","acl","can","tooltipSave","message","$tc","disabled","showOnDisabledElements","systemKey","$device","getSystemKey","concat","appearance","showPreview","undefined","mailTemplateTypeId","hasTemplateData","_this$mailTemplateTyp","watch","createdComponent","created","methods","ExtensionAPI","publishData","id","path","scope","$route","params","loadEntityData","_this","criteria","addAssociation","get","Context","api","then","item","onChangeType","getMailTemplateMedia","getMailTemplateType","_this2","feature","isActive","$refs","htmlEditor","defineAutocompletion","plainEditor","Promise","resolve","createMediaCollection","_this3","media","mediaAssoc","languageId","abortOnLanguageChange","hasChanges","saveOnLanguageChange","onSave","onChangeLanguage","State","commit","saveFinish","onCancel","$router","name","_this4","updatePromises","mailTemplateSubject","save","all","catch","error","errormsg","response","errors","errorDetailMsg","detail","createNotificationError","onClickTestMailTemplate","_this5","notificationTestMailSuccess","notificationTestMailError","notificationTestMailErrorSalesChannel","mailService","testMailTemplate","mailPreviewContent","size","createNotificationSuccess","exception","_name","onClickShowPreview","_this6","buildRenderPreview","_error$response","_error$response$data","_error$response$data$","_error$response$data$2","_error$response2","_error$response2$data","_error$response2$data2","_error$response2$data3","errorMsg","finally","_mailTemplate$transla","_mailTemplate$transla2","replaceContent","string","replace","matchs","index","parseInt","match","join","onCancelShowPreview","onCopyVariable","variable","_this7","navigator","clipboard","writeText","dom","copyToClipboard","_this8","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_e$message","_e$response","_e$response$data","_e$response$data$erro","wrap","_context","prev","next","abrupt","sent","t0","finish","stop","property","label","successfulUpload","_ref","_this9","targetId","find","mediaId","mediaItem","createMailTemplateMediaAssoc","onMediaDrop","position","openMediaSidebar","mediaSidebarItem","openContent","onDeleteMedia","mailTemplateMediaId","foundItem","remove","onSelectionChanged","selection","selectedItems","onDeleteSelectedMedia","_this10","_checkIfMediaIsAlreadyUsed","some","onAddItemToAttachment","createNotificationInfo","loadAvailableVariables","variableEntitySchema","_this11","variablePath","variableEntitySchemaPath","map","availableVariable","_typeof","schema","isToManyAssociationVariable","childCount","parentId","afterId","addVariables","variables","split","splice","field","type","includes","relation","onGetTreeItems","parent","_this12","$set","_this13"],"mappings":"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","file":"static/js/6d6fd8daddba64f8352e.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-mail-template-detail.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5b5c844a\", content, true, {});","import { dom } from 'src/core/service/util.service';\nimport template from './sw-mail-template-detail.html.twig';\nimport './sw-mail-template-detail.scss';\n\nconst { Mixin } = Shopware;\nconst { Criteria, EntityCollection } = Shopware.Data;\nconst { warn } = Shopware.Utils.debug;\nconst { mapPropertyErrors } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['mailService', 'entityMappingService', 'repositoryFactory', 'acl', 'feature'],\n\n    mixins: [\n        Mixin.getByName('placeholder'),\n        Mixin.getByName('notification'),\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': {\n            active() {\n                return this.allowSave;\n            },\n            method: 'onSave',\n        },\n        ESCAPE: 'onCancel',\n    },\n\n    data() {\n        return {\n            mailTemplate: false,\n            testerMail: '',\n            mailTemplateId: null,\n            mailPreview: null,\n            isLoading: false,\n            isSaveSuccessful: false,\n            mailTemplateType: {},\n            selectedType: {},\n            editorConfig: {\n                enableBasicAutocompletion: true,\n            },\n            mailTemplateMedia: null,\n            mailTemplateMediaSelected: {},\n            fileAccept: 'application/pdf, image/*',\n            testMailSalesChannelId: null,\n            availableVariables: {},\n            entitySchema: Object.fromEntries(Shopware.EntityDefinition.getDefinitionRegistry()),\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        ...mapPropertyErrors('mailTemplate', [\n            'contentHtml',\n            'contentPlain',\n            'mailTemplateTypeId',\n            'subject',\n        ]),\n\n        loadedAvailableVariables() {\n            if (!this.mailTemplateType || !this.mailTemplateType.templateData) {\n                return [];\n            }\n            if (Object.values(this.availableVariables).length === 0) {\n                this.loadInitialAvailableVariables();\n            }\n            return Object.values(this.availableVariables);\n        },\n\n        identifier() {\n            return this.placeholder(this.mailTemplateType, 'name');\n        },\n\n        mailTemplateRepository() {\n            return this.repositoryFactory.create('mail_template');\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        mailTemplateMediaRepository() {\n            return this.repositoryFactory.create('mail_template_media');\n        },\n\n        outerCompleterFunction() {\n            return (function completerWrapper(entityMappingService, innerMailTemplateType) {\n                function completerFunction(prefix) {\n                    const properties = [];\n                    Object.keys(\n                        entityMappingService.getEntityMapping(prefix, innerMailTemplateType.availableEntities),\n                    ).forEach((val) => {\n                        properties.push({\n                            value: val,\n                        });\n                    });\n                    return properties;\n                }\n                return completerFunction;\n            }(this.entityMappingService, this.mailTemplateType));\n        },\n\n        mailTemplateTypeRepository() {\n            return this.repositoryFactory.create('mail_template_type');\n        },\n\n        testMailRequirementsMet() {\n            return this.testerMail &&\n                (this.mailTemplate.subject || this.mailTemplate.translated?.subject) &&\n                (this.mailTemplate.contentPlain || this.mailTemplate.translated?.contentPlain) &&\n                (this.mailTemplate.contentHtml || this.mailTemplate.translated?.contentHtml) &&\n                (this.mailTemplate.senderName || this.mailTemplate.translated?.senderName);\n        },\n\n        mediaColumns() {\n            return this.getMediaColumns();\n        },\n\n        allowSave() {\n            return this.mailTemplate && this.mailTemplate.isNew()\n                ? this.acl.can('mail_templates.creator')\n                : this.acl.can('mail_templates.editor');\n        },\n\n        tooltipSave() {\n            if (!this.allowSave) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.allowSave,\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        showPreview() {\n            if (\n                this.mailTemplate.contentHtml === undefined ||\n                this.mailTemplate.mailTemplateTypeId === undefined ||\n                this.mailTemplate.contentHtml === ''\n            ) {\n                return true;\n            }\n            return false;\n        },\n\n        hasTemplateData() {\n            return Object.keys(this.mailTemplateType?.templateData || {}).length > 0;\n        },\n    },\n\n    watch: {\n        '$route.params.id'() {\n            this.createdComponent();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-mail-template-detail__mailTemplate',\n                path: 'mailTemplate',\n                scope: this,\n            });\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-mail-template-detail__mailTemplateMedia',\n                path: 'mailTemplateMedia',\n                scope: this,\n            });\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-mail-template-detail__mailTemplateMediaSelected',\n                path: 'mailTemplateMediaSelected',\n                scope: this,\n            });\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-mail-template-detail__mailTemplateType',\n                path: 'mailTemplateType',\n                scope: this,\n            });\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-mail-template-detail__availableVariables',\n                path: 'availableVariables',\n                scope: this,\n            });\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-mail-template-detail__testMailSalesChannelId',\n                path: 'testMailSalesChannelId',\n                scope: this,\n            });\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-mail-template-detail__testerMail',\n                path: 'testerMail',\n                scope: this,\n            });\n            if (this.$route.params.id) {\n                this.mailTemplateId = this.$route.params.id;\n                this.loadEntityData();\n            }\n        },\n\n        loadEntityData() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addAssociation('mailTemplateType');\n            criteria.addAssociation('media.media');\n            this.isLoading = true;\n            this.mailTemplateRepository.get(this.mailTemplateId, Shopware.Context.api, criteria).then((item) => {\n                this.mailTemplate = item;\n                this.onChangeType(this.mailTemplate.mailTemplateType.id);\n                this.getMailTemplateMedia();\n            });\n        },\n\n        getMailTemplateType() {\n            if (!this.mailTemplate.mailTemplateTypeId) {\n                return Promise.resolve();\n            }\n\n            return this.mailTemplateTypeRepository.get(this.mailTemplate.mailTemplateTypeId).then((item) => {\n                this.mailTemplateType = item;\n\n                // Not needed because the autocompletion method is passed as property to editor\n                if (!this.feature.isActive('VUE3')) {\n                    this.$refs.htmlEditor.defineAutocompletion(this.outerCompleterFunction);\n                    this.$refs.plainEditor.defineAutocompletion(this.outerCompleterFunction);\n                }\n            });\n        },\n\n        createMediaCollection() {\n            return new EntityCollection('/media', 'media', Shopware.Context.api);\n        },\n\n        getMailTemplateMedia() {\n            this.mailTemplateMedia = this.createMediaCollection();\n\n            this.mailTemplate.media.forEach((mediaAssoc) => {\n                if (mediaAssoc.languageId === Shopware.Context.api.languageId) {\n                    this.mailTemplateMedia.push(mediaAssoc.media);\n                }\n            });\n        },\n\n        abortOnLanguageChange() {\n            return this.mailTemplateRepository.hasChanges(this.mailTemplate);\n        },\n\n        saveOnLanguageChange() {\n            return this.onSave();\n        },\n\n        onChangeLanguage(languageId) {\n            Shopware.State.commit('context/setApiLanguageId', languageId);\n            this.loadEntityData();\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'sw.mail.template.index' });\n        },\n\n        onSave() {\n            const updatePromises = [];\n            const mailTemplateSubject = this.mailTemplate.subject || this.placeholder(this.mailTemplate, 'subject');\n\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            updatePromises.push(this.mailTemplateRepository.save(this.mailTemplate).then(() => {\n                Promise.all(updatePromises).then(() => {\n                    this.loadEntityData();\n                    this.saveFinish();\n                });\n            }).catch((error) => {\n                let errormsg = '';\n                this.isLoading = false;\n\n                if (error.response.data.errors.length > 0) {\n                    const errorDetailMsg = error.response.data.errors[0].detail;\n                    errormsg = `<br/> ${this.$tc('sw-mail-template.detail.textErrorMessage')}: \"${errorDetailMsg}\"`;\n                }\n\n                this.createNotificationError({\n                    message: this.$tc(\n                        'sw-mail-template.detail.messageSaveError',\n                        0,\n                        { subject: mailTemplateSubject },\n                    ) + errormsg,\n                });\n            }));\n\n            return Promise.all(updatePromises);\n        },\n\n        onClickTestMailTemplate() {\n            const notificationTestMailSuccess = {\n                message: this.$tc('sw-mail-template.general.notificationTestMailSuccessMessage'),\n            };\n\n            const notificationTestMailError = {\n                message: this.$tc('sw-mail-template.general.notificationTestMailErrorMessage'),\n            };\n\n            const notificationTestMailErrorSalesChannel = {\n                message: this.$tc('sw-mail-template.general.notificationTestMailSalesChannelErrorMessage'),\n            };\n\n            if (!this.testMailSalesChannelId) {\n                this.createNotificationError(notificationTestMailErrorSalesChannel);\n                return;\n            }\n\n            this.mailService.testMailTemplate(\n                this.testerMail,\n                this.mailPreviewContent(),\n                this.mailTemplateMedia,\n                this.testMailSalesChannelId,\n            ).then((response) => {\n                // Size is the length of the mail message, if the size is zero then no mail was sent\n                const isMailSent = response?.size !== 0;\n                if (!isMailSent) {\n                    this.createNotificationError({\n                        message: this.$tc('sw-mail-template.general.notificationGeneralSyntaxValidationErrorMessage'),\n                    });\n                    return;\n                }\n\n                this.createNotificationSuccess(notificationTestMailSuccess);\n            }).catch((exception) => {\n                this.createNotificationError(notificationTestMailError);\n                warn(this._name, exception.message, exception.response);\n            });\n        },\n\n        onClickShowPreview() {\n            this.isLoading = true;\n\n            this.mailPreview = this.mailService.buildRenderPreview(\n                this.mailTemplateType,\n                this.mailPreviewContent(),\n            ).then((response) => {\n                this.mailPreview = response;\n            }).catch((error) => {\n                this.mailPreview = null;\n                if (!error.response?.data?.errors?.[0]?.detail) {\n                    this.createNotificationError({\n                        message: this.$tc('sw-mail-template.general.notificationGeneralSyntaxValidationErrorMessage'),\n                    });\n                } else {\n                    this.createNotificationError({\n                        message: this.$tc(\n                            'sw-mail-template.general.notificationSyntaxValidationErrorMessage',\n                            0,\n                            { errorMsg: error.response?.data?.errors?.[0]?.detail },\n                        ),\n                    });\n                }\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        mailPreviewContent() {\n            const mailTemplate = { ...this.mailTemplate };\n\n            if (mailTemplate.contentHtml) {\n                mailTemplate.contentHtml = this.replaceContent(mailTemplate.contentHtml);\n            }\n\n            if (mailTemplate.translated?.contentHtml) {\n                mailTemplate.translated.contentHtml = this.replaceContent(mailTemplate.translated.contentHtml);\n            }\n\n            if (mailTemplate.contentPlain) {\n                mailTemplate.contentPlain = this.replaceContent(mailTemplate.contentPlain);\n            }\n\n            if (mailTemplate.translated?.contentPlain) {\n                mailTemplate.translated.contentPlain = this.replaceContent(mailTemplate.translated.contentPlain);\n            }\n\n            return mailTemplate;\n        },\n\n        replaceContent(string) {\n            // Replace .at([index]), first -> `.[index]` to suitable with mail template data\n            return string.replace(/\\.at\\(([0-9]*)\\)\\./g, (matchs) => {\n                const index = parseInt(matchs.match(/[0-9]/g).join(''), 10);\n                return `.${index}.`;\n            }).replace(/\\.first\\./g, '.0.');\n        },\n\n        onCancelShowPreview() {\n            this.mailPreview = null;\n        },\n\n        onCopyVariable(variable) {\n            if (navigator.clipboard) {\n                navigator.clipboard.writeText(variable).catch((error) => {\n                    let errormsg = '';\n                    if (error.response.data.errors.length > 0) {\n                        const errorDetailMsg = error.response.data.errors[0].detail;\n                        errormsg = `<br/> ${this.$tc('sw-mail-template.detail.textErrorMessage')}: \"${errorDetailMsg}\"`;\n                    }\n\n                    this.createNotificationError({\n                        message: errormsg,\n                    });\n                });\n\n                return;\n            }\n\n            // non-https polyfill\n            dom.copyToClipboard(variable);\n        },\n\n        async onChangeType(id) {\n            if (!id) {\n                this.selectedType = {};\n                return;\n            }\n            this.isLoading = true;\n\n            try {\n                await this.getMailTemplateType();\n                this.selectedType = await this.mailTemplateTypeRepository.get(id);\n                this.loadInitialAvailableVariables();\n                this.outerCompleterFunction();\n            } catch (e) {\n                let errormsg = e.message ?? '';\n                if (e.response?.data?.errors?.length > 0) {\n                    const errorDetailMsg = e.response.data.errors[0].detail;\n                    errormsg = `<br/> ${this.$tc('sw-mail-template.detail.textErrorMessage')}: \"${errorDetailMsg}\"`;\n                }\n\n                this.createNotificationError({\n                    message: errormsg,\n                });\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        getMediaColumns() {\n            return [{\n                property: 'fileName',\n                label: 'sw-mail-template.list.columnFilename',\n            }];\n        },\n\n        successfulUpload({ targetId }) {\n            if (this.mailTemplate.media.find((mailTemplateMedia) => mailTemplateMedia.mediaId === targetId)) {\n                return;\n            }\n\n            this.mediaRepository.get(targetId).then((mediaItem) => {\n                this.createMailTemplateMediaAssoc(mediaItem);\n            });\n        },\n\n        onMediaDrop(media) {\n            this.successfulUpload({ targetId: media.id });\n        },\n\n        createMailTemplateMediaAssoc(mediaItem) {\n            const mailTemplateMedia = this.mailTemplateMediaRepository.create();\n            mailTemplateMedia.mailTemplateId = this.mailTemplateId;\n            mailTemplateMedia.languageId = Shopware.Context.api.languageId;\n            mailTemplateMedia.mediaId = mediaItem.id;\n            if (this.mailTemplate.media.length <= 0) {\n                mailTemplateMedia.position = 0;\n            } else {\n                mailTemplateMedia.position = this.mailTemplate.media.length;\n            }\n            this.mailTemplate.media.push(mailTemplateMedia);\n            this.mailTemplateMedia.push(mediaItem);\n        },\n\n        openMediaSidebar() {\n            this.$refs.mediaSidebarItem.openContent();\n        },\n\n        onDeleteMedia(mailTemplateMediaId) {\n            const foundItem = this.mailTemplate.media\n                .find((mailTemplateMedia) => mailTemplateMedia.mediaId === mailTemplateMediaId);\n            if (foundItem) {\n                this.mailTemplate.media.remove(foundItem.id);\n                this.getMailTemplateMedia();\n            }\n        },\n\n        onSelectionChanged(selection) {\n            this.selectedItems = selection;\n        },\n\n        onDeleteSelectedMedia() {\n            Object.keys(this.selectedItems).forEach((mailTemplateMediaId) => {\n                this.onDeleteMedia(mailTemplateMediaId);\n            });\n        },\n\n        _checkIfMediaIsAlreadyUsed(mediaId) {\n            return this.mailTemplate.media.some((mailTemplateMedia) => {\n                return mailTemplateMedia.mediaId === mediaId &&\n                    mailTemplateMedia.languageId === Shopware.Context.api.languageId;\n            });\n        },\n\n        onAddItemToAttachment(mediaItem) {\n            if (this._checkIfMediaIsAlreadyUsed(mediaItem.id)) {\n                this.createNotificationInfo({\n                    message: this.$tc('sw-mail-template.list.errorMediaItemDuplicated'),\n                });\n                return false;\n            }\n\n            this.createMailTemplateMediaAssoc(mediaItem);\n            return true;\n        },\n\n        loadAvailableVariables(variable, variableEntitySchema) {\n            if (!this.mailTemplateType || !this.mailTemplateType.availableEntities) {\n                return [];\n            }\n\n            const variablePath = variable.concat('.');\n            const variableEntitySchemaPath = variableEntitySchema.concat('.');\n\n            const foundVariables = Object.keys(Shopware.Utils.get(this.mailTemplateType.templateData, variable));\n\n            const keys = foundVariables.map((val) => {\n                const availableVariable = Shopware.Utils.get(this.mailTemplateType.templateData, variablePath.concat(val));\n                const isObject = typeof availableVariable === 'object' && availableVariable !== null;\n                const length = isObject ? Object.values(availableVariable).length : 0;\n\n                // the pattern for schema is `.at(0)` or `.at(1)` instead of `.0` or `.1`\n                const schema = this.isToManyAssociationVariable(variable) ?\n                    `${variableEntitySchemaPath}at(${parseInt(val, 10)})` :\n                    variableEntitySchemaPath + val;\n\n                return {\n                    id: variablePath + val,\n                    schema,\n                    name: val,\n                    childCount: length,\n                    parentId: variable,\n                    afterId: null,\n                };\n            });\n\n\n            this.addVariables(keys);\n\n            return true;\n        },\n\n        isToManyAssociationVariable(variable) {\n            if (!variable) {\n                return false;\n            }\n\n            const variables = variable.split('.');\n            variables.splice(1, 0, 'properties');\n            const field = Shopware.Utils.get(this.entitySchema, `${variables.join('.')}`);\n\n            return field && field.type === 'association' && ['one_to_many', 'many_to_many'].includes(field.relation);\n        },\n\n        onGetTreeItems(parent, schema) {\n            this.loadAvailableVariables(parent, schema);\n        },\n\n        addVariables(variables) {\n            variables.forEach((variable) => {\n                this.$set(this.availableVariables, variable.id, variable);\n            });\n        },\n\n        loadInitialAvailableVariables() {\n            this.availableVariables = {};\n\n            if (!this.hasTemplateData) {\n                return;\n            }\n\n            Object.keys(this.mailTemplateType.templateData).forEach(variable => {\n                const availableVariable = Shopware.Utils.get(this.mailTemplateType.templateData, variable);\n                let length = 0;\n                if (typeof availableVariable === 'object' && availableVariable !== null) {\n                    length = Object.values(availableVariable).length;\n                }\n\n                this.addVariables([{\n                    id: variable,\n                    schema: variable,\n                    name: variable,\n                    childCount: length,\n                    parentId: null,\n                    afterId: null,\n                }]);\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_mail_template_detail %}\\n<sw-page class=\\\"sw-mail-template-detail\\\">\\n\\n    \\n    {% block sw_mail_template_detail_header %}\\n    <template #smart-bar-header>\\n        <h2 v-if=\\\"mailTemplate\\\">\\n            {{ $tc('sw-mail-template.detail.textHeadlineEdit') }}\\n        </h2>\\n        <h2\\n            v-else\\n            class=\\\"sw-mail-template-detail__empty-title\\\"\\n        >\\n            {{ $tc('sw-mail-template.detail.textHeadline') }}\\n        </h2>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_mail_template_detail_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_mail_template_detail_actions_abort %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"{\\n                message: 'ESC',\\n                appearance: 'light'\\n            }\\\"\\n            :disabled=\\\"isLoading\\\"\\n            @click=\\\"onCancel\\\"\\n        >\\n            {{ $tc('sw-mail-template.detail.buttonCancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_mail_template_detail_actions_save %}\\n        <sw-button-process\\n            v-tooltip.bottom=\\\"tooltipSave\\\"\\n            class=\\\"sw-mail-template-detail__save-action\\\"\\n            variant=\\\"primary\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :process-success=\\\"isSaveSuccessful\\\"\\n            :disabled=\\\"!allowSave\\\"\\n            {% if VUE3 %}\\n            @update:process-success=\\\"saveFinish\\\"\\n            {% else %}\\n            @process-finish=\\\"saveFinish\\\"\\n            {% endif %}\\n            @click.prevent=\\\"onSave\\\"\\n        >\\n            {{ $tc('sw-mail-template.detail.buttonSave') }}\\n        </sw-button-process>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_mail_template_detail_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch\\n            :save-changes-function=\\\"saveOnLanguageChange\\\"\\n            :abort-change-function=\\\"abortOnLanguageChange\\\"\\n            @on-change=\\\"onChangeLanguage\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_mail_template_detail_content %}\\n    <template #content>\\n        <sw-card-view sidebar>\\n            <template v-if=\\\"isLoading\\\">\\n                <sw-skeleton variant=\\\"detail-bold\\\" />\\n                <sw-skeleton />\\n            </template>\\n\\n            <template v-else>\\n                \\n                {% block sw_mail_template_detail_content_language_info %}\\n                <sw-language-info\\n                    :entity-description=\\\"placeholder(mailTemplate.mailTemplateType, 'name', $tc('sw-mail-template.detail.textHeadline'))\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_mail_template_detail_basic_info %}\\n                <sw-card\\n                    :title=\\\"$tc('sw-mail-template.detail.basic.titleCard')\\\"\\n                    position-identifier=\\\"sw-mail-template-detail-basic-info\\\"\\n                >\\n                    \\n                    {% block sw_mail_template_basic_form_mail_type_field %}\\n                    <sw-entity-single-select\\n                        id=\\\"mailTemplateTypes\\\"\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"mailTemplate.mailTemplateTypeId\\\"\\n                        {% else %}\\n                        v-model=\\\"mailTemplate.mailTemplateTypeId\\\"\\n                        {% endif %}\\n                        name=\\\"sw-field--mailTemplate-mailTemplateTypeId\\\"\\n                        entity=\\\"mail_template_type\\\"\\n                        required\\n                        show-clearable-button\\n                        :label=\\\"$tc('sw-mail-template.detail.basic.labelMailType')\\\"\\n                        :placeholder=\\\"$tc('sw-mail-template.detail.basic.placeholderMailType')\\\"\\n                        :disabled=\\\"!acl.can('mail_templates.editor')\\\"\\n                        :error=\\\"mailTemplateMailTemplateTypeIdError\\\"\\n                        {% if VUE3 %}\\n                        @update:value=\\\"onChangeType\\\"\\n                        {% else %}\\n                        @change=\\\"onChangeType\\\"\\n                        {% endif %}\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_mail_template_basic_form_description_field %}\\n                    <sw-textarea-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"mailTemplate.description\\\"\\n                        {% else %}\\n                        v-model=\\\"mailTemplate.description\\\"\\n                        {% endif %}\\n                        name=\\\"sw-field--mailTemplate-description\\\"\\n                        :label=\\\"$tc('sw-mail-template.detail.basic.labelDescription')\\\"\\n                        :placeholder=\\\"$tc('sw-mail-template.detail.basic.placeholderDescription')\\\"\\n                        :disabled=\\\"!acl.can('mail_templates.editor')\\\"\\n                    />\\n                    {% endblock %}\\n                </sw-card>\\n                {% endblock %}\\n\\n                \\n                {% block sw_mail_template_detail_options_info %}\\n                <sw-card\\n                    position-identifier=\\\"sw-mail-template-detail-options-info\\\"\\n                    :title=\\\"$tc('sw-mail-template.detail.options.titleCard')\\\"\\n                >\\n                    <sw-container\\n                        columns=\\\"repeat(auto-fit, minmax(250px, 1fr))\\\"\\n                        gap=\\\"0 30px\\\"\\n                        class=\\\"sw-mail-template-detail-options__container\\\"\\n                    >\\n                        <div class=\\\"sw-mail-template-detail__options-info-wrapper\\\">\\n\\n                            \\n                            {% block sw_mail_template_options_form_subject_field %}\\n                            <sw-text-field\\n                                {% if VUE3 %}\\n                                v-model:value=\\\"mailTemplate.subject\\\"\\n                                {% else %}\\n                                v-model=\\\"mailTemplate.subject\\\"\\n                                {% endif %}\\n                                name=\\\"sw-field--mailTemplate-subject\\\"\\n                                required\\n                                :label=\\\"$tc('sw-mail-template.detail.options.labelSubject')\\\"\\n                                :placeholder=\\\"placeholder(mailTemplate, 'subject', $tc('sw-mail-template.detail.options.placeholderSubject'))\\\"\\n                                :disabled=\\\"!acl.can('mail_templates.editor')\\\"\\n                                :error=\\\"mailTemplateSubjectError\\\"\\n                            />\\n                            {% endblock %}\\n                        </div>\\n\\n                        \\n                        {% block sw_mail_template_options_form_sender_name_field %}\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"mailTemplate.senderName\\\"\\n                            {% else %}\\n                            v-model=\\\"mailTemplate.senderName\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--mailTemplate-senderName\\\"\\n                            :label=\\\"$tc('sw-mail-template.detail.options.labelSenderName')\\\"\\n                            :placeholder=\\\"placeholder(mailTemplate, 'senderName', $tc('sw-mail-template.detail.options.placeholderSenderName'))\\\"\\n                            :disabled=\\\"!acl.can('mail_templates.editor')\\\"\\n                        />\\n                        {% endblock %}\\n                    </sw-container>\\n                </sw-card>\\n                {% endblock %}\\n\\n                \\n                {% block sw_mail_template_detail_attachments_info %}\\n                <sw-card\\n                    :title=\\\"$tc('sw-mail-template.detail.media.titleCard')\\\"\\n                    position-identifier=\\\"sw-mail-template-detail-atttachments-info\\\"\\n                >\\n                    \\n                    {% block sw_mail_template_detail_attachments_info_upload %}\\n                    <sw-upload-listener\\n                        v-if=\\\"mailTemplate.id\\\"\\n                        auto-upload\\n                        :upload-tag=\\\"mailTemplate.id\\\"\\n                        @media-upload-finish=\\\"successfulUpload\\\"\\n                    />\\n\\n                    <sw-media-upload-v2\\n                        v-if=\\\"mailTemplate.id\\\"\\n                        variant=\\\"regular\\\"\\n                        default-folder=\\\"mail_template\\\"\\n                        :upload-tag=\\\"mailTemplate.id\\\"\\n                        :file-accept=\\\"fileAccept\\\"\\n                        :disabled=\\\"!acl.can('mail_templates.editor')\\\"\\n                        @media-drop=\\\"onMediaDrop\\\"\\n                        @media-upload-sidebar-open=\\\"openMediaSidebar\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_mail_template_detail_attachments_info_grid %}\\n                    <sw-data-grid\\n                        v-if=\\\"mailTemplateMedia && mailTemplateMedia.length > 0\\\"\\n                        class=\\\"sw-mail-template-detail__attachments-info-grid\\\"\\n                        :data-source=\\\"mailTemplateMedia\\\"\\n                        :columns=\\\"mediaColumns\\\"\\n                        :full-page=\\\"false\\\"\\n                        :show-settings=\\\"false\\\"\\n                        :allow-column-edit=\\\"false\\\"\\n                        :allow-inline-edit=\\\"false\\\"\\n                        :compact-mode=\\\"false\\\"\\n                        :show-selection=\\\"acl.can('mail_templates.editor')\\\"\\n                        @selection-change=\\\"onSelectionChanged\\\"\\n                    >\\n                        <template #preview-fileName=\\\"{ item }\\\">\\n                            \\n                            {% block sw_mail_template_detail_attachments_info_grid_preview %}\\n                            <sw-media-preview :source=\\\"item.id\\\" />\\n                            {% endblock %}\\n                        </template>\\n\\n                        <template #actions=\\\"{ item }\\\">\\n                            \\n                            {% block sw_mail_template_detail_attachments_info_grid_actions %}\\n                            <sw-context-menu-item\\n                                v-tooltip.bottom=\\\"{\\n                                    message: $tc('sw-privileges.tooltip.warning'),\\n                                    disabled: acl.can('mail_templates.editor'),\\n                                    showOnDisabledElements: true\\n                                }\\\"\\n                                variant=\\\"danger\\\"\\n                                :disabled=\\\"!acl.can('mail_templates.editor')\\\"\\n                                @click=\\\"onDeleteMedia(item.id)\\\"\\n                            >\\n                                {{ $tc('global.default.delete') }}\\n                            </sw-context-menu-item>\\n                            {% endblock %}\\n                        </template>\\n\\n                        <template #bulk>\\n                            \\n                            {% block sw_mail_template_detail_attachments_info_grid_bulk %}\\n                            <a\\n                                class=\\\"link link-danger\\\"\\n                                role=\\\"link\\\"\\n                                tabindex=\\\"0\\\"\\n                                @click=\\\"onDeleteSelectedMedia\\\"\\n                                @keydown.enter=\\\"onDeleteSelectedMedia\\\"\\n                            >\\n                                {{ $tc('global.default.delete') }}\\n                            </a>\\n                            {% endblock %}\\n                        </template>\\n                    </sw-data-grid>\\n                    {% endblock %}\\n                </sw-card>\\n                {% endblock %}\\n\\n                \\n                {% block sw_mail_template_detail_mail_text_info %}\\n                <sw-card\\n                    :title=\\\"$tc('sw-mail-template.detail.mailText.titleCard')\\\"\\n                    position-identifier=\\\"sw-mail-template-detail-text-info\\\"\\n                >\\n                    \\n                    {% block sw_mail_template_mail_text_form_content_plain_field %}\\n                    <sw-code-editor\\n                        ref=\\\"plainEditor\\\"\\n                        :key=\\\"`${mailTemplate.mailTemplateTypeId}plain`\\\"\\n                        v-model=\\\"mailTemplate.contentPlain\\\"\\n                        name=\\\"content_plain\\\"\\n                        completion-mode=\\\"entity\\\"\\n                        :label=\\\"$tc('sw-mail-template.detail.mailText.labelContentPlain')\\\"\\n                        :placeholder=\\\"placeholder(mailTemplate, 'contentPlain', $tc('sw-mail-template.detail.mailText.placeholderPlain'))\\\"\\n                        :completer-function=\\\"outerCompleterFunction\\\"\\n                        :editor-config=\\\"editorConfig\\\"\\n                        :disabled=\\\"!acl.can('mail_templates.editor')\\\"\\n                        :error=\\\"mailTemplateContentPlainError\\\"\\n                        required\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_mail_template_mail_text_form_content_html_field %}\\n                    <sw-code-editor\\n                        ref=\\\"htmlEditor\\\"\\n                        :key=\\\"`${mailTemplate.mailTemplateTypeId}html`\\\"\\n                        v-model=\\\"mailTemplate.contentHtml\\\"\\n                        name=\\\"content_html\\\"\\n                        completion-mode=\\\"entity\\\"\\n                        :label=\\\"$tc('sw-mail-template.detail.mailText.labelContentHtml')\\\"\\n                        :placeholder=\\\"placeholder(mailTemplate, 'contentHtml', $tc('sw-mail-template.detail.mailText.placeholderHtml'))\\\"\\n                        :completer-function=\\\"outerCompleterFunction\\\"\\n                        :editor-config=\\\"editorConfig\\\"\\n                        :disabled=\\\"!acl.can('mail_templates.editor')\\\"\\n                        :error=\\\"mailTemplateContentHtmlError\\\"\\n                        required\\n                    />\\n                    {% endblock %}\\n                </sw-card>\\n                \\n                {% block sw_mail_template_detail_preview_modal %}\\n                <sw-modal\\n                    v-if=\\\"mailPreview\\\"\\n                    class=\\\"sw-mail-template-preview-modal\\\"\\n                    :title=\\\"$tc('sw-mail-template.detail.previewModalTitle')\\\"\\n                    :is-loading=\\\"isLoading\\\"\\n                    @modal-close=\\\"onCancelShowPreview\\\"\\n                >\\n                    <template v-if=\\\"!isLoading\\\">\\n                        <span v-html=\\\"mailPreview\\\"></span>\\n                    </template>\\n\\n                    \\n                    {% block sw_mail_template_detail_preview_modal_footer %}\\n                    <template #modal-footer>\\n                        \\n                        {% block sw_mail_template_detail_preview_modal_footer_cancel %}\\n                        <sw-button\\n                            size=\\\"small\\\"\\n                            @click=\\\"onCancelShowPreview\\\"\\n                        >\\n                            {{ $tc('global.default.close') }}\\n                        </sw-button>\\n                        {% endblock %}\\n                    </template>\\n                    {% endblock %}\\n                </sw-modal>\\n                {% endblock %}\\n                {% endblock %}\\n            </template>\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_mail_template_detail_sidebar %}\\n    <template #sidebar>\\n        <sw-sidebar :propagate-width=\\\"true\\\">\\n            \\n            {% block sw_mail_template_detail_sidebar_inner %}\\n\\n            \\n            {% block sw_mail_template_detail_sidebar_inner_test_mail %}\\n            <sw-sidebar-item\\n                icon=\\\"regular-paper-plane\\\"\\n                :title=\\\"$tc('sw-mail-template.detail.sidebar.titleTestMail')\\\"\\n                class=\\\"sw-mail-template-detail__test-mail-sidebar\\\"\\n            >\\n                <div class=\\\"sw-mail-template-detail__test-mail-sidebar-container\\\">\\n                    \\n                    {% block sw_mail_template_mail_text_form_test_mail_field %}\\n                    <sw-text-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"testerMail\\\"\\n                        {% else %}\\n                        v-model=\\\"testerMail\\\"\\n                        {% endif %}\\n                        name=\\\"sw-field--testerMail\\\"\\n                        :placeholder=\\\"$tc('sw-mail-template.detail.sidebar.placeholderTestMail')\\\"\\n                        :label=\\\"$tc('sw-mail-template.detail.sidebar.labelTestMail')\\\"\\n                        :disabled=\\\"!acl.can('mail_templates.editor')\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_mail_template_mail_text_form_test_sales_channel_field %}\\n                    <sw-entity-single-select\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"testMailSalesChannelId\\\"\\n                        {% else %}\\n                        v-model=\\\"testMailSalesChannelId\\\"\\n                        {% endif %}\\n                        name=\\\"sw-field--testMailSalesChannelId\\\"\\n                        entity=\\\"sales_channel\\\"\\n                        :label=\\\"$tc('sw-mail-template.detail.basic.labelSalesChannels')\\\"\\n                        :placeholder=\\\"$tc('sw-mail-template.detail.basic.placeholderSalesChannels')\\\"\\n                        show-clearable-button\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_mail_template_mail_text_form_test_mail_button %}\\n                    <sw-button\\n                        :disabled=\\\"isLoading || !testMailRequirementsMet\\\"\\n                        class=\\\"sw-mail-template-detail__send-test-mail\\\"\\n                        @click=\\\"onClickTestMailTemplate\\\"\\n                    >\\n                        {{ $tc('sw-mail-template.detail.sidebar.buttonTestMail') }}\\n                    </sw-button>\\n                    {% endblock %}\\n                </div>\\n            </sw-sidebar-item>\\n            {% endblock %}\\n\\n            \\n            {% block sw_mail_template_detail_sidebar_inner_variables %}\\n            <sw-sidebar-item\\n                icon=\\\"regular-code\\\"\\n                :title=\\\"$tc('sw-mail-template.detail.sidebar.titleShowAvailableVariables')\\\"\\n                :disabled=\\\"isLoading || !hasTemplateData\\\"\\n                class=\\\"sw-mail-template-detail__show-available-variables\\\"\\n            >\\n                <div class=\\\"sw-mail-template-detail__available-variables-sidebar-container\\\">\\n                    \\n                    {% block sw_mail_template_available_variables_tree %}\\n                    <sw-tree\\n                        class=\\\"sw-mail-template-detail__available-variables-sidebar-container__tree\\\"\\n                        :searchable=\\\"false\\\"\\n                        :disable-context-menu=\\\"true\\\"\\n                        :on-change-route=\\\"() => { return false; }\\\"\\n                        :items=\\\"loadedAvailableVariables\\\"\\n                        :sortable=\\\"false\\\"\\n                        @get-tree-items=\\\"onGetTreeItems\\\"\\n                    >\\n                        \\n                        {% block sw_mail_template_available_variables_tree_headline %}\\n                        <template #headline>\\n                            <span></span>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_mail_template_available_variables_tree_items %}\\n                        <template\\n                            #items=\\\"{ treeItems, sortable, draggedItem, disableContextMenu, onChangeRoute }\\\"\\n                        >\\n                            \\n                            {% block sw_mail_template_available_variables_tree_items_item %}\\n                            <sw-tree-item\\n                                v-for=\\\"(item, index) in treeItems\\\"\\n                                :key=\\\"item.id\\\"\\n                                :item=\\\"item\\\"\\n                                :disable-context-menu=\\\"disableContextMenu\\\"\\n                                :on-change-route=\\\"onChangeRoute\\\"\\n                                :sortable=\\\"false\\\"\\n                                :display-checkbox=\\\"false\\\"\\n                            >\\n                                \\n                                {% block sw_mail_template_available_variables_tree_items_item_grip %}\\n                                <template #grip>\\n                                    <span></span>\\n                                </template>\\n                                {% endblock %}\\n\\n                                \\n                                {% block sw_mail_template_available_variables_tree_items_item_actions %}\\n                                <template #actions=\\\"{ item }\\\">\\n                                    <sw-icon\\n                                        v-tooltip=\\\"{\\n                                            message: $tc('sw-mail-template.detail.sidebar.copyTooltip'),\\n                                            width: 150,\\n                                            position: 'bottom'\\n                                        }\\\"\\n                                        name=\\\"regular-products-s\\\"\\n                                        class=\\\"sw-mail-template-detail__copy_icon\\\"\\n                                        @click=\\\"onCopyVariable(item.schema)\\\"\\n                                    />\\n                                </template>\\n                                {% endblock %}\\n                            </sw-tree-item>\\n                            {% endblock %}\\n                        </template>\\n                        {% endblock %}\\n                    </sw-tree>\\n                    {% endblock %}\\n                </div>\\n            </sw-sidebar-item>\\n            {% endblock %}\\n\\n            \\n            {% block sw_mail_template_detail_sidebar_inner_preview %}\\n            <sw-sidebar-item\\n                icon=\\\"regular-eye\\\"\\n                :title=\\\"$tc('sw-mail-template.detail.sidebar.titleShowPreview')\\\"\\n                :disabled=\\\"isLoading || showPreview || !hasTemplateData\\\"\\n                class=\\\"sw-mail-template-detail__show-preview-sidebar\\\"\\n                @click=\\\"onClickShowPreview\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_mail_template_detail_sidebar_inner_media %}\\n            <sw-sidebar-media-item ref=\\\"mediaSidebarItem\\\">\\n                <template\\n                    #context-menu-items=\\\"media\\\"\\n                >\\n                    \\n                    {% block sw_mail_template_detail_sidebar_add_attachment %}\\n                    <sw-context-menu-item\\n                        :disabled=\\\"!acl.can('mail_templates.editor')\\\"\\n                        @click=\\\"onAddItemToAttachment(media.mediaItem)\\\"\\n                    >\\n                        {{ $tc('sw-mail-template.detail.sidebar.labelContextMenuAddToMailTemplate') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n                </template>\\n            </sw-sidebar-media-item>\\n            {% endblock %}\\n\\n            {% endblock %}\\n        </sw-sidebar>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}