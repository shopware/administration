{"version":3,"sources":["webpack:///./node_modules/lodash/_baseSortBy.js","webpack:///./src/module/sw-flow/component/sw-flow-sequence-action/sw-flow-sequence-action.scss","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseOrderBy.js","webpack:///./node_modules/lodash/orderBy.js","webpack:///./node_modules/lodash/_compareAscending.js","webpack:///./node_modules/lodash/_compareMultiple.js","webpack:///./src/module/sw-flow/component/sw-flow-sequence-action/index.js","webpack:///./src/module/sw-flow/component/sw-flow-sequence-action/sw-flow-sequence-action.html.twig","webpack:///./node_modules/lodash/_createBaseEach.js","webpack:///./node_modules/lodash/sortBy.js","webpack:///./node_modules/lodash/_baseEach.js","webpack:///./node_modules/lodash/_baseMap.js"],"names":["module","exports","array","comparer","length","sort","value","content","__esModule","default","i","locals","add","baseFor","keys","object","iteratee","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","isArray","collection","iteratees","orders","index","result","key","other","baseOrderBy","guard","undefined","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","compareAscending","objCriteria","criteria","othCriteria","ordersLength","_Shopware","Shopware","Component","State","Mixin","utils","Utils","cloneDeep","ShopwareError","Classes","_Component$getCompone","getComponentHelper","mapState","mapGetters","snakeCase","string","Criteria","Data","template","inject","mixins","getByName","props","sequence","type","Object","required","disabled","Boolean","isUnknownTrigger","data","fieldError","selectedAction","currentSequence","appFlowActions","isAppAction","computed","_objectSpread","sequenceRepository","this","repositoryFactory","create","customFieldSetRepository","appFlowActionRepository","actionOptions","_this","actions","availableActions","map","action","getActionTitle","sortActionOptions","groups","_this2","actionGroups","group","id","label","$tc","concat","appActions","_action$app2","_action$app3","_action$app4","find","_action$app","app","name","unshift","toLowerCase","slice","sortBy","sequenceData","_this3","actionName","sortByPosition","values","item","showAddAction","_this4","stopFlowActionName","some","flowBuilderService","getActionName","actionClasses","errorArrow","isValidAction","trueBlock","modalName","getSelectedAppAction","getActionModalName","currentLocale","get","actionDescription","_ref","_this5","_defineProperty","ACTION","STOP_FLOW","SET_ORDER_STATE","config","getSetOrderStateDescription","GENERATE_DOCUMENT","getGenerateDocumentDescription","MAIL_SEND","getMailSendDescription","CHANGE_CUSTOMER_GROUP","getCustomerGroupDescription","CHANGE_CUSTOMER_STATUS","getCustomerStatusDescription","SET_CUSTOMER_CUSTOM_FIELD","getCustomFieldDescription","SET_CUSTOMER_GROUP_CUSTOM_FIELD","SET_ORDER_CUSTOM_FIELD","ADD_CUSTOMER_AFFILIATE_AND_CAMPAIGN_CODE","getAffiliateAndCampaignCodeDescription","ADD_ORDER_AFFILIATE_AND_CAMPAIGN_CODE","APP_FLOW_ACTION","getAppFlowActionDescription","watch","handler","setFieldError","created","createdComponent","methods","openDynamicModal","appAction","propsAppFlowAction","addAction","getSelectedAppFlowAction","onSaveActionSuccess","entity","actionType","mapActionType","replace","editAction","onCloseModal","$delete","appFlowActionId","commit","lastSequence","newSequence","parentId","trueCase","displayGroup","ruleId","position","createId","assign","removeFieldError","removeAction","_this$sequence$id","sequences","filter","forEach","isAppDisabled","actionsWithoutStopFlow","_this6","showMoveOption","moveAction","currentIndex","findIndex","moveActionClone","contextButtons","$refs","contextButton","_ref2","onEditAction","target","hasAvailableAction","$el","contains","removeActionContainer","removeSequences","_appAction$translated","_appAction$app","_appAction$app2","_appAction$app3","translated","icon","swIcon","iconRaw","active","actionTitle","getActionGroupMapping","getAppFlowAction","_this7","addAssociation","search","Context","api","then","response","prev","current","stopFlowStyle","convertTagString","tagsString","toString","getActionDescription","includes","capitalize","tagNames","tagIds","getActionDescriptions","customerGroups","customFieldSets","customFields","stateMachineState","documentTypes","mailTemplates","_this$invalidSequence","invalidSequences","code","_this$invalidSequence2","_this8","isNotStopFlow","description","order","_orderStatus$translat","orderStatus","technicalName","stateMachine","orderStatusName","push","order_delivery","_deliveryStatus$trans","deliveryStatus","deliveryStatusName","order_transaction","_paymentStatus$transl","paymentStatus","paymentStatusName","forceTransition","force_transition","join","_this9","documentType","_this9$documentTypes$","_this9$documentTypes$2","_customerGroup$transl","customerGroup","customerGroupId","_mailTemplateData$mai","mailTemplateData","mailTemplateId","mailSendDescription","mailTemplateType","mailDescription","substring","customFieldSet","customFieldSetId","customField","customFieldId","getInlineSnippet","customFieldOption","optionLabel","affiliateCode","upsert","campaignCode","msg","toUpperCase","_this10","cloneConfig","descriptions","entries","_ref3","fieldName","_slicedToArray","_typeof","html","val","valPreview","formatValuePreview","convertLabelPreview","field","_ref5","_option$label$this$cu","option","options","opt","Date","_ref6","_config$label$this$cu","getStopFlowIndex","_this11","getGroup","pop","_this12","stopAction","orderBy","splice","el","stopFlowIndex","isArrayLike","eachFunc","fromRight","iterable","baseFlatten","baseRest","isIterateeCall","baseForOwn","baseEach","createBaseEach","Array"],"mappings":"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","file":"static/js/f59e69d945001d61b130.js","sourcesContent":["/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-flow-sequence-action.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"497f50dd\", content, true, {});","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","import orderBy from 'lodash/orderBy';\nimport sortBy from 'lodash/sortBy';\nimport template from './sw-flow-sequence-action.html.twig';\nimport './sw-flow-sequence-action.scss';\nimport { ACTION } from '../../constant/flow.constant';\n\nconst { Component, State, Mixin } = Shopware;\nconst utils = Shopware.Utils;\nconst { cloneDeep } = utils.object;\nconst { ShopwareError } = Shopware.Classes;\nconst { mapState, mapGetters } = Component.getComponentHelper();\nconst { snakeCase } = utils.string;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @private\n * @package services-settings\n */\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'flowBuilderService', 'feature'],\n\n    mixins: [\n        Mixin.getByName('sw-inline-snippet'),\n    ],\n\n    props: {\n        sequence: {\n            type: Object,\n            required: true,\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        isUnknownTrigger: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            fieldError: null,\n            selectedAction: '',\n            currentSequence: {},\n            appFlowActions: [],\n            isAppAction: false,\n        };\n    },\n\n    computed: {\n        sequenceRepository() {\n            return this.repositoryFactory.create('flow_sequence');\n        },\n\n        customFieldSetRepository() {\n            return this.repositoryFactory.create('custom_field_set');\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use appFlowActionRepository in `sw-flow-detail` instead\n         */\n        appFlowActionRepository() {\n            return this.repositoryFactory.create('app_flow_action');\n        },\n\n        actionOptions() {\n            const actions = this.availableActions.map((action) => {\n                return this.getActionTitle(action);\n            });\n\n            return this.sortActionOptions(actions);\n        },\n\n        groups() {\n            const groups = this.actionGroups.map(group => {\n                return {\n                    id: group,\n                    label: this.$tc(`sw-flow.actions.group.${group}`),\n                };\n            });\n\n            if (this.appActions.length) {\n                const action = this.appActions[0];\n                const appGroup = this.actionGroups.find(group => group === action?.app?.name);\n                if (!appGroup) {\n                    groups.unshift({\n                        id: `${action?.app?.name[0].toLowerCase()}${action?.app?.name.slice(1)}`,\n                        label: action?.app?.label,\n                    });\n                }\n            }\n\n            return sortBy(groups, ['label']);\n        },\n\n        sequenceData() {\n            if (this.sequence.id) {\n                return [\n                    {\n                        ...this.sequence,\n                        ...this.getActionTitle(this.sequence.actionName),\n                    },\n                ];\n            }\n\n            return this.sortByPosition(Object.values(this.sequence).map(item => {\n                return {\n                    ...item,\n                    ...this.getActionTitle(item.actionName),\n                };\n            }));\n        },\n\n        showAddAction() {\n            return !(\n                this.sequence.actionName === this.stopFlowActionName ||\n                this.sequenceData.some(sequence => sequence.actionName === this.stopFlowActionName)\n            );\n        },\n\n        stopFlowActionName() {\n            return this.flowBuilderService.getActionName('STOP_FLOW');\n        },\n\n        actionClasses() {\n            return {\n                'is--stop-flow': !this.showAddAction,\n                'has--arrow': this.errorArrow,\n            };\n        },\n\n        errorArrow() {\n            return !this.isValidAction(this.sequence) && this.sequence.actionName && this.sequence.trueBlock;\n        },\n\n        modalName() {\n            if (this.getSelectedAppAction(this.selectedAction)) {\n                return 'sw-flow-app-action-modal';\n            }\n\n            return this.flowBuilderService.getActionModalName(this.selectedAction);\n        },\n\n        currentLocale() {\n            return Shopware.State.get('session').currentLocale;\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use getActionDescriptions in `flow-builder.service` instead\n         */\n        actionDescription() {\n            return {\n                [ACTION.STOP_FLOW]: () => this.$tc('sw-flow.actions.textStopFlowDescription'),\n                [ACTION.SET_ORDER_STATE]: (config) => this.getSetOrderStateDescription(config),\n                [ACTION.GENERATE_DOCUMENT]: (config) => this.getGenerateDocumentDescription(config),\n                [ACTION.MAIL_SEND]: (config) => this.getMailSendDescription(config),\n                [ACTION.CHANGE_CUSTOMER_GROUP]: (config) => this.getCustomerGroupDescription(config),\n                [ACTION.CHANGE_CUSTOMER_STATUS]: (config) => this.getCustomerStatusDescription(config),\n                [ACTION.SET_CUSTOMER_CUSTOM_FIELD]: (config) => this.getCustomFieldDescription(config),\n                // eslint-disable-next-line max-len\n                [ACTION.SET_CUSTOMER_GROUP_CUSTOM_FIELD]: (config) => this.getCustomFieldDescription(config),\n                [ACTION.SET_ORDER_CUSTOM_FIELD]: (config) => this.getCustomFieldDescription(config),\n                [ACTION.ADD_CUSTOMER_AFFILIATE_AND_CAMPAIGN_CODE]:\n                    (config) => this.getAffiliateAndCampaignCodeDescription(config),\n                [ACTION.ADD_ORDER_AFFILIATE_AND_CAMPAIGN_CODE]:\n                    (config) => this.getAffiliateAndCampaignCodeDescription(config),\n                [ACTION.APP_FLOW_ACTION]: (config, actionName) => this.getAppFlowActionDescription(config, actionName),\n            };\n        },\n\n        ...mapState(\n            'swFlowState',\n            [\n                'invalidSequences',\n                'stateMachineState',\n                'documentTypes',\n                'mailTemplates',\n                'customerGroups',\n                'customFieldSets',\n                'customFields',\n                'triggerEvent',\n                'triggerActions',\n            ],\n        ),\n        ...mapGetters(\n            'swFlowState',\n            [\n                'availableActions',\n                'actionGroups',\n                'sequences',\n                'appActions',\n                'getSelectedAppAction',\n                'hasAvailableAction',\n            ],\n        ),\n    },\n\n    watch: {\n        sequence: {\n            handler() {\n                this.setFieldError();\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        /**\n         * @deprecated tag:v6.6.0 - will be removed\n         */\n        createdComponent() {},\n\n        openDynamicModal(value) {\n            const appAction = this.getSelectedAppAction(value);\n            if (appAction) {\n                this.isAppAction = true;\n                this.currentSequence.propsAppFlowAction = appAction;\n            }\n\n            if (value === this.stopFlowActionName) {\n                this.addAction({\n                    name: this.stopFlowActionName,\n                    config: null,\n                });\n                return;\n            }\n            this.selectedAction = value;\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use getSelectedAppFlowAction in `flow-builder.service` instead\n         */\n        getSelectedAppFlowAction(actionName) {\n            return this.appFlowActions.find((item) => item.name === actionName);\n        },\n\n        onSaveActionSuccess(sequence) {\n            const { config, id } = sequence;\n            let entity = config?.entity;\n            let actionName = this.selectedAction;\n\n            const actionType = this.flowBuilderService.mapActionType(this.selectedAction);\n            if (actionType && entity) {\n                entity = snakeCase(entity).replace('_', '.');\n                actionName = actionType.replace('entity', entity);\n            }\n\n            if (!id) {\n                this.addAction({\n                    name: actionName,\n                    config: config,\n                });\n            } else {\n                this.editAction({\n                    name: actionName,\n                    config: config,\n                });\n            }\n\n            this.onCloseModal();\n        },\n\n        onCloseModal() {\n            this.currentSequence = {};\n            this.selectedAction = '';\n            this.isAppAction = false;\n            this.$delete(this.sequence, 'propsAppFlowAction');\n        },\n\n        addAction(action) {\n            if (!action.name) {\n                return;\n            }\n\n            const appAction = this.getSelectedAppAction(action.name);\n\n            if (!this.sequence.actionName && this.sequence.id) {\n                const data = {\n                    id: this.sequence.id,\n                    actionName: action.name,\n                    config: action.config,\n                };\n\n                if (appAction) {\n                    data.appFlowActionId = appAction.id;\n                }\n\n                State.commit('swFlowState/updateSequence', data);\n            } else {\n                const lastSequence = this.sequenceData[this.sequenceData.length - 1];\n\n                let sequence = this.sequenceRepository.create();\n                const newSequence = {\n                    ...sequence,\n                    parentId: lastSequence.parentId,\n                    trueCase: lastSequence.trueCase,\n                    displayGroup: lastSequence.displayGroup,\n                    ruleId: null,\n                    actionName: action.name,\n                    position: lastSequence.position + 1,\n                    config: action.config,\n                    id: utils.createId(),\n                };\n\n                if (appAction) {\n                    newSequence.appFlowActionId = appAction.id;\n                }\n\n                sequence = Object.assign(sequence, newSequence);\n                State.commit('swFlowState/addSequence', sequence);\n            }\n\n            this.removeFieldError();\n        },\n\n        editAction(action) {\n            if (!action.name) {\n                return;\n            }\n\n            State.commit('swFlowState/updateSequence', {\n                id: this.currentSequence.id,\n                actionName: action.name,\n                config: action.config,\n            });\n        },\n\n        removeAction(id) {\n            const action = this.sequences.find(sequence => sequence.id === id);\n            if (action?.id) {\n                const sequencesInGroup = this.sequences.filter(item => item.parentId === action.parentId\n                    && item.trueCase === action.trueCase\n                    && item.id !== id);\n\n                sequencesInGroup.forEach((item, index) => {\n                    State.commit('swFlowState/updateSequence', {\n                        id: item.id,\n                        position: index + 1,\n                    });\n                });\n            }\n\n            if (this.isAppDisabled(this.getSelectedAppAction(this.sequence[id]?.actionName))) return;\n\n            State.commit('swFlowState/removeSequences', [id]);\n        },\n\n        actionsWithoutStopFlow() {\n            // When action list only has 1 item, this.sequence has object type\n            if (this.sequence.id) {\n                return [{\n                    ...this.sequence,\n                }];\n            }\n\n            const sequences = Object.values(this.sequence);\n            return this.sortByPosition(sequences.filter(sequence => sequence.actionName !== this.stopFlowActionName));\n        },\n\n        showMoveOption(action, type) {\n            const actions = this.actionsWithoutStopFlow();\n            if (actions.length <= 1) return false;\n            if (type === 'up' && actions[0].position === action.position) return false;\n            if (type === 'down' && actions[actions.length - 1].position === action.position) return false;\n\n            return action.actionName !== this.stopFlowActionName;\n        },\n\n        moveAction(action, type, key) {\n            if (this.isAppDisabled(this.getSelectedAppAction(action.actionName))) return;\n\n            const actions = this.actionsWithoutStopFlow();\n            const currentIndex = actions.findIndex(item => item.position === action.position);\n            const moveAction = type === 'up' ? actions[currentIndex - 1] : actions[currentIndex + 1];\n            const moveActionClone = cloneDeep(moveAction);\n\n            State.commit('swFlowState/updateSequence', { id: moveAction.id, position: action.position });\n            State.commit('swFlowState/updateSequence', { id: action.id, position: moveActionClone.position });\n\n            const index = type === 'up' ? key - 1 : key + 1;\n            const contextButtons = this.$refs.contextButton;\n            [contextButtons[key], contextButtons[index]] = [contextButtons[index], contextButtons[key]];\n        },\n\n        onEditAction(sequence, target, key) {\n            if (sequence.actionName && sequence.actionName === this.stopFlowActionName) {\n                return;\n            }\n\n            if (!this.hasAvailableAction(sequence.actionName)) {\n                return;\n            }\n\n            if (!sequence?.actionName || !target) {\n                return;\n            }\n\n            if (this.$refs.contextButton[key] && this.$refs.contextButton[key].$el.contains(target)) {\n                return;\n            }\n\n            if (this.isAppDisabled(this.getSelectedAppAction(sequence.actionName))) return;\n\n            sequence.propsAppFlowAction = this.getSelectedAppAction(sequence.actionName);\n            this.currentSequence = sequence;\n            this.selectedAction = sequence.actionName;\n        },\n\n        removeActionContainer() {\n            const removeSequences = this.sequence.id ? [this.sequence.id] : Object.keys(this.sequence);\n\n            State.commit('swFlowState/removeSequences', removeSequences);\n        },\n\n        getActionTitle(actionName) {\n            if (!actionName) {\n                return null;\n            }\n\n            const appAction = this.getSelectedAppAction(actionName);\n            if (appAction) {\n                return {\n                    label: appAction.label || appAction.translated?.label,\n                    icon: appAction.swIcon,\n                    iconRaw: appAction.icon,\n                    value: appAction.name,\n                    disabled: !appAction.app?.active,\n                    group: `${appAction.app?.name[0].toLowerCase()}${appAction.app?.name.slice(1)}`,\n                };\n            }\n\n            const actionTitle = this.flowBuilderService.getActionTitle(actionName);\n            return {\n                ...actionTitle,\n                label: this.$tc(actionTitle.label),\n                group: this.flowBuilderService.getActionGroupMapping(actionName),\n            };\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use getAppFlowAction in `sw-flow-detail` instead\n         */\n        getAppFlowAction() {\n            const criteria = new Criteria(1, 25);\n            criteria.addAssociation('app');\n            return this.appFlowActionRepository.search(criteria, Shopware.Context.api).then((response) => {\n                this.appFlowActions = response;\n            });\n        },\n\n        sortByPosition(sequences) {\n            return sequences.sort((prev, current) => {\n                return prev.position - current.position;\n            });\n        },\n\n        stopFlowStyle(value) {\n            return {\n                'is--stop-flow': value === this.stopFlowActionName,\n            };\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use convertTagString in `flow-builder.service` instead\n         */\n        convertTagString(tagsString) {\n            return tagsString.toString().replace(/,/g, ', ');\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use method `getActionDescriptions` of `flowBuilderService ` instead\n         */\n        getActionDescription(sequence) {\n            const { actionName, config } = sequence;\n\n            if (!actionName || !this.hasAvailableAction(actionName)) return '';\n\n            if (this.getSelectedAppFlowAction(actionName)) {\n                return this.actionDescription[ACTION.APP_FLOW_ACTION](config, actionName);\n            }\n\n            if (actionName.includes('tag') &&\n                (actionName.includes('add') || actionName.includes('remove'))) {\n                return `${this.$tc('sw-flow.actions.labelTo', 0, {\n                    entity: this.capitalize(config.entity),\n                })}<br>${this.$tc('sw-flow.actions.labelTag', 0, {\n                    tagNames: this.convertTagString(Object.values(config.tagIds)),\n                })}`;\n            }\n\n            if (typeof this.actionDescription[actionName] !== 'function' && !this.isAppAction) {\n                return '';\n            }\n\n            return this.actionDescription[actionName](config);\n        },\n\n        getActionDescriptions(sequence) {\n            if (!sequence.actionName) return '';\n\n            const data = {\n                appActions: this.appActions,\n                customerGroups: this.customerGroups,\n                customFieldSets: this.customFieldSets,\n                customFields: this.customFields,\n                stateMachineState: this.stateMachineState,\n                documentTypes: this.documentTypes,\n                mailTemplates: this.mailTemplates,\n            };\n\n            return this.flowBuilderService.getActionDescriptions(data, sequence, this);\n        },\n\n        setFieldError() {\n            if (!this.invalidSequences?.includes(this.sequence.id)) {\n                this.fieldError = null;\n                return;\n            }\n\n            this.fieldError = new ShopwareError({\n                code: 'c1051bb4-d103-4f74-8988-acbcafc7fdc3',\n            });\n        },\n\n        removeFieldError() {\n            if (!this.fieldError) {\n                return;\n            }\n\n            this.fieldError = null;\n            const invalidSequences = this.invalidSequences?.filter(id => this.sequence.id !== id);\n            State.commit('swFlowState/setInvalidSequences', invalidSequences);\n        },\n\n        isNotStopFlow(item) {\n            return item.actionName !== this.stopFlowActionName;\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use getSetOrderStateDescription in `flow-builder.service` instead\n         */\n        getSetOrderStateDescription(config) {\n            const description = [];\n            if (config.order) {\n                const orderStatus = this.stateMachineState.find(item => item.technicalName === config.order\n                && item.stateMachine.technicalName === 'order.state');\n                const orderStatusName = orderStatus?.translated?.name || '';\n                description.push(`${this.$tc('sw-flow.modals.status.labelOrderStatus')}: ${orderStatusName}`);\n            }\n\n            if (config.order_delivery) {\n                const deliveryStatus = this.stateMachineState.find(item => item.technicalName === config.order_delivery\n                    && item.stateMachine.technicalName === 'order_delivery.state');\n                const deliveryStatusName = deliveryStatus?.translated?.name || '';\n                description.push(`${this.$tc('sw-flow.modals.status.labelDeliveryStatus')}: ${deliveryStatusName}`);\n            }\n\n            if (config.order_transaction) {\n                const paymentStatus = this.stateMachineState.find(item => item.technicalName === config.order_transaction\n                    && item.stateMachine.technicalName === 'order_transaction.state');\n                const paymentStatusName = paymentStatus?.translated?.name || '';\n                description.push(`${this.$tc('sw-flow.modals.status.labelPaymentStatus')}: ${paymentStatusName}`);\n            }\n\n            const forceTransition = config.force_transition\n                ? this.$tc('global.default.yes')\n                : this.$tc('global.default.no');\n\n            description.push(`${this.$tc('sw-flow.modals.status.forceTransition')}: ${forceTransition}`);\n\n            return description.join('<br>');\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use getGenerateDocumentDescription in `flow-builder.service` instead\n         */\n        getGenerateDocumentDescription(config) {\n            if (config.documentType) {\n                config = {\n                    documentTypes: [config],\n                };\n            }\n\n            const documentType = config.documentTypes.map((type) => {\n                return this.documentTypes.find(item => item.technicalName === type.documentType)?.translated?.name;\n            });\n\n            return this.convertTagString(documentType);\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use getCustomerGroupDescription in `flow-builder.service` instead\n         */\n        getCustomerGroupDescription(config) {\n            const customerGroup = this.customerGroups.find(item => item.id === config.customerGroupId);\n            return customerGroup?.translated?.name;\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use getCustomerStatusDescription in `flow-builder.service` instead\n         */\n        getCustomerStatusDescription(config) {\n            return config.active\n                ? this.$tc('sw-flow.modals.customerStatus.active')\n                : this.$tc('sw-flow.modals.customerStatus.inactive');\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use getMailSendDescription in `flow-builder.service` instead\n         */\n        getMailSendDescription(config) {\n            const mailTemplateData = this.mailTemplates.find(item => item.id === config.mailTemplateId);\n\n            let mailSendDescription = this.$tc('sw-flow.actions.labelTemplate', 0, {\n                template: mailTemplateData?.mailTemplateType?.name,\n            });\n\n            let mailDescription = mailTemplateData?.description;\n\n            if (mailDescription) {\n                // Truncate description string\n                mailDescription = mailDescription.length > 60\n                    ? `${mailDescription.substring(0, 60)}...`\n                    : mailDescription;\n\n                mailSendDescription = `${mailSendDescription}<br>${this.$tc('sw-flow.actions.labelDescription', 0, {\n                    description: mailDescription,\n                })}`;\n            }\n\n            return mailSendDescription;\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use getCustomFieldDescription in `flow-builder.service` instead\n         */\n        getCustomFieldDescription(config) {\n            const customFieldSet = this.customFieldSets.find(item => item.id === config.customFieldSetId);\n            const customField = this.customFields.find(item => item.id === config.customFieldId);\n            if (!customFieldSet || !customField) {\n                return '';\n            }\n\n            return `${this.$tc('sw-flow.actions.labelCustomFieldSet', 0, {\n                customFieldSet: this.getInlineSnippet(customFieldSet.config.label) || customFieldSet.name,\n            })}<br>${this.$tc('sw-flow.actions.labelCustomField', 0, {\n                customField: this.getInlineSnippet(customField.config.label) || customField.name,\n            })}<br>${this.$tc('sw-flow.actions.labelCustomFieldOption', 0, {\n                customFieldOption: config.optionLabel,\n            })}`;\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use getAffiliateAndCampaignCodeDescription in `flow-builder.service` instead\n         */\n        getAffiliateAndCampaignCodeDescription(config) {\n            let description = this.$tc('sw-flow.actions.labelTo', 0, {\n                entity: this.capitalize(config.entity),\n            });\n\n            if (config.affiliateCode.upsert || config.affiliateCode.value != null) {\n                description = `${description}<br>${this.$tc('sw-flow.actions.labelAffiliateCode', 0, {\n                    affiliateCode: config.affiliateCode.value || '',\n                })}`;\n            }\n\n            if (config.campaignCode.upsert || config.campaignCode.value != null) {\n                description = `${description}<br>${this.$tc('sw-flow.actions.labelCampaignCode', 0, {\n                    campaignCode: config.campaignCode.value || '',\n                })}`;\n            }\n\n            return description;\n        },\n\n        capitalize(msg) {\n            return `${msg.slice(0, 1).toUpperCase()}${msg.slice(1)}`;\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use getAppFlowActionDescription in `flow-builder.service` instead\n         */\n        getAppFlowActionDescription(config, actionName) {\n            const cloneConfig = { ...config };\n            let descriptions = '';\n\n            Object.entries(cloneConfig).forEach(([fieldName]) => {\n                if (typeof cloneConfig[fieldName] === 'object' && cloneConfig[fieldName].length > 1) {\n                    let html = '';\n                    cloneConfig[fieldName].forEach((val) => {\n                        const valPreview = this.formatValuePreview(fieldName, actionName, val);\n                        html = `${html}- ${valPreview}<br/>`;\n                    });\n\n                    descriptions = `${descriptions}${this.convertLabelPreview(fieldName, actionName)}:<br/> ${html}`;\n\n                    return;\n                }\n\n                const valPreview = this.formatValuePreview(fieldName, actionName, cloneConfig[fieldName]);\n                descriptions = `${descriptions}${this.convertLabelPreview(fieldName, actionName)}: ${valPreview}<br/>`;\n            });\n\n            return descriptions;\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use formatValuePreview in `flow-builder.service` instead\n         */\n        formatValuePreview(fieldName, actionName, val) {\n            const appAction = this.getSelectedAppFlowAction(actionName);\n            if (appAction === undefined) {\n                return val;\n            }\n\n            const config = appAction.config.find((field) => field.name === fieldName);\n            if (config === undefined) {\n                return val;\n            }\n\n            if (['password'].includes(config.type)) {\n                return val.replace(/([^;])/g, '*');\n            }\n\n            if (['single-select', 'multi-select'].includes(config.type)) {\n                const value = typeof val === 'string' ? val : val[0];\n                const option = config.options.find((opt) => opt.value === value);\n                if (option === undefined) {\n                    return val;\n                }\n\n                return option.label[this.currentLocale] ?? config.label['en-GB'] ?? val;\n            }\n\n            if (['datetime', 'date', 'time'].includes(config.type)) {\n                return new Date(val);\n            }\n\n            if (['colorpicker'].includes(config.type)) {\n                return `<span class=\"sw-color-badge is--default\" style=\"background: ${val};\"></span> ${val}`;\n            }\n\n            return val;\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - use convertLabelPreview in `flow-builder.service` instead\n         */\n        convertLabelPreview(fieldName, actionName) {\n            const appAction = this.getSelectedAppFlowAction(actionName);\n            if (appAction === undefined) {\n                return fieldName;\n            }\n\n            const config = appAction.config.find((field) => field.name === fieldName);\n            if (config === undefined) {\n                return fieldName;\n            }\n\n            return config.label[this.currentLocale] ?? config.label['en-GB'] ?? fieldName;\n        },\n\n        isAppDisabled(appAction) {\n            if (!appAction) return false;\n            return !appAction.app.active;\n        },\n\n        getStopFlowIndex(actions) {\n            const indexes = actions.map((item, index) => {\n                if (item.group === this.flowBuilderService.getGroup('GENERAL')) {\n                    return index;\n                }\n\n                return false;\n            }).filter(item => item > 0);\n\n            return indexes.pop() || actions.length;\n        },\n\n        sortActionOptions(actions) {\n            const stopAction = actions.pop();\n            actions = orderBy(actions, ['group', 'label']);\n\n            actions.forEach((action) => {\n                if (action.group && action.group !== this.flowBuilderService.getGroup('GENERAL')) return;\n\n                action.group = action.group || this.flowBuilderService.getGroup('GENERAL');\n\n                // eslint-disable-next-line max-len\n                actions.push(actions.splice(actions.findIndex(el => el.group === this.flowBuilderService.getGroup('GENERAL')), 1)[0]);\n            });\n\n            actions = sortBy(actions, ['group', 'label'], ['esc', 'esc']);\n            const stopFlowIndex = this.getStopFlowIndex(actions) + 1;\n            actions.splice(stopFlowIndex, 0, stopAction);\n\n            return actions;\n        },\n\n        isValidAction(actionName) {\n            return actionName && this.hasAvailableAction(actionName);\n        },\n    },\n};\n","export default \"\\n{% block sw_flow_sequence_action %}\\n<div\\n    class=\\\"sw-flow-sequence-action\\\"\\n    :class=\\\"actionClasses\\\"\\n>\\n    \\n    {% block sw_flow_sequence_action_card %}\\n    <div class=\\\"sw-flow-sequence-action__card\\\">\\n        \\n        {% block sw_flow_sequence_action_header %}\\n        <div class=\\\"sw-flow-sequence-action__header\\\">\\n            \\n            {% block sw_flow_sequence_action_title %}\\n            <div class=\\\"sw-flow-sequence-action__title-description\\\">\\n                <h3 class=\\\"sw-flow-sequence-action__title\\\">\\n                    {{ $tc('sw-flow.detail.sequence.actionTitle') }}\\n                </h3>\\n\\n                <p class=\\\"sw-flow-sequence-action__description\\\">\\n                    {{ $tc('sw-flow.detail.sequence.actionDescription') }}\\n                </p>\\n            </div>\\n            {% endblock %}\\n\\n            \\n            {% block sw_flow_sequence_action_context_menu %}\\n            <sw-context-button\\n                class=\\\"sw-flow-sequence-action__context-button\\\"\\n                :class=\\\"actionClasses\\\"\\n                :disabled=\\\"disabled\\\"\\n            >\\n                \\n                {% block sw_flow_sequence_action_remove_action_container %}\\n                <sw-context-menu-item\\n                    variant=\\\"danger\\\"\\n                    class=\\\"sw-flow-sequence-action__delete-action-container\\\"\\n                    @click=\\\"removeActionContainer\\\"\\n                >\\n                    {{ $tc('sw-flow.detail.sequence.contextButton.deleteActionContainer') }}\\n                </sw-context-menu-item>\\n                {% endblock %}\\n            </sw-context-button>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_sequence_action_content %}\\n        <div class=\\\"sw-flow-sequence-action__content\\\">\\n            \\n            {% block sw_flow_sequence_action_actions %}\\n            <div class=\\\"sw-flow-sequence-action__actions\\\">\\n                \\n                {% block sw_flow_sequence_action_actions_empty %}\\n                <div\\n                    v-if=\\\"sequenceData.length === 1 && !sequence.actionName\\\"\\n                    class=\\\"sw-flow-sequence-action__actions-empty\\\"\\n                >\\n                    <sw-icon\\n                        size=\\\"12px\\\"\\n                        name=\\\"regular-minus-xs\\\"\\n                    />\\n                    <span class=\\\"sw-flow-sequence-action__no-action\\\">\\n                        {{ $tc('sw-flow.detail.sequence.noActions') }}\\n                    </span>\\n                </div>\\n                {% endblock %}\\n\\n                \\n                {% block sw_flow_sequence_action_actions_list %}\\n                <ul\\n                    v-else\\n                    class=\\\"sw-flow-sequence-action__action-list\\\"\\n                >\\n                    \\n                    {% block sw_flow_sequence_action_actions_transition_group %}\\n                    <transition-group\\n                        name=\\\"list\\\"\\n                        tag=\\\"div\\\"\\n                    >\\n                        \\n                        {% block sw_flow_sequence_action_actions_item %}\\n                        <li\\n                            v-for=\\\"(item, key) in sequenceData\\\"\\n                            :key=\\\"item.id\\\"\\n                            v-tooltip=\\\"{\\n                                message: $tc('sw-flow.actions.tooltipActionDisabled'),\\n                                disabled: !item.disabled\\n                            }\\\"\\n                            class=\\\"sw-flow-sequence-action__action-item\\\"\\n                            :class=\\\"{'sw-flow-sequence-action__disabled': item.disabled}\\\"\\n                            role=\\\"button\\\"\\n                            tabindex=\\\"0\\\"\\n                            @click=\\\"(event) => onEditAction(item, event.target, key)\\\"\\n                            @keydown.enter=\\\"(event) => onEditAction(item, event.target, key)\\\"\\n                        >\\n                            <sw-flow-sequence-action-error\\n                                v-if=\\\"!isValidAction(item.actionName)\\\"\\n                                :sequence=\\\"item\\\"\\n                            >\\n                                <template #content>\\n                                    <div class=\\\"sw-flow-sequence-action__error-action\\\">\\n                                        <div class=\\\"sw-flow-sequence-action__error-action-title\\\">\\n                                            <sw-icon\\n                                                name=\\\"regular-question-circle-s\\\"\\n                                                size=\\\"14px\\\"\\n                                                class=\\\"sw-icon-action\\\"\\n                                            />\\n\\n                                            {{ $tc('sw-flow.actions.unknownLabel') }}\\n                                        </div>\\n\\n                                        <p>\\n                                            {{ $tc('sw-flow.actions.warningText') }}\\n                                        </p>\\n                                    </div>\\n                                </template>\\n                            </sw-flow-sequence-action-error>\\n\\n                            <div v-else>\\n                                \\n                                {% block sw_flow_sequence_action_actions_item_header %}\\n                                <div class=\\\"sw-flow-sequence-action__action-header\\\">\\n                                    <div class=\\\"sw-flow-sequence-action__action-icon\\\">\\n                                        <sw-icon\\n                                            v-if=\\\"!item.iconRaw\\\"\\n                                            :name=\\\"`${item.icon}`\\\"\\n                                            size=\\\"12px\\\"\\n                                            class=\\\"sw-icon-action\\\"\\n                                        />\\n\\n                                        <img\\n                                            v-else\\n                                            class=\\\"sw-flow-sequence-action__icon-raw sw-icon\\\"\\n                                            :src=\\\"`data:image/png;base64, ${item.iconRaw}`\\\"\\n                                            alt=\\\"\\\"\\n                                        >\\n                                    </div>\\n\\n                                    \\n                                    {% block sw_flow_sequence_action_actions_item_name %}\\n                                    <div class=\\\"sw-flow-sequence-action__action-name\\\">\\n                                        <h3>{{ item.label }}</h3>\\n                                    </div>\\n                                    {% endblock %}\\n\\n                                    \\n                                    {% block sw_flow_sequence_action_actions_item_context_button %}\\n                                    <sw-context-button\\n                                        ref=\\\"contextButton\\\"\\n                                        class=\\\"sw-flow-sequence-action__context-button\\\"\\n                                        :disabled=\\\"disabled || item.disabled\\\"\\n                                    >\\n                                        \\n                                        {% block sw_flow_sequence_action_actions_item_button_edit %}\\n                                        <sw-context-menu-item\\n                                            v-if=\\\"isNotStopFlow(item)\\\"\\n                                            class=\\\"sw-flow-sequence-action__edit-action\\\"\\n                                            @click=\\\"(event) => onEditAction(item, event.target, key)\\\"\\n                                        >\\n                                            {{ $tc('sw-flow.actions.contextButton.editAction') }}\\n                                        </sw-context-menu-item>\\n                                        {% endblock %}\\n\\n                                        \\n                                        {% block sw_flow_sequence_action_actions_item_button_delete %}\\n                                        <sw-context-menu-item\\n                                            variant=\\\"danger\\\"\\n                                            class=\\\"sw-flow-sequence-action__delete-action\\\"\\n                                            @click=\\\"removeAction(item.id)\\\"\\n                                        >\\n                                            {{ $tc('sw-flow.actions.contextButton.deleteAction') }}\\n                                        </sw-context-menu-item>\\n                                        {% endblock %}\\n\\n                                        \\n                                        {% block sw_flow_sequence_action_actions_item_button_move_up %}\\n                                        <sw-context-menu-item\\n                                            v-if=\\\"showMoveOption(item, 'up')\\\"\\n                                            class=\\\"sw-flow-sequence-action__move-up\\\"\\n                                            @click=\\\"moveAction(item, 'up', key)\\\"\\n                                        >\\n                                            {{ $tc('sw-flow.actions.contextButton.moveUpAction') }}\\n                                        </sw-context-menu-item>\\n                                        {% endblock %}\\n\\n                                        \\n                                        {% block sw_flow_sequence_action_actions_item_button_move_down %}\\n                                        <sw-context-menu-item\\n                                            v-if=\\\"showMoveOption(item, 'down')\\\"\\n                                            class=\\\"sw-flow-sequence-action__move-down\\\"\\n                                            @click=\\\"moveAction(item, 'down', key)\\\"\\n                                        >\\n                                            {{ $tc('sw-flow.actions.contextButton.moveDownAction') }}\\n                                        </sw-context-menu-item>\\n                                        {% endblock %}\\n                                    </sw-context-button>\\n                                    {% endblock %}\\n                                </div>\\n                                {% endblock %}\\n                            </div>\\n\\n                            \\n                            {% block sw_flow_sequence_action_actions_item_description %}\\n                            <div\\n                                class=\\\"sw-flow-sequence-action__action-description\\\"\\n                                v-html=\\\"getActionDescriptions(item)\\\"\\n                            >\\n                            </div>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_flow_sequence_action_item_custom %}\\n                            {% endblock %}\\n\\n                        </li>\\n                        {% endblock %}\\n                    </transition-group>\\n                    {% endblock %}\\n                </ul>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n\\n            \\n            {% block sw_flow_sequence_action_add_select %}\\n            <div\\n                v-if=\\\"showAddAction && !disabled\\\"\\n                class=\\\"sw-flow-sequence-action__select\\\"\\n            >\\n                \\n                {% block sw_flow_sequence_action_list %}\\n                <sw-grouped-single-select\\n                    class=\\\"sw-flow-sequence-action__selection-action\\\"\\n                    size=\\\"small\\\"\\n                    value=\\\"\\\"\\n                    :placeholder=\\\"$tc('sw-flow.actions.placeholderSelectAction')\\\"\\n                    :options=\\\"actionOptions\\\"\\n                    :groups=\\\"groups\\\"\\n                    :popover-classes=\\\"['sw-flow-sequence-action__popover']\\\"\\n                    :error=\\\"fieldError\\\"\\n                    :disabled=\\\"isUnknownTrigger\\\"\\n                    {% if VUE3 %}\\n                    @update:value=\\\"openDynamicModal\\\"\\n                    {% else %}\\n                    @change=\\\"openDynamicModal\\\"\\n                    {% endif %}\\n                >\\n                    <template #result-item=\\\"{ item, index, labelProperty, highlightSearchTerm, isSelected, setValue, getKey }\\\">\\n                        <sw-select-result\\n                            v-tooltip=\\\"{\\n                                message: $tc('sw-flow.actions.tooltipActionDisabled'),\\n                                disabled: !item.disabled\\n                            }\\\"\\n                            :selected=\\\"isSelected(item)\\\"\\n                            v-bind=\\\"{ item, index }\\\"\\n                            :class=\\\"[stopFlowStyle(item.value), {'sw-flow-sequence-action__disabled': item.disabled}]\\\"\\n                            @item-select=\\\"setValue\\\"\\n                        >\\n                            \\n                            {% block sw_flow_sequence_action_select_results_list_result_label %}\\n                            <sw-icon\\n                                v-if=\\\"!item.iconRaw\\\"\\n                                :name=\\\"`${item.icon}`\\\"\\n                                size=\\\"12px\\\"\\n                                class=\\\"sw-icon-action\\\"\\n                            />\\n\\n                            <img\\n                                v-else\\n                                class=\\\"sw-flow-sequence-action__icon-raw\\\"\\n                                :src=\\\"`data:image/png;base64, ${item.iconRaw}`\\\"\\n                                alt=\\\"\\\"\\n                            >\\n\\n                            <sw-highlight-text\\n                                v-if=\\\"highlightSearchTerm\\\"\\n                                :text=\\\"getKey(item, labelProperty)\\\"\\n                            />\\n\\n                            <template v-else>\\n                                {{ getKey(item, labelProperty) }}\\n                            </template>\\n                            {% endblock %}\\n                        </sw-select-result>\\n                    </template>\\n                </sw-grouped-single-select>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    <div\\n        v-if=\\\"errorArrow\\\"\\n        class=\\\"sw-flow-sequence-action__true-arrow\\\"\\n    >\\n        <div class=\\\"sw-flow-sequence-action__true-line\\\"></div>\\n        <div class=\\\"sw-flow-sequence-action__oval\\\"></div>\\n        <sw-icon\\n            name=\\\"regular-chevron-right-s\\\"\\n            small\\n        />\\n\\n    </div>\\n\\n    \\n    {% block sw_flow_sequence_action_modal %}\\n    <sw-flow-sequence-modal\\n        :sequence=\\\"currentSequence\\\"\\n        :action=\\\"selectedAction\\\"\\n        :modal-name=\\\"modalName\\\"\\n        @process-finish=\\\"onSaveActionSuccess\\\"\\n        @modal-close=\\\"onCloseModal\\\"\\n    />\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n"],"sourceRoot":""}