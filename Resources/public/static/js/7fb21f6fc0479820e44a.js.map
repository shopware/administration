{"version":3,"sources":["webpack:///./src/module/sw-sales-channel/page/sw-sales-channel-list/sw-sales-channel-list.scss","webpack:///./src/module/sw-sales-channel/page/sw-sales-channel-list/index.js","webpack:///./src/module/sw-sales-channel/page/sw-sales-channel-list/sw-sales-channel-list.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Mixin","Defaults","Criteria","Data","template","inject","mixins","getByName","data","salesChannels","productsForSalesChannel","isLoading","sortBy","searchConfigEntity","lastSortedColumn","metaInfo","title","this","$createTitle","computed","salesChannelColumns","columns","property","dataIndex","allowResize","routerLink","label","primary","sortable","align","splice","salesChannelRepository","repositoryFactory","create","salesChannelCriteria","page","limit","setTerm","term","addSorting","sort","sortDirection","naturalSorting","addAssociation","addAggregation","terms","count","salesChannelFavoritesService","Service","dateFilter","Filter","methods","onAddSalesChannel","$root","$emit","getList","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","criteria","wrap","_context","prev","next","addQueryScores","sent","entitySearchable","total","abrupt","freshSearchTerm","resetSorting","search","then","searchResult","_searchResult$aggrega","_searchResult$aggrega2","setProductAggregations","aggregations","sales_channel","buckets","stop","reduce","bucket","_bucket$visible_produ","_objectSpread","_defineProperty","key","visible_products","getCountForSalesChannel","salesChannelId","_this$productsForSale","checkForDomainLink","salesChannel","domainLink","domainLinkService","getDomainLink","openStorefrontLink","storeFrontLink","window","open","isFavorite","isStorefrontSalesChannel","type","id","storefrontSalesChannelTypeId"],"mappings":"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","file":"static/js/7fb21f6fc0479820e44a.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-sales-channel-list.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"02f8384b\", content, true, {});","/**\n * @package buyers-experience\n */\n\nimport template from './sw-sales-channel-list.html.twig';\nimport './sw-sales-channel-list.scss';\n\nconst { Mixin, Defaults } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl', 'domainLinkService'],\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    data() {\n        return {\n            salesChannels: null,\n            productsForSalesChannel: {},\n            isLoading: true,\n            sortBy: 'name',\n            searchConfigEntity: 'sales_channel',\n            lastSortedColumn: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        salesChannelColumns() {\n            const columns = [{\n                property: 'name',\n                dataIndex: 'name',\n                allowResize: true,\n                routerLink: 'sw.sales.channel.detail',\n                label: 'sw-sales-channel.list.columnName',\n                primary: true,\n            }, {\n                property: 'product_visibilities',\n                dataIndex: 'product_visibilities',\n                allowResize: true,\n                sortable: false,\n                label: 'sw-sales-channel.list.productsLabel',\n            }, {\n                property: 'status',\n                dataIndex: 'status',\n                allowResize: true,\n                sortable: false,\n                label: 'sw-sales-channel.list.columnStatus',\n            }, {\n                property: 'id',\n                dataIndex: 'id',\n                allowResize: true,\n                sortable: false,\n                label: 'sw-sales-channel.list.columnFavourite',\n                align: 'center',\n            }, {\n                property: 'createdAt',\n                dataIndex: 'createdAt',\n                allowResize: true,\n                label: 'sw-sales-channel.list.columnCreatedAt',\n            }];\n\n            columns.splice(1, 0, {\n                property: 'type.name',\n                dataIndex: 'type.name',\n                allowResize: true,\n                label: 'sw-sales-channel.list.columnType',\n            });\n\n            return columns;\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        salesChannelCriteria() {\n            const salesChannelCriteria = new Criteria(this.page, this.limit);\n\n            salesChannelCriteria.setTerm(this.term);\n            salesChannelCriteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, this.naturalSorting));\n            salesChannelCriteria.addAssociation('type');\n            salesChannelCriteria.addAssociation('domains');\n\n            salesChannelCriteria.addAggregation(\n                Criteria.terms(\n                    'sales_channel',\n                    'id',\n                    null,\n                    null,\n                    Criteria.count('visible_products', 'sales_channel.productVisibilities.id'),\n                ),\n            );\n\n            return salesChannelCriteria;\n        },\n\n        salesChannelFavoritesService() {\n            return Shopware.Service('salesChannelFavorites');\n        },\n\n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        },\n    },\n\n    methods: {\n        onAddSalesChannel() {\n            this.$root.$emit('on-add-sales-channel');\n        },\n\n        async getList() {\n            this.isLoading = true;\n\n            const criteria = await this.addQueryScores(this.term, this.salesChannelCriteria);\n            if (!this.entitySearchable) {\n                this.isLoading = false;\n                this.total = 0;\n\n                return false;\n            }\n\n            if (this.freshSearchTerm) {\n                criteria.resetSorting();\n            }\n\n            return this.salesChannelRepository.search(criteria)\n                .then(searchResult => {\n                    this.salesChannels = searchResult;\n                    this.setProductAggregations(searchResult.aggregations?.sales_channel?.buckets);\n                    this.total = searchResult.total;\n                    this.isLoading = false;\n                });\n        },\n\n        setProductAggregations(buckets) {\n            this.productsForSalesChannel = buckets.reduce((productsForSalesChannel, bucket) => ({\n                ...productsForSalesChannel,\n                [bucket.key]: bucket.visible_products?.count,\n            }), {});\n        },\n\n        getCountForSalesChannel(salesChannelId) {\n            return this.productsForSalesChannel[salesChannelId] ?? 0;\n        },\n\n        checkForDomainLink(salesChannel) {\n            const domainLink = this.domainLinkService.getDomainLink(salesChannel);\n\n            if (domainLink === null) {\n                return false;\n            }\n\n            salesChannel.domainLink = domainLink;\n\n            return true;\n        },\n\n        openStorefrontLink(storeFrontLink) {\n            window.open(storeFrontLink, '_blank');\n        },\n\n        isFavorite(salesChannelId) {\n            return this.salesChannelFavoritesService.isFavorite(salesChannelId);\n        },\n\n        isStorefrontSalesChannel(salesChannel) {\n            return salesChannel.type.id === Defaults.storefrontSalesChannelTypeId;\n        },\n    },\n};\n","export default \"\\n{% block sw_sales_channel_list %}\\n<sw-page class=\\\"sw-sales-channel-list\\\">\\n    \\n    {% block sw_sales_channel_list_search_bar %}\\n    <template #search-bar>\\n        <sw-search-bar\\n            initial-search-type=\\\"sales_channel\\\"\\n            :placeholder=\\\"$tc('sw-sales-channel.list.placeholderSearchBar')\\\"\\n            :initial-search=\\\"term\\\"\\n            @search=\\\"onSearch\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_sales_channel_list_smart_bar_header %}\\n    <template #smart-bar-header>\\n        \\n        {% block sw_sales_channel_list_smart_bar_header_title %}\\n        <h2>\\n            \\n            {% block sw_sales_channel_list_smart_bar_header_title_text %}\\n            {{ $tc('sw-sales-channel.list.title') }}\\n            {% endblock %}\\n\\n            \\n            {% block sw_sales_channel_list_smart_bar_header_amount %}\\n            <span\\n                v-if=\\\"!isLoading\\\"\\n                class=\\\"sw-page__smart-bar-amount\\\"\\n            >\\n                ({{ total }})\\n            </span>\\n            {% endblock %}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_sales_channel_list_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_sales_channel_list_smart_bar_actions %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"{\\n                message: $tc('sw-privileges.tooltip.warning'),\\n                disabled: acl.can('sales_channel.creator'),\\n                showOnDisabledElements: true\\n            }\\\"\\n            :disabled=\\\"!acl.can('sales_channel.creator')\\\"\\n            variant=\\\"primary\\\"\\n            @click=\\\"onAddSalesChannel\\\"\\n        >\\n            {{ $tc('sw-sales-channel.list.buttonAddSalesChannel') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_sales_channel_list_content %}\\n    <template #content>\\n        <sw-card-view>\\n            \\n            {% block sw_sales_channel_list_content_card %}\\n            <sw-card\\n                v-if=\\\"entitySearchable && total > 0\\\"\\n                position-identifier=\\\"sw-sales-channel-list\\\"\\n                :title=\\\"$tc('sw-sales-channel.list.title')\\\"\\n                :subtitle=\\\"$tc('sw-sales-channel.list.subTitle')\\\"\\n            >\\n                \\n                {% block sw_sales_channel_list_grid %}\\n                <template #grid>\\n                    <sw-entity-listing\\n                        :is-loading=\\\"isLoading\\\"\\n                        identifier=\\\"sw-sales-channel-list\\\"\\n                        :columns=\\\"salesChannelColumns\\\"\\n                        :repository=\\\"salesChannelRepository\\\"\\n                        :items=\\\"salesChannels\\\"\\n                        :full-page=\\\"false\\\"\\n                        :show-selection=\\\"false\\\"\\n                        :sort-by=\\\"currentSortBy\\\"\\n                        :sort-direction=\\\"sortDirection\\\"\\n                        :plain-appearance=\\\"true\\\"\\n                        :show-settings=\\\"true\\\"\\n                        :allow-column-edit=\\\"true\\\"\\n                    >\\n                        \\n                        {% block sw_sales_channel_list_grid_column_name %}\\n                        <template #column-name=\\\"{ item }\\\">\\n                            <sw-icon\\n                                :name=\\\"item.type.iconName\\\"\\n                                size=\\\"18px\\\"\\n                            />\\n                            <router-link\\n                                :to=\\\"{\\n                                    name: 'sw.sales.channel.detail',\\n                                    params: { id: item.id }\\n                                }\\\"\\n                            >{{ item.translated.name || item.name }}</router-link>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_sales_channel_list_grid_column_product_visibilites %}\\n                        <template #column-product_visibilities=\\\"{ item }\\\">\\n                            {{ getCountForSalesChannel(item.id) }}\\n                            {{ $tc('sw-sales-channel.list.productsCount', getCountForSalesChannel(item.id)) }}\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_sales_channel_list_grid_column_status %}\\n                        <template #column-status=\\\"{ item }\\\">\\n                            <template v-if=\\\"item.maintenance\\\">\\n                                <sw-status color=\\\"orange\\\">\\n                                    {{ $tc('sw-sales-channel.list.status.maintenance') }}\\n                                </sw-status>\\n                            </template>\\n\\n                            <template v-else-if=\\\"item.active\\\">\\n                                <sw-status color=\\\"green\\\">\\n                                    {{ $tc('sw-sales-channel.list.status.online') }}\\n                                </sw-status>\\n                            </template>\\n\\n                            <template v-else>\\n                                <sw-status color=\\\"gray\\\">\\n                                    {{ $tc('sw-sales-channel.list.status.offline') }}\\n                                </sw-status>\\n                            </template>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_sales_channel_list_grid_column_created_at %}\\n                        <template #column-createdAt=\\\"{ item }\\\">\\n                            {{ dateFilter(item.createdAt, { hour: '2-digit', minute: '2-digit' }) }}\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_sales_channel_list_grid_column_favorite %}\\n                        <template #column-id=\\\"{ item }\\\">\\n                            <sw-switch-field\\n                                v-tooltip.right=\\\"{ message: $tc('sw-sales-channel.detail.favouriteLabel') }\\\"\\n                                class=\\\"favorite-switch\\\"\\n                                :disabled=\\\"!acl.can('user_config:create') || !acl.can('user_config:update')\\\"\\n                                :value=\\\"isFavorite(item.id)\\\"\\n                                {% if VUE3 %}\\n                                @update:value=\\\"(isFavorite) => { salesChannelFavoritesService?.update(isFavorite, item.id) }\\\"\\n                                {% else %}\\n                                @change=\\\"(isFavorite) => { salesChannelFavoritesService?.update(isFavorite, item.id) }\\\"\\n                                {% endif %}\\n                            />\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_sales_channel_list_grid_actions %}\\n                        <template #actions=\\\"{ item }\\\">\\n                            \\n                            {% block sw_sales_channel_list_grid_actions_item_detail %}\\n                            <sw-context-menu-item\\n                                :router-link=\\\"{\\n                                    name: 'sw.sales.channel.detail',\\n                                    params: { id: item.id }\\n                                }\\\"\\n                            >\\n                                {{ $tc('sw-sales-channel.list.contextMenuEdit') }}\\n                            </sw-context-menu-item>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_sales_channel_list_grid_actions_item_open_storefront %}\\n                            <sw-context-menu-item\\n                                v-if=\\\"isStorefrontSalesChannel(item)\\\"\\n                                :disabled=\\\"!item.active || !checkForDomainLink(item)\\\"\\n                                @click.prevent=\\\"openStorefrontLink(item.domainLink)\\\"\\n                            >\\n                                {{ $tc('sw-sales-channel.general.tooltipOpenStorefront') }}\\n                            </sw-context-menu-item>\\n                            {% endblock %}\\n                        </template>\\n                        {% endblock %}\\n                    </sw-entity-listing>\\n                </template>\\n                {% endblock %}\\n            </sw-card>\\n            {% endblock %}\\n\\n            \\n            {% block sw_sales_channel_list_empty_state %}\\n            <template v-if=\\\"!isLoading && !total\\\">\\n                <sw-empty-state\\n                    v-if=\\\"isValidTerm(term)\\\"\\n                    :style=\\\"{ minHeight: '200px' }\\\"\\n                    :title=\\\"$tc('sw-empty-state.messageNoResultTitle')\\\"\\n                >\\n                    <template #default>\\n                        {{ $tc('sw-empty-state.messageNoResultSublineBefore') }}\\n                        <router-link\\n                            class=\\\"sw-empty-state__description-link\\\"\\n                            :to=\\\"{ name: 'sw.profile.index.searchPreferences' }\\\"\\n                        >\\n                            {{ $tc('sw-empty-state.messageNoResultSublineLink') }}\\n                        </router-link>\\n                        {{ $tc('sw-empty-state.messageNoResultSublineAfter') }}\\n                    </template>\\n                </sw-empty-state>\\n            </template>\\n            {% endblock %}\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}