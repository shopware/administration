{"version":3,"sources":["webpack:///./src/module/sw-flow/component/sw-flow-sequence-condition/index.js","webpack:///./src/module/sw-flow/component/sw-flow-sequence-condition/sw-flow-sequence-condition.html.twig","webpack:///./src/module/sw-flow/component/sw-flow-sequence-condition/sw-flow-sequence-condition.scss"],"names":["_Shopware","Shopware","Component","State","Criteria","Data","utils","Utils","ShopwareError","Classes","_Component$getCompone","getComponentHelper","mapState","mapGetters","template","inject","props","sequence","type","Object","required","disabled","Boolean","default","data","showCreateRuleModal","showRuleSelection","fieldError","showAddButton","selectedRuleId","computed","_objectSpread","sequenceRepository","this","repositoryFactory","create","ruleRepository","ruleCriteria","criteria","addSorting","sort","showHelpElement","_this$sequence","parentId","ruleId","trueBlock","falseBlock","modalName","flowBuilderService","getActionModalName","actionModal","ruleDescription","_this$sequence2","_this$sequence2$rule","rule","description","replace","advanceSelectionParameters","ruleAwareGroupKey","concat","flow","eventName","watch","handler","value","setFieldError","createSequence","id","trueCase","immediate","methods","onCreateNewRule","onCloseModal","onSaveRuleSuccess","onRuleChange","_this","commit","sequences","forEach","removeFieldError","deleteRule","addIfCondition","addThenAction","actionName","showArrowIcon","_this$sequence3","values","disabledAddSequence","_this$sequence4","arrowClasses","removeCondition","actionIds","getRemoveIds","sequenceIds","arguments","length","undefined","trueSequence","_isNew","push","falseSequence","params","newSequence","displayGroup","config","position","createId","assign","_this$invalidSequence","invalidSequences","includes","code","_this$invalidSequence2","_this2","filter","toggleAddButton","onEditRule","_this$sequence5","_this$sequence5$rule","isRuleDisabled","restrictedRules","content","__esModule","module","i","locals","exports","add"],"mappings":"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","file":"static/js/747f9b1a6dcff2811be1.js","sourcesContent":["import template from './sw-flow-sequence-condition.html.twig';\nimport './sw-flow-sequence-condition.scss';\n\nconst { Component, State } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst utils = Shopware.Utils;\nconst { ShopwareError } = Shopware.Classes;\nconst { mapState, mapGetters } = Component.getComponentHelper();\n\n/**\n * @private\n * @package services-settings\n */\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'flowBuilderService',\n        'feature',\n    ],\n\n    props: {\n        sequence: {\n            type: Object,\n            required: true,\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            showCreateRuleModal: false,\n            showRuleSelection: false,\n            fieldError: null,\n            showAddButton: false,\n            selectedRuleId: null,\n        };\n    },\n\n    computed: {\n        ...mapState('swFlowState', ['restrictedRules', 'flow']),\n\n        sequenceRepository() {\n            return this.repositoryFactory.create('flow_sequence');\n        },\n\n        ruleRepository() {\n            return this.repositoryFactory.create('rule');\n        },\n\n        ruleCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addSorting(Criteria.sort('name', 'ASC'));\n\n            return criteria;\n        },\n\n        showHelpElement() {\n            const { parentId, ruleId, trueBlock, falseBlock } = this.sequence;\n            return !parentId && !ruleId && !(trueBlock || falseBlock);\n        },\n\n        modalName() {\n            return this.flowBuilderService.getActionModalName(this.actionModal);\n        },\n\n        ruleDescription() {\n            if (!this.sequence?.rule?.description) {\n                return null;\n            }\n\n            return this.sequence.rule.description.replace(/\\n/g, '<br>');\n        },\n\n        advanceSelectionParameters() {\n            return {\n                ruleAwareGroupKey: `flowTrigger.${this.flow.eventName}`,\n            };\n        },\n\n        ...mapState('swFlowState', ['invalidSequences', 'flow']),\n        ...mapGetters('swFlowState', ['sequences']),\n    },\n\n    watch: {\n        sequence: {\n            handler(value) {\n                const { ruleId, parentId, trueBlock, falseBlock } = value;\n\n                this.setFieldError();\n\n                // Re-add selector\n                if (parentId || !ruleId) {\n                    return;\n                }\n\n                if (!trueBlock) {\n                    this.createSequence({\n                        parentId: this.sequence.id,\n                        trueCase: true,\n                    });\n                }\n\n                if (!falseBlock) {\n                    this.createSequence({\n                        parentId: this.sequence.id,\n                        trueCase: false,\n                    });\n                }\n            },\n            immediate: true,\n        },\n    },\n\n    methods: {\n        onCreateNewRule() {\n            this.showCreateRuleModal = true;\n        },\n\n        onCloseModal() {\n            this.showCreateRuleModal = false;\n            this.selectedRuleId = null;\n        },\n\n        onSaveRuleSuccess(rule) {\n            this.onRuleChange(rule);\n        },\n\n        onRuleChange(rule) {\n            if (!rule) {\n                return;\n            }\n\n            State.commit('swFlowState/updateSequence', {\n                id: this.sequence.id,\n                rule,\n                ruleId: rule.id,\n            });\n\n            if (this.selectedRuleId) {\n                // Update other conditions which use the same rule\n                this.sequences.forEach(sequence => {\n                    if (sequence.ruleId !== this.selectedRuleId\n                        || sequence.id === this.sequence.id) {\n                        return;\n                    }\n\n                    State.commit('swFlowState/updateSequence', {\n                        id: sequence.id,\n                        rule,\n                        ruleId: rule.id,\n                    });\n                });\n\n                this.selectedRuleId = null;\n            }\n\n            this.removeFieldError();\n            this.showRuleSelection = false;\n        },\n\n        deleteRule() {\n            State.commit('swFlowState/updateSequence', {\n                id: this.sequence.id,\n                rule: null,\n                ruleId: '',\n            });\n        },\n\n        addIfCondition(trueCase) {\n            this.createSequence({\n                trueCase,\n                ruleId: '',\n            });\n        },\n\n        addThenAction(trueCase) {\n            this.createSequence({\n                trueCase,\n                actionName: '',\n            });\n        },\n\n        showArrowIcon(trueCase) {\n            const { trueBlock, falseBlock } = this.sequence;\n\n            if (trueCase) {\n                if (!trueBlock) {\n                    return false;\n                }\n\n                const sequence = Object.values(trueBlock)[0];\n                return sequence.actionName !== null || sequence.ruleId !== null;\n            }\n\n            if (!falseBlock) {\n                return false;\n            }\n\n            const sequence = Object.values(falseBlock)[0];\n            return sequence.actionName !== null || sequence.ruleId !== null;\n        },\n\n        disabledAddSequence(trueCase) {\n            const { trueBlock, falseBlock, parentId } = this.sequence;\n\n            if (trueCase) {\n                if (!trueBlock) {\n                    return false;\n                }\n\n                return !parentId && !this.showArrowIcon(trueCase);\n            }\n\n            if (!falseBlock) {\n                return false;\n            }\n\n            return !parentId && !this.showArrowIcon(trueCase);\n        },\n\n        arrowClasses(trueCase) {\n            return {\n                'is--disabled': this.disabledAddSequence(trueCase),\n                'has--true-action': !this.sequence.trueBlock,\n                'has--false-action': !this.sequence.falseBlock,\n            };\n        },\n\n        removeCondition() {\n            const actionIds = [this.sequence.id];\n\n            const getRemoveIds = (sequence, sequenceIds = []) => {\n                if (sequence.trueBlock) {\n                    Object.values(sequence.trueBlock).forEach(trueSequence => {\n                        if (trueSequence._isNew) {\n                            sequenceIds.push(trueSequence.id);\n                        }\n\n                        getRemoveIds(trueSequence, sequenceIds);\n                    });\n                }\n\n                if (sequence.falseBlock) {\n                    Object.values(sequence.falseBlock).forEach(falseSequence => {\n                        if (falseSequence._isNew) {\n                            sequenceIds.push(falseSequence.id);\n                        }\n\n                        getRemoveIds(falseSequence, sequenceIds);\n                    });\n                }\n            };\n\n            getRemoveIds(this.sequence, actionIds);\n\n            State.commit('swFlowState/removeSequences', actionIds);\n        },\n\n        createSequence(params) {\n            let sequence = this.sequenceRepository.create();\n            const newSequence = {\n                ...sequence,\n                parentId: this.sequence.id,\n                displayGroup: this.sequence.displayGroup,\n                actionName: params.actionName !== undefined ? params.actionName : null,\n                ruleId: params.ruleId !== undefined ? params.ruleId : null,\n                config: {},\n                position: 1,\n                trueCase: params.trueCase,\n                id: utils.createId(),\n            };\n\n            sequence = Object.assign(sequence, newSequence);\n            State.commit('swFlowState/addSequence', sequence);\n        },\n\n        setFieldError() {\n            if (!this.invalidSequences?.includes(this.sequence.id)) {\n                this.fieldError = null;\n                return;\n            }\n\n            this.fieldError = new ShopwareError({\n                code: 'c1051bb4-d103-4f74-8988-acbcafc7fdc3',\n            });\n        },\n\n        removeFieldError() {\n            if (!this.fieldError) {\n                return;\n            }\n\n            this.fieldError = null;\n            const invalidSequences = this.invalidSequences?.filter(id => this.sequence.id !== id);\n            State.commit('swFlowState/setInvalidSequences', invalidSequences);\n        },\n\n        toggleAddButton() {\n            if (this.sequence.ruleId) {\n                this.showRuleSelection = false;\n                return;\n            }\n\n            this.showAddButton = !this.showAddButton;\n        },\n\n        onEditRule() {\n            this.selectedRuleId = this.sequence?.rule?.id;\n            this.showCreateRuleModal = true;\n        },\n\n        isRuleDisabled(rule) {\n            return this.restrictedRules.includes(rule.id);\n        },\n    },\n};\n","export default \"\\n{% block sw_flow_sequence_condition %}\\n<div class=\\\"sw-flow-sequence-condition\\\">\\n    \\n    {% block sw_flow_sequence_condition_true_arrow %}\\n    <div\\n        v-if=\\\"!showHelpElement\\\"\\n        class=\\\"sw-flow-sequence-condition__true-arrow\\\"\\n        :class=\\\"arrowClasses(true)\\\"\\n    >\\n        \\n        {% block sw_flow_sequence_condition_true_arrow_line %}\\n        <div class=\\\"sw-flow-sequence-condition__true-line\\\"></div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_sequence_condition_true_arrow_oval %}\\n        <div class=\\\"sw-flow-sequence-condition__oval\\\"></div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_sequence_condition_true_arrow_icon %}\\n        <sw-icon\\n            v-if=\\\"showArrowIcon(true)\\\"\\n            name=\\\"regular-chevron-right-s\\\"\\n            small\\n        />\\n\\n        <sw-context-button\\n            v-else\\n            class=\\\"arrow-action sw-flow-sequence-condition__true-action\\\"\\n            icon=\\\"regular-plus-xs\\\"\\n            :disabled=\\\"disabledAddSequence(true)\\\"\\n        >\\n            \\n            {% block sw_flow_sequence_condition_true_arrow_add_condition %}\\n            <sw-context-menu-item\\n                class=\\\"sw-flow-sequence-condition__add-true-condition\\\"\\n                :disabled=\\\"disabled\\\"\\n                @click=\\\"addIfCondition(true)\\\"\\n            >\\n                {{ $tc('sw-flow.detail.sequence.selectorIfCondition') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n\\n            \\n            {% block sw_flow_sequence_condition_true_arrow_add_action %}\\n            <sw-context-menu-item\\n                class=\\\"sw-flow-sequence-condition__add-true-action\\\"\\n                :disabled=\\\"disabled\\\"\\n                @click=\\\"addThenAction(true)\\\"\\n            >\\n                {{ $tc('sw-flow.detail.sequence.selectorThenAction') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n\\n            \\n            {% block sw_flow_sequence_condition_true_arrow_extension_options %}{% endblock %}\\n        </sw-context-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_sequence_condition_true_arrow_label %}\\n        <sw-label\\n            appearance=\\\"pill\\\"\\n            size=\\\"medium\\\"\\n            :caps=\\\"true\\\"\\n            :dismissable=\\\"false\\\"\\n            class=\\\"sw-flow-sequence-condition__true-label\\\"\\n        >\\n            {{ $tc('sw-flow.detail.sequence.labelTrue') }}\\n        </sw-label>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_sequence_condition_false_arrow %}\\n    <div\\n        v-if=\\\"!showHelpElement\\\"\\n        class=\\\"sw-flow-sequence-condition__false-arrow\\\"\\n        :class=\\\"arrowClasses(false)\\\"\\n    >\\n        \\n        {% block sw_flow_sequence_condition_false_arrow_line %}\\n        <div class=\\\"sw-flow-sequence-condition__false-line\\\"></div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_sequence_condition_false_arrow_oval %}\\n        <div class=\\\"sw-flow-sequence-condition__oval\\\"></div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_sequence_condition_false_arrow_label %}\\n        <sw-label\\n            appearance=\\\"pill\\\"\\n            size=\\\"medium\\\"\\n            :caps=\\\"true\\\"\\n            :dismissable=\\\"false\\\"\\n            class=\\\"sw-flow-sequence-condition__false-label\\\"\\n        >\\n            {{ $tc('sw-flow.detail.sequence.labelFalse') }}\\n        </sw-label>\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_sequence_condition_false_arrow_icon %}\\n        <sw-icon\\n            v-if=\\\"showArrowIcon(false)\\\"\\n            name=\\\"regular-chevron-down-s\\\"\\n            small\\n        />\\n\\n        <sw-context-button\\n            v-else\\n            class=\\\"arrow-action sw-flow-sequence-condition__false-action\\\"\\n            icon=\\\"regular-plus-xs\\\"\\n            :disabled=\\\"disabledAddSequence(false)\\\"\\n        >\\n            \\n            {% block sw_flow_sequence_condition_false_arrow_add_condition %}\\n            <sw-context-menu-item\\n                class=\\\"sw-flow-sequence-condition__add-false-condition\\\"\\n                :disabled=\\\"disabled\\\"\\n                @click=\\\"addIfCondition(false)\\\"\\n            >\\n                {{ $tc('sw-flow.detail.sequence.selectorIfCondition') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n\\n            \\n            {% block sw_flow_sequence_condition_false_arrow_add_action %}\\n            <sw-context-menu-item\\n                class=\\\"sw-flow-sequence-condition__add-false-action\\\"\\n                :disabled=\\\"disabled\\\"\\n                @click=\\\"addThenAction(false)\\\"\\n            >\\n                {{ $tc('sw-flow.detail.sequence.selectorThenAction') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n\\n            \\n            {% block sw_flow_sequence_condition_false_arrow_extension_options %}{% endblock %}\\n        </sw-context-button>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_sequence_condition_container %}\\n    <div class=\\\"sw-flow-sequence-condition__container\\\">\\n        \\n        {% block sw_flow_sequence_condition_card %}\\n        <div class=\\\"sw-flow-sequence-condition__card\\\">\\n            \\n            {% block sw_flow_sequence_condition_header %}\\n            <div class=\\\"sw-flow-sequence-condition__header\\\">\\n                \\n                {% block sw_flow_sequence_condition_title %}\\n                <div class=\\\"sw-flow-sequence-condition__title-description\\\">\\n                    <h3 class=\\\"sw-flow-sequence-condition__title\\\">\\n                        {{ $tc('sw-flow.detail.sequence.conditionTitle') }}\\n                    </h3>\\n\\n                    <p class=\\\"sw-flow-sequence-condition__description\\\">\\n                        {{ $tc('sw-flow.detail.sequence.conditionDescription') }}\\n                    </p>\\n                </div>\\n                {% endblock %}\\n\\n                \\n                {% block sw_flow_sequence_condition_context_button %}\\n                <sw-context-button\\n                    class=\\\"sw-flow-sequence-condition__context-button\\\"\\n                    :disabled=\\\"disabled\\\"\\n                >\\n\\n                    \\n                    {% block sw_flow_sequence_condition_context_button_delete %}\\n                    <sw-context-menu-item\\n                        class=\\\"sw-flow-sequence-condition__delete-condition\\\"\\n                        variant=\\\"danger\\\"\\n                        @click=\\\"removeCondition\\\"\\n                    >\\n                        {{ $tc('sw-flow.detail.sequence.contextButton.deleteCondition') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n                </sw-context-button>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n\\n            \\n            {% block sw_flow_sequence_condition_content %}\\n            <div class=\\\"sw-flow-sequence-condition__content\\\">\\n\\n                \\n                {% block sw_flow_sequence_condition_rule %}\\n                <div class=\\\"sw-flow-sequence-condition__rule\\\">\\n                    \\n                    {% block sw_flow_sequence_condition_rule_empty %}\\n                    <div\\n                        v-if=\\\"!sequence.rule\\\"\\n                        class=\\\"sw-flow-sequence-condition__rule-empty\\\"\\n                    >\\n                        <sw-icon\\n                            size=\\\"12px\\\"\\n                            name=\\\"regular-rule-s\\\"\\n                        />\\n                        <span class=\\\"sw-flow-sequence-condition__no-rule\\\">\\n                            {{ $tc('sw-flow.detail.sequence.noRule') }}\\n                        </span>\\n                    </div>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_flow_sequence_condition_rule_info %}\\n                    <div\\n                        v-else\\n                        class=\\\"sw-flow-sequence-condition__rule-info\\\"\\n                    >\\n                        \\n                        {% block sw_flow_sequence_condition_rule_header %}\\n                        <div class=\\\"sw-flow-sequence-condition__rule-header\\\">\\n                            <div class=\\\"sw-flow-sequence-condition__rule-icon\\\">\\n                                <sw-icon\\n                                    size=\\\"12px\\\"\\n                                    name=\\\"regular-rule-s\\\"\\n                                />\\n                            </div>\\n\\n                            \\n                            {% block sw_flow_sequence_condition_rule_name %}\\n                            <div class=\\\"sw-flow-sequence-condition__rule-name\\\">\\n                                <h3>{{ sequence.rule.name }}</h3>\\n                            </div>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_flow_sequence_condition_rule_context_button %}\\n                            <sw-context-button\\n                                class=\\\"sw-flow-sequence-condition__rule-context-button\\\"\\n                                :disabled=\\\"disabled\\\"\\n                            >\\n\\n                                \\n                                {% block sw_flow_sequence_condition_rule_context_button_edit %}\\n                                <sw-context-menu-item\\n                                    class=\\\"sw-flow-sequence-condition__rule-edit\\\"\\n                                    @click=\\\"onEditRule\\\"\\n                                >\\n                                    {{ $tc('sw-flow.rule.contextButton.editRule') }}\\n                                </sw-context-menu-item>\\n                                {% endblock %}\\n\\n                                \\n                                {% block sw_flow_sequence_condition_rule_context_button_change %}\\n                                <sw-context-menu-item\\n                                    class=\\\"sw-flow-sequence-condition__rule-change\\\"\\n                                    @click=\\\"showRuleSelection = true\\\"\\n                                >\\n                                    {{ $tc('sw-flow.rule.contextButton.changeRule') }}\\n                                </sw-context-menu-item>\\n                                {% endblock %}\\n\\n                                \\n                                {% block sw_flow_sequence_condition_rule_context_button_delete %}\\n                                <sw-context-menu-item\\n                                    class=\\\"sw-flow-sequence-condition__rule-delete\\\"\\n                                    variant=\\\"danger\\\"\\n                                    @click=\\\"deleteRule\\\"\\n                                >\\n                                    {{ $tc('sw-flow.rule.contextButton.deleteRule') }}\\n                                </sw-context-menu-item>\\n                                {% endblock %}\\n                            </sw-context-button>\\n                            {% endblock %}\\n                        </div>\\n\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_flow_sequence_condition_rule_description %}\\n                        <div\\n                            class=\\\"sw-flow-sequence-condition__rule-description\\\"\\n                            v-html=\\\"ruleDescription\\\"\\n                        >\\n                        </div>\\n                        {% endblock %}\\n                    </div>\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n\\n                \\n                {% block sw_flow_sequence_condition_content_custom %}\\n                {% endblock %}\\n\\n                \\n                {% block sw_flow_sequence_condition_rule_selection %}\\n                <div\\n                    v-if=\\\"showRuleSelection || !sequence.ruleId\\\"\\n                    class=\\\"sw-flow-sequence-condition__select\\\"\\n                >\\n                    <sw-entity-single-select\\n                        class=\\\"sw-flow-sequence-condition__selection-rule\\\"\\n                        size=\\\"small\\\"\\n                        value=\\\"\\\"\\n                        entity=\\\"rule\\\"\\n                        :criteria=\\\"ruleCriteria\\\"\\n                        :placeholder=\\\"$tc('sw-flow.rule.placeholderSelectRule')\\\"\\n                        :disabled=\\\"disabled\\\"\\n                        :error=\\\"fieldError\\\"\\n                        advanced-selection-component=\\\"sw-advanced-selection-rule\\\"\\n                        :advanced-selection-parameters=\\\"advanceSelectionParameters\\\"\\n                        :selection-disabling-method=\\\"isRuleDisabled\\\"\\n                        :disabled-selection-tooltip=\\\"{\\n                            message: $t('sw-restricted-rules.restrictedAssignment.general', {\\n                                relation: $t('sw-restricted-rules.restrictedAssignment.flowSequences'),\\n                            }), }\\\"\\n                        {% if VUE3 %}\\n                        @update:value=\\\"(id, rule) => onRuleChange(rule)\\\"\\n                        {% else %}\\n                        @change=\\\"(id, rule) => onRuleChange(rule)\\\"\\n                        {% endif %}\\n                    >\\n                        <template #before-item-list>\\n                            \\n                            {% block sw_flow_sequence_condition_select_selection_before_list %}\\n                            <ul class=\\\"sw-select-result__item-list\\\">\\n                                <li\\n                                    class=\\\"sw-select-result sw-select-result__create-new-rule\\\"\\n                                    role=\\\"button\\\"\\n                                    tabindex=\\\"0\\\"\\n                                    @click=\\\"onCreateNewRule\\\"\\n                                    @keydown.enter=\\\"onCreateNewRule\\\"\\n                                >\\n                                    {{ $tc('sw-flow.rule.createNewRule') }}\\n                                </li>\\n                            </ul>\\n                            {% endblock %}\\n                        </template>\\n\\n                        <template #result-label-property=\\\"{ item, labelProperty, getKey }\\\">\\n                            {{ getKey(item, labelProperty) }}\\n                        </template>\\n                    </sw-entity-single-select>\\n                </div>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_sequence_condition_help_text %}\\n        <div\\n            v-if=\\\"showHelpElement\\\"\\n            class=\\\"sw-flow-sequence-condition__explains\\\"\\n        >\\n            \\n            {% block sw_flow_sequence_selector_title %}\\n            <h4>{{ $tc('sw-flow.detail.sequence.conditionExplainsTitle') }}</h4>\\n            {% endblock %}\\n\\n            \\n            {% block sw_flow_sequence_selector_help_text %}\\n            <p v-html=\\\"$tc('sw-flow.detail.sequence.conditionExplainsDescription')\\\"></p>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_sequence_condition_rule_modal %}\\n    <sw-flow-rule-modal\\n        v-if=\\\"showCreateRuleModal\\\"\\n        :rule-id=\\\"selectedRuleId\\\"\\n        @process-finish=\\\"onSaveRuleSuccess\\\"\\n        @modal-close=\\\"onCloseModal\\\"\\n    />\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-flow-sequence-condition.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"c25fd6dc\", content, true, {});"],"sourceRoot":""}