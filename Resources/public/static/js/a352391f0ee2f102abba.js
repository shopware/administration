(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[70682],{86626:function(){},170682:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return s}}),n(58394);let{Application:i,Mixin:o,Context:l}=Shopware,{warn:a}=Shopware.Utils.debug;var s={template:'\n{% block sw_media_folder_item %}\n<sw-media-base-item\n    class="sw-media-folder-item"\n    v-bind="$attrs"\n    :truncate-right="true"\n    :allow-multi-select="!isParent"\n    v-on="listeners"\n>\n\n    \n    {% block sw_media_folder_item_preview %}\n    <template #preview="{ item }">\n        \n        {% block sw_media_folder_parent_icon%}\n        <img\n            v-if="isParent"\n            :src="assetFilter(\'/administration/static/img/media/folder--back.svg\')"\n            class="sw-media-folder-item__folder-thumbnails"\n            alt="Folder back"\n        >\n        {% endblock %}\n\n        \n        {% block sw_media_folder_default_icon%}\n        <span\n            v-else-if="!!item.defaultFolderId"\n        >\n            <img\n                :src="assetFilter(\'/administration/static/img/media/\' + iconName + \'.svg\')"\n                class="sw-media-folder-item__folder-thumbnails"\n                :alt="iconName"\n            >\n            <sw-icon\n                v-if="iconConfig.name"\n                class="sw-media-folder-item__folder-thumbnails is--inner"\n                v-bind="iconConfig"\n            />\n        </span>\n        {% endblock %}\n\n        \n        {% block sw_media_folder_folder_icon%}\n        <img\n            v-else\n            :src="assetFilter(\'/administration/static/img/media/folder-thumbnail--large.svg\')"\n            class="sw-media-folder-item__folder-thumbnails"\n            alt="Folder thumbnail"\n        >\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_media_folder_name %}\n    <template #name="{ item, isInlineEdit, startInlineEdit, endInlineEdit }">\n        \n        {% block sw_media_base_item_name %}\n        <sw-text-field\n            v-if="!isParent && (isInlineEdit || item.isNew())"\n            v-autofocus\n            class="sw-media-base-item__name-field"\n            :value="item.name"\n            name="media-item-name"\n            @blur="onBlur($event, item, endInlineEdit)"\n            @click.stop\n            @keydown.enter.stop\n            @keyup.esc="endInlineEdit"\n        />\n        <div\n            v-else\n            ref="itemName"\n            class="sw-media-base-item__name"\n            :title="item.name"\n        >\n            {{ item.name }}\n        </div>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_media_folder_meta_data %}\n    <template #metadata="{ item }">\n        <div class="sw-media-folder-item__metadata">\n            {{ dateFilter(item.createdAt) }}\n        </div>\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_media_folder_item_context_menu %}\n    <template #context-menu="{ item, startInlineEdit, allowEdit, allowDelete }">\n        \n        {% block sw_media_folder_item_context_item_show_media %}\n        <sw-context-menu-item\n            class="sw-media-context-item__show-media-action"\n            @click="navigateToFolder(item.id)"\n        >\n            {{ $tc(\'global.sw-media-folder-item.labelContextMenuShowMedia\') }}\n        </sw-context-menu-item>\n        {% endblock %}\n\n        <slot>\n            \n            {% block sw_media_folder_item_additional_context_menu_slot %}{% endblock %}\n        </slot>\n\n        \n        {% block sw_media_folder_item_context_group_quick_actions %}\n        <div class="sw-context-menu__group">\n            \n            {% block sw_media_folder_item_context_item_show_settings %}\n            <sw-context-menu-item\n                class="sw-media-context-item__open-settings-action"\n                @click="openSettings"\n            >\n                {{ $tc(\'global.sw-media-folder-item.labelContextMenuShowSettings\') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            \n            {% block sw_media_folder_item_context_item_move %}\n            <sw-context-menu-item\n                :disabled="!allowEdit"\n                class="sw-media-context-item__move-folder-action"\n                @click="openMoveModal"\n            >\n                {{ $tc(\'global.sw-media-folder-item.labelContextMenuMove\') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            \n            {% block sw_media_folder_item_context_item_dissolve %}\n            <sw-context-menu-item\n                :disabled="!allowEdit"\n                class="sw-media-context-item__dissolve-folder-action"\n                @click="openDissolveModal"\n            >\n                {{ $tc(\'global.sw-media-folder-item.labelContextMenuDissolve\') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            \n            {% block sw_media_folder_item_context_item_rename_item %}\n            <sw-context-menu-item\n                :disabled="!allowEdit"\n                class="sw-media-context-item__rename-folder-action"\n                @click="startInlineEdit"\n            >\n                {{ $tc(\'global.sw-media-folder-item.labelContextMenuRename\') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            \n            {% block sw_media_folder_item_context_item_delete %}\n            <sw-context-menu-item\n                :disabled="!allowDelete"\n                class="sw-media-context-item__delete-folder-action"\n                variant="danger"\n                @click="openDeleteModal"\n            >\n                {{ $tc(\'global.default.delete\') }}\n            </sw-context-menu-item>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_media_folder_modal_windows %}\n    <template #modal-windows="{ item, allowEdit, allowDelete }">\n        \n        {% block sw_media_folder_settings_modal %}\n        <sw-media-modal-folder-settings\n            v-if="showSettings"\n            :disabled="!allowEdit"\n            :media-folder-id="item.id"\n            @media-settings-modal-save="refreshIconConfig"\n            @media-settings-modal-close="closeSettings"\n        />\n        {% endblock %}\n\n        \n        {% block sw_media_folder_dissolve_modal %}\n        <sw-media-modal-folder-dissolve\n            v-if="showDissolveModal"\n            :items-to-dissolve="[item]"\n            @media-folder-dissolve-modal-dissolve="onFolderDissolved"\n            @media-folder-dissolve-modal-close="closeDissolveModal"\n        />\n        {% endblock %}\n\n        \n        {% block sw_media_folder_move_modal %}\n        <sw-media-modal-move\n            v-if="showMoveModal"\n            :items-to-move="[item]"\n            @media-move-modal-close="closeMoveModal"\n            @media-move-modal-items-move="onFolderMoved"\n        />\n        {% endblock %}\n\n        \n        {% block sw_media_folder_delete_modal %}\n        <sw-media-modal-delete\n            v-if="showDeleteModal"\n            :items-to-delete="[item]"\n            @media-delete-modal-items-delete="emitItemDeleted"\n            @media-delete-modal-close="closeDeleteModal"\n        />\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-media-base-item>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inheritAttrs:!1,inject:["repositoryFactory"],emits:["media-folder-remove","media-folder-changed","media-folder-delete","media-folder-dissolve","media-folder-move"],mixins:[o.getByName("notification")],props:{isParent:{type:Boolean,required:!1,default:!1}},data(){return{showSettings:!1,showDissolveModal:!1,showMoveModal:!1,showDeleteModal:!1,lastDefaultFolderId:null,iconConfig:{name:"",color:"inherit"}}},computed:{mediaFolderRepository(){return this.repositoryFactory.create("media_folder")},mediaDefaultFolderRepository(){return this.repositoryFactory.create("media_default_folder")},moduleFactory(){return i.getContainer("factory").module},mediaFolder(){return this.$attrs.item},iconName(){switch(this.iconConfig.name){case"regular-box":case"regular-products":return"multicolor-folder-thumbnail--green";case"regular-database":case"regular-cog":return"multicolor-folder-thumbnail--grey";case"regular-content":return"multicolor-folder-thumbnail--pink";default:return"multicolor-folder-thumbnail"}},assetFilter(){return Shopware.Filter.getByName("asset")},dateFilter(){return Shopware.Filter.getByName("date")},listeners(){return this.isCompatEnabled("INSTANCE_LISTENERS")?this.$listeners:{}}},created(){this.createdComponent()},methods:{createdComponent(){this.getIconConfigFromFolder()},async getIconConfigFromFolder(){let{mediaFolder:e}=this;if(e.defaultFolderId===this.lastDefaultFolderId)return;this.lastDefaultFolderId=e.defaultFolderId;let t=await this.mediaDefaultFolderRepository.get(e.defaultFolderId,l.api);if(!t)return;let n=this.moduleFactory.getModuleByEntityName(t.entity);if(!n){a("Missing module for default folder entity",t.entity);return}this.iconConfig.name=n.manifest.icon??"",this.iconConfig.color=n.manifest.color??"#000000"},async onChangeName(e,t,n){if(!e||!e.trim()){this.rejectRenaming(t,"empty-name",n);return}if(e.includes("<")){this.rejectRenaming(t,"invalid-name",n);return}t.name=e;try{await this.mediaFolderRepository.save(t,l.api),t._isNew=!1}catch(e){this.rejectRenaming(t,e,n)}finally{n()}},onBlur(e,t,n){let i=e.target.value;if(i!==t.name){this.onChangeName(i,t,n);return}n()},rejectRenaming(e,t,n){if(t){let e=this.$tc("global.default.error"),n=this.$tc("global.sw-media-folder-item.notification.renamingError.message");"empty-name"===t?(e=this.$tc("global.default.error"),n=this.$tc("global.sw-media-folder-item.notification.errorBlankItemName.message")):"invalid-name"===t&&(e=this.$tc("global.default.error"),n=this.$tc("global.sw-media-folder-item.notification.errorInvalidItemName.message")),this.createNotificationError({title:e,message:n})}!0===e.isNew()&&this.$emit("media-folder-remove",[e.id]),n()},navigateToFolder(e){this.$router.push({name:"sw.media.index",params:{folderId:e}})},openSettings(){this.showSettings=!0},closeSettings(e){this.showSettings=!1,"boolean"==typeof e&&!0===e&&this.$nextTick(()=>{this.$emit("media-folder-changed")})},openDissolveModal(){this.showDissolveModal=!0},closeDissolveModal(){this.showDissolveModal=!1},openDeleteModal(){this.showDeleteModal=!0},closeDeleteModal(){this.showDeleteModal=!1},emitItemDeleted(e){this.closeDeleteModal(),this.$nextTick(()=>{this.$emit("media-folder-delete",e.folderIds)})},onFolderDissolved(e){this.closeDissolveModal(),this.$nextTick(()=>{this.$emit("media-folder-dissolve",e)})},onFolderMoved(e){this.closeMoveModal(),this.$nextTick(()=>{this.$emit("media-folder-move",e)})},openMoveModal(){this.showMoveModal=!0},closeMoveModal(){this.showMoveModal=!1},async refreshIconConfig(){await this.getIconConfigFromFolder(),this.closeSettings(!0)}}}},58394:function(e,t,n){var i=n(86626);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[e.id,i,""]]),i.locals&&(e.exports=i.locals),n(745346).Z("4be90cab",i,!0,{})}}]);