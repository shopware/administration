{"version":3,"sources":["webpack:///./src/module/sw-settings-rule/component/sw-settings-rule-add-assignment-listing/sw-settings-rule-add-assignment-listing.html.twig","webpack:///./src/module/sw-settings-rule/component/sw-settings-rule-add-assignment-listing/index.js","webpack:///./src/module/sw-settings-rule/component/sw-settings-rule-add-assignment-listing/sw-settings-rule-add-assignment-listing.scss"],"names":["Context","Shopware","Criteria","Data","cloneDeep","Utils","object","template","props","ruleId","type","String","required","entityContext","Object","data","loading","repository","items","preselectedIds","limit","page","total","computed","criteria","this","addContext","association","addAssociation","getAssociation","addFilter","equals","entityName","shippingCostTaxOptions","label","$tc","value","created","createdComponent","methods","doSearch","onSelectItem","selection","item","selected","$emit","isNotAssigned","length","column","paginate","_ref","_ref$page","_ref$limit","term","_this","_this$entityContext$a","api","contains","searchColumn","search","then","result","finally","shippingTaxTypeLabel","taxName","tax","find","i","content","__esModule","default","module","locals","exports","add"],"mappings":"sIAAe,ICGPA,EAAYC,SAAZD,QACAE,EAAaD,SAASE,KAAtBD,SACAE,EAAcH,SAASI,MAAMC,OAA7BF,UAMO,WACXG,SDZW,ouGCcXC,MAAO,CACHC,OAAQ,CACJC,KAAMC,OACNC,UAAU,GAGdC,cAAe,CACXH,KAAMI,OACNF,UAAU,IAIlBG,KAAI,WACA,MAAO,CACHC,SAAS,EACTC,WAAY,KACZC,MAAO,GACPC,eAAgB,GAChBC,MAAO,GACPC,KAAM,EACNC,MAAO,IAIfC,SAAU,CACNC,SAAQ,WACJ,IAAMA,EAAW,IAAItB,EAASuB,KAAKJ,KAAMI,KAAKL,OAY9C,OAVIK,KAAKZ,cAAca,WAAWC,cAC9BH,EAASI,eAAeH,KAAKZ,cAAca,WAAWC,aACtDH,EAASK,eAAeJ,KAAKZ,cAAca,WAAWC,aACjDG,UAAU5B,EAAS6B,OAAO,KAAMN,KAAKhB,UAGR,YAAlCgB,KAAKZ,cAAcmB,YACnBR,EAASI,eAAe,iBAGrBJ,GAGXS,uBAAsB,WAClB,MAAO,CAAC,CACJC,MAAOT,KAAKU,IAAI,iDAChBC,MAAO,QACR,CACCF,MAAOT,KAAKU,IAAI,oDAChBC,MAAO,WACR,CACCF,MAAOT,KAAKU,IAAI,kDAChBC,MAAO,YAKnBC,QAAO,WACHZ,KAAKa,oBAGTC,QAAS,CACLD,iBAAgB,WACZb,KAAKR,WAAaQ,KAAKZ,cAAcI,WAErCQ,KAAKe,YAGTC,aAAY,SAACC,EAAWC,EAAMC,GAC1BnB,KAAKoB,MAAM,cAAeH,EAAWC,EAAMC,IAG/CE,cAAa,SAACH,GACV,OAAIlB,KAAKZ,cAAca,WAAWC,YACvBgB,EAAKlB,KAAKZ,cAAca,WAAWC,aAAaoB,QAAU,EAG9DJ,EAAKlB,KAAKZ,cAAca,WAAWsB,UAAYvB,KAAKhB,QAG/DwC,SAAQ,SAAAC,GAA4B,IAADC,EAAAD,EAAxB7B,YAAI,IAAA8B,EAAG,EAACA,EAAAC,EAAAF,EAAE9B,aAAK,IAAAgC,EAAG,GAAEA,EAI3B,OAHA3B,KAAKJ,KAAOA,EACZI,KAAKL,MAAQA,EAENK,KAAKe,YAGhBA,SAAQ,SAACa,GAAO,IAADC,EAAA,KACX7B,KAAKT,SAAU,EACf,IAGUuC,EAHJC,EAAM/B,KAAKZ,cAAc2C,IAAM/B,KAAKZ,cAAc2C,MAAQxD,EAAQwD,IAClEhC,EAAWpB,EAAUqB,KAAKD,UAE5B6B,GACA7B,EAASM,UAAU5B,EAASuD,SAAmD,QAA3CF,EAAC9B,KAAKZ,cAAca,WAAWgC,oBAAY,IAAAH,IAAI,OAAQF,IAG/F,OAAO5B,KAAKR,WAAW0C,OAAOnC,EAAUgC,GAAKI,MAAK,SAACC,GAC/CP,EAAKpC,MAAQ2C,EACbP,EAAKhC,MAAQuC,EAAOvC,SACrBwC,SAAQ,WACPR,EAAKtC,SAAU,MAIvB+C,qBAAoB,SAACC,GACjB,IAAKA,EACD,MAAO,GAGX,IAAMC,EAAMxC,KAAKQ,uBAAuBiC,MAAK,SAACC,GAAC,OAAKH,IAAYG,EAAE/B,UAAU,GAE5E,OAAO6B,aAAG,EAAHA,EAAK/B,U,4CCxHxB,IAAIkC,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOJ,EAAIC,EAAS,MAC7DA,EAAQI,SAAQD,EAAOE,QAAUL,EAAQI,SAG/BE,EADH,EAAQ,QAAwEJ,SACzE,WAAYF,GAAS,EAAM","file":"static/js/e3a031a9c552c9543a39.js","sourcesContent":["export default \"\\n{% block sw_settings_rule_add_assignment_listing %}\\n<sw-card\\n    class=\\\"sw-settings-rule-add-assignment-listing__card\\\"\\n    position-identifier=\\\"sw-settings-rule-add-assignment-listing\\\"\\n>\\n    <template #toolbar>\\n        \\n        {% block sw_settings_rule_add_assignment_listing_toolbar %}\\n        <sw-card-filter @sw-card-filter-term-change=\\\"doSearch\\\" />\\n        {% endblock %}\\n    </template>\\n\\n    \\n    {% block sw_settings_rule_add_assignment_listing_grid %}\\n    <sw-data-grid\\n        :is-loading=\\\"loading\\\"\\n        :data-source=\\\"items\\\"\\n        :columns=\\\"entityContext.addContext.gridColumns\\\"\\n        :is-record-selectable=\\\"isNotAssigned\\\"\\n        :show-actions=\\\"false\\\"\\n        @select-item=\\\"onSelectItem\\\"\\n    >\\n        <template\\n            #selection-content=\\\"{\\n                item,\\n                isSelected,\\n                isRecordSelectable,\\n                selectItem,\\n                itemIdentifierProperty,\\n            }\\\"\\n        >\\n            \\n            {% block sw_settings_rule_add_assignment_listing_checkbox %}\\n            <div class=\\\"sw-data-grid__cell-content\\\">\\n                <sw-checkbox-field\\n                    :disabled=\\\"!isRecordSelectable(item)\\\"\\n                    :value=\\\"isSelected(item[itemIdentifierProperty]) || !isNotAssigned(item)\\\"\\n                    {% if VUE3 %}\\n                    @update:value=\\\"selectItem($event, item)\\\"\\n                    {% else %}\\n                    @change=\\\"selectItem($event, item)\\\"\\n                    {% endif %}\\n                />\\n            </div>\\n            {% endblock %}\\n        </template>\\n\\n        <template #column-name=\\\"{ item }\\\">\\n            \\n            {% block sw_settings_rule_add_assignment_listing_name %}\\n            <sw-product-variant-info\\n                v-if=\\\"item.variation\\\"\\n                :variations=\\\"item.variation\\\"\\n            >\\n                {{ item.translated.name }}\\n            </sw-product-variant-info>\\n            <span v-else>\\n                {{ item.translated.name }}\\n            </span>\\n            {% endblock %}\\n        </template>\\n\\n        <template #column-active=\\\"{ item }\\\">\\n            \\n            {% block sw_settings_rule_add_assignment_listing_active_flag %}\\n            <sw-icon\\n                v-if=\\\"item.active\\\"\\n                name=\\\"regular-checkmark-xs\\\"\\n                small\\n                class=\\\"is--active\\\"\\n            />\\n            <sw-icon\\n                v-else\\n                name=\\\"regular-times-s\\\"\\n                small\\n                class=\\\"is--inactive\\\"\\n            />\\n            {% endblock %}\\n        </template>\\n\\n        <template #column-taxType=\\\"{ item }\\\">\\n            \\n            {% block sw_settings_rule_add_assignment_listing_tax_type %}\\n            {{ shippingTaxTypeLabel(item.taxType) }}\\n            {% endblock %}\\n        </template>\\n\\n        <template #pagination>\\n            \\n            {% block sw_settings_rule_add_assignment_listing_pagination %}\\n            <sw-pagination\\n                :limit=\\\"limit\\\"\\n                :page=\\\"page\\\"\\n                :total=\\\"total\\\"\\n                @page-change=\\\"paginate\\\"\\n            />\\n            {% endblock %}\\n        </template>\\n    </sw-data-grid>\\n    {% endblock %}\\n</sw-card>\\n{% endblock %}\\n\";","import template from './sw-settings-rule-add-assignment-listing.html.twig';\nimport './sw-settings-rule-add-assignment-listing.scss';\n\nconst { Context } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { cloneDeep } = Shopware.Utils.object;\n\n/**\n * @private\n * @package services-settings\n */\nexport default {\n    template,\n\n    props: {\n        ruleId: {\n            type: String,\n            required: true,\n        },\n\n        entityContext: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            loading: true,\n            repository: null,\n            items: [],\n            preselectedIds: [],\n            limit: 10,\n            page: 1,\n            total: 0,\n        };\n    },\n\n    computed: {\n        criteria() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            if (this.entityContext.addContext.association) {\n                criteria.addAssociation(this.entityContext.addContext.association);\n                criteria.getAssociation(this.entityContext.addContext.association)\n                    .addFilter(Criteria.equals('id', this.ruleId));\n            }\n\n            if (this.entityContext.entityName === 'product') {\n                criteria.addAssociation('options.group');\n            }\n\n            return criteria;\n        },\n\n        shippingCostTaxOptions() {\n            return [{\n                label: this.$tc('sw-settings-shipping.shippingCostOptions.auto'),\n                value: 'auto',\n            }, {\n                label: this.$tc('sw-settings-shipping.shippingCostOptions.highest'),\n                value: 'highest',\n            }, {\n                label: this.$tc('sw-settings-shipping.shippingCostOptions.fixed'),\n                value: 'fixed',\n            }];\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.repository = this.entityContext.repository;\n\n            this.doSearch();\n        },\n\n        onSelectItem(selection, item, selected) {\n            this.$emit('select-item', selection, item, selected);\n        },\n\n        isNotAssigned(item) {\n            if (this.entityContext.addContext.association) {\n                return item[this.entityContext.addContext.association].length <= 0;\n            }\n\n            return item[this.entityContext.addContext.column] !== this.ruleId;\n        },\n\n        paginate({ page = 1, limit = 25 }) {\n            this.page = page;\n            this.limit = limit;\n\n            return this.doSearch();\n        },\n\n        doSearch(term) {\n            this.loading = true;\n            const api = this.entityContext.api ? this.entityContext.api() : Context.api;\n            const criteria = cloneDeep(this.criteria);\n\n            if (term) {\n                criteria.addFilter(Criteria.contains(this.entityContext.addContext.searchColumn ?? 'name', term));\n            }\n\n            return this.repository.search(criteria, api).then((result) => {\n                this.items = result;\n                this.total = result.total;\n            }).finally(() => {\n                this.loading = false;\n            });\n        },\n\n        shippingTaxTypeLabel(taxName) {\n            if (!taxName) {\n                return '';\n            }\n\n            const tax = this.shippingCostTaxOptions.find((i) => taxName === i.value) || '';\n\n            return tax?.label;\n        },\n    },\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-rule-add-assignment-listing.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1686d172\", content, true, {});"],"sourceRoot":""}