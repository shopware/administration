(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[59626],{559564:function(){},959626:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return d}});var o=n(280894);n(369304);let{Component:l,Mixin:i,Context:s}=Shopware,{Criteria:r}=Shopware.Data,{mapPropertyErrors:a}=l.getComponentHelper();var d={template:'\n{% block sw_flow_rule_modal %}\n<sw-modal\n    class="sw-flow-rule-modal"\n    variant="large"\n    :title="modalTitle"\n    :is-loading="isLoading"\n    :closable="false"\n    @modal-close="onClose"\n>\n    \n    {% block sw_flow_rule_modal_tabs %}\n    <sw-tabs\n        default-item="detail"\n        position-identifier="sw-flow-rule-modal"\n    >\n        \n        {% block sw_flow_rule_headers %}\n        <template #default="{ active }">\n            \n            {% block sw_flow_rule_modal_tab_detail %}\n            <sw-tabs-item\n                class="sw-flow-rule-modal__tab-detail"\n                v-bind="$props"\n                name="detail"\n                :active-tab="active"\n            >\n                {{ $tc(\'sw-flow.modals.rule.tabDetail\') }}\n            </sw-tabs-item>\n            {% endblock %}\n\n            \n            {% block sw_flow_rule_modal_tab_rule %}\n            <sw-tabs-item\n                class="sw-flow-rule-modal__tab-rule"\n                v-bind="$props"\n                name="rule"\n                :active-tab="active"\n            >\n                {{ $tc(\'sw-flow.modals.rule.tabRule\') }}\n            </sw-tabs-item>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        \n        {% block sw_flow_rule_modal_content %}\n        <template #content="{ active }">\n            <div class="sw-flow-rule-modal__content">\n                \n                {% block sw_flow_rule_modal_tab_detail_content %}\n                <template v-if="active === \'detail\' && rule">\n                    <sw-container\n                        columns="2fr 1fr"\n                        gap="0px 32px"\n                    >\n                        \n                        {% block sw_flow_rule_modal_detail_name %}\n                        <sw-text-field\n                            v-model:value="rule.name"\n                            name="sw-field--rule-name"\n                            class="sw-flow-rule-modal__name"\n                            required\n                            :label="$tc(\'sw-flow.modals.rule.labelName\')"\n                            :placeholder="$tc(\'sw-flow.modals.rule.placeholderName\')"\n                            :error="ruleNameError"\n                        />\n                        {% endblock %}\n\n                        \n                        {% block sw_flow_rule_modal_detail_priority %}\n                        <sw-number-field\n                            v-model:value="rule.priority"\n                            name="sw-field--rule-priority"\n                            class="sw-flow-rule-modal__priority"\n                            required\n                            :label="$tc(\'sw-flow.modals.rule.labelPriority\')"\n                            :placeholder="$tc(\'sw-flow.modals.rule.placeholderPriority\')"\n                            :error="rulePriorityError"\n                        />\n                    {% endblock %}\n                    </sw-container>\n\n                    \n                    {% block sw_flow_rule_modal_detail_description %}\n                    <sw-textarea-field\n                        v-model:value="rule.description"\n                        name="sw-field--rule-description"\n                        class="sw-flow-rule-modal__description"\n                        :label="$tc(\'sw-flow.modals.rule.labelDescription\')"\n                        :placeholder="$tc(\'sw-flow.modals.rule.placeholderDescription\')"\n                    />\n                    {% endblock %}\n\n                    \n                    {% block sw_flow_rule_modal_detail_type %}\n                    <sw-multi-select\n                        v-model:value="moduleTypes"\n                        name="sw-field--moduleTypes"\n                        class="sw-flow-rule-modal__type"\n                        value-property="id"\n                        label-property="name"\n                        :label="$tc(\'sw-flow.modals.rule.labelType\')"\n                        :placeholder="$tc(\'sw-flow.modals.rule.placeholderType\')"\n                        :options="availableModuleTypes"\n                    >\n                        <template #selection-label-property="{ item }">\n                            {{ $tc(item.name) }}\n                        </template>\n\n                        <template #result-label-property="{ item }">\n                            {{ $tc(item.name) }}\n                        </template>\n                    </sw-multi-select>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                \n                {% block sw_flow_rule_modal_tab_rule_content %}\n                <div v-show="active === \'rule\'">\n                    \n                    {% block sw_flow_rule_modal_conditions_card %}\n                    <sw-condition-tree\n                        v-if="conditionRepository"\n                        class="sw-flow-rule-modal__rule"\n                        association-field="ruleId"\n                        :initial-conditions="conditions"\n                        :condition-repository="conditionRepository"\n                        :condition-data-provider-service="ruleConditionDataProviderService"\n                        :association-value="rule.id"\n                        :association-entity="rule"\n                        :root-condition="null"\n                        @conditions-changed="onConditionsChanged"\n                    />\n                    {% endblock %}\n                </div>\n                {% endblock %}\n            </div>\n        </template>\n        {% endblock %}\n    </sw-tabs>\n    {% endblock %}\n\n    <template #modal-footer>\n        \n        {% block sw_flow_rule_modal_footer_cancel_button %}\n        <sw-button\n            class="sw-flow-rule-modal__cancel-button"\n            size="small"\n            @click="onClose"\n        >\n            {{ $tc(\'global.default.cancel\') }}\n        </sw-button>\n        {% endblock %}\n\n        \n        {% block sw_flow_rule_modal_footer_save_button %}\n        <sw-button-process\n            class="sw-flow-rule-modal__save-button"\n            variant="primary"\n            size="small"\n            :is-loading="isSaveLoading"\n            :process-success="isSaveSuccessful"\n            @click="onSaveRule"\n        >\n            {{ $tc(\'sw-flow.modals.rule.buttonAddRule\') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n</sw-modal>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory","ruleConditionDataProviderService","ruleConditionsConfigApiService","feature"],emits:["process-finish","modal-close"],mixins:[i.getByName("placeholder"),i.getByName("notification")],props:{ruleId:{type:String,required:!1,default:null}},data(){return{isLoading:!1,isSaveLoading:!1,isSaveSuccessful:!1,rule:null,conditions:null,conditionTree:null,deletedIds:[]}},computed:{modalTitle(){return this.ruleId?this.$tc("sw-flow.modals.rule.labelEditRule"):this.$tc("sw-flow.modals.rule.labelAddNewRule")},ruleRepository(){return this.repositoryFactory.create("rule")},conditionRepository(){return this.rule?this.repositoryFactory.create(this.rule?.conditions?.entity,this.rule?.conditions?.source):null},appScriptConditionRepository(){return this.repositoryFactory.create("app_script_condition")},availableModuleTypes(){return this.ruleConditionDataProviderService.getModuleTypes(e=>e)},moduleTypes:{get(){return this.rule&&this.rule.moduleTypes?this.rule.moduleTypes.types:[]},set(e){if(null===e||0===e.length){this.rule.moduleTypes=null;return}this.rule.moduleTypes={types:e}}},scopesOfRuleAwarenessKey(){let e=`flowTrigger.${this.flow.eventName}`,t=this.ruleConditionDataProviderService.getAwarenessConfigurationByAssignmentName(e);return t?.scopes??void 0},...(0,o.rn)("swFlowState",["flow"]),...a("rule",["name","priority"])},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0,this.loadConditionData().then(e=>{if(this.ruleConditionDataProviderService.addScriptConditions(e),!this.ruleId){this.isLoading=!1,this.createRule();return}this.loadRule(this.ruleId).then(()=>{this.isLoading=!1})})},loadConditionData(){let e={...s.api,languageId:Shopware.State.get("session").languageId},t=new r(1,500);return Promise.all([this.appScriptConditionRepository.search(t,e),this.ruleConditionsConfigApiService.load()]).then(e=>e[0])},createRule(){this.rule=this.ruleRepository.create(),this.conditions=this.rule?.conditions,this.conditionTree=this.conditions,this.rule.flowSequences=[],this.rule.flowSequences.push({flow:{eventName:this.flow.eventName}})},loadRule(e){return this.isLoading=!0,this.conditions=null,this.ruleRepository.get(e,s.api).then(e=>{this.rule=e,this.loadConditions()})},loadConditions(e=null){let t={...s.api,inheritance:!0};if(null===e)return this.conditionRepository.search(new r(1,25),t).then(e=>this.loadConditions(e));if(e.total<=e.length)return this.conditions=e,Promise.resolve();let n=new r(e.criteria.page+1,e.criteria.limit);return"product"===e.entity&&n.addAssociation("options.group"),this.conditionRepository.search(n,e.context).then(t=>(e.push(...t),e.criteria=t.criteria,e.total=t.total,this.loadConditions(e)))},syncConditions(){return this.conditionRepository.sync(this.conditionTree,s.api).then(()=>this.deletedIds.length>0?this.conditionRepository.syncDeleted(this.deletedIds,s.api).then(()=>{this.deletedIds=[]}):Promise.resolve())},onConditionsChanged({conditions:e,deletedIds:t}){this.conditionTree=e,this.deletedIds=[...this.deletedIds,...t]},getRuleDetail(){return this.rule?.id?this.ruleRepository.get(this.rule.id).then(e=>{this.$emit("process-finish",e)}).catch(()=>{this.$emit("process-finish",null)}).finally(()=>{this.onClose()}):null},onSaveRule(){if(this.isSaveSuccessful=!1,this.isSaveLoading=!0,this.rule.isNew()){this.rule.flowSequences=[],this.rule.conditions=this.conditionTree,this.saveRule().then(()=>{Shopware.State.dispatch("error/resetApiErrors"),this.getRuleDetail(),this.isSaveSuccessful=!0}).catch(()=>{this.showErrorNotification()}).finally(()=>{this.isSaveLoading=!1});return}this.saveRule().then(this.syncConditions).then(()=>{Shopware.State.dispatch("error/resetApiErrors"),this.getRuleDetail(),this.isSaveSuccessful=!0}).catch(()=>{this.showErrorNotification()}).finally(()=>{this.isSaveLoading=!1})},saveRule(){return this.ruleRepository.save(this.rule,s.api)},showErrorNotification(){this.createNotificationError({message:this.$tc("sw-settings-rule.detail.messageSaveError",0,{name:this.rule.name})})},onClose(){this.$emit("modal-close")}}}},369304:function(e,t,n){var o=n(559564);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),n(745346).Z("fe374cfa",o,!0,{})}}]);