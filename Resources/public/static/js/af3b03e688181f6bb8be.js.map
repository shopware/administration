{"version":3,"sources":["webpack:///./src/module/sw-product/view/sw-product-detail-variants/sw-product-detail-variants.scss","webpack:///./src/module/sw-product/view/sw-product-detail-variants/index.js","webpack:///./src/module/sw-product/view/sw-product-detail-variants/sw-product-detail-variants.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware$Data","Shopware","Data","Criteria","EntityCollection","_Shopware$Component$g","Component","getComponentHelper","mapState","mapGetters","template","inject","data","variantListHasContent","activeModal","isLoading","productEntity","configuratorSettingsRepository","groups","productEntityLoaded","propertiesAvailable","showAddPropertiesModal","defaultTab","activeTab","computed","_objectSpread","contextLanguageId","state","api","languageId","isStoreLoading","productRepository","this","repositoryFactory","create","groupRepository","propertyRepository","productProperties","_this$product","_this$product$propert","isChild","product","properties","length","parentProduct","selectedGroups","configuratorSettings","groupIds","reduce","result","element","indexOf","option","groupId","push","filter","group","id","currentProductStates","split","assetFilter","Filter","getByName","watch","handler","loadData","$refs","generatedVariants","getList","created","createdComponent","mounted","mountedComponent","methods","checkIfPropertiesExists","setActiveTab","tabName","_this","loadOptions","then","loadGroups","_this2","Promise","resolve","criteria","addAssociation","get","Context","_this3","$nextTick","groupCriteria","search","searchResult","updateVariations","_this4","includeOptions","filterWindowOpen","getFilterOptions","resetFilterOptions","updateVariantListHasContent","variantList","isFilterActive","searchTerm","$route","query","term","openModal","value","onConfigurationClosed","_this5","res","total","openAddPropertiesModal","updateNewProperties","$router","name","closeAddPropertiesModal","newProperties","source","entity","context","fromCriteria","aggregations","onCancelAddPropertiesModal","onSaveAddPropertiesModal","_this$productProperti","splice","apply","concat","_toConsumableArray"],"mappings":"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","file":"static/js/af3b03e688181f6bb8be.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-detail-variants.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"205ad66b\", content, true, {});","/*\n * @package inventory\n */\n\nimport template from './sw-product-detail-variants.html.twig';\nimport './sw-product-detail-variants.scss';\n\nconst { Criteria, EntityCollection } = Shopware.Data;\nconst { mapState, mapGetters } = Shopware.Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl'],\n\n    data() {\n        return {\n            variantListHasContent: false,\n            activeModal: '',\n            isLoading: true,\n            productEntity: {},\n            configuratorSettingsRepository: {},\n            groups: [],\n            productEntityLoaded: false,\n            propertiesAvailable: true,\n            showAddPropertiesModal: false,\n            defaultTab: 'all',\n            activeTab: 'all',\n        };\n    },\n\n    computed: {\n        ...mapState('swProductDetail', [\n            'product',\n            'variants',\n        ]),\n\n        ...mapState('context', {\n            contextLanguageId: state => state.api.languageId,\n        }),\n\n        ...mapGetters('swProductDetail', {\n            isStoreLoading: 'isLoading',\n        }),\n\n        productRepository() {\n            return this.repositoryFactory.create('product');\n        },\n\n        groupRepository() {\n            return this.repositoryFactory.create('property_group');\n        },\n\n        propertyRepository() {\n            return this.repositoryFactory.create('property_group_option');\n        },\n\n        productProperties() {\n            return this.isChild && this.product?.properties?.length <= 0\n                ? this.parentProduct.properties\n                : this.product.properties;\n        },\n\n        selectedGroups() {\n            if (!this.productEntity.configuratorSettings) {\n                return [];\n            }\n\n            // get groups for selected options\n            const groupIds = this.productEntity.configuratorSettings.reduce((result, element) => {\n                if (result.indexOf(element.option.groupId) < 0) {\n                    result.push(element.option.groupId);\n                }\n\n                return result;\n            }, []);\n\n            return this.groups.filter((group) => {\n                return groupIds.indexOf(group.id) >= 0;\n            });\n        },\n\n        currentProductStates() {\n            return this.activeTab.split(',');\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        isStoreLoading: {\n            handler() {\n                if (this.isStoreLoading === false) {\n                    this.loadData();\n                }\n            },\n        },\n\n        contextLanguageId: {\n            handler() {\n                this.$refs.generatedVariants.getList();\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.checkIfPropertiesExists();\n        },\n\n        mountedComponent() {\n            this.loadData();\n        },\n\n        setActiveTab(tabName) {\n            this.activeTab = tabName;\n        },\n\n        loadData() {\n            if (!this.isStoreLoading) {\n                this.loadOptions()\n                    .then(() => {\n                        return this.loadGroups();\n                    });\n            }\n        },\n\n        loadOptions() {\n            return new Promise((resolve) => {\n                const criteria = new Criteria(1, 25);\n\n                criteria.addAssociation('configuratorSettings.option');\n                criteria.addAssociation('prices');\n\n                this.productRepository.get(this.product.id, Shopware.Context.api, criteria).then((product) => {\n                    this.productEntity = product;\n                    this.productEntityLoaded = true;\n\n                    resolve();\n                });\n            });\n        },\n\n        loadGroups() {\n            return new Promise((resolve) => {\n                this.$nextTick().then(() => {\n                    const groupCriteria = new Criteria(1, null);\n\n                    this.groupRepository.search(groupCriteria).then((searchResult) => {\n                        this.groups = searchResult;\n                        resolve();\n                    });\n                });\n            });\n        },\n\n        updateVariations() {\n            // Reset filter\n            this.$refs.generatedVariants.includeOptions = [];\n            this.$refs.generatedVariants.filterWindowOpen = false;\n\n            // get new filter options\n            this.loadOptions()\n                .then(() => {\n                    return this.loadGroups();\n                })\n                .then(() => {\n                    this.$refs.generatedVariants.getFilterOptions();\n                    this.$refs.generatedVariants.resetFilterOptions();\n                });\n        },\n\n        updateVariantListHasContent(variantList) {\n            // Check for empty search or filter results\n            const isFilterActive = this.$refs.generatedVariants.includeOptions.length > 0;\n            const searchTerm = this.$route.query ? this.$route.query.term : '';\n\n            this.variantListHasContent = variantList.length > 0 || searchTerm || isFilterActive;\n            this.isLoading = false;\n        },\n\n        openModal(value) {\n            this.activeModal = value;\n        },\n\n        onConfigurationClosed() {\n            this.loadData();\n            this.activeModal = '';\n        },\n\n        checkIfPropertiesExists() {\n            this.propertyRepository.search(new Criteria(1, 1)).then((res) => {\n                this.propertiesAvailable = res.total > 0;\n            });\n        },\n\n        openAddPropertiesModal() {\n            if (!this.propertiesAvailable) {\n                this.$router.push({ name: 'sw.property.index' });\n            } else {\n                this.updateNewProperties();\n                this.showAddPropertiesModal = true;\n            }\n        },\n\n        closeAddPropertiesModal() {\n            this.showAddPropertiesModal = false;\n            this.updateNewProperties();\n        },\n\n        updateNewProperties() {\n            this.newProperties = new EntityCollection(\n                this.productProperties.source,\n                this.productProperties.entity,\n                this.productProperties.context,\n                Criteria.fromCriteria(this.productProperties.criteria),\n                this.productProperties,\n                this.productProperties.total,\n                this.productProperties.aggregations,\n            );\n        },\n\n\n        onCancelAddPropertiesModal() {\n            this.closeAddPropertiesModal();\n        },\n\n        onSaveAddPropertiesModal(newProperties) {\n            this.closeAddPropertiesModal();\n\n            if (newProperties.length <= 0) {\n                return;\n            }\n\n            this.productProperties.splice(0, this.productProperties.length, ...newProperties);\n        },\n    },\n};\n","export default \"\\n{% block sw_product_detail_variants %}\\n<div class=\\\"sw-product-detail-variants\\\">\\n\\n    \\n    {% block sw_product_detail_variants_sw_card_generated_variants %}\\n    <sw-card\\n        class=\\\"sw-product-detail-variants__generated-variants\\\"\\n        position-identifier=\\\"sw-product-detail-variants-generated-variants\\\"\\n        :class=\\\"{'is--loading': isLoading}\\\"\\n        :title=\\\"$tc('sw-product.variations.generatedVariationCardTitle')\\\"\\n        large\\n    >\\n        <template\\n            v-if=\\\"!isLoading && propertiesAvailable\\\"\\n            #tabs\\n        >\\n            <sw-tabs\\n                position-identifier=\\\"sw-variant-card-tabs\\\"\\n                :small=\\\"false\\\"\\n                :default-item=\\\"defaultTab\\\"\\n                @new-item-active=\\\"setActiveTab($event.name)\\\"\\n            >\\n                <sw-tabs-item\\n                    name=\\\"all\\\"\\n                    :active-tab=\\\"activeTab\\\"\\n                >\\n                    {{ $tc('sw-product.variations.variationCard.tabs.allProducts') }}\\n                </sw-tabs-item>\\n\\n                <sw-tabs-item\\n                    name=\\\"is-physical\\\"\\n                    :active-tab=\\\"activeTab\\\"\\n                >\\n                    {{ $tc('sw-product.variations.variationCard.tabs.physicalProducts') }}\\n                </sw-tabs-item>\\n\\n                <sw-tabs-item\\n                    name=\\\"is-download\\\"\\n                    :active-tab=\\\"activeTab\\\"\\n                >\\n                    {{ $tc('sw-product.variations.variationCard.tabs.digitalProducts') }}\\n                </sw-tabs-item>\\n            </sw-tabs>\\n        </template>\\n\\n        <sw-skeleton v-if=\\\"isLoading\\\" />\\n\\n        \\n        {% block sw_product_detail_variants_sw_card_empty_state %}\\n        <sw-empty-state\\n            v-else-if=\\\"!propertiesAvailable\\\"\\n            class=\\\"sw-product-detail-variants__generated-variants-empty-state\\\"\\n            :absolute=\\\"false\\\"\\n            :title=\\\"$tc('sw-product.variations.emptyStatePropertyTitle')\\\"\\n            :subline=\\\"$tc('sw-product.variations.emptyStatePropertyDescription')\\\"\\n        >\\n\\n            <template #icon>\\n                \\n                {% block sw_product_properties_empty_state_image %}\\n                <img\\n                    :src=\\\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\\\"\\n                    :alt=\\\"$tc('sw-product.properties.titleEmptyState')\\\"\\n                >\\n                {% endblock %}\\n            </template>\\n\\n            <template #actions>\\n                \\n                {% block sw_product_properties_empty_state_button_property %}\\n                <sw-button\\n                    v-tooltip=\\\"{\\n                        message: $tc('sw-privileges.tooltip.warning'),\\n                        disabled: acl.can('product.editor'),\\n                        showOnDisabledElements: true\\n                    }\\\"\\n                    variant=\\\"ghost\\\"\\n                    :disabled=\\\"!acl.can('product.editor')\\\"\\n                    @click=\\\"openAddPropertiesModal\\\"\\n                >\\n                    {{ $tc('sw-product.properties.buttonAddProperties') }}\\n                </sw-button>\\n                {% endblock %}\\n            </template>\\n        </sw-empty-state>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_detail_variants_sw_card_empty_state_variant %}\\n        <sw-empty-state\\n            v-if=\\\"!isLoading && propertiesAvailable && variants.length === 0\\\"\\n            class=\\\"sw-product-detail-variants__generated-variants-empty-state\\\"\\n            :absolute=\\\"false\\\"\\n            :title=\\\"$tc('sw-product.variations.emptyStateTitle')\\\"\\n            :subline=\\\"$tc('sw-product.variations.emptyStateDescription')\\\"\\n        >\\n\\n            <template #icon>\\n                \\n                {% block sw_product_properties_empty_state_image %}\\n                <img\\n                    :src=\\\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\\\"\\n                    :alt=\\\"$tc('sw-product.properties.titleEmptyState')\\\"\\n                >\\n                {% endblock %}\\n            </template>\\n\\n            <template #actions>\\n                \\n                {% block sw_product_properties_empty_state_button %}\\n                <sw-button\\n                    v-tooltip=\\\"{\\n                        message: $tc('sw-privileges.tooltip.warning'),\\n                        disabled: acl.can('product.creator'),\\n                        showOnDisabledElements: true\\n                    }\\\"\\n                    variant=\\\"ghost\\\"\\n                    :disabled=\\\"!acl.can('product.creator')\\\"\\n                    @click=\\\"openModal('variantGeneration')\\\"\\n                >\\n                    {{ $tc('sw-product.variations.emptyStateButton') }}\\n                </sw-button>\\n                {% endblock %}\\n            </template>\\n        </sw-empty-state>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_detail_variants_sw_card_generated_variants_overview %}\\n        <sw-product-variants-overview\\n            v-if=\\\"product.id\\\"\\n            v-show=\\\"variantListHasContent && !isLoading\\\"\\n            ref=\\\"generatedVariants\\\"\\n            :product-states=\\\"currentProductStates\\\"\\n            :groups=\\\"groups\\\"\\n            :selected-groups=\\\"selectedGroups\\\"\\n            @variants-finish-update=\\\"updateVariantListHasContent\\\"\\n            @generator-open=\\\"openModal('variantGeneration')\\\"\\n            @delivery-open=\\\"openModal('deliveryModal')\\\"\\n        />\\n        {% endblock %}\\n\\n    </sw-card>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_detail_variants_modal_variant_generation %}\\n    <sw-product-modal-variant-generation\\n        v-if=\\\"activeModal === 'variantGeneration'\\\"\\n        :product=\\\"productEntity\\\"\\n        :groups=\\\"groups\\\"\\n        :actual-status=\\\"activeTab\\\"\\n        :selected-groups=\\\"selectedGroups\\\"\\n        @modal-close=\\\"activeModal = ''\\\"\\n        @variations-finish-generate=\\\"updateVariations\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_detail_variants_modal_delivery %}\\n    <sw-product-modal-delivery\\n        v-if=\\\"activeModal === 'deliveryModal'\\\"\\n        :product=\\\"productEntity\\\"\\n        :selected-groups=\\\"selectedGroups\\\"\\n        @configuration-close=\\\"onConfigurationClosed\\\"\\n        @modal-close=\\\"activeModal = ''\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_properties_add_properties_modal %}\\n    <sw-product-add-properties-modal\\n        v-if=\\\"showAddPropertiesModal\\\"\\n        :new-properties=\\\"newProperties\\\"\\n        @modal-cancel=\\\"onCancelAddPropertiesModal\\\"\\n        @modal-save=\\\"onSaveAddPropertiesModal\\\"\\n    />\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}