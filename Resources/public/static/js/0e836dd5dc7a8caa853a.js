(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[95529],{746504:function(){},595529:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return o}}),n(627461);let{EntityDefinition:i}=Shopware;var o={template:'\n{% block sw_condition_base %}\n\n{% block sw_product_stream_filter %}\n<div\n    class="sw-product-stream-filter"\n    :class="conditionClasses"\n>\n    \n    {% block sw_product_stream_filter_container %}\n    <div class="sw-product-stream-filter__container">\n        \n        {% block sw_product_stream_filter_selects %}\n        <div class="sw-product-stream-filter__selects">\n            \n            {% block sw_product_stream_filter_fields %}\n            <template\n                v-for="(definition, index) in fieldDefinitions"\n                :key="index"\n            >\n                \n                {% block sw_product_stream_filter_field_select %}\n                <sw-product-stream-field-select\n                    v-bind="{ field: fields[index], definition, index }"\n                    :disabled="!acl.can(\'product_stream.editor\') || undefined"\n                    :has-error="hasError"\n                    @field-changed="updateFields"\n                />\n                {% endblock %}\n            </template>\n            {% endblock %}\n\n            \n            {% block sw_product_stream_filter_value %}\n            <sw-product-stream-value\n                v-bind="{ condition, ...lastField }"\n                :disabled="!acl.can(\'product_stream.editor\') || undefined"\n                @type-change="changeType"\n                @boolean-change="changeBooleanValue"\n                @empty-change="changeEmptyValue"\n            />\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        \n        {% block sw_product_stream_filter_field_actions %}\n        <sw-context-button\n            v-tooltip="getNoPermissionsTooltip(\'product_stream.editor\', false)"\n            class="sw-product-stream-filter__context-button"\n            :disabled="!acl.can(\'product_stream.editor\') || undefined"\n        >\n            \n            {% block sw_product_stream_filter_field_create_before_action %}\n            <sw-context-menu-item\n                class="sw-product-stream-filter__create-before-action"\n                @click="onCreateBefore"\n            >\n                {{ $tc(\'global.sw-condition.condition.createBefore\') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            \n            {% block sw_product_stream_filter_field_create_after_action %}\n            <sw-context-menu-item\n                class="sw-product-stream-filter__create-after-action"\n                @click="onCreateAfter"\n            >\n                {{ $tc(\'global.sw-condition.condition.createAfter\') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            \n            {% block sw_product_stream_filter_field_delete_action %}\n            <sw-context-menu-item\n                variant="danger"\n                @click="onDeleteCondition"\n            >\n                {{ $tc(\'global.default.delete\') }}\n            </sw-context-menu-item>\n            {% endblock %}\n        </sw-context-button>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    \n    {% block sw_product_stream_filter_error %}\n    <sw-field-error :error="currentError" />\n    {% endblock %}\n</div>\n    {% endblock %}\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["createCondition","insertNodeIntoTree","removeNodeFromTree","productCustomFields","acl","conditionDataProviderService"],computed:{actualCondition(){return"not"===this.condition.type?this.condition.queries[0]:this.condition},fields:{get(){return this.actualCondition.field?this.conditionDataProviderService.allowedJsonAccessors.hasOwnProperty(this.actualCondition.field)||this.isCustomField(this.actualCondition.field)?[this.actualCondition.field]:this.actualCondition.field.split("."):[]},set(e){let t=e.join(".");if(t.match(".$")&&(t=t.substring(0,t.length)),!t){this.actualCondition.field=null;return}this.actualCondition.field=t}},fieldDefinitions(){let e=i.get("product"),t=[e];return this.fields.forEach(n=>{let o=e.getField(n);o&&"association"===o.type&&(e=i.get(o.entity),t.push(e))}),t},lastField(){return this.fieldDefinitions.length>this.fields.length?{fieldName:null,definition:i.get("product")}:{fieldName:this.fields[this.fields.length-1],definition:this.fieldDefinitions[this.fieldDefinitions.length-1]}}},methods:{updateFields({field:e,index:t}){let n=this.fields.slice(0,t);e&&n.push(e),this.changeType({type:null,parameters:null}),this.fields=n},handleWrapForTypeNull(e,t){return(null===e&&"not"===this.condition.type&&this.unwrapNot(this.condition,null),this.conditionDataProviderService.isNegatedType(e)&&"not"!==this.condition.type)?(this.wrapInNot(this.condition,e,t),!1):"not"!==this.condition.type||this.conditionDataProviderService.isNegatedType(e)?"not"===this.condition.type&&this.conditionDataProviderService.isNegatedType(e)?(this.unwrapNot(this.condition,e,t),this.wrapInNot(this.condition,e,t),!1):(this.actualCondition.type=e,!0):(this.unwrapNot(this.condition,e,t),!1)},changeBooleanValue({type:e,value:t}){this.handleWrapForTypeNull(e),"not"===this.condition.type&&(this.condition.queries[0].value="1"),this.condition.value=t},changeEmptyValue({type:e}){this.handleWrapForTypeNull(e),"not"===this.condition.type&&(this.condition.queries[0].value=null),this.condition.value=null},changeType({type:e,parameters:t}){this.handleWrapForTypeNull(e,t)&&(this.actualCondition.parameters=t,this.actualCondition.value=null)},wrapInNot(e,t,n){let{identifier:i}=this.conditionDataProviderService.negateOperator(t),o=this.copyParameters({...e,parameters:n});o.type=i;let s=this.createCondition(o,e.id,0);this.insertNodeIntoTree(this.condition,s),Object.assign(e,{type:"not",field:null,operator:null,value:null,parameters:null})},unwrapNot(e,t,n){let i=e.queries[0],o=this.copyParameters({...i,parameters:n});o.type=t,Object.assign(e,o),this.removeNodeFromTree(this.condition,i)},copyParameters({field:e,type:t,operator:n,parameters:i,value:o}){return{field:e,type:t,operator:n,parameters:i,value:o}},getNoPermissionsTooltip(e,t=!0){return{showDelay:300,message:this.$tc("sw-privileges.tooltip.warning"),appearance:"dark",showOnDisabledElements:t,disabled:this.acl.can(e)}},isCustomField(e){let t=e.replace(/customFields\./,"");return Object.keys(this.productCustomFields).includes(t)}}}},627461:function(e,t,n){var i=n(746504);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[e.id,i,""]]),i.locals&&(e.exports=i.locals),n(745346).Z("c738b538",i,!0,{})}}]);