(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[86098],{196548:function(){},986098:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return i}}),s(562171);let{Mixin:n}=Shopware,{Criteria:l}=Shopware.Data;var i={template:'\n{% block sw_customer_list %}\n<sw-page class="sw-customer-list">\n\n    \n    {% block sw_customer_list_search_bar %}\n    <template #search-bar>\n        <sw-search-bar\n            initial-search-type="customer"\n            :initial-search="term"\n            @search="onSearch"\n        />\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_customer_list_smart_bar_header %}\n    <template #smart-bar-header>\n        \n        {% block sw_customer_list_smart_bar_header_title %}\n        <h2>\n            \n            {% block sw_customer_list_smart_bar_header_title_text %}\n            {{ $tc(\'sw-customer.list.textCustomers\') }}\n            {% endblock %}\n\n            \n            {% block sw_customer_list_smart_bar_header_amount %}\n            <span\n                v-if="!isLoading"\n                class="sw-page__smart-bar-amount"\n            >\n                ({{ total }})\n            </span>\n            {% endblock %}\n        </h2>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_customer_list_smart_bar_actions %}\n    <template #smart-bar-actions>\n        \n        {% block sw_customer_list_smart_bar_actions_add %}\n        <sw-button\n            v-tooltip="{\n                message: $tc(\'sw-privileges.tooltip.warning\'),\n                disabled: acl.can(\'customer.creator\'),\n                showOnDisabledElements: true\n            }"\n            class="sw-customer-list__button-create"\n            variant="primary"\n            :disabled="!acl.can(\'customer.creator\')"\n            :router-link="{ name: \'sw.customer.create\' }"\n        >\n            {{ $tc(\'sw-customer.list.buttonAddCustomer\') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <template #language-switch>\n        <sw-language-switch @on-change="onChangeLanguage" />\n    </template>\n\n    <template #content>\n        \n        {% block sw_customer_list_content %}\n        <div class="sw-customer-list__content">\n            \n            {% block sw_customer_list_grid %}\n            <sw-entity-listing\n                v-if="isLoading || (customers && entitySearchable)"\n                ref="swCustomerGrid"\n                class="sw-customer-list-grid"\n                identifier="sw-customer-list"\n                :items="customers"\n                :columns="customerColumns"\n                :repository="customerRepository"\n                :sort-by="currentSortBy"\n                :sort-direction="sortDirection"\n                detail-route="sw.customer.detail"\n                :show-selection="acl.can(\'customer.deleter\')"\n                :allow-inline-edit="acl.can(\'customer.editor\')"\n                :allow-bulk-edit="acl.can(\'customer.editor\')"\n                :is-loading="isLoading"\n                :disable-data-fetching="true"\n                @selection-change="updateSelection"\n                @inline-edit-save="onInlineEditSave"\n                @page-change="onPageChange"\n                @column-sort="onSortColumn"\n                @bulk-edit-modal-open="onBulkEditModalOpen"\n            >\n\n                \n                {% block sw_customer_list_grid_columns %}\n\n                \n                {% block sw_product_list_grid_columns_name_preview %}\n                <template #preview-firstName="{ item, compact }">\n                    <sw-avatar\n                        :size="compact ? \'32px\' : \'48px\'"\n                        :source-context="item"\n                        :first-name="item.firstName"\n                        :last-name="item.lastName"\n                    />\n                </template>\n                {% endblock %}\n\n                \n                {% block sw_customer_list_grid_columns_name %}\n                <template #column-firstName="{ item, compact, isInlineEdit }">\n\n                    \n                    {% block sw_customer_list_grid_inline_edit_name %}\n                    <template v-if="isInlineEdit">\n                        \n                        {% block sw_customer_list_grid_inline_edit_first_name %}\n                        <sw-text-field\n                            v-model:value="item.firstName"\n                            name="sw-field--item-firstName"\n                            class="sw-customer-list__inline-edit-first-name"\n                            :size="compact ? \'small\' : \'default\'"\n                        />\n                        {% endblock %}\n\n                        \n                        {% block sw_customer_list_grid_inline_edit_last_name %}\n                        <sw-text-field\n                            v-model:value="item.lastName"\n                            name="sw-field--item-lastName"\n                            class="sw-customer-list__inline-edit-last-name"\n                            :size="compact ? \'small\' : \'default\'"\n                        />\n                        {% endblock %}\n                    </template>\n                    {% endblock %}\n\n                    \n                    {% block sw_customer_list_grid_columns_name_link %}\n                    <router-link\n                        v-else\n                        :to="{ name: \'sw.customer.detail\', params: { id: item.id }, query: { edit: false } }"\n                    >\n                        {{ item.lastName }}, {{ item.firstName }}\n                    </router-link>\n                    {% endblock %}\n\n                    \n                    {% block sw_customer_list_grid_columns_name_guest_label %}\n                    <sw-label\n                        v-if="!isInlineEdit && item.guest"\n                        appearance="pill"\n                        size="small"\n                        class="sw-customer-list__metadata-customer-guest-label"\n                    >\n                        {{ $tc(\'sw-customer.list.columnNameGuestLabel\') }}\n                    </sw-label>\n                    {% endblock %}\n\n                    <sw-label\n                        v-if="item.createdById"\n                        appearance="pill"\n                        size="small"\n                        class="sw-customer-list__created-by-admin-label"\n                    >\n                        {{ $tc(\'sw-customer.list.labelCreatedByAdmin\') }}\n                    </sw-label>\n                </template>\n                {% endblock %}\n                {% endblock %}\n\n                \n                {% block sw_customer_list_grid_columns_group %}\n                <template #column-group="{ item, compact, isInlineEdit }">\n                    <sw-label\n                        v-if="item.requestedGroup"\n                        class="sw-customer-list__requested-group-label"\n                        variant="warning"\n                        appearance="pill"\n                    >\n                        {{ $tc(\'sw-customer.list.columnGroupRequested\') }} {{ item.requestedGroup.translated.name }}\n                    </sw-label>\n                    <sw-label\n                        v-else\n                        size="default"\n                        appearance="pill"\n                    >\n                        {{ item.group.translated.name }}\n                    </sw-label>\n                </template>\n                {% endblock %}\n\n                \n                {% block sw_customer_list_grid_columns_boundSalesChannel %}\n                <template #column-boundSalesChannelId="{ item }">\n                    {{ item.boundSalesChannelId ? item.salesChannel.translated.name : $tc(\'sw-customer.list.emptyBoundSalesChannel\') }}\n                </template>\n                {% endblock %}\n\n                \n                {% block sw_customer_list_grid_columns_active %}\n                <template #column-active="{ item, isInlineEdit }">\n                    \n                    {% block sw_customer_list_grid_columns_active_inline_edit %}\n                    <template v-if="isInlineEdit">\n                        <sw-checkbox-field\n                            v-model:value="item.active"\n                            name="sw-field--item-active"\n                        />\n                    </template>\n                    {% endblock %}\n\n                    \n                    {% block sw_customer_list_grid_columns_active_content %}\n                    <template v-else>\n                        <sw-icon\n                            v-if="item.active"\n                            name="regular-checkmark-xs"\n                            small\n                            class="is--active"\n                        />\n                        <sw-icon\n                            v-else\n                            name="regular-times-s"\n                            small\n                            class="is--inactive"\n                        />\n                    </template>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                \n                {% block sw_customer_list_grid_columns_actions %}\n                <template #actions="{ item }">\n                    \n                    {% block sw_customer_list_grid_columns_actions_view %}\n                    <sw-context-menu-item\n                        class="sw-customer-list__view-action"\n                        :router-link="{ name: \'sw.customer.detail\', params: { id: item.id }, query: { edit: false } }"\n                    >\n                        {{ $tc(\'sw-customer.list.contextMenuView\') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    \n                    {% block sw_customer_list_grid_columns_actions_edit %}\n                    <sw-context-menu-item\n                        class="sw-customer-list__edit-action"\n                        :disabled="!acl.can(\'customer.editor\')"\n                        :router-link="{ name: \'sw.customer.detail.base\', params: { id: item.id }, query: { edit: true } }"\n                    >\n                        {{ $tc(\'sw-customer.list.contextMenuEdit\') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    \n                    {% block sw_customer_list_grid_columns_actions_delete %}\n                    <sw-context-menu-item\n                        class="sw-customer-list__delete-action"\n                        variant="danger"\n                        :disabled="!acl.can(\'customer.deleter\')"\n                        @click="onDelete(item.id)"\n                    >\n                        {{ $tc(\'sw-customer.list.contextMenuDelete\') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                \n                {% block sw_customer_list_grid_action_modals %}\n                <template #action-modals="{ item }">\n\n                    \n                    {% block sw_customer_list_delete_modal %}\n                    <sw-modal\n                        v-if="showDeleteModal === item.id"\n                        :title="$tc(\'global.default.warning\')"\n                        variant="small"\n                        @modal-close="onCloseDeleteModal"\n                    >\n\n                        \n                        {% block sw_customer_list_delete_modal_confirm_delete_text %}\n                        <p class="sw-customer-list__confirm-delete-text">\n                            {{ $tc(\'sw-customer.list.textDeleteConfirm\', 0, { name: `${item.firstName} ${item.lastName}` }) }}\n                        </p>\n                        {% endblock %}\n\n                        \n                        {% block sw_customer_list_delete_modal_footer %}\n                        <template #modal-footer>\n\n                            \n                            {% block sw_customer_list_delete_modal_cancel %}\n                            <sw-button\n                                size="small"\n                                @click="onCloseDeleteModal"\n                            >\n                                {{ $tc(\'sw-customer.list.buttonCancel\') }}\n                            </sw-button>\n                            {% endblock %}\n\n                            \n                            {% block sw_customer_list_delete_modal_confirm %}\n                            <sw-button\n                                variant="danger"\n                                size="small"\n                                @click="onConfirmDelete(item.id)"\n                            >\n                                {{ $tc(\'sw-customer.list.buttonDelete\') }}\n                            </sw-button>\n                            {% endblock %}\n                        </template>\n                        {% endblock %}\n                    </sw-modal>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                <template #pagination>\n                    \n                    {% block sw_order_list_grid_pagination %}\n                    <sw-pagination\n                        :page="page"\n                        :limit="limit"\n                        :total="total"\n                        :total-visible="7"\n                        @page-change="onPageChange"\n                    />\n                    {% endblock %}\n                </template>\n\n                \n                {% block sw_customer_list_bulk_edit_modal %}\n                <template\n                    #bulk-edit-modal="{ selection }"\n                >\n                    <sw-bulk-edit-modal\n                        v-if="showBulkEditModal"\n                        ref="bulkEditModal"\n                        class="sw-customer-bulk-edit-modal"\n                        :selection="selection"\n                        :bulk-grid-edit-columns="customerColumns"\n                        @edit-items="onBulkEditItems"\n                        @modal-close="onBulkEditModalClose"\n                    >\n                        \n                        {% block sw_customer_list_bulk_edit_grid_columns_name %}\n                        <template #column-firstName="{ item }">\n                            <router-link\n                                :to="{ name: \'sw.customer.detail\', params: { id: item.id } }"\n                                target="_blank"\n                                rel="noreferrer noopener"\n                            >\n                                {{ item.lastName }}, {{ item.firstName }}\n                            </router-link>\n                        </template>\n                        {% endblock %}\n\n                        \n                        {% block sw_customer_list_bulk_edit_grid_columns_group %}\n                        <template #column-group="{ item }">\n                            <sw-label\n                                v-if="item.requestedGroup"\n                                class="sw-customer-list__requested-group-label"\n                                variant="warning"\n                                appearance="pill"\n                            >\n                                {{ $tc(\'sw-customer.list.columnGroupRequested\') }} {{ item.requestedGroup.translated.name }}\n                            </sw-label>\n                            <sw-label\n                                v-else\n                                size="default"\n                                appearance="pill"\n                            >\n                                {{ item.group.translated.name }}\n                            </sw-label>\n                        </template>\n                        {% endblock %}\n                    </sw-bulk-edit-modal>\n                </template>\n                {% endblock %}\n            </sw-entity-listing>\n            {% endblock %}\n\n            \n            {% block sw_customer_list_empty_state %}\n            <template v-if="!isLoading && !total">\n                <sw-empty-state\n                    v-if="filterCriteria.length || isValidTerm(term)"\n                    :title="$tc(\'sw-empty-state.messageNoResultTitle\')"\n                >\n                    <template #icon>\n                        <img\n                            :src="assetFilter(\'/administration/static/img/empty-states/customer-empty-state.svg\')"\n                            :alt="$tc(\'sw-empty-state.messageNoResultTitle\')"\n                        >\n                    </template>\n\n                    <template #default>\n                        {{ $tc(\'sw-empty-state.messageNoResultSublineBefore\') }}\n                        <router-link\n                            class="sw-empty-state__description-link"\n                            :to="{ name: \'sw.profile.index.searchPreferences\' }"\n                        >\n                            {{ $tc(\'sw-empty-state.messageNoResultSublineLink\') }}\n                        </router-link>\n                        {{ $tc(\'sw-empty-state.messageNoResultSublineAfter\') }}\n                    </template>\n                </sw-empty-state>\n                <sw-empty-state\n                    v-else\n                    :title="$tc(\'sw-customer.list.messageEmpty\')"\n                >\n                    <template #icon>\n                        <img\n                            :src="assetFilter(\'/administration/static/img/empty-states/customer-empty-state.svg\')"\n                            :alt="$tc(\'sw-customer.list.messageEmpty\')"\n                        >\n                    </template>\n                </sw-empty-state>\n            </template>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </template>\n\n    \n    {% block sw_customer_list_sidebar %}\n    <template #sidebar>\n        <sw-sidebar class="sw-customer-list__sidebar">\n            \n            {% block sw_customer_list_sidebar_refresh %}\n            <sw-sidebar-item\n                icon="regular-undo"\n                :title="$tc(\'sw-customer.list.titleSidebarItemRefresh\')"\n                @click="onRefresh"\n            />\n            {% endblock %}\n\n            \n            {% block sw_customer_list_sidebar_filter %}\n            <sw-sidebar-filter-panel\n                entity="customer"\n                :store-key="storeKey"\n                :filters="listFilters"\n                :defaults="defaultFilters"\n                :active-filter-number="activeFilterNumber"\n                @criteria-changed="updateCriteria"\n            />\n            {% endblock %}\n        </sw-sidebar>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',inject:["repositoryFactory","acl","filterFactory","feature"],mixins:[n.getByName("notification"),n.getByName("salutation"),n.getByName("listing")],data(){return{customers:null,sortBy:"customerNumber",naturalSorting:!0,sortDirection:"DESC",isLoading:!1,showDeleteModal:!1,filterLoading:!1,availableAffiliateCodes:[],availableCampaignCodes:[],filterCriteria:[],defaultFilters:["affiliate-code-filter","campaign-code-filter","customer-group-request-filter","salutation-filter","account-status-filter","default-payment-method-filter","group-filter","billing-address-country-filter","shipping-address-country-filter","tags-filter"],storeKey:"grid.filter.customer",activeFilterNumber:0,searchConfigEntity:"customer",showBulkEditModal:!1}},metaInfo(){return{title:this.$createTitle()}},computed:{customerRepository(){return this.repositoryFactory.create("customer")},customerColumns(){return this.getCustomerColumns()},defaultCriteria(){let e=new l(this.page,this.limit);return this.naturalSorting="customerNumber"===this.sortBy,e.setTerm(this.term),this.sortBy.split(",").forEach(t=>{e.addSorting(l.sort(t,this.sortDirection,this.naturalSorting))}),e.addAssociation("defaultBillingAddress").addAssociation("group").addAssociation("requestedGroup").addAssociation("salesChannel"),this.filterCriteria.forEach(t=>{e.addFilter(t)}),e},filterSelectCriteria(){let e=new l(1,1);return e.addFilter(l.not("AND",[l.equals("affiliateCode",null),l.equals("campaignCode",null)])),e.addAggregation(l.terms("affiliateCodes","affiliateCode",null,null,null)),e.addAggregation(l.terms("campaignCodes","campaignCode",null,null,null)),e},listFilterOptions(){return{"affiliate-code-filter":{property:"affiliateCode",type:"multi-select-filter",label:this.$tc("sw-customer.filter.affiliateCode.label"),placeholder:this.$tc("sw-customer.filter.affiliateCode.placeholder"),valueProperty:"key",labelProperty:"key",options:this.availableAffiliateCodes},"campaign-code-filter":{property:"campaignCode",type:"multi-select-filter",label:this.$tc("sw-customer.filter.campaignCode.label"),placeholder:this.$tc("sw-customer.filter.campaignCode.placeholder"),valueProperty:"key",labelProperty:"key",options:this.availableCampaignCodes},"customer-group-request-filter":{property:"requestedGroupId",type:"existence-filter",label:this.$tc("sw-customer.filter.customerGroupRequest.label"),placeholder:this.$tc("sw-customer.filter.customerGroupRequest.placeholder"),optionHasCriteria:this.$tc("sw-customer.filter.customerGroupRequest.textHasCriteria"),optionNoCriteria:this.$tc("sw-customer.filter.customerGroupRequest.textNoCriteria")},"salutation-filter":{property:"salutation",label:this.$tc("sw-customer.filter.salutation.label"),placeholder:this.$tc("sw-customer.filter.salutation.placeholder"),labelProperty:"displayName"},"account-status-filter":{property:"active",label:this.$tc("sw-customer.filter.status.label"),placeholder:this.$tc("sw-customer.filter.status.placeholder")},"default-payment-method-filter":{property:"defaultPaymentMethod",label:this.$tc("sw-customer.filter.defaultPaymentMethod.label"),placeholder:this.$tc("sw-customer.filter.defaultPaymentMethod.placeholder")},"group-filter":{property:"group",label:this.$tc("sw-customer.filter.customerGroup.label"),placeholder:this.$tc("sw-customer.filter.customerGroup.placeholder")},"billing-address-country-filter":{property:"defaultBillingAddress.country",label:this.$tc("sw-customer.filter.billingCountry.label"),placeholder:this.$tc("sw-customer.filter.billingCountry.placeholder")},"shipping-address-country-filter":{property:"defaultShippingAddress.country",label:this.$tc("sw-customer.filter.shippingCountry.label"),placeholder:this.$tc("sw-customer.filter.shippingCountry.placeholder")},"tags-filter":{property:"tags",label:this.$tc("sw-customer.filter.tags.label"),placeholder:this.$tc("sw-customer.filter.tags.placeholder")}}},listFilters(){return this.filterFactory.create("customer",this.listFilterOptions)},assetFilter(){return Shopware.Filter.getByName("asset")}},watch:{defaultCriteria:{handler(){this.getList()},deep:!0}},created(){this.createdComponent()},methods:{createdComponent(){return this.loadFilterValues()},onInlineEditSave(e,t){e.then(()=>{this.createNotificationSuccess({message:this.$tc("sw-customer.detail.messageSaveSuccess",0,{name:this.salutation(t)})})}).catch(()=>{this.getList(),this.createNotificationError({message:this.$tc("sw-customer.detail.messageSaveError")})})},async getList(){this.isLoading=!0;let e=await Shopware.Service("filterService").mergeWithStoredFilters(this.storeKey,this.defaultCriteria),t=await this.addQueryScores(this.term,e);if(this.activeFilterNumber=e.filters.length,!this.entitySearchable){this.isLoading=!1,this.total=0;return}this.freshSearchTerm&&t.resetSorting();try{let e=await this.customerRepository.search(t);this.total=e.total,this.customers=e,this.isLoading=!1,this.selection={}}catch{this.isLoading=!1}},onDelete(e){this.showDeleteModal=e},onCloseDeleteModal(){this.showDeleteModal=!1},onConfirmDelete(e){return this.showDeleteModal=!1,this.customerRepository.delete(e).then(()=>{this.getList()})},async onChangeLanguage(){await this.createdComponent(),await this.getList()},getCustomerColumns(){return[{property:"firstName",dataIndex:"lastName,firstName",inlineEdit:"string",label:"sw-customer.list.columnName",routerLink:"sw.customer.detail",width:"250px",allowResize:!0,primary:!0,useCustomSort:!0},{property:"defaultBillingAddress.street",label:"sw-customer.list.columnStreet",allowResize:!0,useCustomSort:!0},{property:"defaultBillingAddress.zipcode",label:"sw-customer.list.columnZip",align:"right",allowResize:!0,useCustomSort:!0},{property:"defaultBillingAddress.city",label:"sw-customer.list.columnCity",allowResize:!0,useCustomSort:!0},{property:"customerNumber",dataIndex:"customerNumber",naturalSorting:!0,label:"sw-customer.list.columnCustomerNumber",allowResize:!0,inlineEdit:"string",align:"right",useCustomSort:!0},{property:"group",dataIndex:"group",naturalSorting:!0,label:"sw-customer.list.columnGroup",allowResize:!0,inlineEdit:"string",align:"right",useCustomSort:!0},{property:"email",inlineEdit:"string",label:"sw-customer.list.columnEmail",allowResize:!0,useCustomSort:!0},{property:"affiliateCode",inlineEdit:"string",label:"sw-customer.list.columnAffiliateCode",allowResize:!0,visible:!1,useCustomSort:!0},{property:"campaignCode",inlineEdit:"string",label:"sw-customer.list.columnCampaignCode",allowResize:!0,visible:!1,useCustomSort:!0},{property:"boundSalesChannelId",label:"sw-customer.list.columnBoundSalesChannel",allowResize:!0,visible:!1,useCustomSort:!0},{property:"active",inlineEdit:"boolean",label:"sw-customer.list.columnActive",allowResize:!0,visible:!1,useCustomSort:!0}]},loadFilterValues(){return this.filterLoading=!0,this.customerRepository.search(this.filterSelectCriteria).then(({aggregations:e})=>(this.availableAffiliateCodes=e?.affiliateCodes?.buckets??[],this.availableCampaignCodes=e?.campaignCodes?.buckets??[],this.filterLoading=!1,e)).catch(()=>{this.filterLoading=!1})},updateCriteria(e){this.page=1,this.filterCriteria=e},async onBulkEditItems(){await this.$nextTick(),this.$router.push({name:"sw.bulk.edit.customer"})},onBulkEditModalOpen(){this.showBulkEditModal=!0},onBulkEditModalClose(){this.showBulkEditModal=!1}}}},562171:function(e,t,s){var n=s(196548);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),s(745346).Z("ce9cab52",n,!0,{})}}]);