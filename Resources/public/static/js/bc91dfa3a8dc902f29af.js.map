{"version":3,"sources":["webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-overview/sw-products-variants-overview.scss","webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-overview/index.js","webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-overview/sw-product-variants-overview.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Mixin","Context","Criteria","Data","_Shopware$Component$g","Component","getComponentHelper","mapState","mapGetters","template","inject","mixins","getByName","props","selectedGroups","type","Array","required","productStates","data","sortBy","sortDirection","showDeleteModal","modalLoading","priceEdit","filterOptions","activeFilter","includeOptions","filterWindowOpen","showBulkEditModal","toBeDeletedVariantIds","computed","_objectSpread","productRepository","this","repositoryFactory","create","productMediaRepository","product","media","entity","mediaRepository","productDownloadRepository","variantColumns","columns","property","label","$tc","allowResize","concat","_toConsumableArray","currencyColumns","dataIndex","align","inlineEdit","width","sortable","includes","splice","length","currencies","sort","_a","b","isSystemDefault","map","currency","id","translated","name","visible","primary","rawData","canBeDeletedCriteria","criteria","variantIds","variant","addFilter","equalsAny","watch","immediate","handler","getFilterOptions","getList","methods","removeFile","fileName","item","downloads","filter","download","fileExtension","save","mediaExists","files","targetId","some","_ref","successfulUpload","event","_this","get","api","then","getDownloadsSource","newDownload","mediaId","productId","State","commit","variants","push","_this2","Promise","resolve","parentId","searchCriteria","state","productStatesFilter","productState","equals","setTotalCountMode","setPage","page","setLimit","limit","multi","getAssociation","addSorting","addAssociation","buildSearchQuery","getFilterCriteria","forEach","search","res","total","$emit","term","split","addQuery","contains","_this3","groups","a","position","group","index","children","getOptionsForGroup","childCount","afterId","storeObject","reduce","result","options","optionsForGroup","elementA","elementB","element","option","groupId","resetFilterOptions","_this4","$nextTick","filterOptionChecked","checked","includeOption","parentGroup","find","configuratorSettings","isDeleted","isPriceFieldInherited","price","currencyId","isActiveFieldInherited","active","isMediaFieldInherited","forceMediaInheritanceRemove","onInheritanceRestore","foundVariantIndex","findIndex","$delete","onActiveInheritanceRestore","onActiveInheritanceRemove","onInheritanceRemove","defaultCurrency","defaultPrice","getDefaultPriceForVariant","newPrice","gross","factor","linked","net","$set","onMediaInheritanceRestore","isInlineEdit","coverId","getIds","remove","onMediaInheritanceRemove","_this5","_ref2","Object","assign","_this6","onVariationDelete","onInlineEditSave","variation","_this7","hasChanges","productName","acc","titleSaveSuccess","messageSaveSuccess","createNotificationSuccess","title","message","catch","titleSaveError","messageSaveError","createNotificationError","onInlineEditCancel","onCloseDeleteModal","onConfirmDelete","_this8","canVariantBeDeleted","canBeDeleted","syncDeleted","$refs","variantGrid","resetSelection","_this9","_asyncToGenerator","_regeneratorRuntime","mark","_callee","products","wrap","_context","prev","next","sent","abrupt","stop","onOptionEdit","$router","params","isPriceEditing","value","toggleBulkEditModal","onEditItems","_this10","_callee2","includesDigital","digital","_context2","values","selection","states","isCloseout","onClickBulkDelete","gridSelection","variantIsDigital"],"mappings":"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","file":"static/js/bc91dfa3a8dc902f29af.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-products-variants-overview.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"92bc62b8\", content, true, {});","/*\n * @package inventory\n */\n\nimport template from './sw-product-variants-overview.html.twig';\nimport './sw-products-variants-overview.scss';\n\nconst { Mixin, Context } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { mapState, mapGetters } = Shopware.Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'feature',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        selectedGroups: {\n            type: Array,\n            required: true,\n        },\n\n        productStates: {\n            type: Array,\n            required: false,\n            default: () => ['all'],\n        },\n    },\n\n    data() {\n        return {\n            sortBy: 'name',\n            sortDirection: 'DESC',\n            showDeleteModal: false,\n            modalLoading: false,\n            priceEdit: false,\n            filterOptions: [],\n            activeFilter: [],\n            includeOptions: [],\n            filterWindowOpen: false,\n            showBulkEditModal: false,\n            toBeDeletedVariantIds: [],\n        };\n    },\n\n    computed: {\n        ...mapState('swProductDetail', [\n            'product',\n            'currencies',\n            'taxes',\n            'variants',\n        ]),\n\n        ...mapGetters('swProductDetail', [\n            'isLoading',\n            'defaultPrice',\n            'defaultCurrency',\n            'productTaxRate',\n        ]),\n\n        productRepository() {\n            return this.repositoryFactory.create('product');\n        },\n\n        productMediaRepository() {\n            return this.repositoryFactory.create(this.product.media.entity);\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        productDownloadRepository() {\n            return this.repositoryFactory.create('product_download');\n        },\n\n        variantColumns() {\n            const columns = [\n                {\n                    property: 'name',\n                    label: this.$tc('sw-product.variations.generatedListColumnVariation'),\n                    allowResize: true,\n                },\n                ...this.currencyColumns,\n                {\n                    property: 'sales',\n                    dataIndex: 'sales',\n                    label: this.$tc('sw-product.list.columnSales'),\n                    allowResize: true,\n                    align: 'right',\n                },\n                {\n                    property: 'stock',\n                    label: this.$tc('sw-product.variations.generatedListColumnStock'),\n                    allowResize: true,\n                    inlineEdit: 'number',\n                    width: '125px',\n                    align: 'right',\n                },\n                {\n                    property: 'productNumber',\n                    label: this.$tc('sw-product.variations.generatedListColumnProductNumber'),\n                    allowResize: true,\n                    inlineEdit: 'string',\n                    width: '150px',\n                },\n                {\n                    property: 'media',\n                    label: this.$tc('sw-product.detailBase.cardTitleMedia'),\n                    allowResize: true,\n                    inlineEdit: true,\n                    sortable: false,\n                },\n                {\n                    property: 'active',\n                    label: this.$tc('sw-product.variations.generatedListColumnActive'),\n                    allowResize: true,\n                    inlineEdit: 'boolean',\n                    align: 'center',\n                },\n            ];\n\n            // adding download files to second last index\n            if (this.productStates.includes('is-download')) {\n                columns.splice(columns.length - 1, 0, {\n                    property: 'downloads',\n                    label: this.$tc('sw-product.variations.generatedListColumnDownload'),\n                    allowResize: true,\n                    inlineEdit: true,\n                    sortable: false,\n                });\n            }\n            return columns;\n        },\n\n        currencyColumns() {\n            // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n            return this.currencies.sort((_a, b) => {\n                return b.isSystemDefault ? 1 : -1;\n            }).map((currency) => {\n                return {\n                    property: `price.${currency.id}.net`,\n                    label: currency.translated.name || currency.name,\n                    visible: currency.isSystemDefault,\n                    allowResize: true,\n                    primary: false,\n                    rawData: false,\n                    inlineEdit: 'number',\n                    width: '250px',\n                };\n            });\n        },\n\n        canBeDeletedCriteria() {\n            const criteria = new Criteria(1, 25);\n            const variantIds = this.toBeDeletedVariantIds.map(variant => variant.id);\n            criteria.addFilter(Criteria.equalsAny('canonicalProductId', variantIds));\n\n            return criteria;\n        },\n    },\n\n    watch: {\n        selectedGroups: {\n            immediate: true,\n            handler() {\n                if (!this.selectedGroups || this.selectedGroups.length === 0) {\n                    return;\n                }\n\n                this.getFilterOptions();\n            },\n        },\n\n        productStates() {\n            this.getList();\n        },\n\n        'product.id': {\n            handler() {\n                this.getList();\n            },\n        },\n    },\n\n    methods: {\n        removeFile(fileName, item) {\n            if (item.downloads.length === 1) {\n                return;\n            }\n\n            item.downloads = item.downloads\n                .filter(download => `${download.media.fileName}.${download.media.fileExtension}` !== fileName);\n\n            this.productRepository.save(item);\n        },\n\n        mediaExists(files, targetId) {\n            return files.some(({ id }) => {\n                return id === targetId;\n            });\n        },\n\n        successfulUpload(event, item) {\n            this.mediaRepository.get(event.targetId, Context.api).then((media) => {\n                if (this.mediaExists(this.getDownloadsSource(item), event.targetId)) {\n                    return;\n                }\n\n                const newDownload = this.productDownloadRepository.create(Context.api);\n                newDownload.mediaId = event.targetId;\n                newDownload.productId = item.id;\n                newDownload.media = media;\n\n                Shopware.State.commit('swProductDetail/setVariants', this.variants.map((variant) => {\n                    if (variant.id === item.id) {\n                        variant.downloads.push(newDownload);\n                        this.productRepository.save(variant);\n                    }\n                    return variant;\n                }));\n            });\n        },\n\n        getDownloadsSource(item) {\n            if (!item.downloads) {\n                return [];\n            }\n\n            return item.downloads.map((download) => {\n                return download.media;\n            });\n        },\n\n        getList() {\n            // Promise needed for inline edit error handling\n            return new Promise((resolve) => {\n                if (this.product.parentId) {\n                    return;\n                }\n\n                Shopware.State.commit('swProductDetail/setLoading', ['variants', true]);\n\n                // Get criteria for search and for option sorting\n                const searchCriteria = new Criteria(1, 25);\n\n                const productStates = this.productStates.filter((state) => state !== 'all');\n                const productStatesFilter = productStates.map((productState) => {\n                    return Criteria.equals('states', productState);\n                });\n\n                // Criteria for Search\n                searchCriteria.setTotalCountMode(1);\n                searchCriteria\n                    .setPage(this.page)\n                    .setLimit(this.limit)\n                    .addFilter(Criteria.equals('product.parentId', this.product.id))\n                    .addFilter(Criteria.multi('AND', productStatesFilter));\n\n                searchCriteria\n                    .getAssociation('media')\n                    .addSorting(Criteria.sort('position'));\n\n                searchCriteria.getAssociation('options')\n                    .addSorting(Criteria.sort('groupId'))\n                    .addSorting(Criteria.sort('id'));\n\n                if (productStates.includes('is-download')) {\n                    searchCriteria.addAssociation('downloads.media');\n                }\n\n                // Add search term\n                this.buildSearchQuery(searchCriteria);\n\n                // User selected filters\n                if (this.getFilterCriteria()) {\n                    this.getFilterCriteria().forEach((criteria) => {\n                        searchCriteria.addFilter(criteria);\n                    });\n                }\n\n                // check for other sort values\n                if (this.sortBy === 'name') {\n                    searchCriteria\n                        .addSorting(Criteria.sort('product.options.name', this.sortDirection));\n                } else {\n                    searchCriteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection));\n                }\n\n                // Start search\n                this.productRepository\n                    .search(searchCriteria)\n                    .then((res) => {\n                        this.total = res.total;\n                        Shopware.State.commit('swProductDetail/setVariants', res);\n                        Shopware.State.commit('swProductDetail/setLoading', ['variants', false]);\n                        this.$emit('variants-finish-update', this.variants);\n                        resolve();\n                    });\n            });\n        },\n\n        buildSearchQuery(criteria) {\n            if (!this.term) {\n                return criteria;\n            }\n\n            // Split each word for search\n            const terms = this.term.split(' ');\n\n            // Create query for each single word\n            terms.forEach((term) => {\n                criteria.addQuery(Criteria.equals('product.options.name', term), 3500);\n                criteria.addQuery(Criteria.contains('product.options.name', term), 500);\n            });\n\n            // return the input\n            return criteria;\n        },\n\n        getFilterOptions() {\n            // Prepare groups\n            const groups = [...this.selectedGroups]\n                .sort((a, b) => a.position - b.position).map((group, index) => {\n                    const children = this.getOptionsForGroup(group.id);\n\n                    return {\n                        id: group.id,\n                        name: group.name,\n                        childCount: children.length,\n                        parentId: null,\n                        afterId: index > 0 ? this.selectedGroups[index - 1].id : null,\n                        storeObject: group,\n                    };\n                });\n\n            // Prepare options\n            const children = groups.reduce((result, group) => {\n                const options = this.getOptionsForGroup(group.id);\n\n                // Iterate for each group options\n                const optionsForGroup = options.sort((elementA, elementB) => {\n                    return elementA.position - elementB.position;\n                }).map((element, index) => {\n                    const option = element.option;\n\n                    // Get previous element\n                    let afterId = null;\n                    if (index > 0) {\n                        afterId = options[index - 1].option.id;\n                    }\n\n                    return {\n                        id: option.id,\n                        name: option.name,\n                        childCount: 0,\n                        parentId: option.groupId,\n                        afterId,\n                        storeObject: element,\n                    };\n                });\n\n                return [...result, ...optionsForGroup];\n            }, []);\n\n            // Assign groups and children to order objects\n            this.filterOptions = [...groups, ...children];\n        },\n\n        resetFilterOptions() {\n            this.filterOptions = [];\n            this.includeOptions = [];\n\n            this.$nextTick(() => {\n                this.getFilterOptions();\n                this.getList();\n            });\n        },\n\n        filterOptionChecked(option) {\n            if (option.checked) {\n                // Remove from include list\n                this.includeOptions.push({\n                    id: option.id,\n                    groupId: option.parentId,\n                });\n            } else {\n                // Add to include option list\n                this.includeOptions = this.includeOptions.filter((includeOption) => includeOption.id !== option.id);\n            }\n        },\n\n        getFilterCriteria() {\n            if (this.includeOptions.length <= 0) {\n                return false;\n            }\n\n            // Collect each selected option in a group\n            // [\n            //   {id: 'abc123', options: [...optionIds]},\n            //   {id: 'def456', options: [...optionIds]},\n            // ]\n            const optionInGroups = this.includeOptions.reduce((result, option) => {\n                const parentGroup = result.find((group) => group.id === option.groupId);\n\n                // Push to group when array exists\n                if (parentGroup) {\n                    parentGroup.options.push(option.id);\n                } else {\n                    // otherwise create new group with the option\n                    result.push({\n                        id: option.groupId,\n                        options: [option.id],\n                    });\n                }\n\n                return result;\n            }, []);\n\n            return optionInGroups.map((group) => {\n                return Criteria.equalsAny('product.optionIds', group.options);\n            });\n        },\n\n        getOptionsForGroup(groupId) {\n            return this.product.configuratorSettings.filter((element) => {\n                return !element.isDeleted && element.option.groupId === groupId;\n            });\n        },\n\n        isPriceFieldInherited(variant, currency) {\n            if (!variant.price) {\n                return true;\n            }\n\n            const foundVariant = variant.price.find((price) => {\n                return price.currencyId === currency.id;\n            });\n\n            return !foundVariant;\n        },\n\n        isActiveFieldInherited(variant) {\n            return variant.active === null;\n        },\n\n        isMediaFieldInherited(variant) {\n            if (variant.forceMediaInheritanceRemove) {\n                return false;\n            }\n\n            if (variant.media) {\n                return variant.media.length <= 0;\n            }\n\n            return !!variant.media;\n        },\n\n        onInheritanceRestore(variant, currency) {\n            if (!variant.price) {\n                return;\n            }\n\n            const foundVariantIndex = variant.price.findIndex((price) => {\n                return price.currencyId === currency.id;\n            });\n\n            if (foundVariantIndex >= 0) {\n                this.$delete(variant.price, foundVariantIndex);\n            }\n\n            if (variant.price.length <= 0) {\n                variant.price = null;\n            }\n        },\n\n        onActiveInheritanceRestore(variant) {\n            variant.active = null;\n        },\n\n        onActiveInheritanceRemove(variant) {\n            variant.active = true;\n        },\n\n        onInheritanceRemove(variant, currency) {\n            if (!variant.price) {\n                variant.price = [];\n            }\n\n            // remove inheritance on default currency variant\n            if (!currency.isSystemDefault) {\n                this.onInheritanceRemove(variant, this.defaultCurrency);\n            }\n\n            // create new price for selected currency\n            const defaultPrice = this.getDefaultPriceForVariant(variant);\n            const newPrice = {\n                currencyId: currency.id,\n                gross: defaultPrice.gross * currency.factor,\n                linked: defaultPrice.linked,\n                net: defaultPrice.net * currency.factor,\n            };\n\n            // add new price currency to variant\n            this.$set(variant.price, variant.price.length, newPrice);\n        },\n\n        onMediaInheritanceRestore(variant, isInlineEdit) {\n            if (!isInlineEdit) {\n                return;\n            }\n\n            variant.forceMediaInheritanceRemove = false;\n            variant.coverId = null;\n\n            variant.media.getIds().forEach((mediaId) => {\n                variant.media.remove(mediaId);\n            });\n        },\n\n        onMediaInheritanceRemove(variant, isInlineEdit) {\n            if (!isInlineEdit) {\n                return;\n            }\n\n            variant.forceMediaInheritanceRemove = true;\n            this.product.media.forEach(({ id, mediaId, position }) => {\n                const media = this.productMediaRepository.create(Context.api);\n                Object.assign(media, { mediaId, position, productId: this.product.id });\n                if (this.product.coverId === id) {\n                    variant.coverId = media.id;\n                }\n\n                variant.media.push(media);\n            });\n        },\n\n        getDefaultPriceForVariant(variant) {\n            if (!variant.price) {\n                return this.defaultPrice;\n            }\n\n            const foundDefaultPrice = variant.price.find((price) => {\n                return price.currencyId === this.defaultCurrency.id;\n            });\n\n            return foundDefaultPrice || this.defaultPrice;\n        },\n\n        onVariationDelete(item) {\n            this.showDeleteModal = true;\n\n            this.toBeDeletedVariantIds.push(item);\n        },\n\n        onInlineEditSave(variation) {\n            // check for changes\n            if (!this.productRepository.hasChanges(variation)) {\n                return;\n            }\n\n            // get product name\n            const productName = variation.options.reduce((acc, option, index) => {\n                return `${acc}${index > 0 ? ' - ' : ''}${option.translated.name}`;\n            }, '');\n\n            this.productRepository.save(variation).then(() => {\n                // create success notification\n                const titleSaveSuccess = this.$tc('global.default.success');\n                const messageSaveSuccess = this.$tc('sw-product.detail.messageSaveSuccess', 0, {\n                    name: productName,\n                });\n\n                this.createNotificationSuccess({\n                    title: titleSaveSuccess,\n                    message: messageSaveSuccess,\n                });\n\n                // update items\n                this.getList();\n            }).catch(() => {\n                // create error notification\n                const titleSaveError = this.$tc('global.default.error');\n                const messageSaveError = this.$tc('global.notification.notificationSaveErrorMessageRequiredFieldsInvalid');\n\n                this.createNotificationError({\n                    title: titleSaveError,\n                    message: messageSaveError,\n                });\n            });\n        },\n\n        onInlineEditCancel() {\n            this.getList();\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n            this.toBeDeletedVariantIds = [];\n        },\n\n        /* eslint-disable no-unused-vars */\n        onConfirmDelete() {\n            this.modalLoading = true;\n            this.showDeleteModal = false;\n            const variantIds = this.toBeDeletedVariantIds.map(variant => variant.id);\n\n            this.canVariantBeDeleted().then(canBeDeleted => {\n                if (!canBeDeleted) {\n                    this.modalLoading = false;\n                    this.toBeDeletedVariantIds = [];\n\n                    this.createNotificationError({\n                        message: this.$tc('sw-product.variations.generatedListMessageDeleteErrorCanonicalUrl'),\n                    });\n\n                    return;\n                }\n\n                this.productRepository.syncDeleted(variantIds).then(() => {\n                    this.modalLoading = false;\n                    this.toBeDeletedVariantIds = [];\n\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-product.variations.generatedListMessageDeleteSuccess'),\n                    });\n\n                    this.$refs.variantGrid.resetSelection();\n                    this.getList();\n                });\n            });\n        },\n\n        async canVariantBeDeleted() {\n            const products = await this.productRepository.search(this.canBeDeletedCriteria);\n\n            return products.length === 0;\n        },\n\n        onOptionEdit(variant) {\n            if (variant?.id) {\n                this.$router.push({\n                    name: 'sw.product.detail',\n                    params: {\n                        id: variant.id,\n                    },\n                });\n            }\n        },\n\n        isPriceEditing(value) {\n            this.priceEdit = value;\n        },\n\n        toggleBulkEditModal() {\n            this.showBulkEditModal = !this.showBulkEditModal;\n        },\n\n        async onEditItems() {\n            await this.$nextTick();\n\n            let includesDigital = '0';\n            const digital = Object.values(this.$refs.variantGrid.selection)\n                .filter(product => product.states.includes('is-download'));\n            if (digital.length > 0) {\n                includesDigital = (digital.filter(product => product.isCloseout).length !== digital.length) ? '1' : '2';\n            }\n\n            this.$router.push({\n                name: 'sw.bulk.edit.product',\n                params: {\n                    parentId: this.product.id,\n                    includesDigital,\n                },\n            });\n        },\n\n        onClickBulkDelete() {\n            const gridSelection = this.$refs.variantGrid.selection;\n            this.toBeDeletedVariantIds = Object.values(gridSelection);\n\n            this.showDeleteModal = true;\n        },\n\n        variantIsDigital(variant) {\n            return this.productStates.includes('all') && variant.states && variant.states.includes('is-download');\n        },\n    },\n};\n","export default \"\\n\\n{% block sw_product_variants_overview %}\\n<div class=\\\"sw-product-variants-overview\\\">\\n\\n    \\n    {% block sw_product_variants_overview_option_list_toolbar %}\\n    <div class=\\\"sw-configuration-option-list__toolbar\\\">\\n        \\n        {% block sw_product_variants_overview_option_list_toolbar_container %}\\n        <sw-container\\n            columns=\\\"1fr minmax(min-content, max-content) minmax(min-content, 180px) minmax(min-content, 180px)\\\"\\n            gap=\\\"0 10px\\\"\\n        >\\n\\n            \\n            {% block sw_product_variants_overview_option_list_toolbar_container_search_field %}\\n            <sw-simple-search-field\\n                v-model=\\\"term\\\"\\n                variant=\\\"form\\\"\\n                size=\\\"small\\\"\\n                @search-term-change=\\\"onSearch\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variants_overview_option_list_toolbar_container_filter_list %}\\n            <div class=\\\"sw-product-variants-overview__filter-list-button\\\">\\n\\n                \\n                {% block sw_product_variants_overview_option_list_toolbar_container_filter_list_button %}\\n                <sw-button @click=\\\"filterWindowOpen = !filterWindowOpen\\\">\\n                    {{ $tc('sw-product.variations.generatedFilterList') }}\\n                    <sw-icon name=\\\"regular-filter\\\" />\\n                </sw-button>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variants_overview_option_list_toolbar_container_filter_context_menu %}\\n                <sw-context-menu v-show=\\\"filterWindowOpen\\\">\\n                    <sw-container\\n                        columns=\\\"1fr\\\"\\n                        gap=\\\"5px\\\"\\n                    >\\n\\n                        \\n                        {% block sw_product_variants_overview_option_list_toolbar_container_filter_tree %}\\n                        <sw-tree\\n                            v-show=\\\"filterOptions.length\\\"\\n                            :sortable=\\\"false\\\"\\n                            :items=\\\"filterOptions\\\"\\n                            :searchable=\\\"false\\\"\\n                            :disable-context-menu=\\\"true\\\"\\n                            bind-items-to-folder\\n                        >\\n                            <template\\n                                #items=\\\"{ treeItems, sortable, draggedItem, disableContextMenu, onChangeRoute, checkItem }\\\"\\n                            >\\n                                <sw-tree-item\\n                                    v-for=\\\"(item, index) in treeItems\\\"\\n                                    :key=\\\"item.id\\\"\\n                                    :sortable=\\\"false\\\"\\n                                    :item=\\\"item\\\"\\n                                    :disable-context-menu=\\\"true\\\"\\n                                    @check-item=\\\"filterOptionChecked\\\"\\n                                />\\n                            </template>\\n                        </sw-tree>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_product_variants_overview_option_list_toolbar_container_filter_buttons %}\\n                        <div class=\\\"sw-product-variants-overview__filter-buttons\\\">\\n                            \\n                            {% block sw_product_variants_overview_option_list_toolbar_container_button_filter_reset %}\\n                            <sw-button @click=\\\"resetFilterOptions()\\\">\\n                                {{ $tc('sw-product.variations.overview.filterReset') }}\\n                            </sw-button>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_product_variants_overview_option_list_toolbar_container_button_update_list %}\\n                            <sw-button\\n                                variant=\\\"primary\\\"\\n                                @click=\\\"getList()\\\"\\n                            >\\n                                {{ $tc('sw-product.variations.overview.filter') }}\\n                            </sw-button>\\n                            {% endblock %}\\n                        </div>\\n                        {% endblock %}\\n\\n                    </sw-container>\\n                </sw-context-menu>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variants_overview_option_list_toolbar_buttons %}\\n            <sw-button\\n                v-tooltip=\\\"{\\n                    message: $tc('sw-privileges.tooltip.warning'),\\n                    disabled: acl.can('product.creator'),\\n                    showOnDisabledElements: true\\n                }\\\"\\n                variant=\\\"ghost\\\"\\n                :disabled=\\\"!acl.can('product.creator')\\\"\\n                class=\\\"sw-product-variants__generate-action\\\"\\n                @click=\\\"$emit('generator-open')\\\"\\n            >\\n                {{ $tc('sw-product.variations.overview.generateVariants') }}\\n            </sw-button>\\n\\n            <sw-button\\n                variant=\\\"ghost\\\"\\n                class=\\\"sw-product-variants__configure-storefront-action\\\"\\n                :disabled=\\\"!acl.can('product.editor')\\\"\\n                @click=\\\"$emit('delivery-open')\\\"\\n            >\\n                {{ $tc('sw-product.variations.overview.storefrontDelivery') }}\\n            </sw-button>\\n            {% endblock %}\\n\\n        </sw-container>\\n        {% endblock %}\\n\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variants_overview_data_grid %}\\n    <sw-data-grid\\n        ref=\\\"variantGrid\\\"\\n        class=\\\"sw-product-variants-overview__data-grid\\\"\\n        :data-source=\\\"variants\\\"\\n        :columns=\\\"variantColumns\\\"\\n        :show-settings=\\\"true\\\"\\n        :show-selection=\\\"acl.can('product.deleter')\\\"\\n        :sort-by=\\\"sortBy\\\"\\n        :sort-direction=\\\"sortDirection\\\"\\n        :is-loading=\\\"isLoading\\\"\\n        :skeleton-item-amount=\\\"limit\\\"\\n        :allow-inline-edit=\\\"acl.can('product.editor')\\\"\\n        identifier=\\\"product-variants-overview\\\"\\n        @column-sort=\\\"onSortColumn\\\"\\n        @inline-edit-save=\\\"onInlineEditSave\\\"\\n        @inline-edit-cancel=\\\"onInlineEditCancel\\\"\\n    >\\n\\n        \\n        {% block sw_product_variants_overview_data_grid_column_name %}\\n        <template\\n            #column-name=\\\"{ item }\\\"\\n        >\\n            <template v-if=\\\"item.options\\\">\\n                <router-link\\n                    :to=\\\"{ name: 'sw.product.detail.base', params: { id: item.id } }\\\"\\n                    class=\\\"sw-product-variants-overview__variation-link\\\"\\n                    @click=\\\"onOptionEdit(item)\\\"\\n                >\\n\\n                    <sw-icon name=\\\"regular-link-xs\\\" />\\n\\n                    <span\\n                        v-for=\\\"(singleVariation, index) in item.options\\\"\\n                        :key=\\\"index\\\"\\n                        class=\\\"sw-product-variants-overview__single-variation\\\"\\n                    >\\n                        {{ singleVariation.translated.name }}\\n                    </span>\\n                </router-link>\\n            </template>\\n\\n            <sw-label\\n                v-if=\\\"variantIsDigital(item)\\\"\\n                class=\\\"sw-product-variants-overview__digital-indicator\\\"\\n            >\\n                {{ $tc('sw-product.variations.generatedListColumnContentProductState.is-download') }}\\n            </sw-label>\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variants_overview_data_grid_column_price %}\\n        <template\\n            v-for=\\\"currency in currencies\\\"\\n            {% if VUE3 %}\\n            :key=\\\"`switch-${currency.isoCode}`\\\"\\n            {% endif %}\\n            #[`column-price.${currency.id}.net`]=\\\"{ item, compact, isInlineEdit }\\\"\\n        >\\n\\n            \\n            {% block sw_product_variants_overview_data_grid_column_price_inline_edit %}\\n            <template v-if=\\\"isInlineEdit\\\">\\n                \\n                {% block sw_product_variants_overview_data_grid_column_price_inline_edit_inherit %}\\n                <sw-inheritance-switch\\n                    {% if VUE2 %}\\n                    :key=\\\"`switch-${currency.isoCode}`\\\"\\n                    {% endif %}\\n                    :is-inherited=\\\"isPriceFieldInherited(item, currency)\\\"\\n                    class=\\\"sw-product-detail-context-prices__inherited-icon\\\"\\n                    @inheritance-restore=\\\"onInheritanceRestore(item, currency)\\\"\\n                    @inheritance-remove=\\\"onInheritanceRemove(item, currency)\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variants_overview_data_grid_column_price_inline_edit_price_field %}\\n                <sw-price-field\\n                    {% if VUE2 %}\\n                    :key=\\\"`price-field-${currency.isoCode}`\\\"\\n                    {% endif %}\\n                    :price=\\\"item.price ? item.price : []\\\"\\n                    :default-price=\\\"getDefaultPriceForVariant(item, currency)\\\"\\n                    :tax-rate=\\\"productTaxRate\\\"\\n                    :label=\\\"false\\\"\\n                    :compact=\\\"compact\\\"\\n                    enable-inheritance\\n                    :currency=\\\"currency\\\"\\n                />\\n                {% endblock %}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variants_overview_data_grid_column_price_preview %}\\n            <template v-else>\\n                \\n                {% block sw_product_variants_overview_data_grid_column_price_preview_inherit %}\\n                <sw-inheritance-switch\\n                    :key=\\\"`else-switch-${currency.isoCode}`\\\"\\n                    :is-inherited=\\\"isPriceFieldInherited(item, currency)\\\"\\n                    class=\\\"sw-product-detail-context-prices__inherited-icon\\\"\\n                    :disabled=\\\"true\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variants_overview_data_grid_column_price_preview_price_field %}\\n                <sw-price-preview\\n                    :key=\\\"`else-price-field-${currency.isoCode}`\\\"\\n                    :price=\\\"item.price ? item.price : []\\\"\\n                    :default-price=\\\"getDefaultPriceForVariant(item, currency)\\\"\\n                    :tax-rate=\\\"productTaxRate\\\"\\n                    :currency=\\\"currency\\\"\\n                />\\n                {% endblock %}\\n            </template>\\n            {% endblock %}\\n\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variants_overview_data_grid_column_stock %}\\n        <template\\n            #column-stock=\\\"{ item, isInlineEdit, compact }\\\"\\n        >\\n            \\n            {% block sw_product_variants_overview_data_grid_column_stock_inline_edit_field %}\\n            <sw-number-field\\n                v-if=\\\"isInlineEdit && (!variantIsDigital(item) || item.isCloseout === true)\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"item.stock\\\"\\n                {% else %}\\n                v-model=\\\"item.stock\\\"\\n                {% endif %}\\n                :size=\\\"compact ? 'small' : 'default'\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variants_overview_data_grid_column_stock_preview %}\\n            <span v-else>\\n                {{ item.stock }}\\n            </span>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variants_overview_data_grid_column_product_number %}\\n        <template\\n            #column-productNumber=\\\"{ item, isInlineEdit, compact }\\\"\\n        >\\n            \\n            {% block sw_product_variants_overview_data_grid_column_product_number_inline_edit %}\\n            <sw-text-field\\n                v-if=\\\"isInlineEdit\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"item.productNumber\\\"\\n                {% else %}\\n                v-model=\\\"item.productNumber\\\"\\n                {% endif %}\\n                :size=\\\"compact ? 'small' : 'default'\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variants_overview_data_grid_column_product_number_preview %}\\n            <span\\n                v-else\\n                class=\\\"sw-product-variants-overview_product-number\\\"\\n            >\\n                {{ item.productNumber }}\\n            </span>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variants_overview_data_grid_column_media %}\\n        <template #column-media=\\\"{ item, isInlineEdit, compact }\\\">\\n            \\n            {% block sw_product_variants_overview_data_grid_column_media_inline_edit %}\\n            \\n            {% block sw_product_variants_overview_data_grid_column_media_inherit %}\\n            <sw-inheritance-switch\\n                :is-inherited=\\\"isMediaFieldInherited(item)\\\"\\n                :disabled=\\\"!isInlineEdit\\\"\\n                class=\\\"sw-product-variants-overview_media__inherited-icon\\\"\\n                @inheritance-restore=\\\"onMediaInheritanceRestore(item, isInlineEdit)\\\"\\n                @inheritance-remove=\\\"onMediaInheritanceRemove(item, isInlineEdit)\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variants_overview_data_grid_column_media_content %}\\n            <sw-product-variants-media-upload\\n                :source=\\\"item\\\"\\n                :upload-tag=\\\"item.id\\\"\\n                :is-inherited=\\\"isMediaFieldInherited(item)\\\"\\n                :disabled=\\\"isInlineEdit ? isMediaFieldInherited(item) : true\\\"\\n                :parent-product=\\\"product\\\"\\n            />\\n            {% endblock %}\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        <template #column-downloads=\\\"{item, isInlineEdit, compact}\\\">\\n            <sw-upload-listener\\n                :upload-tag=\\\"item.productNumber\\\"\\n                auto-upload\\n                @media-upload-finish=\\\"(event) => successfulUpload(event, item)\\\"\\n            />\\n\\n            <sw-media-compact-upload-v2\\n                :upload-tag=\\\"item.productNumber\\\"\\n                :disabled=\\\"!isInlineEdit\\\"\\n                private-filesystem\\n                allow-multi-select\\n                add-files-on-multiselect\\n                :disable-deletion-for-last-item=\\\"{\\n                    value: true,\\n                    helpText: $tc('sw-product.list.columnDownloadsTooltip')\\n                }\\\"\\n                :source-multiselect=\\\"getDownloadsSource(item)\\\"\\n                default-folder=\\\"product_download\\\"\\n                file-accept=\\\"*/*\\\"\\n                @delete-item=\\\"(file) => removeFile(`${file.fileName}.${file.fileExtension}`, item)\\\"\\n            />\\n        </template>\\n\\n        \\n        {% block sw_product_variants_overview_data_grid_column_active %}\\n        <template\\n            #column-active=\\\"{ item, isInlineEdit }\\\"\\n        >\\n            <template v-if=\\\"isInlineEdit\\\">\\n                <sw-data-grid-column-boolean\\n                    v-model=\\\"item.active\\\"\\n                    :is-inline-edit=\\\"isInlineEdit\\\"\\n                    :disabled=\\\"isActiveFieldInherited(item)\\\"\\n                />\\n\\n                <sw-inheritance-switch\\n                    :is-inherited=\\\"isActiveFieldInherited(item)\\\"\\n                    class=\\\"sw-product-variants-overview__active-inherited-icon\\\"\\n                    @inheritance-restore=\\\"onActiveInheritanceRestore(item)\\\"\\n                    @inheritance-remove=\\\"onActiveInheritanceRemove(item)\\\"\\n                />\\n            </template>\\n\\n            <template v-else>\\n                <sw-icon\\n                    v-if=\\\"item.active === true\\\"\\n                    name=\\\"regular-checkmark-xs\\\"\\n                    size=\\\"12px\\\"\\n                    class=\\\"is--active\\\"\\n                />\\n                <sw-icon\\n                    v-else-if=\\\"item.active === false\\\"\\n                    name=\\\"regular-times-s\\\"\\n                    size=\\\"10px\\\"\\n                    class=\\\"is--inactive\\\"\\n                />\\n                <sw-icon\\n                    v-else\\n                    key=\\\"inherit-icon\\\"\\n                    name=\\\"regular-link-horizontal\\\"\\n                    size=\\\"16px\\\"\\n                />\\n            </template>\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variants_overview_actions %}\\n        <template\\n            #actions=\\\"{ item }\\\"\\n        >\\n            \\n            {% block sw_product_variants_overview_actions_items %}\\n            <sw-context-menu-item\\n                v-tooltip=\\\"{\\n                    message: $tc('sw-privileges.tooltip.warning'),\\n                    disabled: acl.can('product.editor'),\\n                    showOnDisabledElements: true\\n                }\\\"\\n                :disabled=\\\"!acl.can('product.editor')\\\"\\n                @click=\\\"onOptionEdit(item)\\\"\\n            >\\n                {{ $tc('sw-product.variations.generatedListContextMenuEdit') }}\\n            </sw-context-menu-item>\\n\\n            <sw-context-menu-item\\n                v-tooltip=\\\"{\\n                    message: $tc('sw-privileges.tooltip.warning'),\\n                    disabled: acl.can('product.deleter'),\\n                    showOnDisabledElements: true\\n                }\\\"\\n                variant=\\\"danger\\\"\\n                :disabled=\\\"!acl.can('product.deleter')\\\"\\n                @click=\\\"onVariationDelete(item)\\\"\\n            >\\n                {{ $tc('sw-product.variations.generatedListContextMenuDelete') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variants_overview_pagination %}\\n        <template #pagination>\\n            <sw-pagination\\n                :page=\\\"page\\\"\\n                :limit=\\\"limit\\\"\\n                :total=\\\"total\\\"\\n                :total-visible=\\\"7\\\"\\n                @page-change=\\\"onPageChange\\\"\\n            />\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variants_overview_bulk %}\\n        <template #bulk>\\n            {% block sw_product_variants_overview_bulk_edit %}\\n            <span\\n                v-if=\\\"acl.can('product.editor')\\\"\\n                class=\\\"link link-primary\\\"\\n                role=\\\"link\\\"\\n                tabindex=\\\"0\\\"\\n                @click=\\\"toggleBulkEditModal\\\"\\n            >\\n                {{ $tc('global.default.bulkEdit') }}\\n            </span>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variants_overview_bulk_delete %}\\n            <span\\n                v-if=\\\"acl.can('product.deleter')\\\"\\n                class=\\\"link link-danger sw-product-variants-overview__bulk-delete-action\\\"\\n                role=\\\"link\\\"\\n                tabindex=\\\"0\\\"\\n                @click=\\\"onClickBulkDelete\\\"\\n            >\\n                {{ $tc('global.default.delete') }}\\n            </span>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variants_overview_bulk_edit_modal %}\\n        <template #bulk-modals=\\\"{ selection }\\\">\\n            <sw-bulk-edit-modal\\n                v-if=\\\"showBulkEditModal\\\"\\n                class=\\\"sw-product-variants-overview__bulk-edit-modal\\\"\\n                :selection=\\\"selection\\\"\\n                :bulk-grid-edit-columns=\\\"variantColumns\\\"\\n                @edit-items=\\\"onEditItems\\\"\\n                @modal-close=\\\"toggleBulkEditModal\\\"\\n            >\\n                \\n                {% block sw_product_variants_overview_bulk_edit_modal_column_name %}\\n                <template #column-name=\\\"{ item }\\\">\\n                    <template v-if=\\\"item.options\\\">\\n                        <router-link\\n                            class=\\\"sw-product-variants-overview__variation-link\\\"\\n                            :to=\\\"{ name: 'sw.product.detail.base', params: { id: item.id } }\\\"\\n                            @click=\\\"onOptionEdit(item)\\\"\\n                        >\\n                            <sw-icon\\n                                class=\\\"sw-product-variants-overview__variation-link-icon\\\"\\n                                name=\\\"regular-link-xs\\\"\\n                            />\\n                            <span\\n                                v-for=\\\"(singleVariation, index) in item.options\\\"\\n                                :key=\\\"index\\\"\\n                                class=\\\"sw-product-variants-overview__variation-link-name\\\"\\n                            >\\n                                {{ singleVariation.translated.name }}\\n                            </span>\\n                        </router-link>\\n                    </template>\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variants_overview_bulk_edit_modal_column_price %}\\n                <template\\n                    v-for=\\\"currency in currencies\\\"\\n                    {% if VUE3 %}\\n                    :key=\\\"currency.id\\\"\\n                    {% endif %}\\n                    #[`column-price.${currency.id}.net`]=\\\"{ item }\\\"\\n                >\\n                    <sw-inheritance-switch\\n                        :key=\\\"`else-switch-${currency.isoCode}`\\\"\\n                        :is-inherited=\\\"isPriceFieldInherited(item, currency)\\\"\\n                        disabled\\n                    />\\n                    <sw-price-preview\\n                        :key=\\\"`else-price-field-${currency.isoCode}`\\\"\\n                        :price=\\\"item.price ? item.price : []\\\"\\n                        :default-price=\\\"getDefaultPriceForVariant(item, currency)\\\"\\n                        :tax-rate=\\\"productTaxRate\\\"\\n                        :currency=\\\"currency\\\"\\n                    />\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variants_overview_bulk_edit_modal_column_media %}\\n                <template #column-media=\\\"{ item }\\\">\\n                    <sw-inheritance-switch\\n                        class=\\\"sw-product-variants-overview_media__inherited-icon\\\"\\n                        :is-inherited=\\\"isMediaFieldInherited(item)\\\"\\n                        disabled\\n                    />\\n                    <sw-product-variants-media-upload\\n                        :source=\\\"item\\\"\\n                        :upload-tag=\\\"item.id\\\"\\n                        :is-inherited=\\\"isMediaFieldInherited(item)\\\"\\n                        :parent-product=\\\"product\\\"\\n                        disabled\\n                    />\\n                </template>\\n                {% endblock %}\\n\\n                <template #column-downloads=\\\"{item, isInlineEdit, compact}\\\">\\n                    <sw-upload-listener\\n                        :upload-tag=\\\"item.productNumber\\\"\\n                        auto-upload\\n                        @media-upload-finish=\\\"(event) => successfulUpload(event, item)\\\"\\n                    />\\n\\n                    <sw-media-compact-upload-v2\\n                        :upload-tag=\\\"item.productNumber\\\"\\n                        :disabled=\\\"!isInlineEdit\\\"\\n                        private-filesystem\\n                        allow-multi-select\\n                        :disable-deletion-for-last-item=\\\"{\\n                            value: true,\\n                            helpText: $tc('sw-product.list.columnDownloadsTooltip')\\n                        }\\\"\\n                        :add-files-on-multiselect=\\\"true\\\"\\n                        :source-multiselect=\\\"getDownloadsSource(item)\\\"\\n                        default-folder=\\\"product_download\\\"\\n                        file-accept=\\\"*/*\\\"\\n                        @delete-item=\\\"(file) => removeFile(`${file.fileName}.${file.fileExtension}`, item)\\\"\\n                    />\\n                </template>\\n\\n                \\n                {% block sw_product_variants_overview_bulk_edit_modal_column_active %}\\n                <template #column-active=\\\"{ item }\\\">\\n                    <sw-icon\\n                        v-if=\\\"item.active === true\\\"\\n                        class=\\\"is--active\\\"\\n                        name=\\\"regular-checkmark-xs\\\"\\n                        small\\n                    />\\n                    <sw-icon\\n                        v-else-if=\\\"item.active === false\\\"\\n                        class=\\\"is--inactive\\\"\\n                        name=\\\"regular-times-s\\\"\\n                        small\\n                    />\\n                    <sw-icon\\n                        v-else\\n                        key=\\\"inherit-icon\\\"\\n                        name=\\\"regular-link-horizontal\\\"\\n                        size=\\\"16\\\"\\n                        multicolor\\n                    />\\n                </template>\\n                {% endblock %}\\n            </sw-bulk-edit-modal>\\n        </template>\\n        {% endblock %}\\n\\n    </sw-data-grid>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variants_overview_data_grid_action_modals %}\\n    <sw-modal\\n        v-if=\\\"showDeleteModal\\\"\\n        class=\\\"sw-product-variants-overview__delete-modal\\\"\\n        :title=\\\"$tc('global.default.warning')\\\"\\n        variant=\\\"small\\\"\\n        @modal-close=\\\"onCloseDeleteModal\\\"\\n    >\\n\\n        <p\\n            class=\\\"sw-product-variants-overview__modal--confirm-delete-text\\\"\\n        >\\n            {{ toBeDeletedVariantIds.length > 1 ? $tc('sw-product.variations.generatedListDeleteModalMessagePlural') : $tc('sw-product.variations.generatedListDeleteModalMessage') }}\\n        </p>\\n\\n        <template #modal-footer>\\n            \\n            {% block sw_product_variants_overview_data_grid_action_modals_buttons %}\\n            <sw-button\\n                class=\\\"sw-product-variants-overview__modal--cancel-button\\\"\\n                size=\\\"small\\\"\\n                :disabled=\\\"modalLoading\\\"\\n                @click=\\\"onCloseDeleteModal\\\"\\n            >\\n                {{ $tc('sw-product.variations.generatedListDeleteModalButtonCancel') }}\\n            </sw-button>\\n            <sw-button\\n                variant=\\\"danger\\\"\\n                size=\\\"small\\\"\\n                :disabled=\\\"modalLoading\\\"\\n                @click=\\\"onConfirmDelete\\\"\\n            >\\n                {{ $tc('sw-product.variations.generatedListDeleteModalButtonDelete') }}\\n            </sw-button>\\n            {% endblock %}\\n        </template>\\n    </sw-modal>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}