(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[46547],{713276:function(){},746547:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return d}}),n(748805);var o=n(570881);let{Component:s,State:i,Mixin:a,Service:r}=Shopware;var d=s.wrapComponentConfig({template:'\n{% block sw_order_create_modal %}\n<sw-modal\n    class="sw-order-create-initial-modal"\n    :closable="false"\n    :title="$tc(\'sw-order.initialModal.titleNewOrder\')"\n    variant="large"\n    @modal-close="onCloseModal"\n>\n    <template #default>\n        \n        {% block sw_order_create_modal_tabs %}\n        <sw-tabs\n            class="sw-order-create-initial-modal__tabs"\n            default-item="customer"\n            position-identifier="sw-order-create-initial-modal"\n        >\n            <template #default="{ active }">\n                \n                {% block sw_order_create_modal_tabs_customer %}\n                <sw-tabs-item\n                    class="sw-order-create-initial-modal__tab-customer"\n                    name="customer"\n                    :active-tab="active"\n                >\n                    {{ $tc(\'sw-order.initialModal.tabCustomer\') }}\n                </sw-tabs-item>\n                {% endblock %}\n\n                \n                {% block sw_order_create_modal_tabs_products %}\n                <sw-tabs-item\n                    class="sw-order-create-initial-modal__tab-product"\n                    name="products"\n                    :active-tab="active"\n                    :disabled="!customer || undefined"\n                >\n                    {{ $tc(\'sw-order.initialModal.tabProducts\') }}\n                </sw-tabs-item>\n                {% endblock %}\n\n                \n                {% block sw_order_create_modal_tabs_options %}\n                <sw-tabs-item\n                    class="sw-order-create-initial-modal__tab-options"\n                    name="options"\n                    :active-tab="active"\n                    :disabled="!customer || undefined"\n                >\n                    {{ $tc(\'sw-order.initialModal.tabOptions\') }}\n                </sw-tabs-item>\n                {% endblock %}\n\n                \n                {% block sw_order_create_modal_tabs_extension %}{% endblock %}\n            </template>\n\n            <template #content="{ active }">\n                \n                {% block sw_order_create_modal_tabs_content %}\n                <div class="sw-order-create-initial-modal__content">\n                    \n                    {% block sw_order_create_modal_tabs_content_customer %}\n                    <sw-order-customer-grid\n                        v-show="active === \'customer\'"\n                    />\n                    {% endblock %}\n\n                    \n                    {% block sw_order_create_modal_tabs_content_products %}\n                    <sw-order-line-items-grid-sales-channel\n                        v-show="active === \'products\'"\n                        :is-loading="isProductGridLoading"\n                        :sales-channel-id="salesChannelId"\n                        :cart="cart"\n                        :currency="currency"\n                        :is-customer-active="isCustomerActive"\n                        @on-save-item="onSaveItem"\n                        @on-remove-items="onRemoveItems"\n                    />\n                    {% endblock %}\n\n                    \n                    {% block sw_order_create_modal_tabs_content_options %}\n                    <sw-order-create-options\n                        v-if="active === \'options\'"\n                        :disabled="!customer || undefined"\n                        :disabled-auto-promotion="disabledAutoPromotion"\n                        :promotion-codes="promotionCodes"\n                        :context="context"\n                        @promotions-change="updatePromotion"\n                        @auto-promotion-toggle="updateAutoPromotionToggle"\n                        @shipping-cost-change="updateShippingCost"\n                    />\n                    {% endblock %}\n                </div>\n                {% endblock %}\n            </template>\n        </sw-tabs>\n        {% endblock %}\n    </template>\n\n    <template #modal-footer>\n        \n        {% block sw_order_create_modal_footer_modal_footer_cancel %}\n        <sw-button\n            class="sw-order-create-initial-modal__button-cancel"\n            size="small"\n            @click="onCloseModal"\n        >\n            {{ $tc(\'global.default.cancel\') }}\n        </sw-button>\n        {% endblock %}\n\n        \n        {% block sw_order_create_modal_footer_modal_footer_preview_order %}\n        <sw-button\n            class="sw-order-create-initial-modal__button-preview"\n            size="small"\n            variant="primary"\n            :disabled="!customer || undefined"\n            :is-loading="isLoading"\n            @click="onPreviewOrder"\n        >\n            {{ $tc(\'sw-order.initialModal.buttonPreviewOrder\') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n\n</sw-modal>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,mixins:[a.getByName("notification"),a.getByName("cart-notification")],data(){return{productItems:[],promotionCodes:[],isLoading:!1,isProductGridLoading:!1,disabledAutoPromotion:!1,shippingCosts:null,context:{currencyId:"",paymentMethodId:"",shippingMethodId:"",languageId:"",billingAddressId:"",shippingAddressId:""}}},computed:{salesChannelId(){return this.customer?.salesChannelId??""},salesChannelContext(){return i.get("swOrder").context},currency(){return this.salesChannelContext.currency},cart(){return i.get("swOrder").cart},customer(){return i.get("swOrder").customer},isCustomerActive(){return i.getters["swOrder/isCustomerActive"]},promotionCodeItems(){return this.promotionCodes.map(t=>({type:o.S.PROMOTION,referencedId:t}))},cartDelivery(){return this.cart?.deliveries[0]}},watch:{salesChannelContext(t){this.context={...this.context,currencyId:t.context.currencyId,languageId:t.context.languageIdChain[0],shippingMethodId:t.shippingMethod.id,paymentMethodId:t.paymentMethod.id,billingAddressId:t.customer?.activeBillingAddress?.id??"",shippingAddressId:t.customer?.activeShippingAddress?.id??""}}},methods:{onCloseModal(){if(!this.customer||!this.cart.token){this.$emit("modal-close");return}this.cancelCart().then(()=>{this.$emit("modal-close")})},async onPreviewOrder(){let t=[];this.isLoading=!0,t.push(this.updateOrderContext()),this.disabledAutoPromotion&&t.push(this.disableAutoAppliedPromotions()),this.promotionCodes.length&&t.push(this.addPromotionCodes()),null!==this.shippingCosts&&this.shippingCosts!==this.cartDelivery?.shippingCosts?.totalPrice&&t.push(this.modifyShippingCost(this.shippingCosts));try{await Promise.all(t)&&this.$emit("order-preview")}finally{this.isLoading=!1}},async onSaveItem(t){this.isProductGridLoading=!0;try{await i.dispatch("swOrder/saveLineItem",{salesChannelId:this.salesChannelId,contextToken:this.cart.token,item:t})}finally{this.isProductGridLoading=!1}},addPromotionCodes(){return i.dispatch("swOrder/saveMultipleLineItems",{salesChannelId:this.customer?.salesChannelId,contextToken:this.cart.token,items:this.promotionCodeItems})},updatePromotion(t){this.promotionCodes=t},async onRemoveItems(t){this.isProductGridLoading=!0;try{await i.dispatch("swOrder/removeLineItems",{salesChannelId:this.salesChannelId,contextToken:this.cart.token,lineItemKeys:t})}finally{this.isProductGridLoading=!1}},updateAutoPromotionToggle(t){this.disabledAutoPromotion=t},updateShippingCost(t){this.shippingCosts=t},updateOrderContext(){return i.dispatch("swOrder/updateOrderContext",{context:this.context,salesChannelId:this.salesChannelId,contextToken:this.cart.token})},disableAutoAppliedPromotions(){let t={salesChannelId:this.salesChannelId};return r("cartStoreService").disableAutomaticPromotions(this.cart.token,t).then(()=>{i.commit("swOrder/setDisabledAutoPromotion",!0)})},modifyShippingCost(t){if(!this.cartDelivery)return Promise.resolve();let e=Math.abs(t);return this.cartDelivery.shippingCosts.unitPrice=e,this.cartDelivery.shippingCosts.totalPrice=e,i.dispatch("swOrder/modifyShippingCosts",{salesChannelId:this.customer?.salesChannelId,contextToken:this.cart.token,shippingCosts:this.cartDelivery?.shippingCosts})},cancelCart(){return i.dispatch("swOrder/cancelCart",{salesChannelId:this.salesChannelId,contextToken:this.cart.token}).then(()=>{this.$emit("modal-close")})}}})},748805:function(t,e,n){var o=n(713276);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[t.id,o,""]]),o.locals&&(t.exports=o.locals),n(745346).Z("6a75747a",o,!0,{})}}]);