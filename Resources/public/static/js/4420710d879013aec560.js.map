{"version":3,"sources":["webpack:///./src/module/sw-sales-channel/component/sw-sales-channel-defaults-select/index.js","webpack:///./src/module/sw-sales-channel/component/sw-sales-channel-defaults-select/sw-sales-channel-defaults-select.html.twig","webpack:///./src/module/sw-sales-channel/component/sw-sales-channel-defaults-select/sw-sales-channel-defaults-select.scss"],"names":["Mixin","Shopware","template","inject","mixins","getByName","props","salesChannel","type","Object","required","default","propertyName","String","propertyLabel","defaultPropertyName","defaultPropertyLabel","propertyNameInDomain","helpText","disabled","Boolean","criteria","undefined","disabledTooltipMessage","shouldShowActiveState","computed","propertyCollection","get","this","set","newCollection","defaultId","newDefaultId","propertyEntityName","entity","propertyNameKebabCase","Utils","string","kebabCase","multiSelectClass","concat","singleSelectClass","defaultsValueError","State","getters","labelProperty","methods","updateCollection","collection","length","addItem","removeItem","getNotInCollection","collectionWith","collectionWithout","find","searched","some","included","id","added","removed","domain","getDomainUsingValue","createNotificationError","message","$tc","url","item","_this","domains","updateDefault","defaultEntity","has","add","isDisabledItem","active","getActiveIconColor","content","__esModule","module","i","locals","exports"],"mappings":"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","file":"static/js/4420710d879013aec560.js","sourcesContent":["/**\n * @package buyers-experience\n */\n\nimport './sw-sales-channel-defaults-select.scss';\nimport template from './sw-sales-channel-defaults-select.html.twig';\n\nconst { Mixin } = Shopware;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['feature'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n\n        propertyName: {\n            type: String,\n            required: true,\n        },\n\n        propertyLabel: {\n            type: String,\n            required: true,\n        },\n\n        defaultPropertyName: {\n            type: String,\n            required: true,\n        },\n\n        defaultPropertyLabel: {\n            type: String,\n            required: true,\n        },\n\n        propertyNameInDomain: {\n            type: String,\n            required: false,\n            default: null,\n\n        },\n\n        helpText: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        criteria: {\n            type: Object,\n            required: false,\n            default: undefined,\n        },\n\n        disabledTooltipMessage: {\n            type: String,\n            required: false,\n            default: '',\n        },\n\n        shouldShowActiveState: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    computed: {\n        propertyCollection: {\n            get() {\n                if (!this.salesChannel) {\n                    return [];\n                }\n\n                return this.salesChannel[this.propertyName];\n            },\n            set(newCollection) {\n                if (!this.salesChannel) {\n                    return;\n                }\n                this.salesChannel[this.propertyName] = newCollection;\n            },\n        },\n\n        defaultId: {\n            get() {\n                if (!this.salesChannel) {\n                    return null;\n                }\n\n                return this.salesChannel[this.defaultPropertyName];\n            },\n            set(newDefaultId) {\n                if (this.salesChannel) {\n                    this.salesChannel[this.defaultPropertyName] = newDefaultId;\n                }\n            },\n        },\n\n        propertyEntityName() {\n            return this.propertyCollection ? this.propertyCollection.entity : null;\n        },\n\n        propertyNameKebabCase() {\n            return Shopware.Utils.string.kebabCase(this.propertyName);\n        },\n\n        multiSelectClass() {\n            return `sw-sales-channel-detail__select-${this.propertyNameKebabCase}`;\n        },\n\n        singleSelectClass() {\n            return `sw-sales-channel-detail__assign-${this.propertyNameKebabCase}`;\n        },\n\n        defaultsValueError() {\n            return Shopware.State.getters['error/getApiError'](this.salesChannel, this.defaultPropertyName);\n        },\n\n        labelProperty() {\n            if (this.propertyEntityName === 'payment_method') {\n                return 'distinguishableName';\n            }\n\n            return 'name';\n        },\n    },\n\n    methods: {\n        updateCollection(collection) {\n            if (collection.length > this.propertyCollection.length) {\n                this.addItem(collection);\n                return;\n            }\n            this.removeItem(collection);\n        },\n\n        getNotInCollection(collectionWith, collectionWithout) {\n            const additionalElement = collectionWith.find((searched) => {\n                return !collectionWithout.some((included) => {\n                    return included.id === searched.id;\n                });\n            });\n\n            return additionalElement || null;\n        },\n\n        addItem(collection) {\n            const added = this.getNotInCollection(collection, this.propertyCollection);\n            this.propertyCollection = collection;\n\n            if (this.propertyCollection.length === 1) {\n                this.defaultId = added.id;\n            }\n        },\n\n        removeItem(collection) {\n            const removed = this.getNotInCollection(this.propertyCollection, collection);\n            if (removed === null) {\n                return;\n            }\n\n            if (this.propertyNameInDomain) {\n                const domain = this.getDomainUsingValue(removed);\n                if (domain !== null) {\n                    this.createNotificationError({\n                        message: this.$tc(\n                            'sw-sales-channel.sw-sales-channel-defaults-select.messageError',\n                            0,\n                            { url: domain.url },\n                        ),\n                    });\n                    return;\n                }\n            }\n\n            this.propertyCollection = collection;\n            if (this.defaultId === removed.id) {\n                this.defaultId = null;\n            }\n        },\n\n        getDomainUsingValue(item) {\n            return this.salesChannel.domains.find((domain) => {\n                return domain[this.propertyNameInDomain] === item.id;\n            }) || null;\n        },\n\n        updateDefault(defaultId, defaultEntity) {\n            this.defaultId = defaultId;\n\n            if (!!defaultId && !this.propertyCollection.has(defaultId)) {\n                this.propertyCollection.add(defaultEntity);\n            }\n        },\n\n        isDisabledItem(item) {\n            return item.active === false;\n        },\n\n        getActiveIconColor(item) {\n            return this.isDisabledItem(item) ? '#d1d9e0' : '#37d046';\n        },\n    },\n};\n","export default \"\\n{% block sw_sales_channel_defaults_select %}\\n<sw-container\\n    class=\\\"sw-sales-channel-defaults-select\\\"\\n    gap=\\\"0px 30px\\\"\\n    columns=\\\"1fr 200px\\\"\\n>\\n    <template v-if=\\\"salesChannel\\\">\\n        <sw-entity-multi-select\\n            :label-property=\\\"labelProperty\\\"\\n            :disabled=\\\"disabled\\\"\\n            :class=\\\"multiSelectClass\\\"\\n            :label=\\\"propertyLabel\\\"\\n            :help-text=\\\"helpText\\\"\\n            :entity-collection=\\\"propertyCollection\\\"\\n            :criteria=\\\"criteria\\\"\\n            {% if VUE3 %}\\n            @update:entity-collection=\\\"updateCollection\\\"\\n            {% else %}\\n            @change=\\\"updateCollection\\\"\\n            {% endif %}\\n        >\\n            <template\\n                v-if=\\\"shouldShowActiveState\\\"\\n                #result-label-preview=\\\"{ item }\\\"\\n            >\\n                <sw-icon\\n                    class=\\\"sw-sales-channel-defaults-select__active-icon\\\"\\n                    size=\\\"6\\\"\\n                    :color=\\\"getActiveIconColor(item)\\\"\\n                    name=\\\"solid-circle\\\"\\n                />\\n            </template>\\n        </sw-entity-multi-select>\\n\\n        <sw-entity-single-select\\n            :label-property=\\\"labelProperty\\\"\\n            :disabled=\\\"disabled\\\"\\n            :class=\\\"singleSelectClass\\\"\\n            :label=\\\"defaultPropertyLabel\\\"\\n            :help-text=\\\"helpText\\\"\\n            required\\n            show-clearable-button\\n            :entity=\\\"propertyEntityName\\\"\\n            :value=\\\"defaultId\\\"\\n            :error=\\\"defaultsValueError\\\"\\n            :criteria=\\\"criteria\\\"\\n            :selection-disabling-method=\\\"isDisabledItem\\\"\\n            :disabled-selection-tooltip=\\\"{ message: disabledTooltipMessage }\\\"\\n            {% if VUE3 %}\\n            @update:value=\\\"updateDefault\\\"\\n            {% else %}\\n            @change=\\\"updateDefault\\\"\\n            {% endif %}\\n        />\\n    </template>\\n</sw-container>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-sales-channel-defaults-select.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6255979c\", content, true, {});"],"sourceRoot":""}