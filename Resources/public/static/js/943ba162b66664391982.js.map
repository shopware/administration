{"version":3,"sources":["webpack:///./src/module/sw-settings-tax/component/sw-settings-tax-rule-type-individual-states-cell/sw-settings-tax-rule-type-individual-states-cell.html.twig","webpack:///./src/module/sw-settings-tax/component/sw-settings-tax-rule-type-individual-states-cell/index.js"],"names":["Context","Shopware","Criteria","Data","template","inject","props","taxRule","type","Object","required","data","individualStates","computed","stateRepository","this","repositoryFactory","create","watch","loadStates","created","createdComponent","methods","_this","states","length","criteria","setIds","search","api","then","map","state","name"],"mappings":"4HAAe,ICMPA,EAAYC,SAAZD,QACAE,EAAaD,SAASE,KAAtBD,SAGO,WACXE,SDXW,+RCaXC,OAAQ,CAAC,qBAETC,MAAO,CACHC,QAAS,CACLC,KAAMC,OACNC,UAAU,IAIlBC,KAAI,WACA,MAAO,CACHC,iBAAkB,OAI1BC,SAAU,CACNC,gBAAe,WACX,OAAOC,KAAKC,kBAAkBC,OAAO,mBAI7CC,MAAO,CACH,sBAAqB,WACjBH,KAAKI,eAIbC,QAAO,WACHL,KAAKM,oBAGTC,QAAS,CACLD,iBAAgB,WACZN,KAAKI,cAETA,WAAU,WAAI,IAADI,EAAA,KACT,GAAKR,KAAKR,QAAQI,MACVI,KAAKR,QAAQI,KAAKa,QAClBT,KAAKR,QAAQI,KAAKa,OAAOC,OAFjC,CAQA,IAAMC,EAAW,IAAIxB,EAAS,EAAG,IACjCwB,EAASC,OAAOZ,KAAKR,QAAQI,KAAKa,QAElCT,KAAKD,gBAAgBc,OAAOF,EAAU1B,EAAQ6B,KAAKC,MAAK,SAAAN,GACpDD,EAAKX,iBAAmBY,EAAOO,KAAI,SAAAC,GAAK,OAAIA,EAAMC,gBARlDlB,KAAKH,iBAAmB","file":"static/js/943ba162b66664391982.js","sourcesContent":["export default \"\\n{% block sw_settings_tax_rule_type_individual_states_cell %}\\n<span>\\n    {{ taxRule.type.typeName }}:\\n    <template v-if=\\\"individualStates\\\">\\n        {{ individualStates.join(', ') }}\\n    </template>\\n    <template v-else>\\n        -\\n    </template>\\n</span>\\n{% endblock %}\\n\";","import template from './sw-settings-tax-rule-type-individual-states-cell.html.twig';\n\n/**\n * @package checkout\n */\n\nconst { Context } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    props: {\n        taxRule: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            individualStates: null,\n        };\n    },\n\n    computed: {\n        stateRepository() {\n            return this.repositoryFactory.create('country_state');\n        },\n    },\n\n    watch: {\n        'taxRule.data.states'() {\n            this.loadStates();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.loadStates();\n        },\n        loadStates() {\n            if (!this.taxRule.data\n                || !this.taxRule.data.states\n                || !this.taxRule.data.states.length\n            ) {\n                this.individualStates = [];\n                return;\n            }\n\n            const criteria = new Criteria(1, 25);\n            criteria.setIds(this.taxRule.data.states);\n\n            this.stateRepository.search(criteria, Context.api).then(states => {\n                this.individualStates = states.map(state => state.name);\n            });\n        },\n    },\n};\n"],"sourceRoot":""}