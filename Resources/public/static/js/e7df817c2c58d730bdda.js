(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[3646],{164594:function(){},903646:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return a}}),s(371195);let{Mixin:n}=Shopware,{Criteria:i}=Shopware.Data;var a={template:'\n{% block sw_cms_list %}\n<sw-page class="sw-cms-list">\n    \n    {% block sw_cms_list_search_bar %}\n    <template #search-bar>\n        <sw-search-bar\n            initial-search-type="cms_page"\n            :initial-search="term"\n            @search="onSearch"\n        />\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_cms_list_toolbar %}\n    <template #smart-bar-header>\n        <h2>{{ $tc(\'sw-cms.general.moduleTitle\') }}</h2>\n    </template>\n\n    <template #language-switch>\n        <sw-language-switch @on-change="onChangeLanguage" />\n    </template>\n\n    <template #smart-bar-actions>\n        <sw-button\n            v-tooltip="{\n                message: $tc(\'sw-privileges.tooltip.warning\'),\n                disabled: acl.can(\'cms.creator\'),\n                showOnDisabledElements: true\n            }"\n            variant="primary"\n            :disabled="!acl.can(\'cms.creator\') || undefined"\n            @click="onCreateNewLayout"\n        >\n            {{ $tc(\'sw-cms.general.createNewLayout\') }}\n        </sw-button>\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_cms_list_card_view %}\n    <template #content>\n        <sw-card-view>\n\n            \n            {% block sw_cms_list_content %}\n            <div class="sw-cms-list__content">\n                \n                {% block sw_cms_list_sidebar %}\n                <div class="sw-cms-list__sidebar">\n                    \n                    {% block sw_cms_list_sidebar_tabs %}\n                    <sw-tabs\n                        is-vertical\n                        small\n                        position-identifier="sw-cms-list-sidebar"\n                        class="sw-cms-list__type-nav"\n                    >\n                        <sw-tabs-item\n                            v-for="pageType in sortPageTypes"\n                            :key="pageType.name"\n                            :disabled="pageType.disabled || undefined"\n                            :active="pageType.active"\n                            @click="onSortPageType(pageType.value)"\n                        >\n                            {{ pageType.name }}\n                        </sw-tabs-item>\n                    </sw-tabs>\n                    {% endblock %}\n                </div>\n                {% endblock %}\n\n                \n                {% block sw_cms_list_listing %}\n                <div class="sw-cms-list__listing">\n\n                    \n                    {% block sw_cms_list_listing_actions %}\n                    <div class="sw-cms-list__actions">\n                        \n                        {% block sw_cms_list_listing_title %}\n                        <h3>{{ $tc(\'sw-cms.general.greeting\') }}</h3>\n                        {% endblock %}\n\n                        \n                        {% block sw_cms_list_listing_actions_sorting %}\n                        <div class="sw-cms-list__actions-sorting">\n\n                            \n                            {% block sw_cms_list_listing_actions_sorting_select %}\n                            <sw-sorting-select\n                                :sort-by="sortBy"\n                                :sort-direction="sortDirection"\n                                @sorting-changed="onSort"\n                            />\n                            {% endblock %}\n\n                        </div>\n                        {% endblock %}\n\n                        \n                        {% block sw_cms_list_listing_actions_mode %}\n                        <div\n                            class="sw-cms-list__actions-mode"\n                            role="button"\n                            tabindex="0"\n                            @click="onListModeChange"\n                            @keydown.enter="onListModeChange"\n                        >\n                            <sw-icon\n                                v-if="listMode === \'grid\'"\n                                name="regular-view-normal"\n                                size="16"\n                            />\n                            <sw-icon\n                                v-if="listMode === \'list\'"\n                                name="regular-view-grid"\n                                size="16"\n                            />\n                        </div>\n                        {% endblock %}\n                    </div>\n                    {% endblock %}\n\n                    \n                    {% block sw_cms_list_listing_list %}\n                    <div class="sw-cms-list__list">\n\n                        \n                        {% block sw_cms_list_listing_list_grid %}\n                        <div\n                            v-if="listMode === \'grid\'"\n                            class="sw-cms-list__list-grid"\n                        >\n\n                            \n                            {% block sw_cms_list_listing_list_grid_content %}\n                            <div class="sw-cms-list__list-grid-content">\n                                <template v-if="!isLoading">\n                                    \n                                    {% block sw_cms_list_listing_list_item %}\n                                    <sw-cms-list-item\n                                        v-for="(cmsPage, index) in pages"\n                                        :key="cmsPage.id"\n                                        :class="\'sw-cms-list-item--\' + index"\n                                        :page="cmsPage"\n                                        :active="layoutIsLinked(cmsPage.id)"\n                                        :is-default="[defaultProductId, defaultCategoryId].includes(cmsPage.id)"\n                                        @item-click="onListItemClick"\n                                        @preview-image-change="onPreviewChange"\n                                        @cms-page-delete="onDeleteCmsPage"\n                                    >\n                                        <template #contextMenu>\n                                            <sw-context-button class="sw-cms-list-item__options">\n                                                \n                                                {% block sw_cms_list_listing_list_item_option_add_preview %}\n                                                <sw-context-menu-item\n                                                    class="sw-cms-list-item__option-preview"\n                                                    :disabled="!acl.can(\'cms.editor\') || undefined"\n                                                    @click="onPreviewChange(cmsPage)"\n                                                >\n                                                    {{ $tc(\'sw-cms.components.cmsListItem.addPreviewImage\') }}\n                                                </sw-context-menu-item>\n                                                {% endblock %}\n\n                                                <sw-context-menu-item\n                                                    v-if="showDefaultLayoutContextMenu(cmsPage)"\n                                                    class="sw-cms-list-item__option-set-as-default"\n                                                    :disabled="!acl.can(\'system_config:update\') || !acl.can(\'system_config:create\') || !acl.can(\'system_config:delete\') || undefined"\n                                                    @click="onOpenLayoutSetAsDefault(cmsPage)"\n                                                >\n                                                    <template v-if="cmsPage.type == \'product_detail\'">\n                                                        {{ $tc(\'sw-cms.components.cmsListItem.setAsDefaultProductDetail\') }}\n                                                    </template>\n                                                    <template v-else>\n                                                        {{ $tc(\'sw-cms.components.cmsListItem.setAsDefaultProductList\') }}\n                                                    </template>\n                                                </sw-context-menu-item>\n\n                                                \n                                                {% block sw_cms_list_listing_list_item_option_duplicate %}\n                                                <sw-context-menu-item\n                                                    :disabled="!acl.can(\'cms.creator\') || undefined"\n                                                    class="sw-cms-list-item__option-duplicate"\n                                                    @click="onDuplicateCmsPage(cmsPage)"\n                                                >\n                                                    {{ $tc(\'sw-cms.components.cmsListItem.duplicate\') }}\n                                                </sw-context-menu-item>\n                                                {% endblock %}\n\n                                                \n                                                {% block sw_cms_list_listing_list_item_option_remove_preview %}\n                                                <sw-context-menu-item\n                                                    v-if="cmsPage.previewMediaId"\n                                                    class="sw-cms-list-item__option-preview"\n                                                    variant="danger"\n                                                    :disabled="!acl.can(\'cms.editor\') || undefined"\n                                                    @click="onPreviewImageRemove(cmsPage)"\n                                                >\n                                                    {{ $tc(\'sw-cms.components.cmsListItem.removePreviewImage\') }}\n                                                </sw-context-menu-item>\n                                                {% endblock %}\n\n                                                \n                                                {% block sw_cms_list_listing_list_item_option_delete %}\n                                                <sw-context-menu-item\n                                                    v-if="!cmsPage.locked && defaultProductId !== cmsPage.id && defaultCategoryId !== cmsPage.id"\n                                                    v-tooltip="deleteDisabledToolTip(cmsPage)"\n                                                    class="sw-cms-list-item__option-delete"\n                                                    variant="danger"\n                                                    :disabled="optionContextDeleteDisabled(cmsPage) || undefined"\n                                                    @click="onDeleteCmsPage(cmsPage)"\n                                                >\n                                                    {{ $tc(\'sw-cms.components.cmsListItem.delete\') }}\n                                                </sw-context-menu-item>\n                                            {% endblock %}\n\n                                            </sw-context-button>\n                                        </template>\n                                    </sw-cms-list-item>\n                                    {% endblock %}\n                                </template>\n\n                                <template v-else>\n                                    <sw-skeleton\n                                        v-for="index in 9"\n                                        :key="`cms-list-skeleton-${index}`"\n                                        variant="gallery"\n                                    />\n                                </template>\n                            </div>\n                            {% endblock %}\n\n                            \n                            {% block sw_cms_list_listing_pagination %}\n                            <sw-pagination\n                                v-if="!isLoading"\n                                class="sw-cms-list__list-pagination"\n                                :page="page"\n                                :limit="limit"\n                                :total="total"\n                                :steps="[9]"\n                                @page-change="onPageChange"\n                            />\n                            {% endblock %}\n                        </div>\n                        {% endblock %}\n\n                        \n                        {% block sw_cms_list_listing_list_card %}\n                        <sw-card\n                            v-else-if="listMode === \'list\'"\n                            position-identifier="sw-cms-list-list-mode"\n                            class="sw-cms-list__list-card"\n                        >\n                            <template #grid>\n                                \n                                {% block sw_cms_list_listing_list_data_grid %}\n                                <sw-data-grid\n                                    class="sw-cms-list__list-data-grid"\n                                    identifier="sw-cms-list"\n                                    :is-loading="isLoading"\n                                    :data-source="pages"\n                                    :columns="columnConfig"\n                                    :skeleton-item-amount="limit"\n                                    :sort-by="sortBy"\n                                    :sort-direction="sortDirection"\n                                    :allow-inline-edit="false"\n                                    :allow-column-edit="false"\n                                    show-settings\n                                    :show-selection="false"\n                                >\n\n                                    \n                                    {% block sw_cms_list_listing_list_data_grid_column_name %}\n                                    <template #column-name="{ item }">\n                                        <sw-icon\n                                            v-if="item.locked"\n                                            name="regular-lock"\n                                            class="sw-cms-list__icon-lock"\n                                            size="14"\n                                        />\n                                        <router-link :to="{ name: \'sw.cms.detail\', params: { id: item.id } }">\n                                            {{ item.translated.name }}\n                                        </router-link>\n                                    </template>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_cms_list_listing_list_data_grid_column_type %}\n                                    <template #column-type="{ item }">\n                                        {{ getPageType(item) }}\n                                    </template>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_cms_list_listing_list_data_grid_column_assignments %}\n                                    <template #column-assignments="{ item }">\n                                        <sw-icon\n                                            small\n                                            size="10px"\n                                            :name="layoutIsLinked(item.id) ? \'regular-checkmark-xs\' : \'regular-times-xs\'"\n                                            :class="layoutIsLinked(item.id) ? \'is--active\' : \'is--inactive\'"\n                                        />\n                                    </template>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_cms_list_listing_list_data_grid_column_assignment_list %}\n                                    <template #column-assignedPages="{ item }">\n                                        <div v-tooltip="getPagesTooltip(item)">\n                                            {{ getPagesString(item) }}\n                                        </div>\n                                    </template>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_cms_list_listing_list_data_grid_column_created %}\n                                    <template #column-createdAt="{ item }">\n                                        {{ dateFilter(item.createdAt, { hour: \'2-digit\', minute: \'2-digit\' }) }}\n                                    </template>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_cms_list_listing_list_data_grid_column_updated %}\n                                    <template #column-updatedAt="{ item }">\n                                        {{ dateFilter(item.updatedAt, { hour: \'2-digit\', minute: \'2-digit\' }) }}\n                                    </template>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_cms_list_listing_list_data_grid_actions %}\n                                    <template #actions="{ item }">\n                                        \n                                        {% block sw_cms_list_listing_list_data_grid_actions_edit %}\n                                        <sw-context-menu-item\n                                            :router-link="{ name: \'sw.cms.detail\', params: { id: item.id } }"\n                                            class="sw-cms-list__context-menu-item-edit"\n                                            :disabled="!acl.can(\'cms.editor\') || undefined"\n                                        >\n                                            {{ $tc(\'sw-cms.components.cmsListItem.edit\') }}\n                                        </sw-context-menu-item>\n                                        {% endblock %}\n\n                                        <sw-context-menu-item\n                                            v-if="showDefaultLayoutContextMenu(item)"\n                                            class="sw-cms-list-item__option-set-as-default"\n                                            :disabled="!acl.can(\'system_config:update\') || !acl.can(\'system_config:create\') || !acl.can(\'system_config:delete\') || undefined"\n                                            @click="onOpenLayoutSetAsDefault(item)"\n                                        >\n                                            <template v-if="item.type == \'product_detail\'">\n                                                {{ $tc(\'sw-cms.components.cmsListItem.setAsDefaultProductDetail\') }}\n                                            </template>\n                                            <template v-else>\n                                                {{ $tc(\'sw-cms.components.cmsListItem.setAsDefaultProductList\') }}\n                                            </template>\n                                        </sw-context-menu-item>\n\n                                        \n                                        {% block sw_cms_list_listing_list_data_grid_actions_edit_duplicate %}\n                                        <sw-context-menu-item\n                                            :disabled="!acl.can(\'cms.creator\') || undefined"\n                                            class="sw-cms-list__context-menu-item-duplicate"\n                                            @click="onDuplicateCmsPage(item)"\n                                        >\n                                            {{ $tc(\'sw-cms.components.cmsListItem.duplicate\') }}\n                                        </sw-context-menu-item>\n                                        {% endblock %}\n\n                                        \n                                        {% block sw_cms_list_listing_list_item_option_rename %}\n                                        <sw-context-menu-item\n                                            v-if="!item.locked"\n                                            :disabled="!acl.can(\'cms.editor\') || undefined"\n                                            class="sw-cms-list__context-menu-item-rename"\n                                            @click="onRenameCmsPage(item)"\n                                        >\n                                            {{ $tc(\'sw-cms.components.cmsListItem.rename\') }}\n                                        </sw-context-menu-item>\n                                        {% endblock %}\n\n                                        \n                                        {% block sw_cms_list_listing_list_data_grid_actions_edit_delete %}\n                                        <sw-context-menu-item\n                                            v-if="!item.locked && defaultProductId !== item.id && defaultCategoryId !== item.id"\n                                            v-tooltip="deleteDisabledToolTip(item)"\n                                            variant="danger"\n                                            class="sw-cms-list__context-menu-item-delete"\n                                            :disabled="optionContextDeleteDisabled(item) || undefined"\n                                            @click="onDeleteCmsPage(item)"\n                                        >\n                                            {{ $tc(\'sw-cms.components.cmsListItem.delete\') }}\n\n                                        </sw-context-menu-item>\n                                        {% endblock %}\n\n                                    </template>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_cms_list_listing_list_data_grid_pagination %}\n                                    <template #pagination>\n                                        <sw-pagination\n                                            :page="page"\n                                            :limit="limit"\n                                            :total="total"\n                                            :steps="[5, 10, 25, 50]"\n                                            @page-change="onPageChange"\n                                        />\n                                    </template>\n                                    {% endblock %}\n                                </sw-data-grid>\n                                {% endblock %}\n                            </template>\n                        </sw-card>\n                        {% endblock %}\n                    </div>\n                    {% endblock %}\n\n                    \n                    {% block sw_cms_list_listing_list_empty_state %}\n                    <sw-empty-state\n                        v-if="isValidTerm(term) && !isLoading && !total"\n                        :title="$tc(\'sw-empty-state.messageNoResultTitle\')"\n                        :style="{ minHeight: \'200px\' }"\n                    >\n                        <template #default>\n                            {{ $tc(\'sw-empty-state.messageNoResultSublineBefore\') }}\n                            <router-link\n                                class="sw-empty-state__description-link"\n                                :to="{ name: \'sw.profile.index.searchPreferences\' }"\n                            >\n                                {{ $tc(\'sw-empty-state.messageNoResultSublineLink\') }}\n                            </router-link>\n                            {{ $tc(\'sw-empty-state.messageNoResultSublineAfter\') }}\n                        </template>\n                    </sw-empty-state>\n                    {% endblock %}\n                </div>\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n            \n            {% block sw_cms_list_media_modal %}\n            <sw-media-modal-v2\n                v-if="showMediaModal"\n                :caption="$tc(\'sw-cms.components.cmsListItem.modal.captionMediaUpload\')"\n                :entity-context="\'cms_page\'"\n                :allow-multi-select="false"\n                @media-modal-selection-change="onPreviewImageChange"\n                @modal-close="onModalClose"\n            />\n            {% endblock %}\n\n            <sw-confirm-modal\n                v-if="showLayoutSetAsDefaultModal"\n                class="sw-cms-list__confirm-set-as-default-modal"\n                :title="$tc(\'sw-cms.components.setDefaultLayoutModal.title\')"\n                :text="$tc(\'sw-cms.components.setDefaultLayoutModal.infoText\', newDefaultLayout.type === \'product_detail\')"\n                @confirm="onConfirmLayoutSetAsDefault"\n                @cancel="onCloseLayoutSetAsDefault"\n                @close="onCloseLayoutSetAsDefault"\n            />\n\n            \n            {% block sw_cms_list_rename_modal %}\n            <sw-modal\n                v-if="showRenameModal"\n                :title="$tc(\'sw-cms.components.cmsListItem.modal.renameModalTitle\')"\n                variant="small"\n                @modal-close="onCloseRenameModal"\n            >\n\n                \n                {% block sw_cms_list_rename_modal_confirm_rename_input %}\n                <div class="sw_tree__confirm-rename-text">\n                    {{ $tc(\'sw-cms.components.cmsListItem.modal.textRenameConfirm\', 0, { pageName: currentPage.translated.name || currentPage.name }) }}\n                </div>\n                <sw-text-field\n                    v-model:value="newName"\n                    class="sw_tree__confirm-rename-text-field"\n                    size="medium"\n                />\n                {% endblock %}\n\n                \n                {% block sw_cms_list_rename_modal_footer %}\n                <template #modal-footer>\n                    \n                    {% block sw_cms_list_rename_modal_cancel %}\n                    <sw-button\n                        size="small"\n                        @click="onCloseRenameModal"\n                    >\n                        {{ $tc(\'sw-cms.components.cmsListItem.modal.buttonCancel\') }}\n                    </sw-button>\n                    {% endblock %}\n\n                    \n                    {% block sw_cms_list_rename_modal_confirm %}\n                    <sw-button\n                        size="small"\n                        variant="primary"\n                        @click="onConfirmPageRename"\n                    >\n                        {{ $tc(\'sw-cms.components.cmsListItem.modal.buttonRename\') }}\n                    </sw-button>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n            </sw-modal>\n            {% endblock %}\n\n            \n            {% block sw_cms_list_delete_modal %}\n            <sw-modal\n                v-if="showDeleteModal"\n                :title="$tc(\'global.default.warning\')"\n                variant="small"\n                @modal-close="onCloseDeleteModal"\n            >\n\n                \n                {% block sw_cms_list_delete_modal_confirm_delete_text %}\n                <div class="sw_tree__confirm-delete-text">\n                    {{ $tc(\'sw-cms.components.cmsListItem.modal.textDeleteConfirm\', 0, { pageName: currentPage.translated.name || currentPage.name }) }}\n                </div>\n                {% endblock %}\n\n                \n                {% block sw_cms_list_delete_modal_footer %}\n                <template #modal-footer>\n                    \n                    {% block sw_cms_list_delete_modal_cancel %}\n                    <sw-button\n                        size="small"\n                        @click="onCloseDeleteModal"\n                    >\n                        {{ $tc(\'sw-cms.components.cmsListItem.modal.buttonCancel\') }}\n                    </sw-button>\n                    {% endblock %}\n\n                    \n                    {% block sw_cms_list_delete_modal_confirm %}\n                    <sw-button\n                        variant="danger"\n                        size="small"\n                        @click="onConfirmPageDelete"\n                    >\n                        {{ $tc(\'sw-cms.components.cmsListItem.modal.buttonDelete\') }}\n                    </sw-button>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n            </sw-modal>\n            {% endblock %}\n\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory","acl","feature","systemConfigApiService","cmsPageTypeService"],mixins:[n.getByName("listing"),n.getByName("notification"),n.getByName("user-settings")],data(){return{pages:[],linkedLayouts:[],isLoading:!1,cardViewIdentifier:"grid.cms.sw-cms-list-grid",sortBy:"createdAt",sortDirection:"DESC",limit:9,limitDefaults:{gridView:10,cardView:9},associationLimit:25,term:"",currentPageType:null,showMediaModal:!1,currentPage:null,showRenameModal:!1,newName:null,showDeleteModal:!1,defaultMediaFolderId:null,listMode:"grid",assignablePageTypes:["categories","products"],searchConfigEntity:"cms_page",showLayoutSetAsDefaultModal:!1,defaultCategoryId:"",defaultProductId:"",newDefaultLayout:void 0,maxVisibleAssignedPages:3}},metaInfo(){return{title:this.$createTitle()}},computed:{pageRepository(){return this.repositoryFactory.create("cms_page")},defaultFolderRepository(){return this.repositoryFactory.create("media_default_folder")},columnConfig(){return this.getColumnConfig()},sortPageTypes(){let e={value:"",name:this.$tc("sw-cms.sorting.labelSortByAllPages"),active:!0};return this.cmsPageTypeService.getTypes().reduce((e,t)=>(e.push({value:t.name,name:this.$tc(t.title)}),e),[e])},listCriteria(){let e=new i(this.page,this.limit);return e.getAssociation("categories").addSorting(i.sort("name","ASC")).setLimit(this.associationLimit),e.getAssociation("products").addSorting(i.sort("name","ASC")).setLimit(this.associationLimit),e.addAssociation("previewMedia").addSorting(i.sort(this.sortBy,this.sortDirection)),null!==this.term&&e.setTerm(this.term),null!==this.currentPageType&&e.addFilter(i.equals("cms_page.type",this.currentPageType)),this.addLinkedLayoutsAggregation(e),e},associatedCategoryBuckets(){return this.pages.aggregations?.categories?.buckets||[]},associatedProductBuckets(){return this.pages.aggregations?.products?.buckets||[]},isLinkedCriteria(){return[{type:"multi",operator:"OR",queries:this.assignablePageTypes.map(e=>i.not("OR",[i.equals(`${e}.id`,null)]))}]},dateFilter(){return Shopware.Filter.getByName("date")}},created(){this.createdComponent()},methods:{createdComponent(){Shopware.State.commit("adminMenu/collapseSidebar"),this.acl.can("user_config:read")&&this.loadGridUserSettings(),this.acl.can("system_config:read")&&this.getDefaultLayouts(),this.setPageContext(),this.resetList()},async loadGridUserSettings(){let e=await this.getUserSettings(this.cardViewIdentifier);e&&(this.listMode=e.listMode,this.sortBy=e.sortBy,this.sortDirection=e.sortDirection,this.updateLimit())},updateLimit(){this.limit="grid"===this.listMode?this.limitDefaults.cardView:this.limitDefaults.gridView},saveGridUserSettings(){if(!this.acl.can("user_config:create")||!this.acl.can("user_config:update")){console.warn("Did not persist user config, as permissions are missing.");return}this.saveUserSettings(this.cardViewIdentifier,{listMode:this.listMode,sortBy:this.sortBy,sortDirection:this.sortDirection})},setPageContext(){this.getDefaultFolderId().then(e=>{this.defaultMediaFolderId=e})},async getList(){this.isLoading=!0;let e=await this.addQueryScores(this.term,this.listCriteria);return this.entitySearchable?this.pageRepository.search(e).then(e=>(this.total=e.total,this.pages=e,e.aggregations?.linkedLayouts&&(this.linkedLayouts=e.aggregations.linkedLayouts.entities),this.isLoading=!1,this.pages)).catch(()=>{this.isLoading=!1}):(this.isLoading=!1,this.total=0,!1)},addLinkedLayoutsAggregation(e){let t=i.filter("linkedLayoutsFilter",this.isLinkedCriteria,{name:"linkedLayouts",type:"entity",definition:"cms_page",field:"id"});e.addAggregation(t)},addPageAggregations(e){return e.addAggregation(i.terms("products","id",null,null,i.count("productCount","products.id"))).addAggregation(i.terms("categories","id",null,null,i.count("categoryCount","categories.id")))},showDefaultLayoutContextMenu(e){return!!this.acl.can("system_config:read")&&("product_list"===e.type?this.defaultCategoryId!==e.id:"product_detail"===e.type&&this.defaultProductId!==e.id)},async getDefaultLayouts(){let e=await this.systemConfigApiService.getValues("core.cms");this.defaultCategoryId=e["core.cms.default_category_cms_page"],this.defaultProductId=e["core.cms.default_product_cms_page"]},onOpenLayoutSetAsDefault(e){this.newDefaultLayout={id:e.id,type:e.type},this.showLayoutSetAsDefaultModal=!0},onCloseLayoutSetAsDefault(){this.newDefaultLayout=void 0,this.showLayoutSetAsDefaultModal=!1},async onConfirmLayoutSetAsDefault(){let e="category_cms_page",{id:t,type:s}=this.newDefaultLayout;"product_detail"===s?(this.defaultProductId=t,e="product_cms_page"):this.defaultCategoryId=t,await this.systemConfigApiService.saveValues({[`core.cms.default_${e}`]:t}),this.showLayoutSetAsDefaultModal=!1},layoutIsLinked(e){return this.linkedLayouts.some(t=>t.id===e)},resetList(){this.page=1,this.pages=[],this.updateRoute({page:this.page,limit:this.limit,term:this.term,sortBy:this.sortBy,sortDirection:this.sortDirection}),this.getList()},getDefaultFolderId(){let e=new i(1,1);return e.addAssociation("folder"),e.addFilter(i.equals("entity","cms_page")),this.defaultFolderRepository.search(e).then(e=>{let t=e.first();return t.folder?.id?t.folder.id:null})},onChangeLanguage(e){Shopware.State.commit("context/setApiLanguageId",e),this.resetList()},onListItemClick(e){this.$router.push({name:"sw.cms.detail",params:{id:e.id}})},onSortingChanged(e){[this.sortBy,this.sortDirection]=e.split(":"),this.resetList(),this.saveGridUserSettings()},onSearch(e=null){!e.length||e.length<=0?this.term=null:this.term=e,this.resetList()},onSortPageType(e=null){!e.length||e.length<=0?this.currentPageType=null:this.currentPageType=e,this.resetList()},onPageChange({page:e,limit:t}){this.page=e,this.limit=t,this.getList(),this.updateRoute({page:this.page,limit:this.limit})},onCreateNewLayout(){this.$router.push({name:"sw.cms.create"})},onListModeChange(){this.listMode="grid"===this.listMode?"list":"grid",this.updateLimit(),this.resetList(),this.saveGridUserSettings()},onPreviewChange(e){this.showMediaModal=!0,this.currentPage=e},onPreviewImageRemove(e){e.previewMediaId=null,e.previewMedia=null,this.saveCmsPage(e)},onModalClose(){this.showMediaModal=!1,this.currentPage=null},onPreviewImageChange([e]){this.currentPage.previewMediaId=e.id,this.saveCmsPage(this.currentPage),this.currentPage.previewMedia=e},onRenameCmsPage(e){this.currentPage=e,this.showRenameModal=!0},onCloseRenameModal(){this.currentPage=null,this.showRenameModal=!1},onConfirmPageRename(){this.newName&&(this.currentPage.name=this.newName,this.saveCmsPage(this.currentPage),this.getList()),this.newName=null,this.currentPage=null,this.showRenameModal=!1},onDeleteCmsPage(e){this.currentPage=e,this.showDeleteModal=!0},onDuplicateCmsPage(e,t={overwrites:{}}){t.overwrites||(t.overwrites={}),t.overwrites.name||(t.overwrites.name=`${e.name} - ${this.$tc("global.default.copy")}`),this.isLoading=!0,this.pageRepository.clone(e.id,t,Shopware.Context.api).then(()=>{this.resetList(),this.isLoading=!1}).catch(()=>{this.isLoading=!1,this.createNotificationError({message:this.$tc("global.notification.unspecifiedSaveErrorMessage")})})},onCloseDeleteModal(){this.currentPage=null,this.showDeleteModal=!1},onConfirmPageDelete(){this.deleteCmsPage(this.currentPage),this.currentPage=null,this.showDeleteModal=!1},saveCmsPage(e,t=Shopware.Context.api){return this.isLoading=!0,this.pageRepository.save(e,t).then(()=>{this.isLoading=!1}).catch(()=>{this.isLoading=!1})},deleteCmsPage(e){let t=this.$tc("sw-cms.components.cmsListItem.notificationDeleteErrorMessage");return this.isLoading=!0,this.pageRepository.delete(e.id).then(()=>{this.resetList()}).catch(()=>{this.isLoading=!1,this.createNotificationError({message:t})})},getColumnConfig(){return[{property:"name",label:this.$tc("sw-cms.list.gridHeaderName"),inlineEdit:"string",primary:!0,sortable:!1},{property:"type",label:this.$tc("sw-cms.list.gridHeaderType"),sortable:!1},{property:"assignments",label:this.$tc("sw-cms.list.gridHeaderAssignments"),sortable:!1},{property:"assignedPages",label:this.$tc("sw-cms.list.gridHeaderAssignedPages"),sortable:!1,visible:!1},{property:"createdAt",label:this.$tc("sw-cms.list.gridHeaderCreated"),sortable:!1},{property:"updatedAt",label:this.$tc("sw-cms.list.gridHeaderUpdated"),sortable:!1,visible:!1}]},deleteDisabledToolTip(e){return"product_detail"===e.type?{showDelay:300,message:this.$tc("sw-cms.general.deleteDisabledProductToolTip"),disabled:!this.layoutIsLinked(e.id)}:{showDelay:300,message:this.$tc("sw-cms.general.deleteDisabledToolTip"),disabled:!this.layoutIsLinked(e.id)}},getPageType(e){let t=[this.defaultProductId,this.defaultCategoryId].includes(e.id),s=this.$tc("sw-cms.components.cmsListItem.defaultLayout"),n=this.$tc(this.cmsPageTypeService.getType(e.type)?.title);return t?`${s} - ${n}`:n},getPageCategoryCount(e){return e.categories.length},getPageProductCount(e){return e.products.length},getPageCount(e){let t=this.getPageCategoryCount(e)+this.getPageProductCount(e);return t>0?t:"-"},getPages(e){return[...e.categories.map(e=>e.name),...e.products.map(e=>e.name)]},getPagesString(e){let t=this.getPages(e),s=[...t].splice(0,this.maxVisibleAssignedPages).join(", ");return this.maxVisibleAssignedPages<t.length&&(s+=", ..."),s},getPagesTooltip(e){let t=this.getPages(e),s=t.join(", ");return this.associationLimit<this.getPageCount(e)&&(s+=", ..."),{width:300,message:s,disabled:this.maxVisibleAssignedPages>=t.length}},optionContextDeleteDisabled(e){return this.getPageCategoryCount(e)>0||this.getPageProductCount(e)>0||!this.acl.can("cms.deleter")}}}},371195:function(e,t,s){var n=s(164594);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),s(745346).Z("b3dc145e",n,!0,{})}}]);