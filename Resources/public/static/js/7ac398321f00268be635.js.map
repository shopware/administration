{"version":3,"sources":["webpack:///./src/app/asyncComponent/media/sw-media-modal-replace/sw-media-modal-replace.scss","webpack:///./src/app/asyncComponent/media/sw-media-modal-replace/index.js","webpack:///./src/app/asyncComponent/media/sw-media-modal-replace/sw-media-modal-replace.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","template","inject","mixins","getByName","props","itemToReplace","type","Object","required","data","uploadTag","isUploadDataSet","newFileExtension","methods","onNewUpload","_ref","this","extension","fileExtension","emitCloseReplaceModal","$emit","replaceMediaItem","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","previousName","wrap","_context","prev","next","isLoading","fileName","mediaService","runUploads","id","renameMedia","stop"],"mappings":"yGAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,yFCNpCQ,G,UAAUC,SAAVD,OAaO,WACXE,SCjBW,qmDDmBXC,OAAQ,CAAC,eAAgB,qBAEzBC,OAAQ,CACJJ,EAAMK,UAAU,iBAGpBC,MAAO,CACHC,cAAe,CACXC,KAAMC,OACNC,UAAU,EACVhB,QAAS,OAIjBiB,KAAI,WACA,MAAO,CACHC,UAAW,KACXC,iBAAiB,EACjBC,iBAAkB,KAI1BC,QAAS,CACLC,YAAW,SAAAC,GAAY,IAATN,EAAIM,EAAJN,KACVO,KAAKL,iBAAkB,EAEvB,IAAMC,EAAmBH,EAAK,GAAGQ,UAG7BL,IAFqBI,KAAKX,cAAca,gBAGxCF,KAAKJ,iBAAmBA,IAIhCO,sBAAqB,WACjBH,KAAKI,MAAM,8BAGTC,iBAAgB,WAAI,IAADC,EAAA,YAAAC,IAAAC,IAAAC,MAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE2B,OADhDT,EAAKjB,cAAc2B,WAAY,EACzBL,EAAeL,EAAKjB,cAAc4B,SAAQJ,EAAAE,KAAA,EAE1CT,EAAKY,aAAaC,WAAWb,EAAKjB,cAAc+B,IAAI,KAAD,SAAAP,EAAAE,KAAA,EACnDT,EAAKY,aAAaG,YAAYf,EAAKjB,cAAc+B,GAAIT,GAAc,KAAD,EAExEL,EAAKjB,cAAc2B,WAAY,EAC/BV,EAAKF,MAAM,qCAAqC,wBAAAS,EAAAS,UAAAZ,MAR3BH,O","file":"static/js/7ac398321f00268be635.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-media-modal-replace.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"153486da\", content, true, {});","import template from './sw-media-modal-replace.html.twig';\nimport './sw-media-modal-replace.scss';\n\nconst { Mixin } = Shopware;\n\n/**\n * @status ready\n * @description The <u>sw-media-modal-replace</u> component is used to let the user upload a new image for an\n * existing media object.\n * @package content\n * @example-type code-only\n * @component-example\n * <sw-media-modal-replace itemToReplace=\"item\">\n * </sw-media-modal-replace>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['mediaService', 'repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        itemToReplace: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            uploadTag: null,\n            isUploadDataSet: false,\n            newFileExtension: '',\n        };\n    },\n\n    methods: {\n        onNewUpload({ data }) {\n            this.isUploadDataSet = true;\n\n            const newFileExtension = data[0].extension;\n            const oldFileExtension = this.itemToReplace.fileExtension;\n\n            if (newFileExtension !== oldFileExtension) {\n                this.newFileExtension = newFileExtension;\n            }\n        },\n\n        emitCloseReplaceModal() {\n            this.$emit('media-replace-modal-close');\n        },\n\n        async replaceMediaItem() {\n            this.itemToReplace.isLoading = true;\n            const previousName = this.itemToReplace.fileName;\n\n            await this.mediaService.runUploads(this.itemToReplace.id);\n            await this.mediaService.renameMedia(this.itemToReplace.id, previousName);\n\n            this.itemToReplace.isLoading = false;\n            this.$emit('media-replace-modal-item-replaced');\n        },\n    },\n};\n","export default \"\\n{% block sw_media_modal_replace %}\\n<sw-modal\\n    class=\\\"sw-media-modal-replace\\\"\\n    size=\\\"420px\\\"\\n    :title=\\\"$tc('global.sw-media-modal-replace.titleModal')\\\"\\n    @modal-close=\\\"emitCloseReplaceModal\\\"\\n>\\n\\n    <sw-upload-listener\\n        :upload-tag=\\\"itemToReplace.id\\\"\\n        @media-upload-add=\\\"onNewUpload\\\"\\n    />\\n\\n    <sw-media-replace\\n        class=\\\"sw-media-modal-replace__upload\\\"\\n        :item-to-replace=\\\"itemToReplace\\\"\\n        :upload-tag=\\\"itemToReplace.id\\\"\\n        variant=\\\"regular\\\"\\n    />\\n\\n    <sw-alert\\n        v-if=\\\"newFileExtension\\\"\\n        class=\\\"sw-media-modal-replace__file-extension-warning\\\"\\n        variant=\\\"warning\\\"\\n    >\\n        {{ $tc('global.sw-media-modal-replace.warningFileExtension', 0, { extension: newFileExtension }) }}\\n    </sw-alert>\\n\\n    \\n    {% block sw_media_modal_replace_modal_footer %}\\n    <template #modal-footer>\\n        \\n        {% block sw_media_modal_replace_cancel_button %}\\n        <sw-button\\n            size=\\\"small\\\"\\n            @click=\\\"emitCloseReplaceModal\\\"\\n        >\\n            {{ $tc('global.default.cancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_media_modal_replace_replace_button %}\\n        <sw-button\\n            class=\\\"sw-media-replace__replace-media-action\\\"\\n            size=\\\"small\\\"\\n            variant=\\\"primary\\\"\\n            :disabled=\\\"!isUploadDataSet\\\"\\n            @click=\\\"replaceMediaItem\\\"\\n        >\\n            {{ $tc('global.sw-media-modal-replace.buttonReplace') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n</sw-modal>\\n{% endblock %}\\n\";"],"sourceRoot":""}