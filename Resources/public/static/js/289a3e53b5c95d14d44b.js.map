{"version":3,"sources":["webpack:///./src/module/sw-settings-tag/component/sw-settings-tag-detail-assignments/index.js","webpack:///./src/module/sw-settings-tag/component/sw-settings-tag-detail-assignments/sw-settings-tag-detail-assignments.html.twig","webpack:///./src/module/sw-settings-tag/component/sw-settings-tag-detail-assignments/sw-settings-tag-detail-assignments.scss"],"names":["_Shopware","Shopware","Context","Mixin","Criteria","Data","template","inheritAttrs","inject","mixins","getByName","props","tag","type","Object","required","toBeAdded","toBeDeleted","initialCounts","default","property","String","entity","data","_this$entity","_this$property","selectedEntity","this","selectedAssignment","entitiesGridKey","preSelected","entities","isLoading","showSelected","counts","_objectSpread","currentPageCountBuckets","disableRouteParams","page","limit","computed","tagDefinition","EntityDefinition","get","isInheritable","_Shopware$EntityDefin","_Shopware$EntityDefin2","_Shopware$EntityDefin3","_Shopware$EntityDefin4","properties","tags","flags","inherited","assignmentAssociations","_this","entries","forEach","_ref","_ref2","_slicedToArray","propertyName","relation","push","name","$tc","concat","assignment","assignmentAssociationsColumns","dataIndex","primary","allowResize","sortable","entityRepository","repositoryFactory","create","entityCriteria","_this2","criteria","setTerm","term","addSorting","sort","addAssociation","addTagAggregations","keys","filter","id","parentId","isInherited","hasInheritedTag","length","addFilter","multi","equals","equalsAny","not","entitiesColumns","selectedAssignments","_this3","selection","Proxy","target","key","set","value","values","$set","hasOwnProperty","$delete","totalAssignments","total","count","watch","getList","methods","_this4","searchInheritedEntities","then","search","catch","_this5","api","inheritance","items","isNew","utils","createId","entityIds","map","_ref3","relationCriteria","addPostFilter","selected","aggregations","buckets","item","arguments","undefined","aggregation","addAggregation","terms","Promise","resolve","addedPromise","deletedPromise","inheritedAddedCriteria","searchIds","_ref4","filters","inheritedDeletedCriteria","_ref5","all","onTermChange","_this6","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","onAssignmentChange","_ref6","onSelectionChange","$emit","countDecrease","countIncrease","getCount","selfToBeDeleted","_ref7","parentHasTags","parentToBeDeleted","parentTags","_ref8","parentToBeAdded","bucket","onPageChange","_ref9","content","__esModule","module","i","locals","exports","add"],"mappings":"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","file":"static/js/289a3e53b5c95d14d44b.js","sourcesContent":["/**\n * @package inventory\n */\nimport utils from 'src/core/service/util.service';\nimport template from './sw-settings-tag-detail-assignments.html.twig';\nimport './sw-settings-tag-detail-assignments.scss';\n\nconst { Context, Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n    inheritAttrs: false,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        tag: {\n            type: Object,\n            required: true,\n        },\n        toBeAdded: {\n            type: Object,\n            required: true,\n        },\n        toBeDeleted: {\n            type: Object,\n            required: true,\n        },\n        initialCounts: {\n            type: Object,\n            required: false,\n            default() {\n                return {};\n            },\n        },\n        property: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        entity: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            selectedEntity: this.entity ?? 'product',\n            selectedAssignment: this.property ?? 'products',\n            entitiesGridKey: null,\n            preSelected: {},\n            entities: null,\n            isLoading: false,\n            showSelected: this.property && this.entity,\n            counts: { ...this.initialCounts },\n            currentPageCountBuckets: [],\n            disableRouteParams: true,\n            page: 1,\n            limit: 25,\n        };\n    },\n\n    computed: {\n        tagDefinition() {\n            return Shopware.EntityDefinition.get('tag');\n        },\n\n        isInheritable() {\n            return Shopware.EntityDefinition.get(this.selectedEntity)?.properties?.tags?.flags?.inherited === true;\n        },\n\n        assignmentAssociations() {\n            const assignmentAssociations = [];\n\n            Object.entries(this.tagDefinition.properties).forEach(([propertyName, property]) => {\n                if (property.relation === 'many_to_many') {\n                    assignmentAssociations.push({\n                        name: this.$tc(`sw-settings-tag.detail.assignments.${propertyName}`),\n                        entity: property.entity,\n                        assignment: propertyName,\n                    });\n                }\n            });\n\n            return assignmentAssociations;\n        },\n\n        assignmentAssociationsColumns() {\n            return [{\n                property: 'name',\n                dataIndex: 'name',\n                primary: true,\n                allowResize: false,\n                sortable: false,\n            }];\n        },\n\n        entityRepository() {\n            return this.repositoryFactory.create(this.selectedEntity);\n        },\n\n        entityCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n            criteria.setTerm(this.term);\n            criteria.addSorting(Criteria.sort('createdAt', 'DESC'));\n\n            if (this.selectedEntity === 'product') {\n                criteria.addAssociation('options.group');\n            }\n            if (this.selectedEntity === 'order') {\n                criteria.addAssociation('orderCustomer');\n            }\n\n            if (this.isInheritable) {\n                this.addTagAggregations(criteria);\n            }\n\n            if (!this.showSelected) {\n                return criteria;\n            }\n\n            const toBeAdded = Object.keys(this.toBeAdded[this.selectedAssignment]);\n            const toBeDeleted = Object.keys(this.toBeDeleted[this.selectedAssignment]).filter((id) => {\n                const parentId = this.toBeDeleted[this.selectedAssignment][id].parentId;\n\n                if (!this.isInheritable || !parentId) {\n                    return true;\n                }\n\n                return !this.isInherited(id, parentId) || !this.hasInheritedTag(id, parentId);\n            });\n\n            if (toBeAdded.length) {\n                criteria.addFilter(Criteria.multi('OR', [\n                    Criteria.equals('tags.id', this.tag.id),\n                    Criteria.equalsAny('id', toBeAdded),\n                ]));\n            } else {\n                criteria.addFilter(Criteria.equals('tags.id', this.tag.id));\n            }\n\n            if (!toBeDeleted.length) {\n                return criteria;\n            }\n\n            criteria.addFilter(Criteria.not('AND', [\n                Criteria.equalsAny('id', toBeDeleted),\n            ]));\n\n            return criteria;\n        },\n\n        entitiesColumns() {\n            return [{\n                property: 'name',\n                primary: true,\n                allowResize: false,\n                sortable: false,\n            }];\n        },\n\n        selectedAssignments() {\n            const selection = new Proxy(({ ...this.preSelected }), {\n                get(target, key) {\n                    return target[key];\n                },\n                set(target, key, value) {\n                    target[key] = value;\n                    return true;\n                },\n            });\n\n            Object.values(this.toBeAdded[this.selectedAssignment]).forEach((toBeAdded) => {\n                this.$set(selection, toBeAdded.id, toBeAdded);\n            });\n\n            Object.values(this.toBeDeleted[this.selectedAssignment]).forEach((toBeDeleted) => {\n                if (selection.hasOwnProperty(toBeDeleted.id)) {\n                    this.$delete(selection, toBeDeleted.id);\n                }\n            });\n\n            return selection;\n        },\n\n        totalAssignments() {\n            let total = 0;\n\n            Object.values(this.counts).forEach((count) => {\n                total += count;\n            });\n\n            return total;\n        },\n    },\n\n    watch: {\n        selectedEntity() {\n            this.page = 1;\n            this.getList();\n        },\n\n        showSelected() {\n            this.page = 1;\n            this.getList();\n        },\n    },\n\n    methods: {\n        getList() {\n            this.isLoading = true;\n            const criteria = this.entityCriteria;\n\n            if (this.showSelected && this.isInheritable) {\n                return this.searchInheritedEntities(criteria).then(() => {\n                    return this.search(criteria);\n                }).catch(() => {\n                    this.isLoading = false;\n                });\n            }\n\n            return this.search(criteria);\n        },\n\n        search(criteria) {\n            return this.entityRepository.search(criteria, {\n                ...Context.api,\n                inheritance: true,\n            }).then((items) => {\n                if (this.tag.isNew() || items.total === 0) {\n                    this.entitiesGridKey = utils.createId();\n                    this.total = items.total;\n                    this.entities = items;\n                    this.isLoading = false;\n\n                    return null;\n                }\n\n                const entityIds = items.map(({ id }) => {\n                    return id;\n                });\n                const relationCriteria = new Criteria(1, this.limit);\n                relationCriteria.addFilter(Criteria.equalsAny('id', entityIds));\n                if (this.isInheritable) {\n                    this.addTagAggregations(relationCriteria, false);\n                }\n                relationCriteria.addPostFilter(Criteria.equals('tags.id', this.tag.id));\n\n                return this.entityRepository.search(relationCriteria).then((selected) => {\n                    if (this.isInheritable) {\n                        this.currentPageCountBuckets = selected.aggregations.tags.buckets;\n                    }\n\n                    const preSelected = {};\n                    selected.forEach((item) => {\n                        preSelected[item.id] = item;\n                    });\n                    this.preSelected = preSelected;\n                    this.entitiesGridKey = utils.createId();\n\n                    this.total = items.total;\n                    this.entities = items;\n                    this.isLoading = false;\n                });\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        addTagAggregations(criteria, filter = true) {\n            let aggregation = Criteria.count('tags', `${this.selectedEntity}.tags.id`);\n\n            if (filter) {\n                aggregation = Criteria.filter(\n                    'tags',\n                    [Criteria.equals('tags.id', this.tag.id)],\n                    aggregation,\n                );\n\n                criteria.addAggregation(\n                    Criteria.terms(\n                        'parentTags',\n                        'id',\n                        null,\n                        null,\n                        Criteria.count('parentTags', `${this.selectedEntity}.parent.tags.id`),\n                    ),\n                );\n            }\n\n            criteria.addAggregation(\n                Criteria.terms(\n                    'tags',\n                    'id',\n                    null,\n                    null,\n                    aggregation,\n                ),\n            );\n        },\n\n        searchInheritedEntities(criteria) {\n            const toBeAdded = Object.keys(this.toBeAdded[this.selectedAssignment]);\n            const toBeDeleted = Object.keys(this.toBeDeleted[this.selectedAssignment]);\n\n            if (!toBeAdded.length && !toBeDeleted.length) {\n                return Promise.resolve();\n            }\n\n            let addedPromise = Promise.resolve();\n            let deletedPromise = Promise.resolve();\n\n            if (toBeAdded.length) {\n                const inheritedAddedCriteria = new Criteria(1, 25);\n                inheritedAddedCriteria.addFilter(Criteria.multi('AND', [\n                    Criteria.equals('tags.id', null),\n                    Criteria.equalsAny('parentId', toBeAdded),\n                ]));\n\n                addedPromise = this.entityRepository.searchIds(inheritedAddedCriteria).then(({ data, total }) => {\n                    if (total === 0) {\n                        return;\n                    }\n\n                    criteria.filters = [\n                        Criteria.multi('OR', [\n                            Criteria.multi('AND', criteria.filters),\n                            Criteria.equalsAny('id', data),\n                        ]),\n                    ];\n                });\n            }\n\n            if (toBeDeleted.length) {\n                const inheritedDeletedCriteria = new Criteria(1, 25);\n                inheritedDeletedCriteria.addFilter(Criteria.equals('tags.id', null));\n                inheritedDeletedCriteria.addFilter(Criteria.equalsAny('parentId', toBeDeleted));\n                if (toBeAdded.length) {\n                    inheritedDeletedCriteria.addFilter(Criteria.not('AND', [\n                        Criteria.equalsAny('id', toBeAdded),\n                    ]));\n                }\n\n                deletedPromise = this.entityRepository.searchIds(inheritedDeletedCriteria).then(({ data, total }) => {\n                    if (total === 0) {\n                        return;\n                    }\n\n                    criteria.addFilter(Criteria.not('AND', [\n                        Criteria.equalsAny('id', data),\n                    ]));\n                });\n            }\n\n            return Promise.all([addedPromise, deletedPromise]);\n        },\n\n        async onTermChange(term) {\n            this.term = term;\n            this.page = 1;\n            await this.getList();\n        },\n\n        onAssignmentChange({ entity, assignment }) {\n            this.selectedEntity = entity;\n            this.selectedAssignment = assignment;\n        },\n\n        onSelectionChange(selection, item, selected) {\n            const id = item.id;\n\n            if (!selected) {\n                this.$emit('remove-assignment', this.selectedAssignment, id, item);\n                this.countDecrease(this.selectedAssignment);\n\n                return;\n            }\n\n            this.$emit('add-assignment', this.selectedAssignment, id, item);\n            this.countIncrease(this.selectedAssignment);\n        },\n\n        getCount(propertyName) {\n            if (this.counts.hasOwnProperty(propertyName)) {\n                return this.counts[propertyName];\n            }\n\n            return null;\n        },\n\n        countIncrease(propertyName) {\n            if (this.counts.hasOwnProperty(propertyName)) {\n                this.counts[propertyName] += 1;\n            } else {\n                this.$set(this.counts, propertyName, 1);\n            }\n        },\n\n        countDecrease(propertyName) {\n            if (this.counts.hasOwnProperty(propertyName) && this.counts[propertyName] !== 0) {\n                this.counts[propertyName] -= 1;\n            } else {\n                this.$set(this.counts, propertyName, 0);\n            }\n\n            if (!this.showSelected) {\n                return;\n            }\n\n            if (this.page > 1 && this.entities.length === 1) {\n                this.page -= 1;\n            }\n\n            this.getList();\n        },\n\n        isInherited(id, parentId) {\n            if (!this.isInheritable || !parentId || this.toBeAdded[this.selectedAssignment].hasOwnProperty(id)) {\n                return false;\n            }\n\n            const selfToBeDeleted = this.toBeDeleted[this.selectedAssignment].hasOwnProperty(id);\n            const hasOwnTags = this.currentPageCountBuckets.filter(({ key, tags }) => {\n                return key === id && (selfToBeDeleted ? tags.count - 1 : tags.count) > 0;\n            }).length > 0;\n\n            if (hasOwnTags) {\n                return false;\n            }\n\n            return this.parentHasTags(id, parentId);\n        },\n\n        parentHasTags(id, parentId) {\n            const parentToBeDeleted = this.toBeDeleted[this.selectedAssignment].hasOwnProperty(parentId);\n            const parentHasTags = this.entities.aggregations.parentTags.buckets.filter(({ key, parentTags }) => {\n                return key === id && (parentToBeDeleted ? parentTags.count - 1 : parentTags.count) > 0;\n            }).length > 0;\n\n            if (!parentHasTags) {\n                return this.toBeAdded[this.selectedAssignment].hasOwnProperty(parentId);\n            }\n\n            return true;\n        },\n\n        hasInheritedTag(id, parentId) {\n            const parentToBeAdded = this.toBeAdded[this.selectedAssignment].hasOwnProperty(parentId);\n            const parentToBeDeleted = this.toBeDeleted[this.selectedAssignment].hasOwnProperty(parentId);\n\n            if (this.preSelected.hasOwnProperty(id) || this.toBeDeleted[this.selectedAssignment].hasOwnProperty(id)) {\n                return parentToBeAdded || (this.preSelected.hasOwnProperty(parentId) && !parentToBeDeleted);\n            }\n\n            const hasInheritedTag = this.entities.aggregations.tags.buckets.filter((bucket) => {\n                return bucket.key === id;\n            }).length > 0;\n\n            return (hasInheritedTag || parentToBeAdded) && !parentToBeDeleted;\n        },\n\n        onPageChange({ page, limit }) {\n            this.page = page;\n            this.limit = limit;\n\n            this.getList();\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_tag_detail_assignments %}\\n<div class=\\\"sw-settings-tag-detail-assignments\\\">\\n    \\n    {% block sw_settings_tag_detail_assignments_card %}\\n    <sw-card\\n        class=\\\"sw-settings-tag-detail-assignments__card\\\"\\n        position-identifier=\\\"sw-settings-tag-detail-assignments-card\\\"\\n        large\\n    >\\n        <template #toolbar>\\n            \\n            {% block sw_settings_tag_detail_assignments_toolbar %}\\n            <sw-card-filter\\n                :placeholder=\\\"$tc('sw-settings-tag.detail.assignments.searchPlaceholder')\\\"\\n                @sw-card-filter-term-change=\\\"onTermChange\\\"\\n            />\\n            {% endblock %}\\n        </template>\\n\\n        \\n        {% block sw_settings_tag_detail_assignments_header %}\\n        <sw-container columns=\\\"1fr 1fr\\\">\\n            \\n            {% block sw_settings_tag_detail_assignments_header_selected_filter %}\\n            <sw-card-section\\n                class=\\\"sw-settings-tag-detail-assignments__filter-selected\\\"\\n                divider=\\\"bottom\\\"\\n            >\\n                <sw-switch-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"showSelected\\\"\\n                    {% else %}\\n                    v-model=\\\"showSelected\\\"\\n                    {% endif %}\\n                    :disabled=\\\"isLoading\\\"\\n                    :label=\\\"$tc('sw-settings-tag.detail.assignments.showSelected')\\\"\\n                />\\n            </sw-card-section>\\n            {% endblock %}\\n            \\n            {% block sw_settings_tag_detail_assignments_header_total_selected %}\\n            <sw-card-section\\n                class=\\\"sw-settings-tag-detail-assignments__total-selected\\\"\\n                divider=\\\"bottom\\\"\\n            >\\n                {{ totalAssignments }} {{ $tc('sw-settings-tag.detail.assignments.selected') }}\\n            </sw-card-section>\\n            {% endblock %}\\n        </sw-container>\\n        {% endblock %}\\n\\n        <template #grid>\\n            \\n            {% block sw_settings_tag_detail_assignments_grid %}\\n            <sw-container columns=\\\"300px 1fr\\\">\\n                <sw-card-section divider=\\\"right\\\">\\n                    \\n                    {% block sw_settings_tag_detail_assignments_associations_grid %}\\n                    <sw-data-grid\\n                        class=\\\"sw-settings-tag-detail-assignments__associations-grid\\\"\\n                        :data-source=\\\"assignmentAssociations\\\"\\n                        :columns=\\\"assignmentAssociationsColumns\\\"\\n                        :v-bind=\\\"$attrs\\\"\\n                        :show-selection=\\\"false\\\"\\n                        :show-actions=\\\"false\\\"\\n                        :show-header=\\\"false\\\"\\n                        :plain-appearance=\\\"true\\\"\\n                        :full-page=\\\"true\\\"\\n                        item-identifier-property=\\\"entity\\\"\\n                    >\\n                        <template #column-name=\\\"{ item }\\\">\\n                            \\n                            {% block sw_settings_tag_detail_assignments_associations_grid_column_name %}\\n                            <sw-button\\n                                class=\\\"associations-grid__row\\\"\\n                                :class=\\\"{ 'is--selected': item.entity === selectedEntity }\\\"\\n                                :disabled=\\\"isLoading\\\"\\n                                @click.prevent=\\\"onAssignmentChange(item)\\\"\\n                            >\\n                                <sw-icon\\n                                    v-if=\\\"item.entity === selectedEntity\\\"\\n                                    name=\\\"regular-folder-open\\\"\\n                                    multicolor\\n                                    small\\n                                />\\n                                <sw-icon\\n                                    v-else\\n                                    name=\\\"regular-folder\\\"\\n                                    multicolor\\n                                    small\\n                                />\\n                                <span>\\n                                    {{ item.name }}\\n                                </span>\\n                                <span\\n                                    v-if=\\\"getCount(item.assignment)\\\"\\n                                    class=\\\"associations-grid__count\\\"\\n                                >\\n                                    {{ getCount(item.assignment) }}\\n                                    {{ $tc('sw-settings-tag.detail.assignments.assignments', getCount(item.assignment)) }}\\n                                </span>\\n                            </sw-button>\\n                            {% endblock %}\\n                        </template>\\n\\n                        <template #actions=\\\"{ item }\\\">\\n                        </template>\\n                    </sw-data-grid>\\n                    {% endblock %}\\n                </sw-card-section>\\n                <sw-card-section>\\n                    \\n                    {% block sw_settings_tag_detail_assignments_entities_grid %}\\n                    <sw-entity-listing\\n                        :key=\\\"entitiesGridKey\\\"\\n                        class=\\\"sw-settings-tag-detail-assignments__entities-grid\\\"\\n                        :items=\\\"entities\\\"\\n                        :columns=\\\"entitiesColumns\\\"\\n                        :repository=\\\"entityRepository\\\"\\n                        :plain-appearance=\\\"true\\\"\\n                        :compact-mode=\\\"true\\\"\\n                        :show-selection=\\\"true\\\"\\n                        :show-actions=\\\"false\\\"\\n                        :show-header=\\\"true\\\"\\n                        :is-loading=\\\"isLoading\\\"\\n                        :disable-data-fetching=\\\"true\\\"\\n                        :pre-selection=\\\"selectedAssignments\\\"\\n                        :allow-inline-edit=\\\"false\\\"\\n                        :allow-delete=\\\"false\\\"\\n                        @page-change=\\\"onPageChange\\\"\\n                        @select-item=\\\"onSelectionChange\\\"\\n                    >\\n                        <template #selection-content=\\\"{ item, isSelected, selectItem, itemIdentifierProperty }\\\">\\n                            \\n                            {% block sw_settings_tag_detail_assignments_entities_grid_selection_content %}\\n                            <div class=\\\"sw-data-grid__cell-content\\\">\\n                                \\n                                {% block sw_settings_tag_detail_assignments_entities_grid_select_item_checkbox %}\\n                                <sw-checkbox-field\\n                                    v-if=\\\"isInherited(item.id, item.parentId)\\\"\\n                                    :key=\\\"`${itemIdentifierProperty}-inherited`\\\"\\n                                    :value=\\\"hasInheritedTag(item.id, item.parentId)\\\"\\n                                    :disabled=\\\"true\\\"\\n                                />\\n                                <sw-checkbox-field\\n                                    v-else\\n                                    :key=\\\"itemIdentifierProperty\\\"\\n                                    :value=\\\"isSelected(item[itemIdentifierProperty])\\\"\\n                                    {% if VUE3 %}\\n                                    @update:value=\\\"selectItem($event, item)\\\"\\n                                    {% else %}\\n                                    @change=\\\"selectItem($event, item)\\\"\\n                                    {% endif %}\\n                                />\\n                                {% endblock %}\\n                            </div>\\n                            {% endblock %}\\n                        </template>\\n\\n                        <template #column-name=\\\"{ item, selectItem }\\\">\\n                            \\n                            {% block sw_settings_tag_detail_assignments_entities_grid_column_inheritance_switch %}\\n                            <sw-inheritance-switch\\n                                v-if=\\\"isInheritable && item.parentId && parentHasTags(item.id, item.parentId)\\\"\\n                                :is-inherited=\\\"isInherited(item.id, item.parentId)\\\"\\n                                :disabled=\\\"!isInherited(item.id, item.parentId)\\\"\\n                                @inheritance-remove=\\\"selectItem(true, item)\\\"\\n                            />\\n                            {% endblock %}\\n                            \\n                            {% block sw_settings_tag_detail_assignments_entities_grid_column_name_product %}\\n                            <sw-product-variant-info\\n                                v-if=\\\"selectedEntity === 'product'\\\"\\n                                :variations=\\\"item.variation\\\"\\n                            >\\n                                <sw-highlight-text\\n                                    :search-term=\\\"term\\\"\\n                                    :text=\\\"item.translated.name || item.name\\\"\\n                                />\\n                            </sw-product-variant-info>\\n                            {% endblock %}\\n                            \\n                            {% block sw_settings_tag_detail_assignments_entities_grid_column_name_category %}\\n                            <template\\n                                v-else-if=\\\"selectedEntity === 'category'\\\"\\n                            >\\n                                <sw-highlight-text\\n                                    :search-term=\\\"term\\\"\\n                                    :text=\\\"item.translated ? item.translated.name : item.name\\\"\\n                                />\\n                                <sw-highlight-text\\n                                    v-if=\\\"item.breadcrumb && item.breadcrumb.length > 1\\\"\\n                                    :text=\\\"item.breadcrumb.join(' / ')\\\"\\n                                />\\n                            </template>\\n                            {% endblock %}\\n                            \\n                            {% block sw_settings_tag_detail_assignments_entities_grid_column_name_customer %}\\n                            <template\\n                                v-else-if=\\\"selectedEntity === 'customer'\\\"\\n                            >\\n                                <sw-highlight-text\\n                                    :search-term=\\\"term\\\"\\n                                    :text=\\\"`${item.firstName} ${item.lastName}`\\\"\\n                                />\\n                                <sw-highlight-text\\n                                    :search-term=\\\"term\\\"\\n                                    :text=\\\"item.customerNumber\\\"\\n                                />\\n                            </template>\\n                            {% endblock %}\\n                            \\n                            {% block sw_settings_tag_detail_assignments_entities_grid_column_name_order %}\\n                            <template\\n                                v-else-if=\\\"selectedEntity === 'order'\\\"\\n                            >\\n                                <sw-highlight-text\\n                                    :search-term=\\\"term\\\"\\n                                    :text=\\\"`${item.orderCustomer.firstName} ${item.orderCustomer.lastName}`\\\"\\n                                />\\n                                <sw-highlight-text\\n                                    :search-term=\\\"term\\\"\\n                                    :text=\\\"item.orderNumber\\\"\\n                                />\\n                            </template>\\n                            {% endblock %}\\n                            \\n                            {% block sw_settings_tag_detail_assignments_entities_grid_column_name_media %}\\n                            <template\\n                                v-else-if=\\\"selectedEntity === 'media'\\\"\\n                            >\\n                                <sw-media-preview-v2\\n                                    :source=\\\"item.id\\\"\\n                                    :media-is-private=\\\"item.private\\\"\\n                                />\\n                                <sw-highlight-text\\n                                    :search-term=\\\"term\\\"\\n                                    :text=\\\"`${item.fileName}.${item.fileExtension}`\\\"\\n                                />\\n                            </template>\\n                            {% endblock %}\\n                            \\n                            {% block sw_settings_tag_detail_assignments_entities_grid_column_name_newsletter_recipient %}\\n                            <sw-highlight-text\\n                                v-else-if=\\\"selectedEntity === 'newsletter_recipient'\\\"\\n                                :search-term=\\\"term\\\"\\n                                :text=\\\"`${item.firstName} ${item.lastName}`\\\"\\n                            />\\n                            {% endblock %}\\n                            \\n                            {% block sw_settings_tag_detail_assignments_entities_grid_column_name_default %}\\n                            <sw-highlight-text\\n                                v-else\\n                                :search-term=\\\"term\\\"\\n                                :text=\\\"item.translated ? item.translated.name : item.name\\\"\\n                            />\\n                            {% endblock %}\\n                        </template>\\n                    </sw-entity-listing>\\n                    {% endblock %}\\n                </sw-card-section>\\n            </sw-container>\\n            {% endblock %}\\n        </template>\\n    </sw-card>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-tag-detail-assignments.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"d258a952\", content, true, {});"],"sourceRoot":""}