{"version":3,"sources":["webpack:///./src/module/sw-settings-tax/page/sw-settings-tax-list/index.js","webpack:///./src/module/sw-settings-tax/page/sw-settings-tax-list/sw-settings-tax-list.html.twig","webpack:///./src/module/sw-settings-tax/page/sw-settings-tax-list/sw-settings-tax-list.scss"],"names":["Mixin","Shopware","Criteria","Data","template","inject","mixins","getByName","data","tax","taxProviders","sortBy","isLoading","sortDirection","naturalSorting","showDeleteModal","defaultTaxRateId","selectedDefaultTaxRateId","showSortingModal","metaInfo","title","this","$createTitle","computed","taxRepository","repositoryFactory","create","taxProviderRepository","taxProviderCriteria","criteria","page","limit","addSorting","sort","showChangePriority","_this$taxProviders","length","noTaxProvidersFound","_this$taxProviders2","methods","getList","_this","setTerm","term","getDefaultTaxRate","then","defaultRate","selectedDefaultRate","search","items","total","catch","loadTaxProviders","editLink","taxProviderId","name","params","id","onChangeLanguage","languageId","State","commit","onInlineEditSave","promise","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","systemConfigApiService","saveValues","createNotificationSuccess","message","$tc","createNotificationError","stop","onInlineEditCancel","_this3","_callee2","_context2","onDelete","onCloseDeleteModal","onConfirmDelete","_this4","delete","getTaxColumns","property","dataIndex","inlineEdit","label","routerLink","width","primary","isShopwareDefaultTax","$te","concat","getLabel","isSelectedDefaultRate","setSelectedDefaultRate","checkBoxValue","getValues","response","_response$coreTaxDe","_this5","finally","onChangeTaxProviderActive","taxProvider","_this6","active","save","Context","api","state","translated","content","__esModule","default","module","i","locals","exports","add"],"mappings":"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","file":"static/js/405cbf26c7e6068bb682.js","sourcesContent":["import template from './sw-settings-tax-list.html.twig';\nimport './sw-settings-tax-list.scss';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package checkout\n */\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl', 'systemConfigApiService'],\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            tax: null,\n            taxProviders: null,\n            sortBy: 'position',\n            isLoading: false,\n            sortDirection: 'ASC',\n            naturalSorting: false,\n            showDeleteModal: false,\n            defaultTaxRateId: null,\n            selectedDefaultTaxRateId: null,\n            showSortingModal: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        taxRepository() {\n            return this.repositoryFactory.create('tax');\n        },\n        taxProviderRepository() {\n            return this.repositoryFactory.create('tax_provider');\n        },\n        taxProviderCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            criteria.addSorting(\n                Criteria.sort('priority', 'DESC'),\n            );\n\n            return criteria;\n        },\n        showChangePriority() {\n            return this.taxProviders?.length > 1;\n        },\n        noTaxProvidersFound() {\n            return this.taxProviders?.length < 1;\n        },\n    },\n\n    methods: {\n        getList() {\n            const criteria = new Criteria(this.page, this.limit);\n            this.isLoading = true;\n            this.naturalSorting = this.sortBy === 'name';\n\n            criteria.setTerm(this.term);\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, this.naturalSorting));\n            if (this.sortBy !== 'name') {\n                // Add second sorting, to make sorting deterministic\n                criteria.addSorting(Criteria.sort('name', 'ASC', true));\n            }\n\n            this.getDefaultTaxRate().then((defaultRate) => {\n                this.defaultTaxRateId = defaultRate;\n                this.selectedDefaultRate = defaultRate;\n            });\n\n            this.taxRepository.search(criteria).then((items) => {\n                this.total = items.total;\n                this.tax = items;\n                this.isLoading = false;\n\n                return items;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n\n            this.loadTaxProviders();\n        },\n\n        editLink(taxProviderId) {\n            return {\n                name: 'sw.settings.tax.tax_provider.detail',\n                params: {\n                    id: taxProviderId,\n                },\n            };\n        },\n\n        onChangeLanguage(languageId) {\n            Shopware.State.commit('context/setApiLanguageId', languageId);\n            this.getList();\n        },\n\n        async onInlineEditSave(promise, tax) {\n            promise.then(() => {\n                if (this.selectedDefaultTaxRateId === this.defaultTaxRateId) {\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-settings-tax.detail.messageSaveSuccess', 0, { name: tax.name }),\n                    });\n\n                    return;\n                }\n\n                this.systemConfigApiService.saveValues({ 'core.tax.defaultTaxRate': this.selectedDefaultTaxRateId })\n                    .then(() => {\n                        this.defaultTaxRateId = this.selectedDefaultTaxRateId;\n\n                        this.createNotificationSuccess({\n                            message: this.$tc('sw-settings-tax.detail.messageSaveSuccess', 0, { name: tax.name }),\n                        });\n                    })\n                    .catch(() => {\n                        this.getList();\n\n                        this.createNotificationError({\n                            message: this.$tc('sw-settings-tax.detail.messageSaveError'),\n                        });\n                    });\n            }).catch(() => {\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-tax.detail.messageSaveError'),\n                });\n            });\n        },\n\n        async onInlineEditCancel(promise) {\n            await promise;\n\n            this.selectedDefaultTaxRateId = null;\n\n            this.getDefaultTaxRate().then((defaultRate) => {\n                this.defaultTaxRateId = defaultRate;\n            });\n        },\n\n        onDelete(id) {\n            this.showDeleteModal = id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete(id) {\n            this.showDeleteModal = false;\n\n            return this.taxRepository.delete(id).then(() => {\n                this.getList();\n            });\n        },\n\n        getTaxColumns() {\n            return [{\n                property: 'name',\n                dataIndex: 'name',\n                inlineEdit: 'string',\n                label: 'sw-settings-tax.list.columnName',\n                routerLink: 'sw.settings.tax.detail',\n                width: '250px',\n                primary: true,\n            }, {\n                property: 'taxRate',\n                inlineEdit: 'number',\n                label: 'sw-settings-tax.list.columnDefaultTaxRate',\n            }, {\n                property: 'default',\n                inlineEdit: 'boolean',\n                label: 'sw-settings-tax.list.columnDefault',\n            }];\n        },\n\n        isShopwareDefaultTax(tax) {\n            return this.$te(`global.tax-rates.${tax.name}`, 'en-GB');\n        },\n\n        getLabel(tax) {\n            return this.isShopwareDefaultTax(tax) ? this.$tc(`global.tax-rates.${tax.name}`) : tax.name;\n        },\n\n        isSelectedDefaultRate(tax) {\n            return this.defaultTaxRateId === tax.id;\n        },\n\n        setSelectedDefaultRate(checkBoxValue, id) {\n            this.selectedDefaultTaxRateId = checkBoxValue ? id : null;\n        },\n\n        getDefaultTaxRate() {\n            return this.systemConfigApiService\n                .getValues('core.tax')\n                .then(response => response['core.tax.defaultTaxRate'] ?? null)\n                .catch(() => null);\n        },\n\n        loadTaxProviders() {\n            this.isLoading = true;\n\n            this.taxProviderRepository.search(this.taxProviderCriteria).then((items) => {\n                this.taxProviders = items;\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onChangeTaxProviderActive(taxProvider) {\n            taxProvider.active = !taxProvider.active;\n\n            this.taxProviderRepository.save(taxProvider, Shopware.Context.api)\n                .then(() => {\n                    const state = taxProvider.active ? 'active' : 'inactive';\n\n                    this.createNotificationSuccess({\n                        message: this.$tc(\n                            `sw-settings-tax.list.taxProvider.statusChangedSuccess.${state}`,\n                            0,\n                            { name: taxProvider.translated.name },\n                        ),\n                    });\n                });\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_list %}\\n\\n{% block sw_settings_tax_index %}\\n<sw-page class=\\\"sw-settings-tax-list\\\">\\n    \\n    {% block sw_settings_tax_list_search_bar %}\\n    <template #search-bar>\\n        <sw-search-bar\\n            initial-search-type=\\\"tax\\\"\\n            :placeholder=\\\"$tc('sw-settings-tax.general.placeholderSearchBar')\\\"\\n            :initial-search=\\\"term\\\"\\n            @search=\\\"onSearch\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_tax_list_smart_bar_header %}\\n    <template #smart-bar-header>\\n        \\n        {% block sw_settings_tax_list_smart_bar_header_title %}\\n        <h2>\\n            \\n            {% block sw_settings_tax_list_smart_bar_header_title_text %}\\n            {{ $tc('sw-settings.index.title') }} <sw-icon\\n                name=\\\"regular-chevron-right-xs\\\"\\n                small\\n            /> {{ $tc('sw-settings-tax.list.textHeadline') }}\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_tax_list_smart_bar_header_amount %}\\n            <span\\n                v-if=\\\"!isLoading\\\"\\n                class=\\\"sw-page__smart-bar-amount\\\"\\n            >\\n                ({{ total }})\\n            </span>\\n            {% endblock %}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_tax_list_smart_bar_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_settings_tax_list_smart_bar_actions_add %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"{\\n                message: $tc('sw-privileges.tooltip.warning'),\\n                disabled: acl.can('tax.creator'),\\n                showOnDisabledElements: true\\n            }\\\"\\n            class=\\\"sw-settings-tax-list__button-create\\\"\\n            variant=\\\"primary\\\"\\n            :disabled=\\\"!acl.can('tax.creator')\\\"\\n            :router-link=\\\"{ name: 'sw.settings.tax.create' }\\\"\\n        >\\n            {{ $tc('sw-settings-tax.list.buttonAddTax') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    <template #language-switch>\\n        <sw-language-switch\\n            @on-change=\\\"onChangeLanguage\\\"\\n        />\\n    </template>\\n\\n    \\n    {% block sw_settings_tax_list_content %}\\n    <template #content>\\n        <sw-card-view>\\n            \\n            {% block sw_settings_tax_list_content_card %}\\n            <sw-card\\n                position-identifier=\\\"sw-settings-tax-list-content\\\"\\n                class=\\\"sw-tax-card\\\"\\n                :title=\\\"$tc('sw-settings-tax.list.taxCardTitle')\\\"\\n                :is-loading=\\\"isLoading\\\"\\n            >\\n                <template #grid>\\n                    \\n                    {% block sw_settings_tax_list_grid %}\\n                    <sw-entity-listing\\n                        ref=\\\"swSettingsTaxGrid\\\"\\n                        class=\\\"sw-settings-tax-list-grid\\\"\\n                        detail-route=\\\"sw.settings.tax.detail\\\"\\n                        :items=\\\"tax\\\"\\n                        :columns=\\\"getTaxColumns()\\\"\\n                        :repository=\\\"taxRepository\\\"\\n                        :full-page=\\\"false\\\"\\n                        :show-selection=\\\"false\\\"\\n                        :is-loading=\\\"isLoading\\\"\\n                        :allow-view=\\\"acl.can('tax.viewer')\\\"\\n                        :allow-edit=\\\"acl.can('tax.editor')\\\"\\n                        :allow-inline-edit=\\\"acl.can('tax.editor')\\\"\\n                        :allow-delete=\\\"acl.can('tax.deleter')\\\"\\n                        :disable-data-fetching=\\\"true\\\"\\n                        :sort-by=\\\"sortBy\\\"\\n                        :sort-direction=\\\"sortDirection\\\"\\n                        @column-sort=\\\"onSortColumn\\\"\\n                        @page-change=\\\"onPageChange\\\"\\n                        @inline-edit-save=\\\"onInlineEditSave\\\"\\n                        @inline-edit-cancel=\\\"onInlineEditCancel\\\"\\n                    >\\n                        \\n                        {% block sw_settings_tax_list_grid_column_default_name %}\\n                        <template #column-name=\\\"{ item, column, isInlineEdit, compact }\\\">\\n                            {# if it is not a default tax, the default slot content will be rendered #}\\n                            <router-link\\n                                v-if=\\\"isShopwareDefaultTax(item)\\\"\\n                                class=\\\"sw-data-grid__cell-value\\\"\\n                                :to=\\\"{ name: column.routerLink, params: { id: item.id } }\\\"\\n                            >\\n                                {{ getLabel(item) }}\\n                            </router-link>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_tax_list_grid_column_default_tax_rate %}\\n                        <template #column-taxRate=\\\"{ item, isInlineEdit, compact }\\\">\\n                            <template v-if=\\\"isInlineEdit\\\">\\n                                <sw-number-field\\n                                    {% if VUE3 %}\\n                                    v-model:value=\\\"item.taxRate\\\"\\n                                    {% else %}\\n                                    v-model=\\\"item.taxRate\\\"\\n                                    {% endif %}\\n                                    :digits=\\\"3\\\"\\n                                    :size=\\\"compact ? 'small' : 'default'\\\"\\n                                >\\n                                    <template #suffix>\\n                                        <span>\\n                                            <span v-html=\\\"$sanitize($tc('sw-settings-tax.general.taxRateSymbol'))\\\"></span>\\n                                        </span>\\n                                    </template>\\n                                </sw-number-field>\\n                            </template>\\n                            <template v-else>\\n                                {{ item.taxRate }}%\\n                            </template>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_tax_list_grid_column_default %}\\n                        <template #column-default=\\\"{ item, isInlineEdit }\\\">\\n                            <template v-if=\\\"isInlineEdit\\\">\\n                                \\n                                {% block sw_settings_tax_list_grid_column_default_editor %}\\n                                <sw-checkbox-field\\n                                    :value=\\\"isSelectedDefaultRate(item)\\\"\\n                                    {% if VUE3 %}\\n                                    @update:value=\\\"value => setSelectedDefaultRate(value, item.id)\\\"\\n                                    {% else %}\\n                                    @change=\\\"value => setSelectedDefaultRate(value, item.id)\\\"\\n                                    {% endif %}\\n                                />\\n                                {% endblock %}\\n                            </template>\\n                            <template v-else>\\n                                \\n                                {% block sw_settings_tax_list_grid_column_default_label %}\\n                                <sw-icon\\n                                    v-if=\\\"isSelectedDefaultRate(item)\\\"\\n                                    name=\\\"regular-checkmark-xs\\\"\\n                                    small\\n                                    class=\\\"is--active\\\"\\n                                />\\n                                <div v-else></div>\\n                                {% endblock %}\\n                            </template>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_tax_list_grid_columns_actions %}\\n                        <template #actions=\\\"{ item }\\\">\\n                            \\n                            {% block sw_settings_tax_list_grid_columns_actions_edit %}\\n                            <sw-context-menu-item\\n                                class=\\\"sw-tax-list__edit-action\\\"\\n                                :disabled=\\\"!acl.can('tax.editor')\\\"\\n                                :router-link=\\\"{\\n                                    name: 'sw.settings.tax.detail',\\n                                    params: { id: item.id, edit: 'edit' }\\n                                }\\\"\\n                            >\\n                                {{ $tc('sw-settings-tax.list.contextMenuEdit') }}\\n                            </sw-context-menu-item>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_settings_tax_list_grid_columns_actions_delete %}\\n                            <sw-context-menu-item\\n                                class=\\\"sw-tax-list__delete-action\\\"\\n                                variant=\\\"danger\\\"\\n                                :disabled=\\\"!acl.can('tax.deleter')\\\"\\n                                @click=\\\"onDelete(item.id)\\\"\\n                            >\\n                                {{ $tc('sw-settings-tax.list.contextMenuDelete') }}\\n                            </sw-context-menu-item>\\n                            {% endblock %}\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_tax_list_grid_action_modals %}\\n                        <template #action-modals=\\\"{ item }\\\">\\n                            \\n                            {% block sw_settings_tax_list_delete_modal %}\\n                            <sw-modal\\n                                v-if=\\\"showDeleteModal === item.id\\\"\\n                                :title=\\\"$tc('global.default.warning')\\\"\\n                                variant=\\\"small\\\"\\n                                @modal-close=\\\"onCloseDeleteModal\\\"\\n                            >\\n                                \\n                                {% block sw_settings_tax_list_delete_modal_confirm_delete_text %}\\n                                <p class=\\\"sw-settings-tax-list__confirm-delete-text\\\">\\n                                    {{ $tc('sw-settings-tax.list.textDeleteConfirm', 0, { name: item.name }) }}\\n                                </p>\\n                                {% endblock %}\\n\\n                                \\n                                {% block sw_settings_tax_list_delete_modal_footer %}\\n                                <template #modal-footer>\\n                                    \\n                                    {% block sw_settings_tax_list_delete_modal_cancel %}\\n                                    <sw-button\\n                                        size=\\\"small\\\"\\n                                        @click=\\\"onCloseDeleteModal\\\"\\n                                    >\\n                                        {{ $tc('sw-settings-tax.list.buttonCancel') }}\\n                                    </sw-button>\\n                                    {% endblock %}\\n\\n                                    \\n                                    {% block sw_settings_tax_list_delete_modal_confirm %}\\n                                    <sw-button\\n                                        variant=\\\"danger\\\"\\n                                        size=\\\"small\\\"\\n                                        @click=\\\"onConfirmDelete(item.id)\\\"\\n                                    >\\n                                        {{ $tc('sw-settings-tax.list.buttonDelete') }}\\n                                    </sw-button>\\n                                    {% endblock %}\\n                                </template>\\n                                {% endblock %}\\n                            </sw-modal>\\n                            {% endblock %}\\n                        </template>\\n                        {% endblock %}\\n                    </sw-entity-listing>\\n                    {% endblock %}\\n                </template>\\n            </sw-card>\\n            {% endblock %}\\n\\n            <sw-card\\n                position-identifier=\\\"sw-settings-tax-provider-list-content\\\"\\n                class=\\\"sw-settings-tax-provider-list-content\\\"\\n                :title=\\\"$tc('sw-settings-tax.list.taxProvider.cardTitle')\\\"\\n                :is-loading=\\\"isLoading\\\"\\n            >\\n                <template #grid>\\n                    <template v-if=\\\"showChangePriority\\\">\\n                        <div class=\\\"sw-settings-tax-provider-list-content__bg\\\">\\n                            <sw-button-process\\n                                class=\\\"sw-settings-tax-provider-list-button__change-priority\\\"\\n                                :disabled=\\\"isLoading\\\"\\n                                :is-loading=\\\"isLoading\\\"\\n                                :process-success=\\\"false\\\"\\n                                variant=\\\"ghost\\\"\\n                                @click=\\\"showSortingModal = true\\\"\\n                            >\\n                                {{ $tc('sw-settings-tax.list.taxProvider.changePriorityButton') }}\\n                            </sw-button-process>\\n                        </div>\\n                    </template>\\n\\n                    <template v-if=\\\"!isLoading\\\">\\n                        <sw-empty-state\\n                            v-if=\\\"noTaxProvidersFound\\\"\\n                            :title=\\\"$tc('sw-settings-tax.list.taxProvider.messageEmptyTitle')\\\"\\n                            :absolute=\\\"false\\\"\\n                            :show-description=\\\"false\\\"\\n                        />\\n\\n                        <div\\n                            v-else\\n                            class=\\\"sw-tax-provider-items\\\"\\n                        >\\n                            <template\\n                                v-for=\\\"taxProvider in taxProviders\\\"\\n                                {% if VUE3 %}\\n                                :key=\\\"taxProvider.id\\\"\\n                                {% endif %}\\n                            >\\n                                <div\\n                                    {% if VUE2 %}\\n                                    :key=\\\"taxProvider.id\\\"\\n                                    {% endif %}\\n                                    class=\\\"sw-tax-provider-item\\\"\\n                                >\\n                                    <div class=\\\"sw-tax-provider__name\\\">\\n                                        {{ taxProvider.translated.name }}\\n                                    </div>\\n\\n                                    <div class=\\\"sw-tax-provider__link\\\">\\n                                        <router-link\\n                                            class=\\\"sw-tax-provider__show-detail-link\\\"\\n                                            :to=\\\"editLink(taxProvider.id)\\\"\\n                                            :disabled=\\\"!acl.can('tax.editor')\\\"\\n                                        >\\n                                            {{ $tc('sw-settings-tax.list.taxProvider.editDetailsLink') }}\\n                                        </router-link>\\n                                    </div>\\n\\n                                    <sw-switch-field\\n                                        :label=\\\"$tc('sw-settings-tax.list.taxProvider.labelActive')\\\"\\n                                        :disabled=\\\"!acl.can('tax.editor')\\\"\\n                                        :value=\\\"taxProvider.active\\\"\\n                                        {% if VUE3 %}\\n                                        @update:value=\\\"onChangeTaxProviderActive(taxProvider)\\\"\\n                                        {% else %}\\n                                        @change=\\\"onChangeTaxProviderActive(taxProvider)\\\"\\n                                        {% endif %}\\n                                    />\\n                                </div>\\n                            </template>\\n                        </div>\\n                    </template>\\n\\n                    <template v-else>\\n                        <sw-skeleton />\\n                    </template>\\n                </template>\\n            </sw-card>\\n\\n            <sw-settings-tax-provider-sorting-modal\\n                v-if=\\\"showSortingModal\\\"\\n                :tax-providers=\\\"taxProviders\\\"\\n                @modal-close=\\\"showSortingModal = false\\\"\\n                @modal-save=\\\"loadTaxProviders\\\"\\n            />\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n    {% endblock %}\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-tax-list.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4cbc8826\", content, true, {});"],"sourceRoot":""}