{"version":3,"sources":["webpack:///./src/module/sw-extension/component/sw-extension-permissions-modal/sw-extension-permissions-modal.scss","webpack:///./src/module/sw-extension/component/sw-extension-permissions-modal/index.js","webpack:///./src/module/sw-extension/component/sw-extension-permissions-modal/sw-extension-permissions-modal.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","template","props","permissions","type","Object","required","domains","Array","extensionLabel","String","actionLabel","closeLabel","title","description","data","showDetailsModal","showDomainsModal","selectedEntity","computed","modalTitle","this","$tc","permissionsWithGroupedOperations","fromEntries","entries","map","_ref","_ref2","_slicedToArray","category","reduce","acc","permission","entity","operation","concat","domainsList","isArray","closeBtnLabel","descriptionText","assetFilter","Shopware","Filter","getByName","methods","close","$emit","closeWithAction","categoryLabel","openDetailsModal","closeDetailsModal","toggleDomainsModal","shouldOpen"],"mappings":"+HAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,4ECF7B,WACXQ,SCRW,0wJDUXC,MAAO,CACHC,YAAa,CACTC,KAAMC,OACNC,UAAU,GAEdC,QAAS,CACLH,KAAMI,MACNF,UAAU,EACVX,QAAS,iBAAM,KAEnBc,eAAgB,CACZL,KAAMM,OACNJ,UAAU,GAEdK,YAAa,CACTP,KAAMM,OACNJ,UAAU,EACVX,QAAS,MAEbiB,WAAY,CACRR,KAAMM,OACNJ,UAAU,EACVX,QAAS,MAEbkB,MAAO,CACHT,KAAMM,OACNJ,UAAU,EACVX,QAAS,MAEbmB,YAAa,CACTV,KAAMM,OACNJ,UAAU,EACVX,QAAS,OAIjBoB,KAAI,WACA,MAAO,CACHC,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAgB,KAIxBC,SAAU,CACNC,WAAU,WACN,OAAIC,KAAKR,MACEQ,KAAKR,MAGTQ,KAAKC,IACR,oEACA,EACA,CAAEb,eAAgBY,KAAKZ,kBAI/Bc,iCAAgC,WAC5B,OAAOlB,OAAOmB,YAAYnB,OAAOoB,QAAQJ,KAAKlB,aACzCuB,KAAI,SAAAC,GAA8B,IAADC,EAAAC,IAAAF,EAAA,GAA3BG,EAAQF,EAAA,GAAEzB,EAAWyB,EAAA,GAcxB,MAAO,CAACE,EAbR3B,EAAcA,EAAY4B,QAAO,SAACC,EAAKC,GACnC,IAAMC,EAASD,EAAWC,OAE1B,MAAe,0BAAXA,GACAF,EAAIC,EAAWE,WAAa,GAErBH,IAGXA,EAAIE,IAAWF,EAAIE,IAAW,IAAIE,OAAOH,EAAWE,WAE7CH,KACR,UAKfK,YAAW,WACP,OAAIhB,KAAKd,SAAWC,MAAM8B,QAAQjB,KAAKd,SAC5Bc,KAAKd,QAGT,IAGXgC,cAAa,WACT,OAAIlB,KAAKT,WACES,KAAKT,WAGTS,KAAKC,IAAI,+BAGpBkB,gBAAe,WACX,OAAInB,KAAKP,YACEO,KAAKP,YAGTO,KAAKC,IACR,0EACA,EACA,CAAEb,eAAgBY,KAAKZ,kBAI/BgC,YAAW,WACP,OAAOC,SAASC,OAAOC,UAAU,WAIzCC,QAAS,CACLC,MAAK,WACDzB,KAAK0B,MAAM,gBAGfC,gBAAe,WACX3B,KAAK0B,MAAM,sBAGfE,cAAa,SAACnB,GACV,OAAOT,KAAKC,IAAI,oBAADc,OAAqBN,EAAQ,YAGhDoB,iBAAgB,SAACpB,GACbT,KAAKH,eAAiBY,EACtBT,KAAKL,kBAAmB,GAG5BmC,kBAAiB,WACb9B,KAAKH,eAAiB,GACtBG,KAAKL,kBAAmB,GAG5BoC,mBAAkB,SAACC,GACfhC,KAAKJ,mBAAqBoC","file":"static/js/4bd19478552f6cb468e5.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-extension-permissions-modal.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3d5be2ee\", content, true, {});","import template from './sw-extension-permissions-modal.html.twig';\nimport './sw-extension-permissions-modal.scss';\n\n/**\n * @package services-settings\n * @private\n */\nexport default {\n    template,\n\n    props: {\n        permissions: {\n            type: Object,\n            required: true,\n        },\n        domains: {\n            type: Array,\n            required: false,\n            default: () => [],\n        },\n        extensionLabel: {\n            type: String,\n            required: true,\n        },\n        actionLabel: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        closeLabel: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        title: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        description: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            showDetailsModal: false,\n            showDomainsModal: false,\n            selectedEntity: '',\n        };\n    },\n\n    computed: {\n        modalTitle() {\n            if (this.title) {\n                return this.title;\n            }\n\n            return this.$tc(\n                'sw-extension-store.component.sw-extension-permissions-modal.title',\n                1,\n                { extensionLabel: this.extensionLabel },\n            );\n        },\n\n        permissionsWithGroupedOperations() {\n            return Object.fromEntries(Object.entries(this.permissions)\n                .map(([category, permissions]) => {\n                    permissions = permissions.reduce((acc, permission) => {\n                        const entity = permission.entity;\n\n                        if (entity === 'additional_privileges') {\n                            acc[permission.operation] = [];\n\n                            return acc;\n                        }\n\n                        acc[entity] = (acc[entity] || []).concat(permission.operation);\n\n                        return acc;\n                    }, {});\n                    return [category, permissions];\n                }));\n        },\n\n        domainsList() {\n            if (this.domains && Array.isArray(this.domains)) {\n                return this.domains;\n            }\n\n            return [];\n        },\n\n        closeBtnLabel() {\n            if (this.closeLabel) {\n                return this.closeLabel;\n            }\n\n            return this.$tc('global.sw-modal.labelClose');\n        },\n\n        descriptionText() {\n            if (this.description) {\n                return this.description;\n            }\n\n            return this.$tc(\n                'sw-extension-store.component.sw-extension-permissions-modal.description',\n                1,\n                { extensionLabel: this.extensionLabel },\n            );\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    methods: {\n        close() {\n            this.$emit('modal-close');\n        },\n\n        closeWithAction() {\n            this.$emit('close-with-action');\n        },\n\n        categoryLabel(category) {\n            return this.$tc(`entityCategories.${category}.title`);\n        },\n\n        openDetailsModal(category) {\n            this.selectedEntity = category;\n            this.showDetailsModal = true;\n        },\n\n        closeDetailsModal() {\n            this.selectedEntity = '';\n            this.showDetailsModal = false;\n        },\n\n        toggleDomainsModal(shouldOpen) {\n            this.showDomainsModal = !!shouldOpen;\n        },\n    },\n};\n","export default \"\\n{% block sw_extension_permissions_modal %}\\n<sw-modal\\n    class=\\\"sw-extension-permissions-modal\\\"\\n    :title=\\\"modalTitle\\\"\\n    variant=\\\"small\\\"\\n    v-on=\\\"$listeners\\\"\\n>\\n    \\n    {% block sw_extension_permissions_modal_content %}\\n    \\n    {% block sw_extension_permissions_modal_intro %}\\n    <div class=\\\"sw-extension-permissions-modal__intro\\\">\\n        \\n        {% block sw_extension_permissions_modal_intro_image %}\\n        <img\\n            class=\\\"sw-extension-permissions-modal__image\\\"\\n            :src=\\\"assetFilter('/administration/static/img/extension-store/permissions.svg')\\\"\\n            alt=\\\"\\\"\\n        >\\n        {% endblock %}\\n\\n        \\n        {% block sw_extension_permissions_modal_intro_text %}\\n        <p class=\\\"sw-extension-permissions-modal__description\\\">\\n            {{ descriptionText }}\\n        </p>\\n\\n        <p\\n            v-if=\\\"domainsList.length > 0\\\"\\n            class=\\\"sw-extension-permissions-modal__domain-hint\\\"\\n        >\\n            {{ $tc('sw-extension-store.component.sw-extension-permissions-modal.domainHint') }}\\n        </p>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_permissions_modal_categories %}\\n    <div class=\\\"sw-extension-permissions-modal__categories\\\">\\n        \\n        {% block sw_extension_permissions_modal_category %}\\n        <div\\n            v-for=\\\"(permission, key) in permissionsWithGroupedOperations\\\"\\n            :key=\\\"key\\\"\\n            class=\\\"sw-extension-permissions-modal__category\\\"\\n        >\\n            \\n            {% block sw_extension_permissions_modal_category_inner %}\\n            \\n            {% block sw_extension_permissions_modal_category_label %}\\n            <span class=\\\"sw-extension-permissions-modal__category-label\\\">\\n                {{ categoryLabel(key) }}\\n            </span>\\n            {% endblock %}\\n\\n            \\n            {% block sw_extension_permissions_modal_link %}\\n            <sw-button\\n                class=\\\"sw-extension-permissions-modal__link\\\"\\n                @click=\\\"openDetailsModal(key)\\\"\\n            >\\n                {{ $tc('sw-extension-store.component.sw-extension-permissions-modal.textEntities') }}\\n                <sw-icon\\n                    name=\\\"regular-long-arrow-right\\\"\\n                    size=\\\"12px\\\"\\n                />\\n            </sw-button>\\n            {% endblock %}\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_extension_permissions_modal_category_domains %}\\n        <div\\n            v-if=\\\"domainsList.length > 0\\\"\\n            class=\\\"sw-extension-permissions-modal__category\\\"\\n        >\\n            <span class=\\\"sw-extension-permissions-modal__category-label\\\">\\n                {{ $tc('sw-extension-store.component.sw-extension-permissions-modal.domains') }}\\n            </span>\\n\\n            <sw-button\\n                class=\\\"sw-extension-permissions-modal__link\\\"\\n                @click=\\\"toggleDomainsModal(true)\\\"\\n            >\\n                {{ $tc('sw-extension-store.component.sw-extension-permissions-modal.showDomains') }}\\n\\n                <sw-icon\\n                    name=\\\"regular-long-arrow-right\\\"\\n                    size=\\\"12px\\\"\\n                />\\n            </sw-button>\\n        </div>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_permissions_modal_footer %}\\n    <template #modal-footer>\\n        \\n        {% block sw_extension_permissions_modal_footer_inner %}\\n        \\n        {% block sw_extension_permissions_modal_footer_close %}\\n        <sw-button\\n            :variant=\\\"actionLabel === null ? 'primary' : ''\\\"\\n            size=\\\"small\\\"\\n            @click=\\\"close\\\"\\n        >\\n            {{ closeBtnLabel }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_extension_permissions_modal_footer_action %}\\n        <sw-button\\n            v-if=\\\"actionLabel\\\"\\n            variant=\\\"primary\\\"\\n            size=\\\"small\\\"\\n            @click=\\\"closeWithAction\\\"\\n        >\\n            {{ actionLabel }}\\n        </sw-button>\\n        {% endblock %}\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_permissions_modal_details %}\\n    <sw-extension-permissions-details-modal\\n        v-if=\\\"showDetailsModal\\\"\\n        :modal-title=\\\"modalTitle\\\"\\n        :permissions=\\\"permissionsWithGroupedOperations\\\"\\n        :selected-entity=\\\"selectedEntity\\\"\\n        @modal-close=\\\"closeDetailsModal\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_permissions_modal_domains %}\\n    <sw-extension-domains-modal\\n        v-if=\\\"showDomainsModal\\\"\\n        :extension-label=\\\"extensionLabel\\\"\\n        :domains=\\\"domainsList\\\"\\n        @modal-close=\\\"toggleDomainsModal(false)\\\"\\n    />\\n    {% endblock %}\\n</sw-modal>\\n{% endblock %}\\n\";"],"sourceRoot":""}