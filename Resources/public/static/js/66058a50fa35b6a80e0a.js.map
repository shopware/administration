{"version":3,"sources":["webpack:///./src/module/sw-profile/view/sw-profile-index-search-preferences/index.js","webpack:///./src/module/sw-profile/view/sw-profile-index-search-preferences/sw-profile-index-search-preferences.html.twig","webpack:///./src/module/sw-profile/view/sw-profile-index-search-preferences/sw-profile-index-search-preferences.scss"],"names":["_Shopware","Shopware","Module","State","Mixin","template","inject","mixins","getByName","data","isLoading","computed","searchPreferences","get","set","commit","userSearchPreferences","defaultSearchPreferences","_this","this","searchPreferencesService","getDefaultSearchPreferences","reduce","accumulator","currentValue","value","find","item","Object","keys","push","adminEsEnable","_Shopware$Context$app","Context","app","created","createdComponent","beforeDestroy","beforeDestroyComponent","methods","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getDataSource","updateDataSource","addEventListeners","stop","removeEventListeners","_this3","_callee2","_context2","getUserSearchPreferences","sent","processSearchPreferences","t0","createNotificationError","message","finish","$root","$on","$off","forEach","searchPreference","fields","field","_searchable","getModuleTitle","entityName","module","getModuleByEntityName","$tc","manifest","title","onChangeSearchPreference","every","onSelect","event","_this4","onReset","_this5","toReset","index","resetSearchPreference","map","fieldName","content","__esModule","default","i","locals","exports","add"],"mappings":"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","file":"static/js/66058a50fa35b6a80e0a.js","sourcesContent":["/**\n * @package system-settings\n */\nimport template from './sw-profile-index-search-preferences.html.twig';\nimport './sw-profile-index-search-preferences.scss';\n\nconst { Module, State, Mixin } = Shopware;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['searchPreferencesService'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n        };\n    },\n\n    computed: {\n        searchPreferences: {\n            get() {\n                return State.get('swProfile').searchPreferences;\n            },\n            set(searchPreferences) {\n                State.commit('swProfile/setSearchPreferences', searchPreferences);\n            },\n        },\n\n        userSearchPreferences: {\n            get() {\n                return State.get('swProfile').userSearchPreferences;\n            },\n            set(userSearchPreferences) {\n                State.commit('swProfile/setUserSearchPreferences', userSearchPreferences);\n            },\n        },\n\n        defaultSearchPreferences() {\n            const defaultSearchPreferences = this.searchPreferencesService.getDefaultSearchPreferences();\n\n            if (this.userSearchPreferences === null) {\n                return defaultSearchPreferences;\n            }\n\n            return defaultSearchPreferences.reduce((accumulator, currentValue) => {\n                const value = this.userSearchPreferences.find((item) => {\n                    return Object.keys(item)[0] === Object.keys(currentValue)[0];\n                });\n\n                accumulator.push(value || currentValue);\n\n                return accumulator;\n            }, []);\n        },\n\n        adminEsEnable() {\n            return Shopware.Context.app.adminEsEnable ?? false;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    beforeDestroy() {\n        this.beforeDestroyComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            await this.getDataSource();\n            this.updateDataSource();\n            this.addEventListeners();\n        },\n\n        beforeDestroyComponent() {\n            this.removeEventListeners();\n        },\n\n        async getDataSource() {\n            this.isLoading = true;\n\n            try {\n                this.userSearchPreferences = await this.searchPreferencesService.getUserSearchPreferences();\n                this.searchPreferences = this.searchPreferencesService.processSearchPreferences(\n                    this.defaultSearchPreferences,\n                );\n            } catch (error) {\n                this.createNotificationError({ message: error.message });\n                this.searchPreferences = [];\n                this.userSearchPreferences = null;\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        addEventListeners() {\n            this.$root.$on('sw-search-preferences-modal-close', this.getDataSource);\n        },\n\n        removeEventListeners() {\n            this.$root.$off('sw-search-preferences-modal-close', this.getDataSource);\n        },\n\n        updateDataSource() {\n            if (!this.adminEsEnable) {\n                return;\n            }\n\n            this.searchPreferences.forEach((searchPreference) => {\n                searchPreference.fields.forEach((field) => {\n                    field._searchable = true;\n                });\n            });\n        },\n\n        getModuleTitle(entityName) {\n            const module = Module.getModuleByEntityName(entityName);\n\n            return this.$tc(module?.manifest.title);\n        },\n\n        onChangeSearchPreference(searchPreference) {\n            if (searchPreference._searchable && searchPreference.fields.every((field) => !field._searchable)) {\n                searchPreference.fields.forEach((field) => {\n                    field._searchable = true;\n                });\n            }\n        },\n\n        onSelect(event) {\n            this.searchPreferences.forEach((searchPreference) => {\n                searchPreference._searchable = event;\n\n                if (!this.adminEsEnable) {\n                    searchPreference.fields.forEach((field) => {\n                        field._searchable = event;\n                    });\n                }\n            });\n        },\n\n        onReset() {\n            const defaultSearchPreferences = this.searchPreferencesService.getDefaultSearchPreferences();\n            const toReset = this.searchPreferencesService.processSearchPreferences(defaultSearchPreferences);\n\n            this.searchPreferences.forEach((searchPreference, index) => {\n                toReset.forEach((item) => {\n                    if (item.entityName === searchPreference.entityName) {\n                        this.resetSearchPreference(item, this.searchPreferences[index]);\n                    }\n                });\n            });\n        },\n\n        resetSearchPreference(toReset, searchPreference) {\n            searchPreference._searchable = toReset._searchable;\n\n            if (!this.adminEsEnable) {\n                searchPreference.fields = searchPreference.fields.map((field) => {\n                    return toReset.fields.find((item) => item.fieldName === field.fieldName) || field;\n                });\n            }\n        },\n    },\n};\n","export default \"\\n{% block sw_profile_index_search_preferences %}\\n<div class=\\\"sw-profile-index-search-preferences\\\">\\n    <sw-card\\n        v-if=\\\"adminEsEnable\\\"\\n        class=\\\"sw-card-elasticsearch-enabled\\\"\\n        position-identifier=\\\"sw-card-elasticsearch-enabled\\\"\\n    >\\n        <sw-alert\\n            class=\\\"sw-card-elasticsearch-enabled__alert\\\"\\n            variant=\\\"info\\\"\\n            :title=\\\"$tc('sw-profile.tabSearchPreferences.alert_elasticsearch.title')\\\"\\n        >\\n            {{ $tc('sw-profile.tabSearchPreferences.alert_elasticsearch.text') }}\\n        </sw-alert>\\n    </sw-card>\\n\\n    \\n    {% block sw_profile_index_search_preferences_searchable_elements %}\\n    <sw-card\\n        class=\\\"sw-profile-index-search-preferences-searchable-elements\\\"\\n        position-identifier=\\\"sw-profile-index-search-preferences\\\"\\n        :title=\\\"$tc('sw-profile.tabSearchPreferences.cardSearchableElements.title')\\\"\\n        :is-loading=\\\"isLoading\\\"\\n    >\\n        \\n        {% block sw_profile_index_search_preferences_searchable_elements_content %}\\n        <sw-container\\n            v-if=\\\"searchPreferences.length > 0\\\"\\n            rows=\\\"auto auto auto\\\"\\n            gap=\\\"24px\\\"\\n        >\\n            \\n            {% block sw_profile_index_search_preferences_searchable_elements_header %}\\n            <p>{{ $tc('sw-profile.tabSearchPreferences.cardSearchableElements.description') }}</p>\\n\\n            <sw-container\\n                columns=\\\"auto auto auto 1fr\\\"\\n                gap=\\\"8px\\\"\\n            >\\n                \\n                {% block sw_profile_index_search_preferences_searchable_elements_button_select %}\\n                <sw-button\\n                    class=\\\"sw-profile-index-search-preferences-searchable-elements__button-select-all\\\"\\n                    @click=\\\"onSelect(true)\\\"\\n                >\\n                    {{ $tc('sw-profile.tabSearchPreferences.cardSearchableElements.buttonSelect') }}\\n                </sw-button>\\n                {% endblock %}\\n\\n                \\n                {% block sw_profile_index_search_preferences_searchable_elements_button_deselect %}\\n                <sw-button\\n                    class=\\\"sw-profile-index-search-preferences-searchable-elements__button-deselect-all\\\"\\n                    @click=\\\"onSelect(false)\\\"\\n                >\\n                    {{ $tc('sw-profile.tabSearchPreferences.cardSearchableElements.buttonDeselect') }}\\n                </sw-button>\\n                {% endblock %}\\n\\n                \\n                {% block sw_profile_index_search_preferences_searchable_elements_button_reset %}\\n                <sw-button\\n                    class=\\\"sw-profile-index-search-preferences-searchable-elements__button-reset-to-default\\\"\\n                    @click=\\\"onReset\\\"\\n                >\\n                    {{ $tc('sw-profile.tabSearchPreferences.cardSearchableElements.buttonReset') }}\\n                </sw-button>\\n                {% endblock %}\\n            </sw-container>\\n            {% endblock %}\\n\\n            \\n            {% block sw_profile_index_search_preferences_searchable_elements_body %}\\n            <div class=\\\"sw-profile-index-search-preferences-searchable-elements__entity-container\\\">\\n                <ul\\n                    v-for=\\\"searchPreference in searchPreferences\\\"\\n                    :key=\\\"searchPreference.entityName\\\"\\n                    class=\\\"sw-profile-index-search-preferences-searchable-elements__entity\\\"\\n                >\\n                    <li class=\\\"sw-profile-index-search-preferences-searchable-elements__entity-field\\\">\\n                        \\n                        <sw-checkbox-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"searchPreference._searchable\\\"\\n                            {% else %}\\n                            v-model=\\\"searchPreference._searchable\\\"\\n                            {% endif %}\\n                            :label=\\\"getModuleTitle(searchPreference.entityName)\\\"\\n                            {% if VUE3 %}\\n                            @update:value=\\\"onChangeSearchPreference(searchPreference)\\\"\\n                            {% else %}\\n                            @change=\\\"onChangeSearchPreference(searchPreference)\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--searchPreference-_searchable\\\"\\n                        />\\n                        <ul class=\\\"sw-profile-index-search-preferences-searchable-elements__entity\\\">\\n                            <li\\n                                v-for=\\\"field in searchPreference.fields\\\"\\n                                :key=\\\"field.fieldName\\\"\\n                                class=\\\"sw-profile-index-search-preferences-searchable-elements__entity-field\\\"\\n                            >\\n                                <sw-checkbox-field\\n                                    {% if VUE3 %}\\n                                    v-model:value=\\\"field._searchable\\\"\\n                                    {% else %}\\n                                    v-model=\\\"field._searchable\\\"\\n                                    {% endif %}\\n                                    name=\\\"sw-field--field-_searchable\\\"\\n                                    :label=\\\"$tc(`sw-profile.tabSearchPreferences.modules.${searchPreference.entityName}.${field.fieldName}`)\\\"\\n                                    :disabled=\\\"adminEsEnable || !searchPreference._searchable\\\"\\n                                />\\n                            </li>\\n                        </ul>\\n                    </li>\\n                </ul>\\n            </div>\\n            {% endblock %}\\n        </sw-container>\\n        {% endblock %}\\n    </sw-card>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-profile-index-search-preferences.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"8499b33e\", content, true, {});"],"sourceRoot":""}