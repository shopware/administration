{"version":3,"sources":["webpack:///./src/module/sw-cms/elements/image/config/sw-cms-el-config-image.scss","webpack:///./src/module/sw-cms/elements/image/config/index.js","webpack:///./src/module/sw-cms/elements/image/config/sw-cms-el-config-image.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","template","inject","mixins","getByName","data","mediaModalIsOpen","initialFolderId","computed","mediaRepository","this","repositoryFactory","create","uploadTag","concat","element","id","previewSource","_this$element","_this$element$data","_this$element$data$me","media","config","value","created","createdComponent","methods","initElementConfig","onImageUpload","_ref","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","targetId","mediaEntity","wrap","_context","prev","next","get","sent","source","updateElementData","$emit","stop","onImageRemove","onCloseModal","onSelectionChanges","arguments","length","undefined","mediaId","$set","onOpenMediaModal","onChangeMinHeight","minHeight","onChangeDisplayMode","verticalAlign","horizontalAlign"],"mappings":"mIAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAA2EL,SAC5E,WAAYF,GAAS,EAAM,K,uFCNpCQ,G,UAAUC,SAAVD,OAMO,WACXE,SCVW,q2MDYXC,OAAQ,CAAC,qBAETC,OAAQ,CACJJ,EAAMK,UAAU,gBAGpBC,KAAI,WACA,MAAO,CACHC,kBAAkB,EAClBC,gBAAiB,OAIzBC,SAAU,CACNC,gBAAe,WACX,OAAOC,KAAKC,kBAAkBC,OAAO,UAGzCC,UAAS,WACL,MAAM,4BAANC,OAAmCJ,KAAKK,QAAQC,KAGpDC,cAAa,WAAI,IAADC,EAAAC,EAAAC,EACZ,OAAgB,QAAhBF,EAAIR,KAAKK,eAAO,IAAAG,GAAM,QAANC,EAAZD,EAAcb,YAAI,IAAAc,GAAO,QAAPC,EAAlBD,EAAoBE,aAAK,IAAAD,GAAzBA,EAA2BJ,GACpBN,KAAKK,QAAQV,KAAKgB,MAGtBX,KAAKK,QAAQO,OAAOD,MAAME,QAIzCC,QAAO,WACHd,KAAKe,oBAGTC,QAAS,CACLD,iBAAgB,WACZf,KAAKiB,kBAAkB,UAGrBC,cAAa,SAAAC,GAAgB,IAADC,EAAA,YAAAC,IAAAC,IAAAC,MAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAJ,OAARL,EAAQN,EAARM,SAAQG,EAAAE,KAAA,EACAV,EAAKrB,gBAAgBgC,IAAIN,GAAU,KAAD,EAAtDC,EAAWE,EAAAI,KAEjBZ,EAAKf,QAAQO,OAAOD,MAAME,MAAQa,EAAYpB,GAC9Cc,EAAKf,QAAQO,OAAOD,MAAMsB,OAAS,SAEnCb,EAAKc,kBAAkBR,GAEvBN,EAAKe,MAAM,iBAAkBf,EAAKf,SAAS,wBAAAuB,EAAAQ,UAAAZ,MARbH,IAWlCgB,cAAa,WACTrC,KAAKK,QAAQO,OAAOD,MAAME,MAAQ,KAElCb,KAAKkC,oBAELlC,KAAKmC,MAAM,iBAAkBnC,KAAKK,UAGtCiC,aAAY,WACRtC,KAAKJ,kBAAmB,GAG5B2C,mBAAkB,SAACb,GACf,IAAMf,EAAQe,EAAY,GAC1B1B,KAAKK,QAAQO,OAAOD,MAAME,MAAQF,EAAML,GACxCN,KAAKK,QAAQO,OAAOD,MAAMsB,OAAS,SAEnCjC,KAAKkC,kBAAkBvB,GAEvBX,KAAKmC,MAAM,iBAAkBnC,KAAKK,UAGtC6B,kBAAiB,WAAgB,IAAfvB,EAAK6B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAChBG,EAAoB,OAAVhC,EAAiB,KAAOA,EAAML,GACzCN,KAAKK,QAAQV,MAGdK,KAAK4C,KAAK5C,KAAKK,QAAQV,KAAM,UAAWgD,GACxC3C,KAAK4C,KAAK5C,KAAKK,QAAQV,KAAM,QAASgB,IAHtCX,KAAK4C,KAAK5C,KAAKK,QAAS,OAAQ,CAAEsC,UAAShC,WAOnDkC,iBAAgB,WACZ7C,KAAKJ,kBAAmB,GAG5BkD,kBAAiB,SAACjC,GACdb,KAAKK,QAAQO,OAAOmC,UAAUlC,MAAkB,OAAVA,EAAiB,GAAKA,EAE5Db,KAAKmC,MAAM,iBAAkBnC,KAAKK,UAGtC2C,oBAAmB,SAACnC,GACF,UAAVA,IACAb,KAAKK,QAAQO,OAAOqC,cAAcpC,MAAQ,KAC1Cb,KAAKK,QAAQO,OAAOsC,gBAAgBrC,MAAQ,MAGhDb,KAAKmC,MAAM,iBAAkBnC,KAAKK","file":"static/js/87de3a5f6c9903b85b1d.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-cms-el-config-image.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"303034b7\", content, true, {});","import template from './sw-cms-el-config-image.html.twig';\nimport './sw-cms-el-config-image.scss';\n\nconst { Mixin } = Shopware;\n\n/**\n * @private\n * @package buyers-experience\n */\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('cms-element'),\n    ],\n\n    data() {\n        return {\n            mediaModalIsOpen: false,\n            initialFolderId: null,\n        };\n    },\n\n    computed: {\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        uploadTag() {\n            return `cms-element-media-config-${this.element.id}`;\n        },\n\n        previewSource() {\n            if (this.element?.data?.media?.id) {\n                return this.element.data.media;\n            }\n\n            return this.element.config.media.value;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.initElementConfig('image');\n        },\n\n        async onImageUpload({ targetId }) {\n            const mediaEntity = await this.mediaRepository.get(targetId);\n\n            this.element.config.media.value = mediaEntity.id;\n            this.element.config.media.source = 'static';\n\n            this.updateElementData(mediaEntity);\n\n            this.$emit('element-update', this.element);\n        },\n\n        onImageRemove() {\n            this.element.config.media.value = null;\n\n            this.updateElementData();\n\n            this.$emit('element-update', this.element);\n        },\n\n        onCloseModal() {\n            this.mediaModalIsOpen = false;\n        },\n\n        onSelectionChanges(mediaEntity) {\n            const media = mediaEntity[0];\n            this.element.config.media.value = media.id;\n            this.element.config.media.source = 'static';\n\n            this.updateElementData(media);\n\n            this.$emit('element-update', this.element);\n        },\n\n        updateElementData(media = null) {\n            const mediaId = media === null ? null : media.id;\n            if (!this.element.data) {\n                this.$set(this.element, 'data', { mediaId, media });\n            } else {\n                this.$set(this.element.data, 'mediaId', mediaId);\n                this.$set(this.element.data, 'media', media);\n            }\n        },\n\n        onOpenMediaModal() {\n            this.mediaModalIsOpen = true;\n        },\n\n        onChangeMinHeight(value) {\n            this.element.config.minHeight.value = value === null ? '' : value;\n\n            this.$emit('element-update', this.element);\n        },\n\n        onChangeDisplayMode(value) {\n            if (value === 'cover') {\n                this.element.config.verticalAlign.value = null;\n                this.element.config.horizontalAlign.value = null;\n            }\n\n            this.$emit('element-update', this.element);\n        },\n    },\n};\n","export default \"\\n{% block sw_cms_element_image_config %}\\n<div class=\\\"sw-cms-el-config-image\\\">\\n    \\n    {% block sw_cms_element_image_config_media_upload %}\\n    <sw-cms-mapping-field\\n        {% if VUE3 %}\\n        v-model:config=\\\"element.config.media\\\"\\n        {% else %}\\n        v-model=\\\"element.config.media\\\"\\n        {% endif %}\\n        :label=\\\"$tc('sw-cms.elements.image.label')\\\"\\n        value-types=\\\"entity\\\"\\n        entity=\\\"media\\\"\\n    >\\n        <sw-media-upload-v2\\n            variant=\\\"regular\\\"\\n            :upload-tag=\\\"uploadTag\\\"\\n            :source=\\\"previewSource\\\"\\n            :allow-multi-select=\\\"false\\\"\\n            :default-folder=\\\"cmsPageState.pageEntityName\\\"\\n            :caption=\\\"$tc('sw-cms.elements.general.config.caption.mediaUpload')\\\"\\n            @media-upload-sidebar-open=\\\"onOpenMediaModal\\\"\\n            @media-upload-remove-image=\\\"onImageRemove\\\"\\n        />\\n\\n        <template #preview=\\\"{ demoValue }\\\">\\n            <div class=\\\"sw-cms-el-config-image__mapping-preview\\\">\\n                <img\\n                    v-if=\\\"demoValue.url\\\"\\n                    :src=\\\"demoValue.url\\\"\\n                    alt=\\\"\\\"\\n                >\\n                <sw-alert\\n                    v-else\\n                    class=\\\"sw-cms-el-config-image__preview-info\\\"\\n                    variant=\\\"info\\\"\\n                >\\n                    {{ $tc('sw-cms.detail.label.mappingEmptyPreview') }}\\n                </sw-alert>\\n            </div>\\n        </template>\\n    </sw-cms-mapping-field>\\n\\n    <sw-upload-listener\\n        :upload-tag=\\\"uploadTag\\\"\\n        auto-upload\\n        @media-upload-finish=\\\"onImageUpload\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_element_image_config_display_mode %}\\n    <sw-select-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"element.config.displayMode.value\\\"\\n        {% else %}\\n        v-model=\\\"element.config.displayMode.value\\\"\\n        {% endif %}\\n        class=\\\"sw-cms-el-config-image__display-mode\\\"\\n        :label=\\\"$tc('sw-cms.elements.general.config.label.displayMode')\\\"\\n        {% if VUE3 %}\\n        @update:value=\\\"onChangeDisplayMode\\\"\\n        {% else %}\\n        @change=\\\"onChangeDisplayMode\\\"\\n        {% endif %}\\n    >\\n        <option value=\\\"standard\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.displayModeStandard') }}\\n        </option>\\n        <option value=\\\"cover\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.displayModeCover') }}\\n        </option>\\n        <option value=\\\"stretch\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.displayModeStretch') }}\\n        </option>\\n    </sw-select-field>\\n    {% endblock %}\\n\\n    <template v-if=\\\"element.config.displayMode.value === 'cover'\\\">\\n        \\n        {% block sw_cms_element_image_config_min_height %}\\n        <sw-text-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"element.config.minHeight.value\\\"\\n            {% else %}\\n            v-model=\\\"element.config.minHeight.value\\\"\\n            {% endif %}\\n            :label=\\\"$tc('sw-cms.elements.image.config.label.minHeight')\\\"\\n            :placeholder=\\\"$tc('sw-cms.elements.image.config.placeholder.enterMinHeight')\\\"\\n            {% if VUE3 %}\\n            @update:value=\\\"onChangeMinHeight\\\"\\n            {% else %}\\n            @input=\\\"onChangeMinHeight\\\"\\n            {% endif %}\\n        />\\n        {% endblock %}\\n    </template>\\n\\n    \\n    {% block sw_cms_element_image_config_vertical_align %}\\n    <sw-select-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"element.config.verticalAlign.value\\\"\\n        {% else %}\\n        v-model=\\\"element.config.verticalAlign.value\\\"\\n        {% endif %}\\n        :label=\\\"$tc('sw-cms.elements.general.config.label.verticalAlign')\\\"\\n        :placeholder=\\\"$tc('sw-cms.elements.general.config.label.verticalAlign')\\\"\\n        :disabled=\\\"element.config.displayMode.value === 'cover'\\\"\\n    >\\n        <option value=\\\"flex-start\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.verticalAlignTop') }}\\n        </option>\\n        <option value=\\\"center\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.verticalAlignCenter') }}\\n        </option>\\n        <option value=\\\"flex-end\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.verticalAlignBottom') }}\\n        </option>\\n    </sw-select-field>\\n    {% endblock %}\\n\\n    {% block sw_cms_element_image_config_horizontal_align %}\\n    <sw-select-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"element.config.horizontalAlign.value\\\"\\n        {% else %}\\n        v-model=\\\"element.config.horizontalAlign.value\\\"\\n        {% endif %}\\n        :label=\\\"$tc('sw-cms.elements.general.config.label.horizontalAlign')\\\"\\n        :placeholder=\\\"$tc('sw-cms.elements.general.config.label.horizontalAlign')\\\"\\n        :disabled=\\\"element.config.displayMode.value === 'cover'\\\"\\n    >\\n        <option value=\\\"flex-start\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.horizontalAlignLeft') }}\\n        </option>\\n        <option value=\\\"center\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.horizontalAlignCenter') }}\\n        </option>\\n        <option value=\\\"flex-end\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.horizontalAlignRight') }}\\n        </option>\\n    </sw-select-field>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_element_image_config_link %}\\n    <div class=\\\"sw-cms-el-config-image__link\\\">\\n        <sw-dynamic-url-field\\n            v-model=\\\"element.config.url.value\\\"\\n        />\\n        <sw-switch-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"element.config.newTab.value\\\"\\n            {% else %}\\n            v-model=\\\"element.config.newTab.value\\\"\\n            {% endif %}\\n            class=\\\"sw-cms-el-config-image__link-tab\\\"\\n            :label=\\\"$tc('sw-cms.elements.image.config.label.linkNewTab')\\\"\\n        />\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_element_image_config_media_modal %}\\n    <sw-media-modal-v2\\n        v-if=\\\"mediaModalIsOpen\\\"\\n        variant=\\\"regular\\\"\\n        :caption=\\\"$tc('sw-cms.elements.general.config.caption.mediaUpload')\\\"\\n        :entity-context=\\\"cmsPageState.entityName\\\"\\n        :allow-multi-select=\\\"false\\\"\\n        :initial-folder-id=\\\"cmsPageState.defaultMediaFolderId\\\"\\n        @media-upload-remove-image=\\\"onImageRemove\\\"\\n        @media-modal-selection-change=\\\"onSelectionChanges\\\"\\n        @modal-close=\\\"onCloseModal\\\"\\n    />\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}