{"version":3,"sources":["webpack:///./src/module/sw-flow/view/detail/sw-flow-detail-general/index.js","webpack:///./src/module/sw-flow/view/detail/sw-flow-detail-general/sw-flow-detail-general.html.twig","webpack:///./src/module/sw-flow/view/detail/sw-flow-detail-general/sw-flow-detail-general.scss"],"names":["_Component$getCompone","Shopware","Component","getComponentHelper","mapPropertyErrors","mapState","template","inject","props","isLoading","type","Boolean","required","default","isNewFlow","isTemplate","isUnknownTrigger","computed","_objectSpread","logGridColumns","property","label","this","$tc","naturalSorting","primary","sortable","isFlowTemplate","_this$$route$query","$route","query","content","__esModule","module","i","locals","exports","add"],"mappings":"kuBAGA,IACAA,EADsBC,SAAdC,UAC0CC,qBAA1CC,EAAiBJ,EAAjBI,kBAAmBC,EAAQL,EAARK,SAMZ,WACXC,SCXW,ggHDaXC,OAAQ,CAAC,OAETC,MAAO,CACHC,UAAW,CACPC,KAAMC,QACNC,UAAU,EACVC,SAAS,GAEbC,UAAW,CACPJ,KAAMC,QACNC,UAAU,EACVC,SAAS,GAEbE,WAAY,CACRL,KAAMC,QACNC,UAAU,EACVC,SAAS,GAEbG,iBAAkB,CACdN,KAAMC,QACNC,UAAU,EACVC,SAAS,IAIjBI,SAAQC,IAAA,CACJC,eAAc,WACV,MAAO,CACH,CACIC,SAAU,eACVC,MAAOC,KAAKC,IAAI,uCAChBC,gBAAgB,EAChBC,SAAS,GAEb,CACIL,SAAU,UACVC,MAAOC,KAAKC,IAAI,kCAChBG,UAAU,GAEd,CACIN,SAAU,eACVC,MAAOC,KAAKC,IAAI,uCAChBG,UAAU,GAEd,CACIN,SAAU,UACVC,MAAOC,KAAKC,IAAI,kCAChBG,UAAU,GAEd,CACIN,SAAU,UACVC,MAAOC,KAAKC,IAAI,kCAChBG,UAAU,KAKtBC,eAAc,WAAI,IAADC,EACb,MAAmC,cAAX,QAAjBA,EAAAN,KAAKO,OAAOC,aAAK,IAAAF,OAAA,EAAjBA,EAAmBlB,QAG3BL,EAAS,cAAe,CAAC,UACzBD,EAAkB,OAAQ,CAAC,Y,4CExEtC,IAAI2B,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQlB,SACnB,iBAAZkB,IAAsBA,EAAU,CAAC,CAACE,EAAOC,EAAIH,EAAS,MAC7DA,EAAQI,SAAQF,EAAOG,QAAUL,EAAQI,SAG/BE,EADH,EAAQ,QAA2ExB,SAC5E,WAAYkB,GAAS,EAAM","file":"static/js/6cce48920a4b56040985.js","sourcesContent":["import template from './sw-flow-detail-general.html.twig';\nimport './sw-flow-detail-general.scss';\n\nconst { Component } = Shopware;\nconst { mapPropertyErrors, mapState } = Component.getComponentHelper();\n\n/**\n * @private\n * @package services-settings\n */\nexport default {\n    template,\n\n    inject: ['acl'],\n\n    props: {\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        isNewFlow: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        isTemplate: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        isUnknownTrigger: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    computed: {\n        logGridColumns() {\n            return [\n                {\n                    property: 'dataExecuted',\n                    label: this.$tc('sw-flow.detail.labelLogDateExecuted'),\n                    naturalSorting: true,\n                    primary: true,\n                },\n                {\n                    property: 'trigger',\n                    label: this.$tc('sw-flow.detail.labelLogTrigger'),\n                    sortable: false,\n                },\n                {\n                    property: 'triggerValue',\n                    label: this.$tc('sw-flow.detail.labelLogTriggerValue'),\n                    sortable: false,\n                },\n                {\n                    property: 'actions',\n                    label: this.$tc('sw-flow.detail.labelLogActions'),\n                    sortable: false,\n                },\n                {\n                    property: 'success',\n                    label: this.$tc('sw-flow.detail.labelLogSuccess'),\n                    sortable: false,\n                },\n            ];\n        },\n\n        isFlowTemplate() {\n            return this.$route.query?.type === 'template';\n        },\n\n        ...mapState('swFlowState', ['flow']),\n        ...mapPropertyErrors('flow', ['name']),\n    },\n};\n","export default \"\\n{% block sw_flow_detail_general %}\\n<div class=\\\"sw-flow-detail-general\\\">\\n    \\n    {% block sw_flow_detail_general_information %}\\n    <sw-alert\\n        v-if=\\\"isUnknownTrigger\\\"\\n        variant=\\\"warning\\\"\\n        class=\\\"sw-flow-detail-general__warning-unknow-trigger\\\"\\n    >\\n        <p>{{ $tc('sw-flow.flowNotification.messageUnknownTriggerWarning') }}</p>\\n        <p>{{ $tc('sw-flow.flowNotification.textIntroduce') }}</p>\\n        <ul>\\n            <li>{{ $tc('sw-flow.flowNotification.textGuide1') }}</li>\\n            <li>{{ $tc('sw-flow.flowNotification.textGuide2') }}</li>\\n            <li>{{ $tc('sw-flow.flowNotification.textGuide3') }}</li>\\n        </ul>\\n    </sw-alert>\\n\\n    <sw-card\\n        class=\\\"sw-flow-detail-general__general-card\\\"\\n        position-identifier=\\\"sw-flow-detail-general\\\"\\n        :class=\\\"{'sw-flow-detail-general__template': isTemplate }\\\"\\n        :title=\\\"$tc('sw-flow.detail.labelGeneralCard')\\\"\\n        :is-loading=\\\"isLoading\\\"\\n    >\\n        \\n        {% block sw_flow_detail_general_information_name %}\\n        <sw-text-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"flow.name\\\"\\n            {% else %}\\n            v-model=\\\"flow.name\\\"\\n            {% endif %}\\n            class=\\\"sw-flow-detail-general__general-name\\\"\\n            :required=\\\"!isTemplate\\\"\\n            :disabled=\\\"!acl.can('flow.editor')\\\"\\n            :label=\\\"$tc('sw-flow.detail.labelGeneralInformationName')\\\"\\n            :placeholder=\\\"$tc('sw-flow.detail.placeholderGeneralInformationName')\\\"\\n            :error=\\\"flowNameError\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_detail_general_information_description %}\\n        <sw-textarea-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"flow.description\\\"\\n            {% else %}\\n            v-model=\\\"flow.description\\\"\\n            {% endif %}\\n            class=\\\"sw-flow-detail-general__general-description\\\"\\n            :disabled=\\\"!acl.can('flow.editor')\\\"\\n            :label=\\\"$tc('sw-flow.detail.labelGeneralInformationDescription')\\\"\\n            :placeholder=\\\"$tc('sw-flow.detail.placeholderGeneralInformationDescription')\\\"\\n        />\\n        {% endblock %}\\n\\n        <sw-container\\n            columns=\\\"repeat(auto-fit, minmax(250px, 1fr))\\\"\\n            gap=\\\"0 30px\\\"\\n        >\\n            \\n            {% block sw_flow_detail_general_information_priority %}\\n            <sw-number-field\\n                v-if=\\\"!isFlowTemplate\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"flow.priority\\\"\\n                {% else %}\\n                v-model=\\\"flow.priority\\\"\\n                {% endif %}\\n                class=\\\"sw-flow-detail-general__general-priority\\\"\\n                :disabled=\\\"!acl.can('flow.editor')\\\"\\n                :label=\\\"$tc('sw-flow.detail.labelGeneralInformationPriority')\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_flow_detail_general_information_active %}\\n            <sw-switch-field\\n                v-if=\\\"!isFlowTemplate\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"flow.active\\\"\\n                {% else %}\\n                v-model=\\\"flow.active\\\"\\n                {% endif %}\\n                class=\\\"sw-flow-detail-general__general-active\\\"\\n                :disabled=\\\"!acl.can('flow.editor') || isUnknownTrigger\\\"\\n                :label=\\\"$tc('sw-flow.detail.labelGeneralInformationActive')\\\"\\n            />\\n            {% endblock %}\\n        </sw-container>\\n    </sw-card>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-flow-detail-general.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"42027cd8\", content, true, {});"],"sourceRoot":""}