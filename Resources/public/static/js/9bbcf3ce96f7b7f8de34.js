(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[36968],{948918:function(){},636968:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return l}}),n(742570);let{Mixin:i}=Shopware,{Criteria:s}=Shopware.Data;var l={template:'\n{% block sw_settings_list %}\n\n{% block sw_settings_rule_index %}\n<sw-page class="sw-settings-rule-list">\n\n    \n    {% block sw_settings_rule_list_search_bar %}\n    <template #search-bar>\n        <sw-search-bar\n            initial-search-type="rule"\n            :placeholder="$tc(\'sw-settings-rule.general.placeholderSearchBar\')"\n            :initial-search="term"\n            @search="onSearch"\n        />\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_rule_list_smart_bar_header %}\n    <template #smart-bar-header>\n        \n        {% block sw_settings_rule_list_smart_bar_header_title %}\n        <h2>\n            \n            {% block sw_settings_rule_list_smart_bar_header_title_text %}\n            {{ $tc(\'sw-settings.index.title\') }} <sw-icon\n                name="regular-chevron-right-xs"\n                small\n            /> {{ $tc(\'sw-settings-rule.list.textHeadline\') }}\n            {% endblock %}\n\n            \n            {% block sw_settings_rule_list_smart_bar_header_title_amount %}\n            <span\n                v-if="!isLoading"\n                class="sw-page__smart-bar-amount"\n            >\n                ({{ total }})\n            </span>\n            {% endblock %}\n        </h2>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_rule_list_smart_bar_actions %}\n    <template #smart-bar-actions>\n        \n        {% block sw_settings_rule_list_smart_bar_actions_add %}\n        <sw-button\n            v-tooltip="{\n                message: $tc(\'sw-privileges.tooltip.warning\'),\n                disabled: acl.can(\'rule.creator\'),\n                showOnDisabledElements: true\n            }"\n            :router-link="{ name: \'sw.settings.rule.create\' }"\n            :disabled="!acl.can(\'rule.creator\') || undefined"\n            variant="primary"\n        >\n            {{ $tc(\'sw-settings-rule.list.buttonAddRule\') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <template #language-switch>\n        <sw-language-switch\n            @on-change="onChangeLanguage"\n        />\n    </template>\n\n    \n    {% block sw_settings_rule_list_content %}\n    <template #content>\n        \n        {% block sw_settings_rule_list_content_card %}\n        <div class="sw-settings-rule-list__content">\n            \n            {% block sw_settings_rule_list_grid %}\n            <sw-entity-listing\n                v-if="isLoading || rules"\n                ref="swRuleGrid"\n                identifier="sw-settings-rule-list"\n                class="sw-rule-list-grid"\n                :items="rules"\n                :columns="getRuleColumns()"\n                :repository="ruleRepository"\n                :is-loading="isLoading"\n                :full-page="true"\n                :show-selection="acl.can(\'rule.deleter\') || undefined"\n                :allow-edit="acl.can(\'rule.editor\') || undefined"\n                :allow-delete="acl.can(\'rule.deleter\') || undefined"\n                detail-route="sw.settings.rule.detail"\n                :disable-data-fetching="true"\n                :sort-by="sortBy"\n                :sort-direction="sortDirection"\n                @column-sort="onSortColumn"\n                @page-change="onPageChange"\n                @inline-edit-save="onInlineEditSave"\n                @items-delete-finish="getList"\n            >\n\n                \n                {% block sw_settings_rule_list_grid_column_tags %}\n                <template #column-tags="{ item }">\n                    <span class="sw-data-grid__cell-value">\n                        <sw-label\n                            v-for="tag in item.tags"\n                            :key="tag.id"\n                        >\n                            {{ tag.name }}\n                        </sw-label>\n                    </span>\n                </template>\n                {% endblock %}\n\n                \n                {% block sw_settings_rule_list_grid_column_assignments %}\n                <template\n                    v-for="(propertyName, index) in assignmentProperties"\n                    :key="index"\n                    #[`column-${propertyName}`]="{ item }"\n                >\n                    <span\n                        class="sw-data-grid__cell-value"\n                    >\n                        {{ getCounts(propertyName, item.id) }}\n                        {{ $tc(`sw-settings-rule.list.assignments.${propertyName}`, getCounts(propertyName, item.id)) }}\n                    </span>\n                </template>\n                {% endblock %}\n\n                <template #column-invalid="{item}">\n                    <template v-if="item.invalid">\n                        {{ $tc(\'sw-settings-rule.list.invalid\') }}\n                    </template>\n                    <template v-else>\n                        {{ $tc(\'sw-settings-rule.list.valid\') }}\n                    </template>\n                </template>\n\n                <template #column-updatedAt="{item}">\n                    {{ dateFilter(item.updatedAt) }}\n                </template>\n\n                <template #column-createdAt="{item}">\n                    {{ dateFilter(item.createdAt) }}\n                </template>\n\n                \n                {% block sw_settings_rule_list_grid_columns_actions %}\n                <template #more-actions="{ item }">\n                    \n                    {% block sw_settings_rule_list_grid_columns_actions_duplicate %}\n                    <sw-context-menu-item\n                        :disabled="!acl.can(\'rule.creator\')"\n                        @click="onDuplicate(item)"\n                    >\n                        {{ $tc(\'sw-settings-rule.list.contextMenuDuplicate\') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n            </sw-entity-listing>\n            {% endblock %}\n\n            \n            {% block sw_settings_rule_list_empty_message %}\n            <sw-empty-state\n                v-else-if="!isLoading && !total"\n                :title="$tc(\'sw-settings-rule.list.messageEmpty\')"\n            />\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </template>\n\n    \n    {% block sw_settings_rule_list_sidebar %}\n    <template #sidebar>\n        <sw-sidebar>\n            \n            {% block sw_settings_rule_list_sidebar_refresh %}\n            <sw-sidebar-item\n                icon="regular-undo"\n                :title="$tc(\'sw-settings-rule.list.titleSidebarItemRefresh\')"\n                @click="onRefresh"\n            />\n            {% endblock %}\n\n            \n            {% block sw_settings_rule_list_sidebar_filter %}\n            <sw-sidebar-filter-panel\n                entity="rule"\n                :store-key="storeKey"\n                :active-filter-number="activeFilterNumber"\n                :filters="listFilters"\n                :defaults="defaultFilters"\n                @criteria-changed="updateCriteria"\n            />\n        {% endblock %}\n        </sw-sidebar>\n    </template>\n    {% endblock %}\n    {% endblock %}\n</sw-page>\n    {% endblock %}\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory","acl","filterFactory","ruleConditionDataProviderService","filterService"],mixins:[i.getByName("listing"),i.getByName("notification")],data(){return{rules:null,isLoading:!1,sortBy:"name",storeKey:"grid.filter.rule",activeFilterNumber:0,defaultFilters:["conditions","conditionGroups","assignments","tags"],filterCriteria:[]}},metaInfo(){return{title:this.$createTitle()}},computed:{getRuleDefinition(){return Shopware.EntityDefinition.get("rule")},ruleRepository(){return this.repositoryFactory.create("rule")},conditionFilterOptions(){let e=this.ruleConditionDataProviderService.getConditions().map(e=>({value:e.type,label:this.$tc(e.label)}));return e.sort((e,t)=>e.label.localeCompare(t.label)),e},groupFilterOptions(){let e=[];return Object.values(this.ruleConditionDataProviderService.getGroups()).forEach(t=>{let n=this.ruleConditionDataProviderService.getByGroup(t.id).map(e=>e.type).join("|");e.push({value:n,label:this.$tc(t.name)})}),e.sort((e,t)=>e.label.localeCompare(t.label)),e},associationFilterOptions(){let e=[];return this.assignmentProperties.forEach(t=>{e.push({value:t,label:this.$tc(`sw-settings-rule.filter.assignmentFilter.values.${t}`)})}),e.sort((e,t)=>e.label.localeCompare(t.label)),e},listFilters(){let e={conditionGroups:{property:"conditions.type",label:this.$tc("sw-settings-rule.filter.groupFilter.label"),placeholder:this.$tc("sw-settings-rule.filter.groupFilter.placeholder"),type:"multi-select-filter",options:this.groupFilterOptions},conditions:{property:"conditions.type",label:this.$tc("sw-settings-rule.filter.conditionFilter.label"),placeholder:this.$tc("sw-settings-rule.filter.conditionFilter.placeholder"),type:"multi-select-filter",options:this.conditionFilterOptions},assignments:{existingType:!0,property:"conditions",label:this.$tc("sw-settings-rule.filter.assignmentFilter.label"),placeholder:this.$tc("sw-settings-rule.filter.assignmentFilter.placeholder"),type:"multi-select-filter",options:this.associationFilterOptions},tags:{property:"tags",label:this.$tc("sw-settings-rule.filter.tagFilter.label"),placeholder:this.$tc("sw-settings-rule.filter.tagFilter.placeholder"),criteria:new s(1,25).addSorting(s.sort("name"))}};return this.filterFactory.create("rule",e)},listCriteria(){let e=new s(this.page,this.limit);e.setTerm(this.term);let t=["createdAt","updatedAt"].includes(this.sortBy),n=s.sort(this.sortBy,this.sortDirection,t);return this.assignmentProperties.includes(this.sortBy)&&(n.field+=".id",n.type="count"),e.addSorting(n),e.addAssociation("tags"),this.setAggregations(e),this.filterCriteria.forEach(t=>{e.addFilter(t)}),e},assignmentProperties(){let e=[];return Object.keys(this.getRuleDefinition.properties).forEach(t=>{if("conditions"===t||"tags"===t)return;let n=this.getRuleDefinition.properties[t];("many_to_many"===n.relation||"one_to_many"===n.relation)&&e.push(t)}),e},dateFilter(){return Shopware.Filter.getByName("date")}},methods:{setAggregations(e){Object.keys(this.getRuleDefinition.properties).forEach(t=>{if("conditions"===t||"tags"===t)return;let n=this.getRuleDefinition.properties[t];("many_to_many"===n.relation||"one_to_many"===n.relation)&&e.addAggregation(s.terms(t,"id",null,null,s.count(t,`rule.${t}.id`)))})},getCounts(e,t){let n=this.rules.aggregations[e].buckets.find(e=>e.key===t);return n&&n[e]&&n[e].count?n[e].count:0},async getList(){this.isLoading=!0;let e=await this.filterService.mergeWithStoredFilters(this.storeKey,this.listCriteria);this.activeFilterNumber=e.filters.length,this.ruleRepository.search(e).then(e=>(this.total=e.total,this.rules=e,this.isLoading=!1,e)).catch(()=>{this.isLoading=!1})},onChangeLanguage(e){Shopware.State.commit("context/setApiLanguageId",e),this.getList()},onDuplicate(e){let t={overwrites:{name:`${e.name} ${this.$tc("global.default.copy")}`,createdAt:null}};this.ruleRepository.clone(e.id,t,Shopware.Context.api).then(e=>{this.$router.push({name:"sw.settings.rule.detail",params:{id:e.id}})})},onInlineEditSave(e,t){return this.isLoading=!0,e.then(()=>{this.isLoading=!1,this.createNotificationSuccess({message:this.$tc("sw-settings-rule.detail.messageSaveSuccess",0,{name:t.name})})}).catch(()=>{this.getList(),this.createNotificationError({message:this.$tc("sw-settings-rule.detail.messageSaveError")})})},updateCriteria(e){return this.page=1,this.filterCriteria=e,this.getList()},getRuleColumns(){let e=[{property:"name",dataIndex:"name",inlineEdit:"string",label:"sw-settings-rule.list.columnName",routerLink:"sw.settings.rule.detail",width:"250px",allowResize:!0,primary:!0},{property:"priority",label:"sw-settings-rule.list.columnPriority",inlineEdit:"number",allowResize:!0},{property:"description",label:"sw-settings-rule.list.columnDescription",width:"250px",allowResize:!0},{property:"updatedAt",label:"sw-settings-rule.list.columnDateUpdated",align:"right",allowResize:!0},{property:"createdAt",label:"sw-settings-rule.list.columnDateCreated",align:"right",allowResize:!0},{property:"invalid",label:"sw-settings-rule.list.columnStatus",allowResize:!0},{property:"tags",label:"sw-settings-rule.list.columnTags",width:"250px",allowResize:!0,sortable:!1,visible:!1}];return this.assignmentProperties.forEach(t=>{let n=t.charAt(0).toUpperCase()+t.slice(1);e.push({property:`${t}`,label:`sw-settings-rule.list.column${n}`,width:"250px",allowResize:!0,sortable:!0,visible:!1})}),e}}}},742570:function(e,t,n){var i=n(948918);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[e.id,i,""]]),i.locals&&(e.exports=i.locals),n(745346).Z("ff2bfb80",i,!0,{})}}]);