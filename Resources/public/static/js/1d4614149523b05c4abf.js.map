{"version":3,"sources":["webpack:///./src/module/sw-settings-custom-field/page/sw-settings-custom-field-set-list/index.js","webpack:///./src/module/sw-settings-custom-field/page/sw-settings-custom-field-set-list/sw-settings-custom-field-set-list.html.twig","webpack:///./src/module/sw-settings-custom-field/page/sw-settings-custom-field-set-list/sw-settings-custom-field-set-list.scss"],"names":["_Shopware","Shopware","Locale","Mixin","Criteria","Data","template","inject","mixins","getByName","data","entityName","sortBy","datetime","showModal","metaInfo","title","this","$createTitle","computed","titleSaveSuccess","$tc","messageSaveSuccess","deleteEntity","name","getInlineSnippet","config","label","listingCriteria","criteria","page","limit","params","getMainListingParams","addFilter","multi","concat","_toConsumableArray","getLocaleCriterias","term","getTermCriteria","equals","methods","getLocaleRegistry","forEach","value","key","push","contains","content","__esModule","default","module","i","locals","exports","add"],"mappings":"qJAMAA,G,UAA8CC,UAAtCC,EAAMF,EAANE,OAAQC,EAAKH,EAALG,MAAeC,EAAQJ,EAAhBK,KAAQD,SAGhB,WACXE,SCVW,4qUDYXC,OAAQ,CAAC,MAAO,WAEhBC,OAAQ,CACJL,EAAMM,UAAU,qBAChBN,EAAMM,UAAU,qBAGpBC,KAAI,WACA,MAAO,CACHC,WAAY,mBACZC,OAAQ,cACRC,SAAU,GACVC,WAAW,IAInBC,SAAQ,WACJ,MAAO,CACHC,MAAOC,KAAKC,iBAIpBC,SAAU,CAENC,iBAAgB,WACZ,OAAOH,KAAKI,IAAI,2BAIpBC,mBAAkB,WACd,OAAIL,KAAKM,aACEN,KAAKI,IACR,yDACA,EACA,CAAEG,KAAMP,KAAKQ,iBAAiBR,KAAKM,aAAaG,OAAOC,QAAUV,KAAKM,aAAaC,OAGpF,IAGXI,gBAAe,WACX,IAAMC,EAAW,IAAIzB,EAASa,KAAKa,KAAMb,KAAKc,OAExCC,EAASf,KAAKgB,uBAYpB,OAVAJ,EAASK,UAAU9B,EAAS+B,MACxB,KAAK,GAADC,OAAAC,IAEGpB,KAAKqB,mBAAmBN,EAAOO,OAAKF,IACpCpB,KAAKuB,gBAAgBR,EAAOO,UAIvCV,EAASK,UAAU9B,EAASqC,OAAO,QAAS,OAErCZ,IAIfa,QAAS,CACLJ,mBAAkB,SAACC,GACf,IAAKA,EACD,MAAO,GAGX,IAAMV,EAAW,GAOjB,OANgB3B,EAAOyC,oBAEfC,SAAQ,SAACC,EAAOC,GACpBjB,EAASkB,KAAK3C,EAAS4C,SAAS,iBAADZ,OAAmBU,EAAG,KAAMP,OAGxDV,GAGXW,gBAAe,SAACD,GACZ,IAAMV,EAAW,GAMjB,OAJIU,GACAV,EAASkB,KAAK3C,EAAS4C,SAAS,OAAQT,IAGrCV,M,4CE3FnB,IAAIoB,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM","file":"static/js/1d4614149523b05c4abf.js","sourcesContent":["/**\n * @package services-settings\n */\nimport template from './sw-settings-custom-field-set-list.html.twig';\nimport './sw-settings-custom-field-set-list.scss';\n\nconst { Locale, Mixin, Data: { Criteria } } = Shopware;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['acl', 'feature'],\n\n    mixins: [\n        Mixin.getByName('sw-inline-snippet'),\n        Mixin.getByName('sw-settings-list'),\n    ],\n\n    data() {\n        return {\n            entityName: 'custom_field_set',\n            sortBy: 'config.name',\n            datetime: '',\n            showModal: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        // Settings Listing mixin override\n        titleSaveSuccess() {\n            return this.$tc('global.default.success');\n        },\n\n        // Settings Listing mixin override\n        messageSaveSuccess() {\n            if (this.deleteEntity) {\n                return this.$tc(\n                    'sw-settings-custom-field.set.list.messageDeleteSuccess',\n                    0,\n                    { name: this.getInlineSnippet(this.deleteEntity.config.label) || this.deleteEntity.name },\n                );\n            }\n            return '';\n        },\n\n        listingCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            const params = this.getMainListingParams();\n\n            criteria.addFilter(Criteria.multi(\n                'OR',\n                [\n                    ...this.getLocaleCriterias(params.term),\n                    ...this.getTermCriteria(params.term),\n                ],\n            ));\n\n            criteria.addFilter(Criteria.equals('appId', null));\n\n            return criteria;\n        },\n    },\n\n    methods: {\n        getLocaleCriterias(term) {\n            if (!term) {\n                return [];\n            }\n\n            const criteria = [];\n            const locales = Locale.getLocaleRegistry();\n\n            locales.forEach((value, key) => {\n                criteria.push(Criteria.contains(`config.label.\\\"${key}\\\"`, term));\n            });\n\n            return criteria;\n        },\n\n        getTermCriteria(term) {\n            const criteria = [];\n\n            if (term) {\n                criteria.push(Criteria.contains('name', term));\n            }\n\n            return criteria;\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_custom_field_set_list %}\\n<sw-page class=\\\"sw-settings-custom-field-set-list\\\">\\n    \\n    {% block sw_settings_custom_field_set_list_search_bar %}\\n    <template #search-bar>\\n        <sw-search-bar\\n            initial-search-type=\\\"custom_field\\\"\\n            :placeholder=\\\"$tc('sw-settings-custom-field.general.placeholderSearchBar')\\\"\\n            :initial-search=\\\"term\\\"\\n            @search=\\\"onSearch\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_custom_field_set_list_header %}\\n    <template #smart-bar-header>\\n        <h2>\\n            {{ $tc('sw-settings.index.title') }}\\n            <sw-icon\\n                name=\\\"regular-chevron-right-xs\\\"\\n                small\\n            />\\n            {{ $tc('sw-settings-custom-field.set.list.textHeadline') }}\\n\\n            <span\\n                v-if=\\\"!isLoading\\\"\\n                class=\\\"sw-page__smart-bar-amount\\\"\\n            >\\n                ({{ total }})\\n            </span>\\n        </h2>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_custom_field_set_list_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_settings_custom_field_set_list_actions_add %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"{\\n                message: $tc('sw-privileges.tooltip.warning'),\\n                disabled: acl.can('custom_field.creator'),\\n                showOnDisabledElements: true\\n            }\\\"\\n            class=\\\"sw-settings-custom-field-set-list__button-create\\\"\\n            :disabled=\\\"!acl.can('custom_field.creator')\\\"\\n            :router-link=\\\"{ name: 'sw.settings.custom.field.create' }\\\"\\n            variant=\\\"primary\\\"\\n        >\\n            {{ $tc('sw-settings-custom-field.set.list.buttonAdd') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_custom_field_set_list_content %}\\n    <template #content>\\n        <sw-card-view>\\n            \\n            {% block sw_settings_custom_field_set_list_content_inner %}\\n            <sw-card\\n                class=\\\"sw-settings-custom-field-set-list__card\\\"\\n                position-identifier=\\\"sw-settings-custom-field-set-list\\\"\\n            >\\n                \\n                {% block sw_settings_custom_field_set_list_grid %}\\n                <template #grid>\\n                    <sw-grid\\n                        v-show=\\\"items.length > 0\\\"\\n                        class=\\\"sw-settings-custom-field-set-list-grid\\\"\\n                        :selectable=\\\"false\\\"\\n                        :items=\\\"items\\\"\\n                        table\\n                    >\\n                        \\n                        {% block sw_settings_custom_field_set_list_grid_columns %}\\n                        <template\\n                            #columns=\\\"{ item }\\\"\\n                        >\\n\\n                            \\n                            {% block sw_settings_custom_field_set_list_grid_column_label %}\\n                            <sw-grid-column\\n                                flex=\\\"minmax(180px, 2fr)\\\"\\n                                :label=\\\"$tc('sw-settings-custom-field.set.list.columnName')\\\"\\n                            >\\n                                <template v-if=\\\"item.global\\\">\\n                                    {{ getInlineSnippet(item.config.label) || item.name }}\\n                                    <sw-help-text\\n                                        class=\\\"sw-settings-custom-field-set-list__help-text-global-set\\\"\\n                                        :text=\\\"$tc('sw-settings-custom-field.set.list.helpTextGlobalSet')\\\"\\n                                    />\\n                                </template>\\n                                <template v-else>\\n                                    <router-link\\n                                        :title=\\\"$tc('sw-settings-custom-field.set.list.contextMenuEdit')\\\"\\n                                        class=\\\"sw-custom-field-set-list__column-name\\\"\\n                                        :to=\\\"{ name: 'sw.settings.custom.field.detail', params: { id: item.id } }\\\"\\n                                    >\\n                                        {{ getInlineSnippet(item.config.label) || item.name }}\\n                                    </router-link>\\n                                </template>\\n                            </sw-grid-column>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_settings_custom_field_set_list_grid_column_actions %}\\n                            <sw-grid-column\\n                                flex=\\\"minmax(70px, 70px)\\\"\\n                                align=\\\"center\\\"\\n                                label=\\\"\\\"\\n                            >\\n                                <sw-context-button>\\n                                    <sw-context-menu-item\\n                                        v-tooltip=\\\"{\\n                                            message: $tc('sw-settings-custom-field.set.list.helpTextGlobalSet'),\\n                                            showOnDisabledElements: true,\\n                                            disabled: !item.global\\n                                        }\\\"\\n                                        :disabled=\\\"item.global || !acl.can('custom_field.editor')\\\"\\n                                        class=\\\"sw-custom-field-set-list__edit-action\\\"\\n                                        :router-link=\\\"{ name: 'sw.settings.custom.field.detail', params: { id: item.id } }\\\"\\n                                    >\\n                                        {{ $tc('sw-settings-custom-field.set.list.contextMenuEdit') }}\\n                                    </sw-context-menu-item>\\n\\n                                    <template v-if=\\\"!item.global\\\">\\n                                        <sw-context-menu-item\\n                                            class=\\\"sw-settings-custom-field-set-list__delete-action\\\"\\n                                            :disabled=\\\"!acl.can('custom_field.deleter')\\\"\\n                                            variant=\\\"danger\\\"\\n                                            @click=\\\"onDelete(item.id)\\\"\\n                                        >\\n                                            {{ $tc('sw-settings-custom-field.set.list.buttonDelete') }}\\n                                        </sw-context-menu-item>\\n                                    </template>\\n                                </sw-context-button>\\n                            </sw-grid-column>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_settings_custom_field_set_list_grid_delete_modal %}\\n                            <sw-modal\\n                                v-if=\\\"showDeleteModal === item.id\\\"\\n                                :title=\\\"$tc('global.default.warning')\\\"\\n                                variant=\\\"small\\\"\\n                                @modal-close=\\\"onCloseDeleteModal\\\"\\n                            >\\n\\n                                \\n                                {% block sw_settings_custom_field_set_list_grid_delete_modal_text %}\\n                                <p>\\n                                    {{ $tc('sw-settings-custom-field.set.list.textDeleteConfirm', 0, { name: getInlineSnippet(item.config.label) || item.name }) }}\\n                                </p>\\n                                {% endblock %}\\n\\n                                \\n                                {% block sw_settings_custom_field_set_list_grid_delete_modal_footer %}\\n                                <template #modal-footer>\\n\\n                                    \\n                                    {% block sw_settings_custom_field_set_list_grid_delete_modal_cancel %}\\n                                    <sw-button\\n                                        size=\\\"small\\\"\\n                                        @click=\\\"onCloseDeleteModal\\\"\\n                                    >\\n                                        {{ $tc('sw-settings-custom-field.set.list.buttonCancel') }}\\n                                    </sw-button>\\n                                    {% endblock %}\\n\\n                                    \\n                                    {% block sw_settings_custom_field_set_list_grid_delete_modal_delete %}\\n                                    <sw-button\\n                                        variant=\\\"danger\\\"\\n                                        size=\\\"small\\\"\\n                                        @click=\\\"onConfirmDelete(item.id)\\\"\\n                                    >\\n                                        {{ $tc('sw-settings-custom-field.set.list.buttonDelete') }}\\n                                    </sw-button>\\n                                    {% endblock %}\\n                                </template>\\n                                {% endblock %}\\n                            </sw-modal>\\n                            {% endblock %}\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_custom_field_set_list_content_columns_pagination %}\\n                        <template #pagination>\\n                            <sw-pagination\\n                                :page=\\\"page\\\"\\n                                :limit=\\\"limit\\\"\\n                                :total=\\\"total\\\"\\n                                :total-visible=\\\"7\\\"\\n                                @page-change=\\\"onPageChange\\\"\\n                            />\\n                        </template>\\n                        {% endblock %}\\n                    </sw-grid>\\n                </template>\\n                {% endblock %}\\n                \\n                {% block sw_settings_custom_fields_set_list_empty_message %}\\n                <sw-empty-state\\n                    v-if=\\\"!isLoading && items.length <= 0\\\"\\n                    :absolute=\\\"false\\\"\\n                    :title=\\\"$tc('sw-settings-custom-field.set.list.messageEmpty')\\\"\\n                />\\n                {% endblock %}\\n            </sw-card>\\n            {% endblock %}\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-custom-field-set-list.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"75f753bc\", content, true, {});"],"sourceRoot":""}