{"version":3,"sources":["webpack:///./src/module/sw-settings-tax/component/sw-settings-tax-rule-type-individual-states/sw-settings-tax-rule-type-individual-states.html.twig","webpack:///./src/module/sw-settings-tax/component/sw-settings-tax-rule-type-individual-states/index.js"],"names":["Context","Shopware","_Shopware$Data","Data","Criteria","EntityCollection","template","inject","props","taxRule","type","Object","required","data","individualStates","computed","exclusionCriteria","criteria","addFilter","equals","this","countryId","stateRepository","repositoryFactory","create","created","createdComponent","methods","_this","states","length","setIds","search","api","then","collection","route","entityName","onChange","getIds"],"mappings":"8HAAe,ICMPA,EAAYC,SAAZD,QACRE,EAAuCD,SAASE,KAAxCC,EAAQF,EAARE,SAAUC,EAAgBH,EAAhBG,iBAGH,WACXC,SDXW,2eCaXC,OAAQ,CAAC,qBAETC,MAAO,CACHC,QAAS,CACLC,KAAMC,OACNC,UAAU,IAIlBC,KAAI,WACA,MAAO,CACHC,iBAAkB,OAI1BC,SAAU,CACNC,kBAAiB,WACb,IAAMC,EAAW,IAAIb,EAAS,EAAG,IAGjC,OAFAa,EAASC,UAAUd,EAASe,OAAO,YAAaC,KAAKX,QAAQY,YAEtDJ,GAEXK,gBAAe,WACX,OAAOF,KAAKG,kBAAkBC,OAAO,mBAI7CC,QAAO,WACHL,KAAKM,oBAGTC,QAAS,CACLD,iBAAgB,WAAI,IAADE,EAAA,KACf,GAAKR,KAAKX,QAAQI,MACVO,KAAKX,QAAQI,KAAKgB,QAClBT,KAAKX,QAAQI,KAAKgB,OAAOC,OAQ1B,CACH,IAAMb,EAAW,IAAIb,EAAS,EAAG,IACjCa,EAASc,OAAOX,KAAKX,QAAQI,KAAKgB,QAElCT,KAAKE,gBAAgBU,OAAOf,EAAUjB,EAAQiC,KAAKC,MAAK,SAAAC,GACpDP,EAAKd,iBAAmBqB,UAX5Bf,KAAKX,QAAQI,KAAO,CAAEgB,OAAQ,IAC9BT,KAAKN,iBAAmB,IAAIT,EACxBe,KAAKE,gBAAgBc,MACrBhB,KAAKE,gBAAgBe,WACrBrC,EAAQiC,MAYpBK,SAAQ,SAACH,GACLf,KAAKN,iBAAmBqB,EACxBf,KAAKX,QAAQI,KAAKgB,OAASM,EAAWI","file":"static/js/67370342c14d3be6e54d.js","sourcesContent":["export default \"\\n{% block sw_settings_tax_rule_type_individual_states %}\\n<sw-entity-multi-select\\n    v-if=\\\"individualStates && taxRule.countryId\\\"\\n    :label=\\\"$tc('sw-settings-tax.taxRuleCard.labelStates')\\\"\\n    :placeholder=\\\"$tc('sw-settings-tax.taxRuleCard.placeholderStates')\\\"\\n    :criteria=\\\"exclusionCriteria\\\"\\n    :entity-collection=\\\"individualStates\\\"\\n    {% if VUE3 %}\\n    @update:entity-collection=\\\"onChange\\\"\\n    {% else %}\\n    @change=\\\"onChange\\\"\\n    {% endif %}\\n/>\\n{% endblock %}\\n\";","import template from './sw-settings-tax-rule-type-individual-states.html.twig';\n\n/**\n * @package checkout\n */\n\nconst { Context } = Shopware;\nconst { Criteria, EntityCollection } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    props: {\n        taxRule: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            individualStates: null,\n        };\n    },\n\n    computed: {\n        exclusionCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(Criteria.equals('countryId', this.taxRule.countryId));\n\n            return criteria;\n        },\n        stateRepository() {\n            return this.repositoryFactory.create('country_state');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (!this.taxRule.data\n                || !this.taxRule.data.states\n                || !this.taxRule.data.states.length\n            ) {\n                this.taxRule.data = { states: [] };\n                this.individualStates = new EntityCollection(\n                    this.stateRepository.route,\n                    this.stateRepository.entityName,\n                    Context.api,\n                );\n            } else {\n                const criteria = new Criteria(1, 25);\n                criteria.setIds(this.taxRule.data.states);\n\n                this.stateRepository.search(criteria, Context.api).then(collection => {\n                    this.individualStates = collection;\n                });\n            }\n        },\n\n        onChange(collection) {\n            this.individualStates = collection;\n            this.taxRule.data.states = collection.getIds();\n        },\n    },\n};\n"],"sourceRoot":""}