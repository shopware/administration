{"version":3,"sources":["webpack:///./src/module/sw-product/component/sw-product-clone-modal/sw-product-clone-modal.scss","webpack:///./src/module/sw-product/component/sw-product-clone-modal/index.js","webpack:///./src/module/sw-product/component/sw-product-clone-modal/sw-product-clone-modal.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Criteria","Shopware","Data","template","inject","props","product","type","Object","required","data","cloningVariants","cloneMaxProgress","cloneProgress","computed","progressInPercentage","this","repository","repositoryFactory","create","created","createdComponent","methods","duplicate","numberRangeService","reserve","then","cloneParent","verifyVariants","number","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","behavior","clone","wrap","_context","prev","next","cloneChildren","overwrites","productNumber","name","concat","$tc","active","mainVariantId","save","id","Context","api","sent","abrupt","stop","_this2","getChildrenIds","ids","length","$emit","duplicateVariant","criteria","addFilter","equals","searchIds","response","callback","_this3","shift","parentId"],"mappings":"wGAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,yFCFpCQ,G,UAAaC,SAASC,KAAtBF,UAGO,WACXG,SCXW,86BDaXC,OAAQ,CAAC,oBAAqB,sBAE9BC,MAAO,CACHC,QAAS,CACLC,KAAMC,OACNC,UAAU,IAIlBC,KAAI,WACA,MAAO,CACHC,iBAAiB,EACjBC,iBAAkB,EAClBC,cAAe,IAIvBC,SAAU,CACNC,qBAAoB,WAChB,OAAO,KAAOC,KAAKJ,iBAAmBI,KAAKH,gBAG/CI,WAAU,WACN,OAAOD,KAAKE,kBAAkBC,OAAO,aAI7CC,QAAO,WACHJ,KAAKK,oBAGTC,QAAS,CACLD,iBAAgB,WACZL,KAAKO,aAGTA,UAAS,WACLP,KAAKQ,mBACAC,QAAQ,WACRC,KAAKV,KAAKW,aACVD,KAAKV,KAAKY,iBAGbD,YAAW,SAACE,GAAS,IAADC,EAAA,YAAAC,IAAAC,IAAAC,MAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OASrB,OARKL,EAAW,CACbM,eAAe,EACfC,WAAY,CACRC,cAAed,EAAOA,OACtBe,KAAK,GAADC,OAAKf,EAAKxB,QAAQsC,KAAI,KAAAC,OAAIf,EAAKgB,IAAI,wBACvCC,QAAQ,EACRC,cAAe,OAEtBV,EAAAE,KAAA,EAEKV,EAAKb,WAAWgC,KAAKnB,EAAKxB,SAAS,KAAD,SAAAgC,EAAAE,KAAA,EACpBV,EAAKb,WAAWmB,MAAMN,EAAKxB,QAAQ4C,GAAIjD,SAASkD,QAAQC,IAAKjB,GAAU,KAAD,EAA/E,OAALC,EAAKE,EAAAe,KAAAf,EAAAgB,OAAA,SAEJ,CAAEJ,GAAId,EAAMc,GAAIP,cAAed,EAAOA,SAAQ,wBAAAS,EAAAiB,UAAArB,MAd/BH,IAiB1BH,eAAc,SAACL,GAAY,IAADiC,EAAA,KACtBxC,KAAKyC,iBAAiB/B,MAAK,SAACgC,GACpBA,EAAIC,QAAU,EACdH,EAAKI,MAAM,eAAgB,CAAEV,GAAI3B,EAAU2B,MAI/CM,EAAK7C,iBAAkB,EAEvB6C,EAAK3C,cAAgB,EACrB2C,EAAK5C,iBAAmB8C,EAAIC,OAE5BH,EAAKK,iBAAiBtC,EAAWmC,GAAK,WAClCF,EAAK7C,iBAAkB,EACvB6C,EAAKI,MAAM,eAAgB,CAAEV,GAAI3B,EAAU2B,aAKvDO,eAAc,WACV,IAAMK,EAAW,IAAI9D,EAAS,EAAG,MAKjC,OAJA8D,EAASC,UACL/D,EAASgE,OAAO,WAAYhD,KAAKV,QAAQ4C,KAGtClC,KAAKC,WACPgD,UAAUH,GACVpC,MAAK,SAACwC,GACH,OAAOA,EAASxD,SAI5BmD,iBAAgB,SAACtC,EAAWmC,EAAKS,GAAW,IAADC,EAAA,KACvC,GAAIV,EAAIC,QAAU,EACdQ,QADJ,CAIA,IAAMjB,EAAKQ,EAAIW,QAETlC,EAAW,CACbO,WAAY,CACR4B,SAAU/C,EAAU2B,GACpBP,cAAc,GAADE,OAAKtB,EAAUoB,cAAa,KAAAE,OAAI7B,KAAKH,gBAEtD4B,eAAe,GAGnBzB,KAAKC,WACAmB,MAAMc,EAAIjD,SAASkD,QAAQC,IAAKjB,GAChCT,MAAK,WACF0C,EAAKvD,eAAiB,EACtBuD,EAAKP,iBAAiBtC,EAAWmC,EAAKS,W","file":"static/js/348da8ae2bff341cf1a1.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-clone-modal.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"fdc19cfc\", content, true, {});","/*\n * @package inventory\n */\n\nimport template from './sw-product-clone-modal.html.twig';\nimport './sw-product-clone-modal.scss';\n\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'numberRangeService'],\n\n    props: {\n        product: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            cloningVariants: false,\n            cloneMaxProgress: 0,\n            cloneProgress: 0,\n        };\n    },\n\n    computed: {\n        progressInPercentage() {\n            return 100 / (this.cloneMaxProgress * this.cloneProgress);\n        },\n\n        repository() {\n            return this.repositoryFactory.create('product');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.duplicate();\n        },\n\n        duplicate() {\n            this.numberRangeService\n                .reserve('product')\n                .then(this.cloneParent)\n                .then(this.verifyVariants);\n        },\n\n        async cloneParent(number) {\n            const behavior = {\n                cloneChildren: false,\n                overwrites: {\n                    productNumber: number.number,\n                    name: `${this.product.name} ${this.$tc('global.default.copy')}`,\n                    active: false,\n                    mainVariantId: null,\n                },\n            };\n\n            await this.repository.save(this.product);\n            const clone = await this.repository.clone(this.product.id, Shopware.Context.api, behavior);\n\n            return { id: clone.id, productNumber: number.number };\n        },\n\n        verifyVariants(duplicate) {\n            this.getChildrenIds().then((ids) => {\n                if (ids.length <= 0) {\n                    this.$emit('clone-finish', { id: duplicate.id });\n                    return;\n                }\n\n                this.cloningVariants = true;\n\n                this.cloneProgress = 1;\n                this.cloneMaxProgress = ids.length;\n\n                this.duplicateVariant(duplicate, ids, () => {\n                    this.cloningVariants = false;\n                    this.$emit('clone-finish', { id: duplicate.id });\n                });\n            });\n        },\n\n        getChildrenIds() {\n            const criteria = new Criteria(1, null);\n            criteria.addFilter(\n                Criteria.equals('parentId', this.product.id),\n            );\n\n            return this.repository\n                .searchIds(criteria)\n                .then((response) => {\n                    return response.data;\n                });\n        },\n\n        duplicateVariant(duplicate, ids, callback) {\n            if (ids.length <= 0) {\n                callback();\n                return;\n            }\n            const id = ids.shift();\n\n            const behavior = {\n                overwrites: {\n                    parentId: duplicate.id,\n                    productNumber: `${duplicate.productNumber}.${this.cloneProgress}`,\n                },\n                cloneChildren: false,\n            };\n\n            this.repository\n                .clone(id, Shopware.Context.api, behavior)\n                .then(() => {\n                    this.cloneProgress += 1;\n                    this.duplicateVariant(duplicate, ids, callback);\n                });\n        },\n    },\n};\n","export default \"\\n{% block sw_product_clone_modal %}\\n<sw-modal\\n    v-if=\\\"cloningVariants\\\"\\n    :title=\\\"$tc('sw-product.general.cloneTitle')\\\"\\n    :closable=\\\"false\\\"\\n    variant=\\\"small\\\"\\n    class=\\\"clone-variant__modal\\\"\\n>\\n    \\n    {% block sw_product_clone_modal_description %}\\n    <div class=\\\"clone-variant__description\\\">\\n        {{ $tc('sw-product.general.cloneNotice') }}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_clone_modal_progress_bar %}\\n    <sw-progress-bar\\n        class=\\\"clone-variant-progress-bar\\\"\\n        :value=\\\"progressInPercentage\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_clone_modal_progress_bar_description %}\\n    <div class=\\\"clone-variant-progress-bar__description\\\">\\n        {{ cloneProgress }} {{ $tc('sw-product.variations.progressTypeOf') }} {{ cloneMaxProgress }} {{ $tc('sw-product.general.cloneSuffix') }}\\n    </div>\\n    {% endblock %}\\n</sw-modal>\\n{% endblock %}\\n\";"],"sourceRoot":""}