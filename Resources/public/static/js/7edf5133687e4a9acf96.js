"use strict";(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[47074],{247074:function(n,e,t){t.r(e),t.d(e,{default:function(){return c}});let{Mixin:r}=Shopware,{Criteria:o}=Shopware.Data,{mapPropertyErrors:s}=Shopware.Component.getComponentHelper();var c={template:'\n{% block sw_settings_currency_country_modal %}\n<sw-modal\n    class="sw-settings-currency-country-modal"\n    :title="$tc(\'sw-settings-currency.currency-country-modal.titleNewCurrencyCountry\')"\n    @modal-close="onCancel"\n>\n    \n    {% block sw_settings_currency_country_modal_country_select %}\n    <sw-entity-single-select\n        v-model:value="currencyCountryRounding.countryId"\n        required\n        show-clearable-button\n        class="sw-settings-currency-country-modal__select-country"\n        :label="$tc(\'sw-settings-currency.currency-country-modal.labelCountrySelect\')"\n        entity="country"\n        :criteria="countryCriteria"\n        :error="currencyCountryRoundingCountryIdError"\n    >\n        <template #result-item="{ item, index, labelProperty, searchTerm, highlightSearchTerm, isSelected, setValue, getKey }">\n            <sw-select-result\n                v-tooltip="{\n                    showDelay: 300,\n                    showOnDisabledElements: true,\n                    message: $tc(\'sw-settings-currency.currency-country-modal.countryAlreadyAssigned\'),\n                    disabled: !shouldDisableCountry(item)\n                }"\n                :selected="isSelected(item)"\n                :disabled="shouldDisableCountry(item)"\n                v-bind="{ item, index }"\n                @item-select="setValue"\n            >\n                <slot\n                    name="result-label-property"\n                    v-bind="{ item, index, labelProperty, searchTerm, highlightSearchTerm, getKey }"\n                >\n                    <sw-highlight-text\n                        v-if="highlightSearchTerm"\n                        :text="getKey(item, labelProperty) || getKey(item, `translated.${labelProperty}`)"\n                        :search-term="searchTerm"\n                    />\n                    <template v-else>\n                        {{ getKey(item, labelProperty) || getKey(item, `translated.${labelProperty}`) }}\n                    </template>\n                </slot>\n            </sw-select-result>\n        </template>\n    </sw-entity-single-select>\n    {% endblock %}\n\n    \n    {% block sw_settings_currency_country_modal_price_rounding %}\n    <sw-settings-price-rounding\n        :item-rounding="currencyCountryRounding.itemRounding"\n        :total-rounding="currencyCountryRounding.totalRounding"\n    />\n    {% endblock %}\n\n    \n    {% block sw_settings_currency_country_modal_footer %}\n    <template #modal-footer>\n        \n        {% block sw_settings_currency_country_modal_footer_cancel %}\n        <sw-button\n            size="small"\n            @click="onCancel"\n        >\n            {{ $tc(\'global.default.cancel\') }}\n        </sw-button>\n        {% endblock %}\n\n        \n        {% block sw_settings_currency_country_modal_footer_save %}\n        <sw-button\n            variant="primary"\n            size="small"\n            class="sw-settings-currency-country-modal__button-save"\n            @click="onSave"\n        >\n            {{ $tc(\'global.default.save\') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory"],emits:["edit-cancel","save"],mixins:[r.getByName("notification")],props:{currencyCountryRounding:{type:Object,required:!0}},data(){return{assignedCountryIds:[]}},computed:{countryCriteria(){let n=new o(1,25);return n.addSorting(o.sort("name","ASC")),n},countryRepository(){return this.repositoryFactory.create("country")},assignedCountriesCriteria(){let n=new o(1,500);return n.addAssociation("currencyCountryRoundings"),n.addFilter(o.equals("currencyCountryRoundings.currencyId",this.currencyCountryRounding.currencyId)),n},...s("currencyCountryRounding",["countryId"])},created(){this.createdComponent()},methods:{createdComponent(){this.countryRepository.searchIds(this.assignedCountriesCriteria,Shopware.Context.api).then(n=>{this.assignedCountryIds=n.data})},onCancel(){this.$emit("edit-cancel")},onSave(){this.$emit("save")},shouldDisableCountry(n){return this.currencyCountryRounding.countryId!==n.id&&this.assignedCountryIds.includes(n.id)}}}}}]);