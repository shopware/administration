{"version":3,"sources":["webpack:///./src/module/sw-settings-product-feature-sets/component/sw-settings-product-feature-sets-modal/sw-settings-product-feature-sets-modal.html.twig","webpack:///./src/module/sw-settings-product-feature-sets/component/sw-settings-product-feature-sets-modal/index.js","webpack:///./src/module/sw-settings-product-feature-sets/component/sw-settings-product-feature-sets-modal/sw-settings-product-feature-sets-modal.scss"],"names":["Context","Shopware","Criteria","Data","template","inject","props","productFeatureSet","type","Object","required","data","showModal","featureType","selectedFeatures","Map","features","selectedFeatureType","showPageOne","term","showCustomField","showPropertyGroups","showProductInfo","nextButtonDisabled","addButtonDisabled","showNextButton","valuesLoading","customFields","propertyGroups","productInfo","id","label","this","$tc","name","computed","productFeatureSetRepository","repositoryFactory","create","customFieldsRepository","propertyGroupsRepository","productFeatureSetCriteria","customFieldCriteria","criteria","addSorting","sort","featureIds","getFeaturesIds","length","addFilter","not","equalsAny","propertyGroupCriteria","referencePriceSelected","propertyGroupColumns","getPropertyGroupColumns","customFieldColumns","getCustomFieldColumns","productInformationColumns","getProductInformationColumns","checkIfReferencePriceSelected","filter","item","settingOptions","value","disabled","customFieldTotal","total","propertyGroupTotal","created","createdComponent","methods","setLimit","getCustomFieldList","getPropertyList","getProductInformationList","onSearchCustomFields","setTerm","onSearchPropertyGroups","onClickNext","featureNames","map","a","includes","_this","getList","items","_this2","repository","callback","_this3","search","api","then","catch","feature","onChangeOption","checkIfReferencePriceIsSelected","onConfirm","_this4","push","position","forEach","setFeatures","save","isSaveSuccessful","$emit","createNotificationError","title","message","finally","isLoading","_this5","keys","key","setFeatureSelection","count","set","page","preSelected","get","grid","$refs","customFieldGrid","propertyGroupGrid","selectItem","property","primary","paginateCustomFieldGrid","_ref","limit","setPage","paginatePropertyGroupGrid","_ref2","readCustomFieldLabel","field","language","State","currentLocale","fallback","app","fallbackLocale","config","content","__esModule","default","module","i","locals","exports","add"],"mappings":"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","file":"static/js/ca09e2b8ded4453f4d4d.js","sourcesContent":["export default \"\\n{% block sw_settings_product_feature_sets_modal %}\\n<sw-modal\\n    :title=\\\"$tc('sw-settings-product-feature-sets.modal.labelTitleModal')\\\"\\n    class=\\\"sw-settings-product-feature-sets__modal\\\"\\n    @modal-close=\\\"$emit('modal-close')\\\"\\n>\\n\\n    \\n    {% block sw_settings_product_feature_sets_modal_first_page %}\\n    <template v-if=\\\"showPageOne\\\">\\n        <sw-radio-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"selectedFeatureType\\\"\\n            {% else %}\\n            v-model=\\\"selectedFeatureType\\\"\\n            {% endif %}\\n            :label=\\\"$tc('sw-settings-product-feature-sets.modal.labelTitlePageOne')\\\"\\n            block\\n            class=\\\"sw-settings-product-feature-sets-modal__options\\\"\\n            identification=\\\"fieldType\\\"\\n            :options=\\\"settingOptions\\\"\\n            {% if VUE3 %}\\n            @update:value=\\\"onChangeOption\\\"\\n            {% else %}\\n            @change=\\\"onChangeOption\\\"\\n            {% endif %}\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_product_feature_sets_modal_custom_field_list %}\\n    <template v-if=\\\"showCustomField\\\">\\n\\n        \\n        {% block sw_settings_product_feature_sets_modal_custom_field_list_toolbar %}\\n        <div class=\\\"sw-product-feature-set-modal-custom-field-list__toolbar\\\">\\n\\n            \\n            {% block sw_settings_product_feature_sets_modal_custom_field_list_toolbar_search %}\\n            <sw-simple-search-field\\n                v-model=\\\"term\\\"\\n                size=\\\"small\\\"\\n                variant=\\\"form\\\"\\n                @search-term-change=\\\"onSearchCustomFields\\\"\\n            />\\n            {% endblock %}\\n\\n        </div>\\n        {% endblock %}\\n\\n        <sw-data-grid\\n            ref=\\\"customFieldGrid\\\"\\n            :data-source=\\\"customFields\\\"\\n            :columns=\\\"customFieldColumns\\\"\\n            :show-selection=\\\"true\\\"\\n            :show-actions=\\\"false\\\"\\n            :is-loading=\\\"valuesLoading\\\"\\n            identifier=\\\"sw-product-feature-set-modal-custom-field-list\\\"\\n            @selection-change=\\\"setFeatureSelection\\\"\\n        >\\n\\n            \\n            {% block sw_settings_product_feature_sets_modal_custom_field_list_column_name %}\\n            <template #column-name=\\\"{ item }\\\">\\n                {{ readCustomFieldLabel(item) }}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_product_feature_sets_modal_custom_field_list_column_type %}\\n            <template #column-type=\\\"{ item }\\\">\\n                {{ item.type }}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_product_feature_sets_modal_custom_field_list_pagination %}\\n            <template #pagination>\\n                <sw-pagination\\n                    v-if=\\\"customFieldTotal > customFieldCriteria.limit\\\"\\n                    :total=\\\"customFieldTotal\\\"\\n                    :limit=\\\"customFieldCriteria.limit\\\"\\n                    :page=\\\"customFieldCriteria.page\\\"\\n                    :auto-hide=\\\"false\\\"\\n                    @page-change=\\\"paginateCustomFieldGrid\\\"\\n                />\\n            </template>\\n            {% endblock %}\\n\\n        </sw-data-grid>\\n\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_product_feature_sets_modal_property_list %}\\n    <template v-if=\\\"showPropertyGroups\\\">\\n\\n        \\n        {% block sw_settings_product_feature_sets_modal_property_list_toolbar %}\\n        <div class=\\\"sw-product-feature-set-modal-property-list__toolbar\\\">\\n\\n            \\n            {% block sw_settings_product_feature_sets_modal_property_list_toolbar_search %}\\n            <sw-simple-search-field\\n                v-model=\\\"term\\\"\\n                size=\\\"small\\\"\\n                variant=\\\"form\\\"\\n                @search-term-change=\\\"onSearchPropertyGroups\\\"\\n            />\\n            {% endblock %}\\n\\n        </div>\\n        {% endblock %}\\n\\n        <sw-data-grid\\n            ref=\\\"propertyGroupGrid\\\"\\n            :data-source=\\\"propertyGroups\\\"\\n            :columns=\\\"propertyGroupColumns\\\"\\n            :show-selection=\\\"true\\\"\\n            :show-actions=\\\"false\\\"\\n            :is-loading=\\\"valuesLoading\\\"\\n            identifier=\\\"sw-product-feature-set-modal-property-list\\\"\\n            @selection-change=\\\"setFeatureSelection\\\"\\n        >\\n\\n            \\n            {% block sw_settings_product_feature_sets_modal_property_list_column_property %}\\n            <template #column-id=\\\"{ item }\\\">\\n                {{ item.name }}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_product_feature_sets_modal_property_list_pagination %}\\n            <template #pagination>\\n                <sw-pagination\\n                    v-if=\\\"propertyGroupTotal > propertyGroupCriteria.limit\\\"\\n                    :total=\\\"propertyGroupTotal\\\"\\n                    :limit=\\\"propertyGroupCriteria.limit\\\"\\n                    :page=\\\"propertyGroupCriteria.page\\\"\\n                    :auto-hide=\\\"false\\\"\\n                    @page-change=\\\"paginatePropertyGroupGrid\\\"\\n                />\\n            </template>\\n            {% endblock %}\\n\\n        </sw-data-grid>\\n\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_product_feature_sets_modal_product_information_list %}\\n    <template v-if=\\\"showProductInfo\\\">\\n\\n        \\n        {% block sw_settings_product_feature_sets_modal_product_information_list_toolbar %}{% endblock %}\\n\\n        <sw-data-grid\\n            :data-source=\\\"productInfo\\\"\\n            :columns=\\\"productInformationColumns\\\"\\n            :show-selection=\\\"true\\\"\\n            :show-actions=\\\"false\\\"\\n            :is-loading=\\\"valuesLoading\\\"\\n            identifier=\\\"sw-product-feature-set-modal-product-information-list\\\"\\n            @selection-change=\\\"setFeatureSelection\\\"\\n        >\\n\\n            \\n            {% block sw_settings_product_feature_sets_modal_product_informationlist_column_property %}\\n            <template #column-id=\\\"{ item }\\\">\\n                {{ item.name }}\\n            </template>\\n            {% endblock %}\\n\\n        </sw-data-grid>\\n\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_product_feature_sets_modal_footer %}\\n    <template #modal-footer>\\n\\n        \\n        {% block sw_settings_product_feature_sets_modal_footer_cancel %}\\n        <sw-button\\n            size=\\\"small\\\"\\n            @click=\\\"$emit('modal-close')\\\"\\n        >\\n            {{ $tc('sw-settings-product-feature-sets.modal.buttonCancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_product_feature_sets_modal_footer_button_add %}\\n        <sw-button\\n            v-if=\\\"!showPageOne | referencePriceSelected\\\"\\n            variant=\\\"primary\\\"\\n            size=\\\"small\\\"\\n            :disabled=\\\"addButtonDisabled\\\"\\n            @click=\\\"onConfirm\\\"\\n        >\\n            {{ $tc('sw-settings-product-feature-sets.modal.buttonAdd') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_product_feature_sets_modal_footer_button_next %}\\n        <sw-button\\n            v-if=\\\"showNextButton\\\"\\n            variant=\\\"primary\\\"\\n            size=\\\"small\\\"\\n            :disabled=\\\"nextButtonDisabled\\\"\\n            @click=\\\"onClickNext\\\"\\n        >\\n            {{ $tc('sw-settings-product-feature-sets.modal.buttonNext') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n    </template>\\n    {% endblock %}\\n\\n</sw-modal>\\n{% endblock %}\\n\";","/**\n * @package inventory\n */\nimport template from './sw-settings-product-feature-sets-modal.html.twig';\nimport './sw-settings-product-feature-sets-modal.scss';\n\nconst { Context } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    props: {\n        productFeatureSet: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            showModal: false,\n            featureType: null,\n            selectedFeatures: new Map(),\n            features: [],\n            selectedFeatureType: null,\n            showPageOne: true,\n            term: '',\n            showCustomField: false,\n            showPropertyGroups: false,\n            showProductInfo: false,\n            nextButtonDisabled: true,\n            addButtonDisabled: true,\n            showNextButton: true,\n            valuesLoading: false,\n            customFields: [],\n            propertyGroups: [],\n            productInfo: [\n                {\n                    id: 'fc472b0728ce4000969214a0fa61f2df',\n                    type: 'product',\n                    label: this.$tc('sw-settings-product-feature-sets.modal.label.description'),\n                    name: 'description',\n                },\n                {\n                    id: 'f64801aad24a4de7bfea4d312f957258',\n                    type: 'product',\n                    label: this.$tc('sw-settings-product-feature-sets.modal.label.releaseDate'),\n                    name: 'releaseDate',\n                },\n                {\n                    id: 'f4a361187eac4f6ea4507ebf20c2e9d7',\n                    type: 'product',\n                    label: this.$tc('sw-settings-product-feature-sets.modal.label.manufacturerNumber'),\n                    name: 'manufacturerNumber',\n                },\n                {\n                    id: 'eb6c8ec9b6e24811a176be5a5c9871cf',\n                    type: 'product',\n                    label: this.$tc('sw-settings-product-feature-sets.modal.label.ean'),\n                    name: 'ean',\n                },\n                {\n                    id: '09110f8260804f009ab4536a1ffbc938',\n                    type: 'product',\n                    label: this.$tc('sw-settings-product-feature-sets.modal.label.width'),\n                    name: 'width',\n                },\n                {\n                    id: 'e8a48d5fce2f402e8696477b03d7e8e7',\n                    type: 'product',\n                    label: this.$tc('sw-settings-product-feature-sets.modal.label.height'),\n                    name: 'height',\n                },\n                {\n                    id: 'e4cf3f607a704f569c3912fb85ada9ad',\n                    type: 'product',\n                    label: this.$tc('sw-settings-product-feature-sets.modal.label.length'),\n                    name: 'length',\n                },\n                {\n                    id: 'e06c53dc014a4130a8850fe64e395046',\n                    type: 'product',\n                    label: this.$tc('sw-settings-product-feature-sets.modal.label.weight'),\n                    name: 'weight',\n                },\n            ],\n        };\n    },\n\n    computed: {\n        productFeatureSetRepository() {\n            return this.repositoryFactory.create('product_feature_set');\n        },\n\n        customFieldsRepository() {\n            return this.repositoryFactory.create('custom_field');\n        },\n\n        propertyGroupsRepository() {\n            return this.repositoryFactory.create('property_group');\n        },\n\n        productFeatureSetCriteria() {\n            return new Criteria(1, 25);\n        },\n\n        customFieldCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addSorting(Criteria.sort('type', 'DESC'));\n\n            const featureIds = this.getFeaturesIds('customField');\n            if (featureIds.length > 0) {\n                criteria.addFilter(Criteria.not('AND', [Criteria.equalsAny('id', featureIds)]));\n            }\n\n            return criteria;\n        },\n\n        propertyGroupCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            const featureIds = this.getFeaturesIds('property');\n            if (featureIds.length > 0) {\n                criteria.addFilter(Criteria.not('AND', [Criteria.equalsAny('id', featureIds)]));\n            }\n\n            return criteria;\n        },\n\n        referencePriceSelected() {\n            return this.selectedFeatureType === 'referencePrice';\n        },\n\n        propertyGroupColumns() {\n            return this.getPropertyGroupColumns();\n        },\n\n        customFieldColumns() {\n            return this.getCustomFieldColumns();\n        },\n\n        productInformationColumns() {\n            return this.getProductInformationColumns();\n        },\n\n        checkIfReferencePriceSelected() {\n            if (!this.productFeatureSet.features) {\n                return false;\n            }\n\n            return this.productFeatureSet.features.filter((item) => {\n                return (item.type === 'referencePrice');\n            }).length === 1;\n        },\n\n        settingOptions() {\n            return [\n                {\n                    value: 'property',\n                    disabled: this.propertyGroups.length < 1,\n                    name: this.$tc('sw-settings-product-feature-sets.modal.textPropertyLabel'),\n                },\n                {\n                    value: 'customField',\n                    disabled: this.customFields.length < 1,\n                    name: this.$tc('sw-settings-product-feature-sets.modal.textCustomFieldLabel'),\n                },\n                {\n                    value: 'product',\n                    disabled: this.productInfo.length < 1,\n                    name: this.$tc('sw-settings-product-feature-sets.modal.textProductInfoLabel'),\n                },\n                {\n                    value: 'referencePrice',\n                    disabled: this.checkIfReferencePriceSelected,\n                    name: this.$tc('sw-settings-product-feature-sets.modal.textReferencePriceLabel'),\n                },\n            ];\n        },\n\n        customFieldTotal() {\n            return this.customFields.total || 0;\n        },\n\n        propertyGroupTotal() {\n            return this.propertyGroups.total || 0;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.productFeatureSet.features) {\n                this.features = this.productFeatureSet.features;\n            }\n\n            this.customFieldCriteria.setLimit(10);\n            this.propertyGroupCriteria.setLimit(10);\n\n            this.getCustomFieldList();\n            this.getPropertyList();\n            this.getProductInformationList();\n        },\n\n        onSearchCustomFields() {\n            this.customFieldCriteria.setTerm(this.term);\n            this.getCustomFieldList();\n        },\n\n        onSearchPropertyGroups() {\n            this.propertyGroupCriteria.setTerm(this.term);\n            this.getPropertyList();\n        },\n\n        onClickNext() {\n            this.showPageOne = false;\n            this.showNextButton = false;\n            this.featureType = this.selectedFeatureType;\n\n            switch (this.selectedFeatureType) {\n                case 'customField':\n                    this.showCustomField = true;\n                    break;\n                case 'property':\n                    this.showPropertyGroups = true;\n                    break;\n                case 'product':\n                    this.showProductInfo = true;\n                    break;\n                default:\n                    break;\n            }\n        },\n\n        getProductInformationList() {\n            if (!this.productFeatureSet.features) {\n                return;\n            }\n\n            const featureNames = this.productFeatureSet.features.map(a => a.name);\n\n            this.productInfo = this.productInfo.filter((item) => {\n                return !(item.type === 'product' && featureNames.includes(item.name));\n            });\n        },\n\n        getCustomFieldList() {\n            return this.getList(\n                this.customFieldsRepository,\n                this.customFieldCriteria,\n                (items) => {\n                    this.customFields = items;\n                    this.valuesLoading = false;\n                },\n            );\n        },\n\n        getPropertyList() {\n            return this.getList(\n                this.propertyGroupsRepository,\n                this.propertyGroupCriteria,\n                (items) => {\n                    this.propertyGroups = items;\n                    this.valuesLoading = false;\n                },\n            );\n        },\n\n        getList(repository, criteria, callback) {\n            this.valuesLoading = true;\n\n            return repository.search(criteria, Shopware.Context.api).then(callback).catch(() => {\n                this.valuesLoading = false;\n            });\n        },\n\n        getFeaturesIds(type) {\n            if (!this.productFeatureSet.features) {\n                return [];\n            }\n\n            return this.productFeatureSet.features.filter((feature) => {\n                return feature.type === type;\n            }).map(a => a.id);\n        },\n\n        onChangeOption() {\n            this.checkIfReferencePriceIsSelected();\n\n            this.addButtonDisabled = !this.referencePriceSelected;\n\n            if (this.nextButtonDisabled) {\n                this.nextButtonDisabled = false;\n            }\n        },\n\n        checkIfReferencePriceIsSelected() {\n            this.showNextButton = !this.referencePriceSelected;\n        },\n\n        onConfirm() {\n            if (this.referencePriceSelected) {\n                this.features.push({\n                    id: 'd45b40f6a99c4c2abe66c410369b9d3c',\n                    name: 'referencePrice',\n                    type: 'referencePrice',\n                    position: this.features.length + 1,\n                });\n            } else {\n                this.selectedFeatures.forEach(features => this.setFeatures(features));\n            }\n\n            this.productFeatureSet.features = this.features;\n            this.productFeatureSetRepository.save(this.productFeatureSet, Context.api).then(() => {\n                this.isSaveSuccessful = true;\n                this.featureType = null;\n                this.$emit('modal-close');\n            }).catch(() => {\n                this.createNotificationError({\n                    title: this.$tc('global.default.error'),\n                    message: this.$tc(\n                        'global.notification.unspecifiedSaveErrorMessage',\n                    ),\n                });\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        setFeatures(features) {\n            Object.keys(features).forEach((key) => {\n                this.features.push({\n                    id: features[key].id,\n                    name: features[key].name,\n                    type: this.selectedFeatureType,\n                    position: this.features.length + 1,\n                });\n            });\n        },\n\n        setFeatureSelection(features, count) {\n            // Return early if we do not need to take pagination/preselection into account\n            if (!(this.showCustomField || this.showPropertyGroups)) {\n                if (count < 1) {\n                    this.addButtonDisabled = true;\n\n                    return;\n                }\n\n                this.selectedFeatures.set(1, features);\n                this.addButtonDisabled = false;\n\n                return;\n            }\n\n            const criteria = this.showCustomField ? this.customFieldCriteria : this.propertyGroupCriteria;\n            const page = criteria.page;\n            const preSelected = this.selectedFeatures.get(page);\n\n            // Apply the current selection, if there wasn't anything selected on this page before\n            if (!preSelected || Object.keys(preSelected).length < 1) {\n                this.selectedFeatures.set(page, features);\n                this.addButtonDisabled = false;\n\n                return;\n            }\n\n            const grid = this.showCustomField ? this.$refs.customFieldGrid : this.$refs.propertyGroupGrid;\n\n            // Mark all preselected items as selected\n            Object.keys(preSelected).forEach(key => grid.selectItem(true, preSelected[key]));\n        },\n\n        getPropertyGroupColumns() {\n            return [{\n                property: 'name',\n                label: 'sw-settings-product-feature-sets.modal.textPropertyLabel',\n                primary: true,\n            }];\n        },\n\n        getCustomFieldColumns() {\n            return [{\n                property: 'name',\n                label: 'sw-settings-product-feature-sets.modal.labelName',\n                primary: true,\n            }, {\n                property: 'type',\n                label: 'sw-settings-product-feature-sets.valuesCard.labelType',\n            }];\n        },\n\n        getProductInformationColumns() {\n            return [{\n                property: 'label',\n                label: 'sw-settings-product-feature-sets.modal.labelName',\n                primary: true,\n            }];\n        },\n\n        paginateCustomFieldGrid({ page, limit }) {\n            this.customFieldCriteria.setPage(page);\n            this.customFieldCriteria.setLimit(limit);\n\n            this.getCustomFieldList();\n        },\n\n        paginatePropertyGroupGrid({ page, limit }) {\n            this.propertyGroupCriteria.setPage(page);\n            this.propertyGroupCriteria.setLimit(limit);\n\n            this.getPropertyList();\n        },\n\n        readCustomFieldLabel(field) {\n            const language = Shopware.State.get('session').currentLocale;\n            const fallback = Shopware.Context.app.fallbackLocale;\n\n            return field.config.label[language] || field.config.label[fallback];\n        },\n    },\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-product-feature-sets-modal.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1a0c439c\", content, true, {});"],"sourceRoot":""}