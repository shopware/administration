{"version":3,"sources":["webpack:///./src/module/sw-cms/page/sw-cms-create/index.js","webpack:///./src/module/sw-cms/page/sw-cms-create/sw-cms-create.html.twig"],"names":["Mixin","Shopware","utils","Utils","template","mixins","getByName","data","wizardComplete","beforeRouteEnter","to","from","next","name","includes","params","id","createId","computed","pageHasSections","this","page","sections","length","categoryRepository","repositoryFactory","create","methods","createdComponent","State","commit","isSystemDefaultLanguage","getters","$store","pageRepository","onSave","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","isSaveSuccessful","type","createNotificationWarning","message","$tc","abrupt","Promise","reject","assignToEntity","sent","deleteEntityAndRequiredConfigKey","isLoading","save","then","$router","push","catch","exception","createNotificationError","stop","_this2","_callee2","_this2$$route$params","category","customEntityRepository","entity","_context2","$route","get","categories","startsWith","extensions","concat","string","camelCase","t0","onWizardComplete","onPageTypeChange"],"mappings":"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","file":"static/js/e10b901ed6fd776edf70.js","sourcesContent":["import template from './sw-cms-create.html.twig';\n\nconst { Mixin } = Shopware;\nconst utils = Shopware.Utils;\n\n/**\n * @private\n * @package buyers-experience\n */\nexport default {\n    template,\n\n    mixins: [\n        Mixin.getByName('placeholder'),\n    ],\n\n    data() {\n        return {\n            wizardComplete: false,\n        };\n    },\n\n    beforeRouteEnter(to, from, next) {\n        if (to.name.includes('sw.cms.create') && !to.params.id) {\n            to.params.id = utils.createId();\n        }\n\n        next();\n    },\n\n    computed: {\n        pageHasSections() {\n            return this.page.sections.length > 0 && this.wizardComplete;\n        },\n\n        categoryRepository() {\n            return this.repositoryFactory.create('category');\n        },\n    },\n\n    methods: {\n        createdComponent() {\n            Shopware.State.commit('adminMenu/collapseSidebar');\n\n            const isSystemDefaultLanguage = Shopware.State.getters['context/isSystemDefaultLanguage'];\n            if (!isSystemDefaultLanguage) {\n                Shopware.State.commit('context/resetLanguageToDefault');\n                this.$store.commit('cmsPageState/setIsSystemDefaultLanguage', isSystemDefaultLanguage);\n            }\n\n            this.page = this.pageRepository.create();\n            this.page.sections = [];\n        },\n\n        async onSave() {\n            this.isSaveSuccessful = false;\n\n            if ((this.isSystemDefaultLanguage && !this.page.name) || !this.page.type) {\n                this.createNotificationWarning({\n                    message: this.$tc('sw-cms.detail.notification.messageMissingFields'),\n                });\n\n                return Promise.reject();\n            }\n\n            this.page = await this.assignToEntity(this.page);\n\n            this.deleteEntityAndRequiredConfigKey(this.page.sections);\n\n            this.isLoading = true;\n\n            return this.pageRepository.save(this.page).then(() => {\n                this.isLoading = false;\n                this.isSaveSuccessful = true;\n\n                this.$router.push({ name: 'sw.cms.detail', params: { id: this.page.id } });\n            }).catch((exception) => {\n                this.isLoading = false;\n\n                this.createNotificationError({\n                    message: exception.message,\n                });\n\n                return Promise.reject(exception);\n            });\n        },\n\n        async assignToEntity(page) {\n            const { type, id } = this.$route.params;\n\n            if (!id || !type) {\n                return page;\n            }\n\n            try {\n                if (type === 'category') {\n                    const category = await this.categoryRepository.get(id);\n\n                    if (category) {\n                        page.categories.push(category);\n                    }\n                }\n\n                if (type.startsWith('ce_') || type.startsWith('custom_entity_')) {\n                    const customEntityRepository = this.repositoryFactory.create(type);\n                    const entity = await customEntityRepository.get(id);\n\n                    if (entity) {\n                        page.extensions[`${utils.string.camelCase(type)}SwCmsPage`].push(entity);\n                    }\n                }\n            } catch (e) {\n                this.createNotificationError({\n                    message: this.$tc('sw-cms.create.notification.assignToEntityError'),\n                });\n            }\n\n            return page;\n        },\n\n        onWizardComplete() {\n            if (this.page.type === 'product_list' || this.page.type === 'product_detail') {\n                this.onPageTypeChange(this.page.type);\n            }\n\n            this.wizardComplete = true;\n            this.onSave();\n        },\n    },\n};\n","export default \"\\n{% block sw_cms_detail_toolbar_language_switch %}\\n\\n<template #language-switch>\\n    <sw-language-switch disabled />\\n</template>\\n{% endblock %}\\n\\n\\n{% block sw_cms_detail_toolbar_actions_sales_channel %}\\n{% endblock %}\\n\\n\\n{% block sw_cms_detail_toolbar_actions_save %}\\n<sw-button-process\\n    v-tooltip.bottom=\\\"tooltipSave\\\"\\n    class=\\\"sw-cms-detail__save-action\\\"\\n    :is-loading=\\\"isLoading\\\"\\n    :process-success=\\\"isSaveSuccessful\\\"\\n    :disabled=\\\"true\\\"\\n    variant=\\\"primary\\\"\\n>\\n    {{ $tc('sw-cms.detail.label.buttonSave') }}\\n</sw-button-process>\\n{% endblock %}\\n\\n\\n{% block sw_cms_detail_stage_container %}\\n<sw-cms-create-wizard\\n    :page=\\\"page\\\"\\n    @on-section-select=\\\"addFirstSection($event, 0)\\\"\\n    @wizard-complete=\\\"onWizardComplete\\\"\\n/>\\n{% endblock %}\\n\";"],"sourceRoot":""}