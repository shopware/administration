{"version":3,"sources":["webpack:///./src/module/sw-category/component/sw-category-entry-point-card/sw-category-entry-point-card.html.twig","webpack:///./src/module/sw-category/component/sw-category-entry-point-card/index.js","webpack:///./src/module/sw-category/component/sw-category-entry-point-card/sw-category-entry-point-card.scss"],"names":["Context","Shopware","_Shopware$Data","Data","Criteria","EntityCollection","template","inject","props","category","type","Object","required","isLoading","Boolean","default","data","selectedEntryPoint","this","getInitialEntryPointFromCategory","initialNavigationSalesChannels","navigationSalesChannels","addedNavigationSalesChannels","api","configureHomeModalVisible","computed","entryPoints","value","label","$tc","associatedCollection","hasExistingNavigation","helpText","length","salesChannelSelectionLabel","salesChannelCriteria","criteria","addFilter","not","equalsAny","getIds","watch","newCategory","methods","footerSalesChannels","serviceSalesChannels","onEntryPointChange","resetSalesChannelCollections","onSalesChannelChange","changedEntityCollection","entryPoint","joinedNavigationCollection","fromCollection","forEach","item","add","source","_this","reduce","accumulator","_ref","push","collection","id","remove","openConfigureHomeModal","closeConfigureHomeModal","content","__esModule","module","i","locals","exports"],"mappings":"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","file":"static/js/bf4c03a7ec7fd3dc7631.js","sourcesContent":["export default \"\\n{% block sw_category_entry_point_card %}\\n<sw-card\\n    class=\\\"sw-category-entry-point-card\\\"\\n    position-identifier=\\\"sw-category-entry-point\\\"\\n    :title=\\\"$tc('sw-category.base.entry-point-card.cardTitle')\\\"\\n>\\n\\n    \\n    {% block sw_category_entry_point_card_selection %}\\n    <sw-single-select\\n        {% if VUE3 %}\\n        v-model:value=\\\"selectedEntryPoint\\\"\\n        {% else %}\\n        v-model=\\\"selectedEntryPoint\\\"\\n        {% endif %}\\n        class=\\\"sw-category-entry-point-card__entry-point-selection\\\"\\n        :options=\\\"entryPoints\\\"\\n        :label=\\\"$tc('sw-category.base.entry-point-card.labelEntryPoint')\\\"\\n        :placeholder=\\\"$tc('sw-category.base.entry-point-card.placeholderEntryPoint')\\\"\\n        :help-text=\\\"helpText\\\"\\n        :disabled=\\\"hasExistingNavigation || !acl.can('category.editor')\\\"\\n        show-clearable-button\\n        {% if VUE3 %}\\n        @update:value=\\\"onEntryPointChange\\\"\\n        {% else %}\\n        @change=\\\"onEntryPointChange\\\"\\n        {% endif %}\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_category_entry_point_card_navigation_headline %}\\n    <p v-if=\\\"hasExistingNavigation\\\">\\n        {{ $tc('sw-category.base.entry-point-card.existingNavigationDescription') }}\\n    </p>\\n    {% endblock %}\\n\\n    \\n    {% block sw_category_entry_point_card_navigation_list %}\\n    <div\\n        v-if=\\\"hasExistingNavigation\\\"\\n        class=\\\"sw-category-entry-point-card__navigation-list\\\"\\n    >\\n\\n        \\n        {% block sw_category_detail_entry_point_navigation_list_link %}\\n        <router-link\\n            v-for=\\\"salesChannel in initialNavigationSalesChannels\\\"\\n            :key=\\\"salesChannel.id\\\"\\n            :to=\\\"{ name: 'sw.sales.channel.detail.base', params: { id: salesChannel.id }}\\\"\\n            class=\\\"sw-category-entry-point-card__navigation-entry\\\"\\n        >\\n            {{ salesChannel.translated.name }}\\n        </router-link>\\n        {% endblock %}\\n\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_category_entry_point_card_sales_channel_selection %}\\n    <sw-category-sales-channel-multi-select\\n        v-if=\\\"associatedCollection\\\"\\n        class=\\\"sw-category-entry-point-card__sales-channel-selection\\\"\\n        :entity-collection=\\\"associatedCollection\\\"\\n        :label=\\\"salesChannelSelectionLabel\\\"\\n        :criteria=\\\"salesChannelCriteria\\\"\\n        :placeholder=\\\"$tc('sw-category.base.entry-point-card.placeholderSalesChannels')\\\"\\n        :disabled=\\\"!selectedEntryPoint || !acl.can('category.editor')\\\"\\n        {% if VUE3 %}\\n        @update:entity-collection=\\\"onSalesChannelChange\\\"\\n        {% else %}\\n        @change=\\\"onSalesChannelChange\\\"\\n        {% endif %}\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_category_entry_point_card_button_configure_home %}\\n    <sw-button\\n        class=\\\"sw-category-entry-point-card__button-configure-home\\\"\\n        variant=\\\"ghost\\\"\\n        size=\\\"small\\\"\\n        :disabled=\\\"selectedEntryPoint !== 'navigationSalesChannels' || category.navigationSalesChannels.length === 0\\\"\\n        @click=\\\"openConfigureHomeModal\\\"\\n    >\\n        {{ $tc('sw-category.base.entry-point-card.buttonConfigureHome') }}\\n    </sw-button>\\n    {% endblock %}\\n\\n    \\n    {% block sw_category_entry_point_card_configure_home_modal %}\\n    <sw-category-entry-point-modal\\n        v-if=\\\"configureHomeModalVisible\\\"\\n        :sales-channel-collection=\\\"category.navigationSalesChannels\\\"\\n        @modal-close=\\\"closeConfigureHomeModal\\\"\\n    />\\n    {% endblock %}\\n</sw-card>\\n{% endblock %}\\n\";","import template from './sw-category-entry-point-card.html.twig';\nimport './sw-category-entry-point-card.scss';\n\nconst { Context } = Shopware;\nconst { Criteria, EntityCollection } = Shopware.Data;\n\n/**\n * @package content\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'acl',\n    ],\n\n    props: {\n        category: {\n            type: Object,\n            required: true,\n        },\n\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            selectedEntryPoint: this.getInitialEntryPointFromCategory(),\n            initialNavigationSalesChannels: this.category.navigationSalesChannels,\n            addedNavigationSalesChannels: new EntityCollection('/sales_channel', 'sales_channel', Context.api),\n            configureHomeModalVisible: false,\n        };\n    },\n\n    computed: {\n        entryPoints() {\n            return [{\n                value: 'navigationSalesChannels',\n                label: this.$tc('sw-category.base.entry-point-card.types.labelMainNavigation'),\n            }, {\n                value: 'footerSalesChannels',\n                label: this.$tc('sw-category.base.entry-point-card.types.labelFooterNavigation'),\n            }, {\n                value: 'serviceSalesChannels',\n                label: this.$tc('sw-category.base.entry-point-card.types.labelServiceNavigation'),\n            }];\n        },\n\n        associatedCollection() {\n            if (this.hasExistingNavigation) {\n                return this.addedNavigationSalesChannels;\n            }\n\n            return this.category[this.selectedEntryPoint];\n        },\n\n        helpText() {\n            switch (this.selectedEntryPoint) {\n                case 'navigationSalesChannels':\n                    return this.$tc('sw-category.base.entry-point-card.types.helpTextMainNavigation');\n                case 'footerSalesChannels':\n                    return this.$tc('sw-category.base.entry-point-card.types.helpTextFooterNavigation');\n                case 'serviceSalesChannels':\n                    return this.$tc('sw-category.base.entry-point-card.types.helpTextServiceNavigation');\n                default:\n                    return '';\n            }\n        },\n\n        hasExistingNavigation() {\n            return this.initialNavigationSalesChannels.length > 0;\n        },\n\n        salesChannelSelectionLabel() {\n            if (this.hasExistingNavigation) {\n                return this.$tc('sw-category.base.entry-point-card.labelSalesChannelsAdd');\n            }\n\n            return this.$tc('global.entities.sales_channel', 2);\n        },\n\n        salesChannelCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            if (this.hasExistingNavigation) {\n                criteria.addFilter(Criteria.not('or', [\n                    Criteria.equalsAny('id', this.initialNavigationSalesChannels.getIds()),\n                ]));\n            }\n\n            return criteria;\n        },\n    },\n\n    watch: {\n        category(newCategory) {\n            this.initialNavigationSalesChannels = newCategory.navigationSalesChannels;\n            this.addedNavigationSalesChannels = new EntityCollection('/sales_channel', 'sales_channel', Context.api);\n            this.selectedEntryPoint = this.getInitialEntryPointFromCategory();\n        },\n    },\n\n    methods: {\n        getInitialEntryPointFromCategory() {\n            if (this.category.navigationSalesChannels && this.category.navigationSalesChannels.length > 0) {\n                return 'navigationSalesChannels';\n            }\n\n            if (this.category.footerSalesChannels && this.category.footerSalesChannels.length > 0) {\n                return 'footerSalesChannels';\n            }\n\n            if (this.category.serviceSalesChannels && this.category.serviceSalesChannels.length > 0) {\n                return 'serviceSalesChannels';\n            }\n\n            return '';\n        },\n\n        onEntryPointChange() {\n            this.resetSalesChannelCollections();\n        },\n\n        onSalesChannelChange(changedEntityCollection) {\n            const entryPoint = this.selectedEntryPoint;\n\n            if (this.hasExistingNavigation) {\n                const joinedNavigationCollection = EntityCollection.fromCollection(this.initialNavigationSalesChannels);\n                changedEntityCollection.forEach((item) => {\n                    joinedNavigationCollection.add(item);\n                });\n                this.addedNavigationSalesChannels = changedEntityCollection;\n                changedEntityCollection = joinedNavigationCollection;\n            }\n\n            changedEntityCollection.source = this.category[entryPoint].source;\n            this.resetSalesChannelCollections();\n\n            this.category[entryPoint] = changedEntityCollection;\n        },\n\n        resetSalesChannelCollections() {\n            const entryPoint = this.selectedEntryPoint;\n\n            const salesChannelsCollectionToReset = this.entryPoints.reduce((accumulator, { value }) => {\n                if (value === entryPoint) {\n                    return accumulator;\n                }\n\n                accumulator.push(this.category[value]);\n                return accumulator;\n            }, []);\n\n            salesChannelsCollectionToReset.forEach((collection) => {\n                const ids = collection.getIds();\n\n                ids.forEach((id) => {\n                    collection.remove(id);\n                });\n            });\n        },\n\n        openConfigureHomeModal() {\n            this.configureHomeModalVisible = true;\n        },\n\n        closeConfigureHomeModal() {\n            this.configureHomeModalVisible = false;\n        },\n    },\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-category-entry-point-card.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2ae01979\", content, true, {});"],"sourceRoot":""}