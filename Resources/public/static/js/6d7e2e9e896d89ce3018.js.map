{"version":3,"sources":["webpack:///./src/module/sw-users-permissions/components/sw-users-permissions-permissions-grid/sw-users-permissions-permissions-grid.scss","webpack:///./src/module/sw-users-permissions/components/sw-users-permissions-permissions-grid/index.js","webpack:///./src/module/sw-users-permissions/components/sw-users-permissions-permissions-grid/sw-users-permissions-permissions-grid.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","template","inject","props","role","type","Object","required","disabled","Boolean","computed","permissionsWithParents","_this","this","parents","forEach","parent","push","value","getPermissionsForParent","child","permissions","_this2","privileges","getPrivilegesMappings","filter","privilege","category","sort","a","b","labelA","$tc","concat","key","labelB","localeCompare","_this3","reduce","includes","_toConsumableArray","usedDependencies","_this4","dependencies","Set","privilegeKey","privilegeRole","getPrivilegeRole","dependency","roles","methods","changePermission","permissionKey","permissionRole","identifier","removePermission","addPermission","addDependenciesForRole","_this5","dependencyIdentifier","isPermissionSelected","some","isPermissionDisabled","changeAllPermissionsForKey","_this6","areAllSelected","allPermissionsForKeySelected","existsPrivilege","_this7","parentKey","permission","areAllChildrenRolesSelected","roleKey","_this8","undefined","areAllChildrenWithAllRolesSelected","_this9","every","areSomeChildrenRolesSelected","_this10","ignoreMissingPrivilege","arguments","length","permissionsForParent","areSomeChildrenWithAllRolesSelected","_this11","isParentRoleDisabled","_this12","toggleAllChildrenWithRole","_this13","allChildrenRolesSelected","toggleAllChildrenWithAllRoles","_this14","allChildrenWithAllRolesSelected","parentRoleHasChildRoles","currentRole"],"mappings":"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","file":"static/js/6d7e2e9e896d89ce3018.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-users-permissions-permissions-grid.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"73a0d745\", content, true, {});","/**\n * @package services-settings\n */\nimport template from './sw-users-permissions-permissions-grid.html.twig';\nimport './sw-users-permissions-permissions-grid.scss';\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['privileges'],\n\n    props: {\n        role: {\n            type: Object,\n            required: true,\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    computed: {\n        permissionsWithParents() {\n            const permissionsWithParents = [];\n\n            this.parents.forEach(parent => {\n                permissionsWithParents.push({\n                    type: 'parent',\n                    value: parent,\n                });\n\n                const children = this.getPermissionsForParent(parent);\n\n                children.forEach(child => {\n                    permissionsWithParents.push(child);\n                });\n            });\n\n            return permissionsWithParents;\n        },\n\n\n        permissions() {\n            const privileges = this.privileges.getPrivilegesMappings();\n\n            return privileges\n                .filter(privilege => privilege.category === 'permissions')\n                .sort((a, b) => {\n                    const labelA = this.$tc(`sw-privileges.permissions.${a.key}.label`);\n                    const labelB = this.$tc(`sw-privileges.permissions.${b.key}.label`);\n\n                    return labelA.localeCompare(labelB);\n                });\n        },\n\n        parents() {\n            return this.permissions\n                .reduce((parents, privilege) => {\n                    if (parents.includes(privilege.parent)) {\n                        return parents;\n                    }\n\n                    return [...parents, privilege.parent];\n                }, [])\n                .sort((a, b) => {\n                    const labelA = this.$tc(`sw-privileges.permissions.parents.${a || 'other'}`);\n                    const labelB = this.$tc(`sw-privileges.permissions.parents.${b || 'other'}`);\n\n                    return labelA.localeCompare(labelB);\n                });\n        },\n\n        usedDependencies() {\n            const dependencies = new Set();\n\n            this.role.privileges.forEach(privilegeKey => {\n                const privilegeRole = this.privileges.getPrivilegeRole(privilegeKey);\n\n                if (!privilegeRole) {\n                    return;\n                }\n\n                privilegeRole.dependencies.forEach(dependency => {\n                    dependencies.add(dependency);\n                });\n            });\n\n            return [...dependencies];\n        },\n\n        roles() {\n            return [\n                'viewer',\n                'editor',\n                'creator',\n                'deleter',\n            ];\n        },\n    },\n\n    methods: {\n        changePermission(permissionKey, permissionRole) {\n            const identifier = `${permissionKey}.${permissionRole}`;\n\n            if (this.role.privileges.includes(identifier)) {\n                this.removePermission(identifier);\n            } else {\n                this.addPermission(identifier);\n            }\n        },\n\n        addPermission(identifier) {\n            if (this.role.privileges.includes(identifier)) {\n                return;\n            }\n\n            this.role.privileges.push(identifier);\n\n            this.addDependenciesForRole(identifier);\n        },\n\n        addDependenciesForRole(identifier) {\n            const privilegeRole = this.privileges.getPrivilegeRole(identifier);\n\n            if (!privilegeRole) {\n                return;\n            }\n\n            privilegeRole.dependencies.forEach((dependencyIdentifier) => {\n                this.addPermission(dependencyIdentifier);\n            });\n        },\n\n        removePermission(identifier) {\n            this.role.privileges = this.role.privileges.filter(privilege => {\n                return privilege !== identifier;\n            });\n        },\n\n        isPermissionSelected(permissionKey, permissionRole) {\n            return this.role.privileges.some(privilege => {\n                return privilege === `${permissionKey}.${permissionRole}`;\n            });\n        },\n\n        isPermissionDisabled(permissionKey, permissionRole) {\n            return this.usedDependencies.includes(`${permissionKey}.${permissionRole}`);\n        },\n\n        changeAllPermissionsForKey(permissionKey) {\n            const areAllSelected = this.allPermissionsForKeySelected(permissionKey);\n\n            this.roles.forEach(role => {\n                const identifier = `${permissionKey}.${role}`;\n                const privilegeExists = this.privileges.existsPrivilege(identifier);\n\n                if (!privilegeExists) {\n                    return;\n                }\n\n                if (areAllSelected) {\n                    this.removePermission(identifier);\n                } else {\n                    this.addPermission(identifier);\n                }\n            });\n        },\n\n        allPermissionsForKeySelected(permissionKey) {\n            const containsUnselected = this.roles.some(permissionRole => {\n                const doesExist = this.privileges.existsPrivilege(`${permissionKey}.${permissionRole}`);\n\n                if (!doesExist) {\n                    return false;\n                }\n\n                return !this.isPermissionSelected(permissionKey, permissionRole);\n            });\n\n            return !containsUnselected;\n        },\n\n        getPermissionsForParent(parentKey) {\n            return this.permissions.filter(permission => {\n                return permission.parent === parentKey;\n            });\n        },\n\n        areAllChildrenRolesSelected(parentKey, roleKey) {\n            const permissionsForParent = this.getPermissionsForParent(parentKey);\n\n            const hasUnselected = permissionsForParent.some(permission => {\n                if (permission.roles[roleKey] === undefined) {\n                    return false;\n                }\n\n                return !this.isPermissionSelected(permission.key, roleKey);\n            });\n\n            return !hasUnselected;\n        },\n\n        areAllChildrenWithAllRolesSelected(parentKey) {\n            return this.roles.every(roleKey => {\n                return this.areAllChildrenRolesSelected(parentKey, roleKey);\n            });\n        },\n\n        areSomeChildrenRolesSelected(parentKey, roleKey, ignoreMissingPrivilege = true) {\n            const permissionsForParent = this.getPermissionsForParent(parentKey);\n\n            return permissionsForParent.some(permission => {\n                if (!ignoreMissingPrivilege) {\n                    const privilegeExists = this.privileges.existsPrivilege(`${permission.key}.${roleKey}`);\n\n                    if (!privilegeExists) {\n                        return true;\n                    }\n                }\n\n                return this.isPermissionSelected(permission.key, roleKey);\n            });\n        },\n\n        areSomeChildrenWithAllRolesSelected(parentKey) {\n            return this.roles.every(roleKey => {\n                return this.areSomeChildrenRolesSelected(parentKey, roleKey, false);\n            });\n        },\n\n        isParentRoleDisabled(parentKey, roleKey) {\n            const permissionsForParent = this.getPermissionsForParent(parentKey);\n\n            return permissionsForParent.every(permission => {\n                return this.isPermissionDisabled(permission.key, roleKey);\n            });\n        },\n\n        toggleAllChildrenWithRole(parentKey, roleKey) {\n            const permissionsForParent = this.getPermissionsForParent(parentKey);\n            const allChildrenRolesSelected = this.areAllChildrenRolesSelected(parentKey, roleKey);\n\n            permissionsForParent.forEach(permission => {\n                if (!permission.roles[roleKey]) {\n                    return;\n                }\n\n                const identifier = `${permission.key}.${roleKey}`;\n\n                if (this.isPermissionDisabled(permission.key, roleKey)) {\n                    return;\n                }\n\n                if (allChildrenRolesSelected) {\n                    this.removePermission(identifier);\n                } else {\n                    this.addPermission(identifier);\n                }\n            });\n        },\n\n        toggleAllChildrenWithAllRoles(parentKey) {\n            const permissionsForParent = this.getPermissionsForParent(parentKey);\n            const allChildrenWithAllRolesSelected = this.areAllChildrenWithAllRolesSelected(parentKey);\n\n            return this.roles.forEach(roleKey => {\n                permissionsForParent.forEach(permission => {\n                    const identifier = `${permission.key}.${roleKey}`;\n\n                    if (allChildrenWithAllRolesSelected) {\n                        this.removePermission(identifier);\n                    } else {\n                        this.addPermission(identifier);\n                    }\n                });\n            });\n        },\n\n        parentRoleHasChildRoles(parentKey, roleKey) {\n            return this.getPermissionsForParent(parentKey).some(currentRole => {\n                return currentRole.roles[roleKey] !== undefined;\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_users_permissions_permissions_grid %}\\n<sw-card\\n    class=\\\"sw-users-permissions-permissions-grid\\\"\\n    position-identifier=\\\"sw-users-permissions-permissions-grid\\\"\\n    :title=\\\"$tc('sw-users-permissions.roles.grid.title')\\\"\\n>\\n    <div class=\\\"sw-users-permissions-permissions-grid__grid\\\">\\n        \\n        {% block sw_users_permissions_permissions_grid_header %}\\n        <div class=\\\"sw-users-permissions-permissions-grid__entry sw-users-permissions-permissions-grid__entry-header\\\">\\n            \\n            {% block sw_users_permissions_permissions_grid_header_title %}\\n            <div class=\\\"sw-users-permissions-permissions-grid__title\\\">\\n                \\n                {% block sw_users_permissions_permissions_grid_header_title_content %}\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n\\n            \\n            {% block sw_users_permissions_permissions_grid_header_roles %}\\n            <div\\n                v-for=\\\"role in roles\\\"\\n                :key=\\\"role\\\"\\n                class=\\\"sw-users-permissions-permissions-grid__checkbox-wrapper\\\"\\n            >\\n                \\n                {% block sw_users_permissions_permissions_grid_header_roles_name %}\\n                {{ $tc('sw-privileges.roles.' + role) }}\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n\\n            \\n            {% block sw_users_permissions_permissions_grid_header_all_roles %}\\n            <div class=\\\"sw-users-permissions-permissions-grid__all\\\">\\n                \\n                {% block sw_users_permissions_permissions_grid_header_all_roles_name %}\\n                {{ $tc('sw-privileges.roles.all') }}\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_users_permissions_permissions_grid_permissions %}\\n        <template\\n            v-for=\\\"permission in permissionsWithParents\\\"\\n            {% if VUE3 %}\\n            :key=\\\"permission.value\\\"\\n            {% endif %}\\n        >\\n            <div\\n                v-if=\\\"permission.type === 'parent'\\\"\\n                {% if VUE2 %}\\n                :key=\\\"permission.value\\\"\\n                {% endif %}\\n                :class=\\\"'sw-users-permissions-permissions-grid__parent_' + permission.value\\\"\\n                class=\\\"sw-users-permissions-permissions-grid__entry\\n                                sw-users-permissions-permissions-grid__parent\\\"\\n            >\\n                \\n                {% block sw_users_permissions_permissions_grid_parent_title %}\\n                <div class=\\\"sw-users-permissions-permissions-grid__title\\\">\\n                    \\n                    {% block sw_users_permissions_permissions_grid_parent_title_content %}\\n                    {{ $tc('sw-privileges.permissions.parents.' + (permission.value || 'other')) }}\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n\\n                \\n                {% block sw_users_permissions_permissions_grid_parent_roles %}\\n                <div\\n                    v-for=\\\"role in roles\\\"\\n                    :key=\\\"`${permission.value}-${role}`\\\"\\n                    :class=\\\"'sw-users-permissions-permissions-grid__role_' + role\\\"\\n                    class=\\\"sw-users-permissions-permissions-grid__checkbox-wrapper\\\"\\n                >\\n                    \\n                    {% block sw_users_permissions_permissions_grid_parent_roles_field %}\\n                    <sw-checkbox-field\\n                        v-if=\\\"parentRoleHasChildRoles(permission.value, role)\\\"\\n                        :value=\\\"areAllChildrenRolesSelected(permission.value, role)\\\"\\n                        :ghost-value=\\\"areSomeChildrenRolesSelected(permission.value, role)\\\"\\n                        :disabled=\\\"isParentRoleDisabled(permission.value, role) || disabled\\\"\\n                        {% if VUE3 %}\\n                        @update:value=\\\"toggleAllChildrenWithRole(permission.value, role)\\\"\\n                        {% else %}\\n                        @change=\\\"toggleAllChildrenWithRole(permission.value, role)\\\"\\n                        {% endif %}\\n                    />\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n\\n                \\n                {% block sw_users_permissions_permissions_grid_parent_all_roles %}\\n                <div class=\\\"sw-users-permissions-permissions-grid__all sw-users-permissions-permissions-grid__role_all\\\">\\n                    \\n                    {% block sw_users_permissions_permissions_grid_parent_all_roles_field %}\\n                    <sw-checkbox-field\\n                        :value=\\\"areAllChildrenWithAllRolesSelected(permission.value)\\\"\\n                        :ghost-value=\\\"areSomeChildrenWithAllRolesSelected(permission.value)\\\"\\n                        :disabled=\\\"disabled\\\"\\n                        {% if VUE3 %}\\n                        @update:value=\\\"toggleAllChildrenWithAllRoles(permission.value)\\\"\\n                        {% else %}\\n                        @change=\\\"toggleAllChildrenWithAllRoles(permission.value)\\\"\\n                        {% endif %}\\n                    />\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n            </div>\\n\\n            <div\\n                v-else\\n                :key=\\\"`else-${permission.key}`\\\"\\n                :class=\\\"'sw-users-permissions-permissions-grid__entry_' + permission.key\\\"\\n                class=\\\"sw-users-permissions-permissions-grid__entry\\\"\\n            >\\n                \\n                {% block sw_users_permissions_permissions_grid_permissions_title %}\\n                <div class=\\\"sw-users-permissions-permissions-grid__title\\\">\\n                    \\n                    {% block sw_users_permissions_permissions_grid_permissions_title_content %}\\n                    {{ $tc('sw-privileges.permissions.' + permission.key + '.label') }}\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n\\n                \\n                {% block sw_users_permissions_permissions_grid_permissions_roles %}\\n                <div\\n                    v-for=\\\"role in roles\\\"\\n                    :key=\\\"`else-${permission.key}${role}`\\\"\\n                    :class=\\\"'sw-users-permissions-permissions-grid__role_' + role\\\"\\n                    class=\\\"sw-users-permissions-permissions-grid__checkbox-wrapper\\\"\\n                >\\n                    \\n                    {% block sw_users_permissions_permissions_grid_permissions_roles_field %}\\n                    <sw-checkbox-field\\n                        v-if=\\\"permission.roles[role]\\\"\\n                        v-tooltip=\\\"{\\n                            message: $tc('sw-users-permissions.roles.grid.disabledCheckboxMessage'),\\n                            disabled: !isPermissionDisabled(permission.key, role) || disabled,\\n                            showOnDisabledElements: false\\n                        }\\\"\\n                        :value=\\\"isPermissionSelected(permission.key, role)\\\"\\n                        :disabled=\\\"isPermissionDisabled(permission.key, role) || disabled\\\"\\n                        {% if VUE3 %}\\n                        @update:value=\\\"changePermission(permission.key, role)\\\"\\n                        {% else %}\\n                        @change=\\\"changePermission(permission.key, role)\\\"\\n                        {% endif %}\\n                    />\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n\\n                \\n                {% block sw_users_permissions_permissions_grid_permissions_all_roles %}\\n                <div class=\\\"sw-users-permissions-permissions-grid__all sw-users-permissions-permissions-grid__role_all\\\">\\n                    \\n                    {% block sw_users_permissions_permissions_grid_permissions_all_roles_field %}\\n                    <sw-checkbox-field\\n                        v-if=\\\"Object.keys(permission.roles).length > 0\\\"\\n                        :value=\\\"allPermissionsForKeySelected(permission.key)\\\"\\n                        :disabled=\\\"disabled\\\"\\n                        {% if VUE3 %}\\n                        @update:value=\\\"changeAllPermissionsForKey(permission.key)\\\"\\n                        {% else %}\\n                        @change=\\\"changeAllPermissionsForKey(permission.key)\\\"\\n                        {% endif %}\\n                    />\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n            </div>\\n        </template>\\n        {% endblock %}\\n    </div>\\n</sw-card>\\n{% endblock %}\\n\";"],"sourceRoot":""}