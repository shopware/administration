{"version":3,"sources":["webpack:///./src/module/sw-extension/component/sw-extension-card-base/sw-extension-card-base.scss","webpack:///./src/module/sw-extension/component/sw-extension-card-base/index.js","webpack:///./src/module/sw-extension/component/sw-extension-card-base/sw-extension-card-base.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Utils","Filter","template","inheritAttrs","inject","mixins","props","extension","type","Object","required","data","isLoading","showUninstallModal","showRemovalModal","showPermissionsModal","permissionsAccepted","showPrivacyModal","permissionModalActionLabel","openLink","showConsentAffirmationModal","consentAffirmationDeltas","computed","dateFilter","getByName","defaultThemeAsset","this","assetFilter","extensionCardClasses","isInstalled","active","isActive","allowDisable","licensedExtension","storeLicense","image","icon","iconRaw","concat","get","set","_this","$nextTick","changeExtensionStatus","installedAt","privacyPolicyLink","permissions","keys","length","isRemovable","source","isUninstallable","isUpdateable","latestVersion","version","openLinkExists","link","extensionMainModule","_this2","State","mainModules","find","mainModule","extensionName","name","params","id","moduleId","consentAffirmationModalActionLabel","$tc","consentAffirmationModalCloseLabel","consentAffirmationModalTitle","extensionLabel","label","consentAffirmationModalDescription","created","createdComponent","methods","_this3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","shopwareExtensionService","getOpenLink","sent","stop","emitUpdateList","$emit","getHelp","openPrivacyAndSafety","window","open","openRemovalModal","openUninstallModal","closeRemovalModal","closeUninstallModal","closeModalAndUninstallExtension","removeData","_this4","_callee2","_context2","uninstallExtension","clearCacheAndReloadPage","t0","showExtensionErrors","finish","updateExtension","_arguments","arguments","_this5","_callee3","allowNewPermissions","_e$response","_e$response$data","_e$response$data$erro","_context3","undefined","updateSource","extensionStoreActionService","downloadExtension","response","errors","code","meta","parameters","deltas","openConsentAffirmationModal","abrupt","closeModalAndRemoveExtension","_this6","_callee4","_context4","variant","removeExtension","cancelAndRemoveExtension","openExtension","$router","push","openPermissionsModalForInstall","installExtension","openPermissionsModal","closePermissionsModal","closePermissionsModalAndInstallExtension","_this7","_callee5","_context5","_this8","_callee6","_context6","debug","warn","_name","_this9","_callee7","_context7","showStoreError","openPrivacyModal","closePrivacyModal","cacheApiService","clear","then","location","reload","closeConsentAffirmationModal","closeConsentAffirmationModalAndUpdateExtension","_this10","_callee8","_context8"],"mappings":"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","file":"static/js/35ea73a3b128baab696e.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-extension-card-base.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"ed152bda\", content, true, {});","import template from './sw-extension-card-base.html.twig';\nimport './sw-extension-card-base.scss';\n\nconst { Utils, Filter } = Shopware;\n\n/**\n * @package services-settings\n * @private\n */\nexport default {\n    template,\n\n    inheritAttrs: false,\n\n    inject: ['shopwareExtensionService', 'extensionStoreActionService', 'cacheApiService'],\n\n    mixins: ['sw-extension-error'],\n\n    props: {\n        extension: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            showUninstallModal: false,\n            showRemovalModal: false,\n            showPermissionsModal: false,\n            permissionsAccepted: false,\n            showPrivacyModal: false,\n            permissionModalActionLabel: null,\n            openLink: null,\n            showConsentAffirmationModal: false,\n            consentAffirmationDeltas: null,\n        };\n    },\n\n    computed: {\n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        },\n\n        defaultThemeAsset() {\n            return this.assetFilter('administration/static/img/theme/default_theme_preview.jpg');\n        },\n\n        extensionCardClasses() {\n            return {\n                'is--deactivated': this.isInstalled && !this.extension.active,\n                'deactivate-prevented': this.isActive && !this.allowDisable,\n                'is--not-installed': !this.isInstalled,\n            };\n        },\n\n        licensedExtension() {\n            return this.extension.storeLicense;\n        },\n\n        image() {\n            if (this.extension.icon) {\n                return this.extension.icon;\n            }\n\n            if (this.extension.iconRaw) {\n                return `data:image/png;base64, ${this.extension.iconRaw}`;\n            }\n\n            return this.defaultThemeAsset;\n        },\n\n        isActive: {\n            get() {\n                if (!this.isInstalled) {\n                    return false;\n                }\n\n                return this.extension.active;\n            },\n            set(active) {\n                if (!this.isInstalled) {\n                    return;\n                }\n\n                this.extension.active = active;\n\n                this.$nextTick(() => {\n                    this.changeExtensionStatus();\n                }, 0);\n            },\n        },\n\n        allowDisable() {\n            return this.extension.allowDisable;\n        },\n\n        isInstalled() {\n            return this.extension.installedAt !== null;\n        },\n\n        privacyPolicyLink() {\n            return this.extension.privacyPolicyLink;\n        },\n\n        permissions() {\n            return Object.keys(this.extension.permissions).length ?\n                this.extension.permissions : null;\n        },\n\n        assetFilter() {\n            return Filter.getByName('asset');\n        },\n\n        isRemovable() {\n            if (this.extension.installedAt === null && this.extension.source === 'local') {\n                return true;\n            }\n\n            return false;\n        },\n\n        isUninstallable() {\n            if (this.extension.installedAt !== null) {\n                return true;\n            }\n\n            return false;\n        },\n\n        isUpdateable() {\n            if (!this.extension || this.extension.latestVersion === null) {\n                return false;\n            }\n\n            return this.extension.latestVersion !== this.extension.version;\n        },\n\n        openLinkExists() {\n            return !!this.link;\n        },\n\n        extensionMainModule() {\n            return Shopware.State.get('extensionMainModules').mainModules\n                .find(mainModule => mainModule.extensionName === this.extension.name);\n        },\n\n        link() {\n            if (this.openLink) {\n                return this.openLink;\n            }\n\n            if (this.extensionMainModule) {\n                return {\n                    name: 'sw.extension.sdk.index',\n                    params: {\n                        id: this.extensionMainModule.moduleId,\n                    },\n                };\n            }\n\n            return null;\n        },\n\n        consentAffirmationModalActionLabel() {\n            return this.$tc('sw-extension-store.component.sw-extension-permissions-modal.acceptAndUpdate');\n        },\n\n        consentAffirmationModalCloseLabel() {\n            return this.$tc('global.default.cancel');\n        },\n\n        consentAffirmationModalTitle() {\n            return this.$tc(\n                'sw-extension-store.component.sw-extension-permissions-modal.titleNewPermissions',\n                1,\n                { extensionLabel: this.extension.label },\n            );\n        },\n\n        consentAffirmationModalDescription() {\n            return this.$tc(\n                'sw-extension-store.component.sw-extension-permissions-modal.descriptionNewPermissions',\n                1,\n                { extensionLabel: this.extension.label },\n            );\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            this.openLink = await this.shopwareExtensionService.getOpenLink(this.extension);\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - will emit hypernated event only.\n         */\n        emitUpdateList() {\n            this.$emit('update-list');\n            this.$emit('updateList');\n        },\n\n        getHelp() {\n            // implemented in SAAS-1137\n        },\n\n        openPrivacyAndSafety() {\n            window.open(this.extension.privacyPolicyLink, '_blank');\n        },\n\n        openRemovalModal() {\n            this.showRemovalModal = true;\n        },\n\n        openUninstallModal() {\n            this.showUninstallModal = true;\n        },\n\n        closeRemovalModal() {\n            this.showRemovalModal = false;\n        },\n\n        closeUninstallModal() {\n            this.showUninstallModal = false;\n        },\n\n        async closeModalAndUninstallExtension(removeData) {\n            this.showUninstallModal = false;\n            this.isLoading = true;\n\n            try {\n                await this.shopwareExtensionService.uninstallExtension(\n                    this.extension.name,\n                    this.extension.type,\n                    removeData,\n                );\n                this.clearCacheAndReloadPage();\n            } catch (e) {\n                this.showExtensionErrors(e);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        async updateExtension(allowNewPermissions = false) {\n            this.isLoading = true;\n\n            try {\n                if (this.extension.updateSource === 'store') {\n                    await this.extensionStoreActionService.downloadExtension(this.extension.name);\n                }\n\n                if (this.extension.installedAt) {\n                    await this.shopwareExtensionService.updateExtension(\n                        this.extension.name,\n                        this.extension.type,\n                        allowNewPermissions,\n                    );\n                }\n                this.clearCacheAndReloadPage();\n            } catch (e) {\n                if (e.response?.data?.errors[0]?.code === 'FRAMEWORK__EXTENSION_UPDATE_REQUIRES_CONSENT_AFFIRMATION') {\n                    this.consentAffirmationDeltas = e.response.data.errors[0].meta.parameters.deltas;\n\n                    this.openConsentAffirmationModal();\n\n                    return;\n                }\n\n                this.showExtensionErrors(e);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        async closeModalAndRemoveExtension() {\n            // we close the modal in the called methods before updating the listing\n            if (this.extension.storeLicense === null || this.extension.storeLicense.variant !== 'rent') {\n                await this.removeExtension();\n                this.showRemovalModal = false;\n\n                return;\n            }\n\n            await this.cancelAndRemoveExtension();\n            this.showRemovalModal = false;\n        },\n\n        openExtension() {\n            if (this.link) {\n                this.$router.push(this.link);\n            }\n        },\n\n        openPermissionsModalForInstall() {\n            if (!this.permissions) {\n                this.permissionsAccepted = true;\n                this.installExtension();\n\n                return;\n            }\n\n            this.permissionModalActionLabel = this.$tc(\n                'sw-extension-store.component.sw-extension-card-base.labelAcceptAndInstall',\n            );\n            this.showPermissionsModal = true;\n        },\n\n        openPermissionsModal() {\n            this.permissionModalActionLabel = null;\n            this.showPermissionsModal = true;\n        },\n\n        closePermissionsModal() {\n            this.permissionModalActionLabel = null;\n            this.showPermissionsModal = false;\n        },\n\n        async closePermissionsModalAndInstallExtension() {\n            this.permissionsAccepted = true;\n            this.closePermissionsModal();\n            await this.installExtension();\n        },\n\n        /*\n         * Interface for deriving components\n         */\n        async changeExtensionStatus() {\n            Utils.debug.warn(this._name, 'No implementation of changeExtensionStatus found');\n        },\n\n        installExtension() {\n            Utils.debug.warn(this._name, 'No implementation of installExtension found');\n        },\n\n        async removeExtension() {\n            try {\n                this.showRemovalModal = false;\n                this.isLoading = true;\n\n                await this.shopwareExtensionService.removeExtension(\n                    this.extension.name,\n                    this.extension.type,\n                );\n                this.extension.active = false;\n            } catch (e) {\n                this.showStoreError(e);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        cancelAndRemoveExtension() {\n            Utils.debug.warn(this._name, 'No implementation of cancelAndRemoveExtension found');\n        },\n\n        openPrivacyModal() {\n            this.showPrivacyModal = true;\n        },\n\n        closePrivacyModal() {\n            this.showPrivacyModal = false;\n        },\n\n        clearCacheAndReloadPage() {\n            return this.cacheApiService.clear()\n                .then(() => {\n                    window.location.reload();\n                });\n        },\n\n        openConsentAffirmationModal() {\n            this.showConsentAffirmationModal = true;\n        },\n\n        closeConsentAffirmationModal() {\n            this.showConsentAffirmationModal = false;\n        },\n\n        async closeConsentAffirmationModalAndUpdateExtension() {\n            this.closeConsentAffirmationModal();\n            await this.updateExtension(true);\n        },\n    },\n};\n","export default \"\\n{% block sw_extension_card_base %}\\n<sw-meteor-card\\n    class=\\\"sw-extension-card-base\\\"\\n    :class=\\\"extensionCardClasses\\\"\\n>\\n    \\n    {% block sw_extension_card_base_loader %}\\n    <sw-loader v-if=\\\"isLoading\\\" />\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_card_base_activation_switch %}\\n    <div class=\\\"sw-extension-card-base__switch\\\">\\n        \\n        {% block sw_extension_card_base_activation_switch_switch %}\\n        <sw-switch-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"isActive\\\"\\n            {% else %}\\n            v-model=\\\"isActive\\\"\\n            {% endif %}\\n            v-tooltip=\\\"{\\n                showDelay: 300,\\n                message: $tc('sw-extension-store.component.sw-extension-card-base.allowDisableTooltip'),\\n                disabled: allowDisable\\n            }\\\"\\n            :disabled=\\\"!isInstalled || (isActive && !allowDisable)\\\"\\n        />\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_card_base_icon %}\\n    <sw-extension-icon :src=\\\"image\\\" />\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_card_base_info %}\\n    <div class=\\\"sw-extension-card-base__info\\\">\\n        \\n        {% block sw_extension_card_base_info_content %}\\n        \\n        {% block sw_extension_card_base_info_head %}\\n        <section>\\n            \\n            {% block sw_extension_card_base_info_name %}\\n            <span class=\\\"sw-extension-card-base__info-name\\\">\\n                {{ extension.label }}\\n            </span>\\n            {% endblock %}\\n\\n            \\n            {% block sw_extension_card_base_info_inactive_label %}\\n            <span\\n                v-if=\\\"isInstalled && !extension.active\\\"\\n                class=\\\"sw-extension-card-base__info-inactive\\\"\\n            >\\n                {{ $tc('sw-extension-store.component.sw-extension-card-base.inactiveLabel') }}\\n            </span>\\n            {% endblock %}\\n        </section>\\n        {% endblock %}\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_card_base_meta_info %}\\n    <div class=\\\"sw-extension-card-base__meta-info\\\">\\n        \\n        {% block sw_extension_card_base_meta_info_version %}\\n        <section>\\n            \\n            {% block sw_extension_card_base_meta_info_version_label %}\\n            <span\\n                v-if=\\\"extension.version\\\"\\n                class=\\\"sw-extension-card-base__meta-info-version\\\"\\n            >\\n                {{ $tc('sw-extension.my-extensions.listing.version') }}: {{ extension.version }}\\n            </span>\\n            {% endblock %}\\n\\n            \\n            {% block sw_extension_card_base_meta_info_version_update %}\\n            <span v-if=\\\"isUpdateable\\\">\\n                <a\\n                    href=\\\"#\\\"\\n                    @click.prevent=\\\"updateExtension(false)\\\"\\n                >\\n                    {{ $tc('sw-extension.my-extensions.listing.update') }}\\n                </a>\\n            </span>\\n            {% endblock %}\\n        </section>\\n        {% endblock %}\\n        {% endblock %}\\n\\n        \\n        {% block sw_extension_card_base_meta_info_content %}\\n        \\n        {% block sw_extension_card_base_meta_date %}\\n        <span v-if=\\\"isInstalled\\\">\\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.installedLabel') }}\\n            {{ dateFilter(extension.installedAt.date, { month: 'numeric', year: 'numeric', hour: undefined, minute: undefined }) }}\\n        </span>\\n\\n        <span v-else-if=\\\"extension.storeLicense\\\">\\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.purchasedLabel') }}\\n            {{ dateFilter(extension.storeLicense.creationDate, { month: 'numeric', year: 'numeric', hour: undefined, minute: undefined }) }}\\n        </span>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_card_base_main_action %}\\n    <div class=\\\"sw-extension-card-base__main-action\\\">\\n        \\n        {% block sw_extension_card_base_main_action_content %}\\n        <span\\n            v-if=\\\"!isInstalled\\\"\\n            class=\\\"sw-extension-card-base__open-extension\\\"\\n            role=\\\"button\\\"\\n            tabindex=\\\"0\\\"\\n            @click=\\\"openPermissionsModalForInstall\\\"\\n            @keydown.enter=\\\"openPermissionsModalForInstall\\\"\\n        >\\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.installExtensionLabel') }}\\n        </span>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_card_base_context_menu %}\\n    <sw-context-button\\n        class=\\\"sw-extension-card-base__context-menu\\\"\\n        :menu-width=\\\"180\\\"\\n    >\\n        \\n        {% block sw_extension_card_base_context_menu_actions %}\\n        \\n        {% block sw_extension_card_base_context_menu_settings %}\\n        <sw-context-menu-item\\n            v-if=\\\"isInstalled && extension.configurable\\\"\\n            :router-link=\\\"{ name: 'sw.extension.config', params: { namespace: extension.name } }\\\"\\n        >\\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.config') }}\\n        </sw-context-menu-item>\\n        {% endblock %}\\n\\n        \\n        {% block sw_extension_card_base_context_menu_theme_settings %}\\n        <sw-context-menu-item\\n            v-if=\\\"openLinkExists && extension.active\\\"\\n            :disabled=\\\"!openLinkExists\\\"\\n            :router-link=\\\"link\\\"\\n        >\\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.openExtension') }}\\n        </sw-context-menu-item>\\n        {% endblock %}\\n\\n        \\n        {% block sw_extension_card_base_context_menu_privacy_safety %}\\n        <sw-context-menu-item\\n            v-if=\\\"privacyPolicyLink\\\"\\n            @click=\\\"openPrivacyAndSafety\\\"\\n        >\\n            <span class=\\\"sw-extension-card-base__context-menu-privacy-link\\\">\\n                {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.privacyAndSafetyLabel') }}\\n                <sw-icon\\n                    name=\\\"regular-external-link-s\\\"\\n                    size=\\\"10px\\\"\\n                />\\n            </span>\\n        </sw-context-menu-item>\\n        {% endblock %}\\n\\n        \\n        {% block sw_extension_card_base_context_menu_privacy_extensions %}\\n        <sw-context-menu-item\\n            v-if=\\\"isInstalled && extension.privacyPolicyExtension\\\"\\n            @click=\\\"openPrivacyModal\\\"\\n        >\\n\\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.policyExtensions') }}\\n        </sw-context-menu-item>\\n        {% endblock %}\\n\\n        \\n        {% block sw_extension_card_base_context_menu_permissions %}\\n        <sw-context-menu-item\\n            v-if=\\\"isInstalled && permissions\\\"\\n            @click=\\\"openPermissionsModal\\\"\\n        >\\n\\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.permissions') }}\\n        </sw-context-menu-item>\\n        {% endblock %}\\n\\n        \\n        {% block sw_extension_card_base_context_menu_lifecycle_actions %}\\n        \\n        {% block sw_extension_card_base_context_menu_remove_extension %}\\n        <sw-context-menu-item\\n            v-if=\\\"isUpdateable\\\"\\n            @click=\\\"updateExtension(false)\\\"\\n        >\\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.updateLabel', 0, { version: extension.latestVersion }) }}\\n        </sw-context-menu-item>\\n\\n        <sw-context-menu-item\\n            v-if=\\\"extension.storeLicense && extension.storeLicense.variant === 'rent' && extension.storeLicense.expirationDate === null\\\"\\n            class=\\\"sw-extension-card-base__cancel-and-remove-link\\\"\\n            variant=\\\"danger\\\"\\n            @click=\\\"openRemovalModal\\\"\\n        >\\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.cancelAndRemoveLabel') }}\\n        </sw-context-menu-item>\\n\\n        <sw-context-menu-item\\n            v-else-if=\\\"isRemovable\\\"\\n            class=\\\"sw-extension-card-base__remove-link\\\"\\n            variant=\\\"danger\\\"\\n            @click=\\\"openRemovalModal\\\"\\n        >\\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.removeLabel') }}\\n        </sw-context-menu-item>\\n\\n        <sw-context-menu-item\\n            v-if=\\\"isUninstallable\\\"\\n            variant=\\\"danger\\\"\\n            @click=\\\"openUninstallModal\\\"\\n        >\\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.uninstallLabel') }}\\n        </sw-context-menu-item>\\n        {% endblock %}\\n        {% endblock %}\\n        {% endblock %}\\n    </sw-context-button>\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_card_base_modals %}\\n    \\n    {% block sw_extension_card_base_uninstall_modal %}\\n    <sw-extension-uninstall-modal\\n        v-if=\\\"showUninstallModal\\\"\\n        :extension-name=\\\"extension.label\\\"\\n        :is-licensed=\\\"extension.storeLicense !== null\\\"\\n        :is-loading=\\\"isLoading\\\"\\n        @modal-close=\\\"closeUninstallModal\\\"\\n        @uninstall-extension=\\\"closeModalAndUninstallExtension\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_card_base_removal_modal %}\\n    <sw-extension-removal-modal\\n        v-if=\\\"showRemovalModal\\\"\\n        :extension-name=\\\"extension.label\\\"\\n        :is-licensed=\\\"extension.storeLicense !== null && extension.storeLicense.variant === 'rent'\\\"\\n        :is-loading=\\\"isLoading\\\"\\n        @modal-close=\\\"closeRemovalModal\\\"\\n        @remove-extension=\\\"closeModalAndRemoveExtension\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_card_base_permissions_modal %}\\n    <sw-extension-permissions-modal\\n        v-if=\\\"showPermissionsModal\\\"\\n        :extension-label=\\\"extension.label\\\"\\n        :permissions=\\\"permissions\\\"\\n        :domains=\\\"extension.domains\\\"\\n        :action-label=\\\"permissionModalActionLabel\\\"\\n        @modal-close=\\\"closePermissionsModal\\\"\\n        @close-with-action=\\\"closePermissionsModalAndInstallExtension\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_card_base_privacy_modal %}\\n    <sw-extension-privacy-policy-extensions-modal\\n        v-if=\\\"showPrivacyModal\\\"\\n        :extension-name=\\\"extension.label\\\"\\n        :privacy-policy-extension=\\\"extension.privacyPolicyExtension\\\"\\n        @modal-close=\\\"closePrivacyModal\\\"\\n    />\\n    {% endblock %}\\n    {% endblock %}\\n\\n    \\n    {% block sw_extension_card_base_consent_affirmation_modal %}\\n    <sw-extension-permissions-modal\\n        v-if=\\\"showConsentAffirmationModal\\\"\\n        :title=\\\"consentAffirmationModalTitle\\\"\\n        :extension-label=\\\"extension.label\\\"\\n        :permissions=\\\"consentAffirmationDeltas.permissions\\\"\\n        :domains=\\\"consentAffirmationDeltas.domains\\\"\\n        :action-label=\\\"consentAffirmationModalActionLabel\\\"\\n        :close-label=\\\"consentAffirmationModalCloseLabel\\\"\\n        :description=\\\"consentAffirmationModalDescription\\\"\\n        @modal-close=\\\"closeConsentAffirmationModal\\\"\\n        @close-with-action=\\\"closeConsentAffirmationModalAndUpdateExtension\\\"\\n    />\\n    {% endblock %}\\n</sw-meteor-card>\\n{% endblock %}\\n\";"],"sourceRoot":""}