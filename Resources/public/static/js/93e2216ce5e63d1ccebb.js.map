{"version":3,"sources":["webpack:///./src/app/asyncComponent/media/sw-media-upload-v2/index.js","webpack:///./src/app/service/file-validation.service.ts","webpack:///./src/app/asyncComponent/media/sw-media-upload-v2/sw-media-upload-v2.html.twig","webpack:///./src/app/asyncComponent/media/sw-media-upload-v2/sw-media-upload-v2.scss"],"names":["extensionByType","_Shopware","Shopware","Mixin","Context","fileReader","Utils","fileSize","format","Criteria","Data","_fileValidationServic","checkByExtension","file","extensionAccept","mimeOverride","fileExtensions","replace","split","types","Object","assign","some","extension","currentFileExtension","name","hasOwnProperty","type","includes","checkByType","mimeAccept","fileType","fileAcceptType","currentFileType","INPUT_TYPE_FILE_UPLOAD","INPUT_TYPE_URL_UPLOAD","template","inject","mixins","getByName","props","source","String","File","required","default","variant","validValues","validator","value","uploadTag","allowMultiSelect","Boolean","addFilesOnMultiselect","label","buttonLabel","defaultFolder","length","targetFolderId","helpText","sourceContext","fileAccept","maxFileSize","Number","disabled","privateFilesystem","useFileData","data","multiSelect","this","inputType","preview","isDragActive","defaultFolderId","isUploadUrlFeatureEnabled","isLoading","computed","defaultFolderRepository","repositoryFactory","create","mediaRepository","keepApiErrors","showPreview","hasOpenMediaButtonListener","feature","isActive","keys","$listeners","isDragActiveClass","mediaFolderId","isUrlUpload","isFileUpload","uploadUrlFeatureEnabled","swFieldLabelClasses","buttonFileUploadLabel","$tc","mediaNameFilter","Filter","watch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getDefaultFolderId","sent","stop","newValue","created","createdComponent","mounted","mountedComponent","beforeDestroy","beforeDestroyComponent","methods","_this2","_callee2","_context2","mediaService","addListener","handleMediaServiceUploadEvent","abrupt","configService","getConfig","then","result","settings","enableUrlFeature","_this3","$refs","dropzone","forEach","event","window","addEventListener","stopEventPropagation","onDrop","onDragEnter","onDragLeave","_this4","removeByTag","removeListener","removeEventListener","newMediaFiles","Array","from","dataTransfer","files","handleFileCheck","onDropMedia","dragData","$emit","mediaItem","screenX","screenY","target","closest","preventDefault","stopPropagation","onClickUpload","fileInput","click","useUrlUpload","useFileUpload","onClickOpenMediaSidebar","onRemoveMediaItem","onUrlUpload","_ref","_this5","_callee3","url","fileExtension","fileInfo","targetEntity","_context3","getNameAndExtensionFromUrl","t0","createNotificationError","title","message","getMediaEntityForUpload","save","api","addUpload","_objectSpread","src","targetId","id","isPrivate","private","onFileInputChange","fileForm","reset","handleUpload","_this6","_callee4","syncEntities","uploadData","_context4","concat","_toConsumableArray","pop","map","fileHandle","_fileReader$getNameAn","getNameAndExtensionFromFile","fileName","push","saveAll","addUploads","_this7","_callee5","_defaultFolder$folder","criteria","items","_context5","addFilter","equals","search","folder","_ref2","action","checkFileSize","size","limit","checkFileType","_this8","supportedTypes","_this9","checkedFiles","filter","content","__esModule","module","i","locals","exports","add"],"mappings":"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","file":"static/js/93e2216ce5e63d1ccebb.js","sourcesContent":["import template from './sw-media-upload-v2.html.twig';\nimport './sw-media-upload-v2.scss';\nimport fileValidationService from '../../../service/file-validation.service';\n\nconst { Mixin, Context } = Shopware;\nconst { fileReader } = Shopware.Utils;\nconst { fileSize } = Shopware.Utils.format;\nconst { Criteria } = Shopware.Data;\nconst { checkByExtension, checkByType } = fileValidationService();\nconst INPUT_TYPE_FILE_UPLOAD = 'file-upload';\nconst INPUT_TYPE_URL_UPLOAD = 'url-upload';\n\n/**\n * @status ready\n * @description The <u>sw-media-upload-v2</u> component is used wherever an upload is needed. It supports drag & drop-,\n * file- and url-upload and comes in various forms.\n * @package content\n * @example-type code-only\n * @component-example\n * <sw-media-upload-v2\n *     upload-tag=\"my-upload-tag\"\n *     variant=\"regular\"\n *     :allow-multi-select=\"false\"\n *     label=\"My image-upload\"\n * ></sw-media-upload-v2>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'mediaService',\n        'configService',\n        'feature',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        source: {\n            type: [Object, String, File],\n            required: false,\n            default: null,\n        },\n\n        variant: {\n            type: String,\n            required: false,\n            validValues: ['compact', 'regular', 'small'],\n            validator(value) {\n                return ['compact', 'regular', 'small'].includes(value);\n            },\n            default: 'regular',\n        },\n\n        uploadTag: {\n            type: String,\n            required: true,\n        },\n\n        allowMultiSelect: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        addFilesOnMultiselect: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        // eslint-disable-next-line vue/require-default-prop\n        label: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        buttonLabel: {\n            type: String,\n            required: false,\n            default: '',\n        },\n\n        defaultFolder: {\n            type: String,\n            required: false,\n            validator(value) {\n                return value.length > 0;\n            },\n            default: null,\n        },\n\n        targetFolderId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        helpText: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        sourceContext: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n\n        fileAccept: {\n            type: String,\n            required: false,\n            default: 'image/*',\n        },\n\n        extensionAccept: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        maxFileSize: {\n            type: Number,\n            required: false,\n            default: null,\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        privateFilesystem: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        useFileData: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        required: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            multiSelect: this.allowMultiSelect,\n            inputType: INPUT_TYPE_FILE_UPLOAD,\n            preview: null,\n            isDragActive: false,\n            defaultFolderId: null,\n            isUploadUrlFeatureEnabled: false,\n            isLoading: false,\n        };\n    },\n\n    computed: {\n        defaultFolderRepository() {\n            return this.repositoryFactory.create('media_default_folder');\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media', '', {\n                keepApiErrors: true,\n            });\n        },\n\n        showPreview() {\n            return !this.multiSelect;\n        },\n\n        hasOpenMediaButtonListener() {\n            if (this.feature.isActive('VUE3')) {\n                return Object.keys(this.$listeners).includes('mediaUploadSidebarOpen');\n            }\n\n            return Object.keys(this.$listeners).includes('media-upload-sidebar-open');\n        },\n\n        isDragActiveClass() {\n            return {\n                'is--active': this.isDragActive,\n                'is--multi': this.variant === 'regular' && !!this.multiSelect,\n                'is--small': this.variant === 'small',\n            };\n        },\n\n        mediaFolderId() {\n            return this.defaultFolderId || this.targetFolderId;\n        },\n\n        isUrlUpload() {\n            return this.inputType === INPUT_TYPE_URL_UPLOAD;\n        },\n\n        isFileUpload() {\n            return this.inputType === INPUT_TYPE_FILE_UPLOAD;\n        },\n\n        uploadUrlFeatureEnabled() {\n            return this.isUploadUrlFeatureEnabled;\n        },\n\n        swFieldLabelClasses() {\n            return {\n                'is--required': this.required,\n            };\n        },\n\n        buttonFileUploadLabel() {\n            if (this.buttonLabel === '') {\n                return this.$tc('global.sw-media-upload-v2.buttonFileUpload');\n            }\n\n            return this.buttonLabel;\n        },\n\n        mediaNameFilter() {\n            return Shopware.Filter.getByName('mediaName');\n        },\n    },\n\n    watch: {\n        async defaultFolder() {\n            this.defaultFolderId = await this.getDefaultFolderId();\n        },\n\n        disabled(newValue) {\n            if (newValue) {\n                this.isDragActive = false;\n            }\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    beforeDestroy() {\n        this.beforeDestroyComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            this.mediaService.addListener(this.uploadTag, this.handleMediaServiceUploadEvent);\n            if (this.mediaFolderId) {\n                return;\n            }\n\n            if (this.defaultFolder) {\n                this.isLoading = true;\n                this.defaultFolderId = await this.getDefaultFolderId();\n                this.isLoading = false;\n            }\n\n            this.configService.getConfig().then((result) => {\n                this.isUploadUrlFeatureEnabled = result.settings.enableUrlFeature;\n            });\n        },\n\n        mountedComponent() {\n            if (this.$refs.dropzone) {\n                ['dragover', 'drop'].forEach((event) => {\n                    window.addEventListener(event, this.stopEventPropagation, false);\n                });\n                this.$refs.dropzone.addEventListener('drop', this.onDrop);\n\n                window.addEventListener('dragenter', this.onDragEnter);\n                window.addEventListener('dragleave', this.onDragLeave);\n            }\n        },\n\n        beforeDestroyComponent() {\n            this.mediaService.removeByTag(this.uploadTag);\n            this.mediaService.removeListener(this.uploadTag, this.handleMediaServiceUploadEvent);\n\n            ['dragover', 'drop'].forEach((event) => {\n                window.addEventListener(event, this.stopEventPropagation, false);\n            });\n\n            window.removeEventListener('dragenter', this.onDragEnter);\n            window.removeEventListener('dragleave', this.onDragLeave);\n        },\n\n        /*\n         * Drop Handler\n         */\n        onDrop(event) {\n            if (this.disabled) {\n                return;\n            }\n\n            const newMediaFiles = Array.from(event.dataTransfer.files);\n            this.isDragActive = false;\n\n            if (newMediaFiles.length === 0) {\n                return;\n            }\n\n            this.handleFileCheck(newMediaFiles);\n        },\n\n        onDropMedia(dragData) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.$emit('media-drop', dragData.mediaItem);\n        },\n\n        onDragEnter() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.isDragActive = true;\n        },\n\n        onDragLeave(event) {\n            if (event.screenX === 0 && event.screenY === 0) {\n                this.isDragActive = false;\n                return;\n            }\n\n            const target = event.target;\n\n            if (target.closest('.sw-media-upload-v2__dropzone')) {\n                return;\n            }\n\n            this.isDragActive = false;\n        },\n\n        stopEventPropagation(event) {\n            event.preventDefault();\n            event.stopPropagation();\n        },\n\n        /*\n         * Click handler\n         */\n        onClickUpload() {\n            this.$refs.fileInput.click();\n        },\n\n        useUrlUpload() {\n            this.inputType = INPUT_TYPE_URL_UPLOAD;\n        },\n\n        useFileUpload() {\n            this.inputType = INPUT_TYPE_FILE_UPLOAD;\n        },\n\n        onClickOpenMediaSidebar() {\n            this.$emit('media-upload-sidebar-open');\n        },\n\n        onRemoveMediaItem() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.preview = null;\n            this.$emit('media-upload-remove-image');\n        },\n\n        /*\n         * entry points\n         */\n        async onUrlUpload({ url, fileExtension }) {\n            if (!this.multiSelect) {\n                this.mediaService.removeByTag(this.uploadTag);\n                this.preview = url;\n            }\n\n            let fileInfo;\n\n            try {\n                fileInfo = fileReader.getNameAndExtensionFromUrl(url);\n            } catch (error) {\n                this.createNotificationError({\n                    title: this.$tc('global.default.error'),\n                    message: this.$tc('global.sw-media-upload-v2.notification.invalidUrl.message'),\n                });\n\n                return;\n            }\n\n            if (fileExtension) {\n                fileInfo.extension = fileExtension;\n            }\n\n            const targetEntity = this.getMediaEntityForUpload();\n\n            await this.mediaRepository.save(targetEntity, Context.api);\n            this.mediaService.addUpload(this.uploadTag, {\n                src: url,\n                targetId: targetEntity.id,\n                isPrivate: targetEntity.private,\n                ...fileInfo,\n            });\n\n            this.useFileUpload();\n        },\n\n        onFileInputChange() {\n            const newMediaFiles = Array.from(this.$refs.fileInput.files);\n\n            if (!newMediaFiles.length) {\n                return;\n            }\n\n            this.handleFileCheck(newMediaFiles);\n\n            this.$refs.fileForm.reset();\n        },\n\n        /*\n         * Helper functions\n         */\n        async handleUpload(newMediaFiles) {\n            if (!this.multiSelect) {\n                this.mediaService.removeByTag(this.uploadTag);\n                newMediaFiles = [newMediaFiles.pop()];\n                this.preview = newMediaFiles[0];\n            } else {\n                if (!this.preview) {\n                    this.preview = [];\n                }\n\n                if (this.addFilesOnMultiselect) {\n                    this.preview = [...this.preview, ...newMediaFiles];\n                } else {\n                    this.preview = newMediaFiles;\n                }\n            }\n\n            const syncEntities = [];\n\n            const uploadData = newMediaFiles.map((fileHandle) => {\n                const { fileName, extension } = fileReader.getNameAndExtensionFromFile(fileHandle);\n                const targetEntity = this.getMediaEntityForUpload();\n                syncEntities.push(targetEntity);\n\n                return { src: fileHandle, targetId: targetEntity.id, fileName, extension, isPrivate: targetEntity.private };\n            });\n\n            await this.mediaRepository.saveAll(syncEntities, Context.api);\n            await this.mediaService.addUploads(this.uploadTag, uploadData);\n        },\n\n        getMediaEntityForUpload() {\n            const mediaItem = this.mediaRepository.create();\n            mediaItem.mediaFolderId = this.mediaFolderId;\n            mediaItem.private = this.privateFilesystem;\n\n            return mediaItem;\n        },\n\n        async getDefaultFolderId() {\n            const criteria = new Criteria(1, 1)\n                .addFilter(Criteria.equals('entity', this.defaultFolder));\n\n            const items = await this.defaultFolderRepository.search(criteria, Context.api);\n            if (items.length !== 1) {\n                return null;\n            }\n            const defaultFolder = items[0];\n\n            if (defaultFolder.folder?.id) {\n                return defaultFolder.folder.id;\n            }\n\n            return null;\n        },\n\n        handleMediaServiceUploadEvent({ action }) {\n            if (action === 'media-upload-fail') {\n                this.onRemoveMediaItem();\n            }\n        },\n\n        checkFileSize(file) {\n            if (this.maxFileSize === null || file.size <= this.maxFileSize || file.fileSize <= this.maxFileSize) {\n                return true;\n            }\n\n            this.createNotificationError({\n                title: this.$tc('global.default.error'),\n                message: this.$tc('global.sw-media-upload-v2.notification.invalidFileSize.message', 0, {\n                    name: file.name || file.fileName,\n                    limit: fileSize(this.maxFileSize),\n                }),\n            });\n            return false;\n        },\n\n        checkFileType(file) {\n            const isValidFile = () => {\n                if (this.extensionAccept) {\n                    return checkByExtension(file, this.extensionAccept);\n                }\n\n                if (this.fileAccept) {\n                    return checkByType(file, this.fileAccept);\n                }\n\n                return false;\n            };\n\n            if (isValidFile()) {\n                return true;\n            }\n\n            this.createNotificationError({\n                title: this.$tc('global.default.error'),\n                message: this.$tc('global.sw-media-upload-v2.notification.invalidFileType.message', 0, {\n                    name: file.name || file.fileName,\n                    supportedTypes: this.extensionAccept || this.fileAccept,\n                }),\n            });\n            return false;\n        },\n\n        handleFileCheck(files) {\n            const checkedFiles = files.filter((file) => {\n                return this.checkFileSize(file) && this.checkFileType(file);\n            });\n\n\n            if (this.useFileData) {\n                this.preview = !this.multiSelect ? checkedFiles[0] : null;\n                this.$emit('media-upload-add-file', checkedFiles);\n            } else {\n                this.handleUpload(checkedFiles);\n            }\n        },\n    },\n};\n","type MimeTypes = {\n    [key: string]: string[],\n};\n\ntype FileValidationService = {\n    extensionByType: MimeTypes,\n    checkByExtension: (\n        file: File,\n        extensionAccept: string,\n        mimeOverride: MimeTypes\n    ) => boolean,\n    checkByType: (\n        file: File,\n        mimeAccept: string,\n    ) => boolean,\n};\n\n/**\n * @private\n * @method fileHelperService\n * @returns FileHelperServiceType\n */\nexport default function fileValidationService(): FileValidationService {\n    const extensionByType: MimeTypes = {\n        'image/jpeg': ['jpg', 'jpeg'],\n        'image/png': ['png'],\n        'image/webp': ['webp'],\n        'image/gif': ['gif'],\n        'image/svg+xml': ['svg'],\n        'image/bmp': ['bmp'],\n        'image/tiff': ['tif', 'tiff'],\n        'application/postscript': ['eps'],\n        'video/webm': ['webm'],\n        'video/x-matroska': ['mkv'],\n        'video/x-flv': ['flv'],\n        'video/ogg': ['ogv'],\n        'audio/ogg': ['ogg', 'ogv', 'oga'],\n        'video/quicktime': ['mov'],\n        'video/mp4': ['mp4'],\n        'audio/mp4': ['mp4'],\n        'video/x-msvideo': ['avi'],\n        'video/x-ms-wmv': ['wmv'],\n        'application/pdf': ['pdf'],\n        'audio/aac': ['aac'],\n        'video/mp3': ['mp3'],\n        'audio/mp3': ['mp3'],\n        'audio/wav': ['wav'],\n        'audio/x-flac': ['flac'],\n        'text/plain': ['txt'],\n        'application/msword': ['doc'],\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['docx'],\n        'image/vnd.microsoft.icon': ['ico'],\n        'application/zip': ['zip'],\n        'application/vnd.rar': ['rar'],\n        'application/json': ['json'],\n        'application/xml': ['xml'],\n        'application/x-shockwave-flash': ['swf'],\n        'application/octet-stream': ['bin'],\n        'application/x-rar-compressed': ['rar'],\n        'application/x-tar': ['tar'],\n        'application/x-gzip': ['gzip'],\n        'application/x-bzip2': ['bz2'],\n        'application/x-7z-compressed': ['7z'],\n        'application/x-zip-compressed': ['zip'],\n        'application/vnd.android.package-archive': ['apk'],\n        'application/vnd.apple.keynote': ['key'],\n        'application/vnd.apple.pages': ['pages'],\n        'application/vnd.apple.numbers': ['numbers'],\n        'application/vnd.ms-excel': ['xls'],\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['xlsx'],\n        'application/vnd.ms-powerpoint': ['ppt'],\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': ['pptx'],\n        'application/vnd.oasis.opendocument.text': ['odt'],\n        'application/vnd.oasis.opendocument.spreadsheet': ['ods'],\n        'application/vnd.oasis.opendocument.presentation': ['odp'],\n    };\n\n    /**\n     * @example\n     * checkByExtension(file, 'png, pdf, svg', {...});\n     */\n    function checkByExtension(\n        file: File,\n        extensionAccept: string,\n        mimeOverride: MimeTypes,\n    ): boolean {\n        if (extensionAccept === '*') {\n            return true;\n        }\n\n        const fileExtensions: string[] = extensionAccept\n            .replace(/\\s/g, '')\n            .split(',');\n\n        const types = Object.assign(extensionByType, mimeOverride);\n\n        return fileExtensions.some((extension) => {\n            const currentFileExtension = file.name.split('.')[1];\n\n            if (!currentFileExtension) {\n                return false;\n            }\n\n            if (extension !== currentFileExtension) {\n                return false;\n            }\n\n            if (!types.hasOwnProperty(file.type)) {\n                return false;\n            }\n\n            return types[file.type].includes(currentFileExtension);\n        });\n    }\n\n    /**\n     * @example\n     * checkByExtension(file, 'image/png, application/*', {...});\n     */\n    function checkByType(file: File, mimeAccept: string): boolean {\n        if (mimeAccept === '*/*') {\n            return true;\n        }\n\n        const fileTypes = mimeAccept.replace(/\\s/g, '').split(',');\n\n        return fileTypes.some((fileType) => {\n            const fileAcceptType = fileType.split('/');\n            const currentFileType = file.type.split('/');\n\n            if (\n                fileAcceptType[0] !== currentFileType[0] &&\n                fileAcceptType[0] !== '*'\n            ) {\n                return false;\n            }\n\n            if (fileAcceptType[1] === '*') {\n                return true;\n            }\n\n            return fileAcceptType[1] === currentFileType[1];\n        });\n    }\n\n    return {\n        extensionByType,\n        checkByExtension,\n        checkByType,\n    };\n}\n","export default \"\\n{% block sw_media_upload_v2 %}\\n<div class=\\\"sw-media-upload-v2\\\">\\n    \\n    {% block sw_media_upload_v2_compact %}\\n    <div\\n        v-if=\\\"variant == 'compact'\\\"\\n        class=\\\"sw-media-upload-v2__content\\\"\\n    >\\n        <sw-button-group\\n            split-button\\n        >\\n            \\n            {% block sw_media_upload_v2_compact_button_file_upload %}\\n            <sw-button\\n                class=\\\"sw-media-upload-v2__button-compact-upload\\\"\\n                :disabled=\\\"disabled\\\"\\n                variant=\\\"primary\\\"\\n                @click=\\\"onClickUpload\\\"\\n            >\\n                {{ buttonFileUploadLabel }}\\n            </sw-button>\\n            {% endblock %}\\n\\n            \\n            {% block sw_media_upload_v2_compact_button_context_menu %}\\n            <sw-context-button\\n                v-if=\\\"uploadUrlFeatureEnabled\\\"\\n                :disabled=\\\"disabled\\\"\\n                class=\\\"sw-media-upload-v2__button-open-context-menu\\\"\\n            >\\n                <template #button>\\n                    <sw-button\\n                        :disabled=\\\"disabled\\\"\\n                        square\\n                        variant=\\\"primary\\\"\\n                        class=\\\"sw-media-upload-v2__button-context-menu\\\"\\n                    >\\n                        <sw-icon name=\\\"regular-chevron-down-xs\\\" />\\n                    </sw-button>\\n                </template>\\n\\n                \\n                {% block sw_media_upload_v2_compact_button_context_menu_actions %}\\n                <sw-context-menu-item\\n                    class=\\\"sw-media-upload-v2__button-url-upload\\\"\\n                    @click=\\\"useUrlUpload\\\"\\n                >\\n                    {{ $tc('global.sw-media-upload-v2.buttonUrlUpload') }}\\n                </sw-context-menu-item>\\n                {% endblock %}\\n            </sw-context-button>\\n            {% endblock %}\\n        </sw-button-group>\\n\\n        \\n        {% block sw_media_upload_v2_compact_url_form %}\\n        <sw-media-url-form\\n            v-if=\\\"isUrlUpload\\\"\\n            variant=\\\"modal\\\"\\n            @modal-close=\\\"useFileUpload\\\"\\n            @media-url-form-submit=\\\"onUrlUpload\\\"\\n        />\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_upload_v2_regular %}\\n    <div\\n        v-if=\\\"variant == 'regular' || variant == 'small'\\\"\\n        class=\\\"sw-media-upload-v2__content\\\"\\n    >\\n        \\n        {% block sw_media_upload_v2_regular_header %}\\n        <div class=\\\"sw-media-upload-v2__header\\\">\\n            \\n            {% block sw_media_upload_v2_regular_header_label %}\\n            \\n            <label\\n                v-if=\\\"label\\\"\\n                class=\\\"sw-media-upload-v2__label\\\"\\n                :class=\\\"swFieldLabelClasses\\\"\\n            >\\n                {{ label }}\\n            </label>\\n            {% endblock %}\\n\\n            \\n            {% block sw_media_upload_v2_regular_header_helptext %}\\n            <sw-help-text\\n                v-if=\\\"helpText\\\"\\n                class=\\\"sw-media-upload-v2__help-text\\\"\\n                :text=\\\"helpText\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_media_upload_v2_regular_header_switch %}\\n            <sw-context-button\\n                v-if=\\\"!source && uploadUrlFeatureEnabled\\\"\\n                class=\\\"sw-media-upload-v2__switch-mode\\\"\\n                :disabled=\\\"disabled\\\"\\n            >\\n                \\n                {% block sw_media_upload_v2_regular_header_switch_file_upload %}\\n                <sw-context-menu-item\\n                    v-if=\\\"!isFileUpload\\\"\\n                    :disabled=\\\"disabled\\\"\\n                    class=\\\"sw-media-upload-v2__button-file-upload\\\"\\n                    @click=\\\"useFileUpload\\\"\\n                >\\n                    {{ buttonFileUploadLabel }}\\n                </sw-context-menu-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_media_upload_v2_regular_header_switch_url_upload %}\\n                <sw-context-menu-item\\n                    v-if=\\\"!isUrlUpload\\\"\\n                    class=\\\"sw-media-upload-v2__button-url-upload\\\"\\n                    @click=\\\"useUrlUpload\\\"\\n                >\\n                    {{ $t('global.sw-media-upload-v2.buttonUrlUpload') }}\\n                </sw-context-menu-item>\\n                {% endblock %}\\n            </sw-context-button>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_media_upload_v2_regular_drop_zone %}\\n        <div\\n            ref=\\\"dropzone\\\"\\n            v-droppable=\\\"{ dragGroup: 'media', onDrop: onDropMedia, validDropCls: 'is--active' }\\\"\\n            class=\\\"sw-media-upload-v2__dropzone\\\"\\n            :class=\\\"isDragActiveClass\\\"\\n        >\\n\\n            \\n            {% block sw_media_upload_v2_preview %}\\n            <template v-if=\\\"variant === 'regular'\\\">\\n                \\n                {% block sw_media_upload_v2_regular_preview_file %}\\n                <sw-media-preview-v2\\n                    v-if=\\\"showPreview && (source || preview)\\\"\\n                    class=\\\"sw-media-upload-v2__preview\\\"\\n                    :source=\\\"source || preview\\\"\\n                />\\n                {% endblock %}\\n                \\n                {% block sw_media_upload_v2_regular_preview_fallback %}\\n                <div\\n                    v-else\\n                    class=\\\"sw-media-upload-v2__preview is--fallback\\\"\\n                >\\n                    <sw-icon\\n                        class=\\\"sw-media-upload-v2__fallback-icon\\\"\\n                        name=\\\"regular-image\\\"\\n                    />\\n                </div>\\n                {% endblock %}\\n            </template>\\n\\n            <template v-if=\\\"!showPreview && variant === 'regular'\\\">\\n                \\n                {% block sw_media_upload_v2_regular_caption %}\\n                <div class=\\\"sw-media-upload-v2__upload-caption\\\">\\n                    <sw-icon name=\\\"regular-cloud-upload\\\" />\\n                    {{ $tc('global.sw-media-upload-v2.caption') }}\\n                </div>\\n                {% endblock %}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_media_upload_v2_actions %}\\n            <div\\n                class=\\\"sw-media-upload-v2__actions\\\"\\n                :class=\\\"{ 'has--source': source, 'is--small': variant === 'small' }\\\"\\n            >\\n\\n                <div\\n                    v-if=\\\"source\\\"\\n                    class=\\\"sw-media-upload-v2__file-info\\\"\\n                >\\n                    <div class=\\\"sw-media-upload-v2__file-headline\\\">\\n                        {{ mediaNameFilter(source, source.name) }}\\n                    </div>\\n                    <sw-icon\\n                        v-if=\\\"!disabled\\\"\\n                        class=\\\"sw-media-upload-v2__remove-icon\\\"\\n                        name=\\\"regular-times-xs\\\"\\n                        @click=\\\"onRemoveMediaItem\\\"\\n                    />\\n                </div>\\n\\n                <template v-else>\\n                    \\n                    {% block sw_media_upload_v2_regular_actions_url %}\\n                    <sw-media-url-form\\n                        v-if=\\\"isUrlUpload\\\"\\n                        class=\\\"sw-media-upload-v2__url-form\\\"\\n                        variant=\\\"inline\\\"\\n                        @media-url-form-submit=\\\"onUrlUpload\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_media_upload_v2_regular_actions_add %}\\n                    <template v-if=\\\"isFileUpload\\\">\\n                        \\n                        {% block sw_media_upload_v2_regular_media_sidebar_button %}\\n                        <sw-button\\n                            v-if=\\\"hasOpenMediaButtonListener\\\"\\n                            class=\\\"sw-media-upload-v2__button open-media-sidebar\\\"\\n                            :class=\\\"{ 'is--small': variant === 'small'}\\\"\\n                            variant=\\\"primary\\\"\\n                            size=\\\"small\\\"\\n                            :square=\\\"variant === 'small'\\\"\\n                            :disabled=\\\"disabled\\\"\\n                            @click=\\\"onClickOpenMediaSidebar\\\"\\n                        >\\n                            <sw-icon\\n                                v-if=\\\"variant === 'small'\\\"\\n                                name=\\\"regular-plus\\\"\\n                                size=\\\"16px\\\"\\n                            />\\n                            <template v-else>\\n                                {{ $tc('global.sw-media-upload-v2.buttonOpenMedia') }}\\n                            </template>\\n                        </sw-button>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_media_upload_v2_regular_upload_button %}\\n                        <sw-button\\n                            class=\\\"sw-media-upload-v2__button upload\\\"\\n                            :class=\\\"{ 'is--small': variant === 'small'}\\\"\\n                            variant=\\\"ghost\\\"\\n                            size=\\\"small\\\"\\n                            :disabled=\\\"disabled\\\"\\n                            @click=\\\"onClickUpload\\\"\\n                        >\\n                            {{ buttonFileUploadLabel }}\\n                        </sw-button>\\n                        {% endblock %}\\n                    </template>\\n                    {% endblock %}\\n                </template>\\n\\n            </div>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_upload_v2_file_input %}\\n    <form\\n        ref=\\\"fileForm\\\"\\n        class=\\\"sw-media-upload-v2__form\\\"\\n    >\\n        \\n        <input\\n            id=\\\"files\\\"\\n            ref=\\\"fileInput\\\"\\n            class=\\\"sw-media-upload-v2__file-input\\\"\\n            type=\\\"file\\\"\\n            :accept=\\\"extensionAccept ? '*/*' : fileAccept\\\"\\n            :multiple=\\\"multiSelect\\\"\\n            @change=\\\"onFileInputChange\\\"\\n        >\\n    </form>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-media-upload-v2.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4994e5df\", content, true, {});"],"sourceRoot":""}