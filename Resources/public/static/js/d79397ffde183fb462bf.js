(this.webpackJsonpAdministration=this.webpackJsonpAdministration||[]).push([[240],{"3+pJ":function(n,t,i){},mYKl:function(n,t,i){"use strict";i.r(t);var s=i("c1oF"),a=i.n(s),r=(i("nwpb"),Shopware.Data.Criteria);t.default={template:'\n{% block sw_first_run_wizard_data_import %}\n<div class="sw-first-run-wizard-data-import">\n    <sw-container\n        v-if="!isInstallingPlugin"\n        columns="1fr 1fr"\n        gap="24px 0"\n    >\n        <div class="sw-first-run-wizard-data-import__card">\n            <img\n                class="sw-first-run-wizard-data-import__icon-demodata"\n                :src="assetFilter(\'/administration/static/img/first-run-wizard/plugin-demodata-set.svg\')"\n                alt=""\n            >\n            <h5 class="sw-first-run-wizard-data-import__headline">\n                {{ $tc(\'sw-first-run-wizard.dataImport.headlineDemoData\') }}\n            </h5>\n            <p\n                class="sw-first-run-wizard-data-import__message"\n                v-html="$tc(\'sw-first-run-wizard.dataImport.messageDemoData\')"\n            ></p>\n\n            <sw-button-process\n                v-if="notInstalled(\'demodata\')"\n                variant="primary"\n                size="small"\n                :is-loading="isInstallingPlugin"\n                :disabled="isInstallingPlugin"\n                :process-success="pluginInstalledSuccessfully.demodata"\n                class="button-plugin-install"\n                @click="onInstall(\'demodata\')"\n            >\n                {{ $tc(\'sw-first-run-wizard.dataImport.buttonInstallDemoData\') }}\n            </sw-button-process>\n            <div\n                v-else\n                class="plugin-status"\n            >\n                <span class="plugin-installed">\n                    <sw-icon\n                        name="regular-check-circle-s"\n                        size="16"\n                    />\n                    {{ $tc(\'sw-first-run-wizard.general.pluginInstalled\') }}\n                </span>\n            </div>\n        </div>\n\n        <div class="sw-first-run-wizard-data-import__card">\n            <img\n                class="sw-first-run-wizard-data-import__icon-migration"\n                :src="assetFilter(\'/administration/static/img/first-run-wizard/plugin-migration-assistant.svg\')"\n                alt=""\n            >\n            <h5 class="sw-first-run-wizard-import-data__headline">\n                {{ $tc(\'sw-first-run-wizard.dataImport.headlineMigration\') }}\n            </h5>\n            <p\n                class="sw-first-run-wizard-data-import__message"\n                v-html="$tc(\'sw-first-run-wizard.dataImport.messageMigration\')"\n            ></p>\n\n            <sw-button-process\n                v-if="notInstalled(\'migration\')"\n                variant="primary"\n                size="small"\n                :is-loading="isInstallingPlugin"\n                :disabled="isInstallingPlugin"\n                :process-success="pluginInstalledSuccessfully.migration"\n                class="button-plugin-install"\n                @click="onInstall(\'migration\')"\n            >\n                {{ $tc(\'sw-first-run-wizard.dataImport.buttonInstallMigration\') }}\n            </sw-button-process>\n            <div\n                v-else\n                class="plugin-status"\n            >\n                <span class="plugin-installed">\n                    <sw-icon\n                        name="regular-check-circle-s"\n                        size="16"\n                    />\n                    {{ $tc(\'sw-first-run-wizard.general.pluginInstalled\') }}\n                </span>\n            </div>\n        </div>\n    </sw-container>\n\n    <div\n        v-else\n        class="installing-plugin"\n    >\n        <sw-loader size="48px" />\n        <p\n            class="sw-loader-info-text"\n            v-html="$tc(\'sw-first-run-wizard.dataImport.loadingMessage\')"\n        ></p>\n    </div>\n\n    <div\n        v-if="installationError"\n        class="sw-first-run-wizard-plugin-installation__error"\n    >\n        <sw-alert\n            :title="pluginError.title"\n            variant="error"\n            appearance="notification"\n        >\n            {{ pluginError.detail }}\n        </sw-alert>\n    </div>\n</div>\n{% endblock %}\n',inject:["extensionStoreActionService","repositoryFactory"],data:function(){return{plugins:{demodata:{name:"SwagPlatformDemoData",isInstalled:!1},migration:{name:"SwagMigrationAssistant",isInstalled:!1}},demoDataPluginName:"SwagPlatformDemoData",migrationPluginName:"SwagMigrationAssistant",isPluginAlreadyInstalled:!1,isInstallingPlugin:!1,installationError:!1,pluginError:null,pluginInstalledSuccessfully:{demodata:!1,migration:!1}}},computed:{pluginRepository:function(){return this.repositoryFactory.create("plugin")},buttonConfig:function(){return[{key:"skip",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:"sw.first.run.wizard.index.defaults",disabled:this.isInstallingPlugin}]},assetFilter:function(){return Shopware.Filter.getByName("asset")}},watch:{isInstallingPlugin:function(){this.updateButtons()}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.updateButtons(),this.setTitle(),this.getInstalledPlugins()},updateButtons:function(){this.$emit("buttons-update",this.buttonConfig)},setTitle:function(){this.$emit("frw-set-title",this.$tc("sw-first-run-wizard.dataImport.modalTitle"))},notInstalled:function(n){return!this.plugins[n].isInstalled},onInstall:function(n){var t=this,i=this.plugins[n];return this.isInstallingPlugin=!0,this.installationError=!1,this.extensionStoreActionService.downloadExtension(i.name).then((function(){return t.extensionStoreActionService.installExtension(i.name,"plugin")})).then((function(){return t.extensionStoreActionService.activateExtension(i.name,"plugin")})).then((function(){return t.$emit("extension-activated"),t.isInstallingPlugin=!1,t.plugins[n].isInstalled=!0,!1})).catch((function(n){var i,s;return t.isInstallingPlugin=!1,t.installationError=!0,null!==(i=n.response)&&void 0!==i&&null!==(s=i.data)&&void 0!==s&&s.errors&&(t.pluginError=n.response.data.errors.pop()),!0}))},getInstalledPlugins:function(){var n=this,t=Object.values(this.plugins).map((function(n){return n.name})),i=new r(1,5);i.addFilter(r.equalsAny("plugin.name",t)),this.pluginRepository.search(i).then((function(t){t.total<1||t.forEach((function(t){if(t.active&&null!==t.installedAt){var i=n.findPluginKeyByName(t.name);n.plugins[i].isInstalled=!0}}))}))},findPluginKeyByName:function(n){var t=Object.entries(this.plugins).find((function(t){var i=a()(t,2),s=i[0];return i[1].name===n?s:""}));return a()(t,1)[0]}}}},nwpb:function(n,t,i){var s=i("3+pJ");s.__esModule&&(s=s.default),"string"==typeof s&&(s=[[n.i,s,""]]),s.locals&&(n.exports=s.locals);(0,i("P8hj").default)("67931fe3",s,!0,{})}}]);
//# sourceMappingURL=d79397ffde183fb462bf.js.map