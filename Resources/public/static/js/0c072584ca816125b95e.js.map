{"version":3,"sources":["webpack:///./src/module/sw-settings-tax/page/sw-settings-tax-detail/sw-settings-tax-detail.scss","webpack:///./src/module/sw-settings-tax/page/sw-settings-tax-detail/index.js","webpack:///./src/module/sw-settings-tax/page/sw-settings-tax-detail/sw-settings-tax-detail.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","mapPropertyErrors","Component","getComponentHelper","template","inject","mixins","getByName","shortcuts","active","this","allowSave","method","ESCAPE","props","taxId","type","String","required","data","tax","isLoading","isSaveSuccessful","customFieldSets","defaultTaxRateId","changeDefaultTaxRate","formerDefaultTaxName","config","isDefault","metaInfo","title","$createTitle","identifier","computed","_objectSpread","name","taxRepository","repositoryFactory","create","isNewTax","isNew","acl","can","tooltipSave","message","$tc","disabled","showOnDisabledElements","systemKey","$device","getSystemKey","concat","appearance","isShopwareDefaultTax","$te","label","showCustomFields","length","isDefaultTaxRate","watch","createdComponent","created","methods","_this","feature","isActive","$route","params","id","get","then","loadCustomFieldSets","reloadDefaultTaxRate","_this2","customFieldDataProviderService","getCustomFieldSets","sets","onSave","_this3","save","$router","push","updatedTax","systemConfigApiService","saveValues","catch","createNotificationError","onCancel","abortOnLanguageChange","hasChanges","saveOnLanguageChange","onChangeLanguage","languageId","State","commit","changeName","_this4","getValues","response","_response$coreTaxDe","onChangeDefaultTaxRate","newDefaultTax","$set"],"mappings":"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","file":"static/js/0c072584ca816125b95e.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-tax-detail.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"255e8000\", content, true, {});","import template from './sw-settings-tax-detail.html.twig';\nimport './sw-settings-tax-detail.scss';\n\n/**\n * @package checkout\n */\n\nconst { Mixin } = Shopware;\nconst { mapPropertyErrors } = Shopware.Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'customFieldDataProviderService',\n        'systemConfigApiService',\n        'feature',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': {\n            active() {\n                return this.allowSave;\n            },\n            method: 'onSave',\n        },\n        ESCAPE: 'onCancel',\n    },\n\n    props: {\n        taxId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            tax: {},\n            isLoading: false,\n            isSaveSuccessful: false,\n            customFieldSets: null,\n            defaultTaxRateId: null,\n            changeDefaultTaxRate: false,\n            formerDefaultTaxName: '',\n            config: {},\n            isDefault: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        identifier() {\n            return this.tax.name || '';\n        },\n\n        taxRepository() {\n            return this.repositoryFactory.create('tax');\n        },\n\n        ...mapPropertyErrors('tax', ['name', 'taxRate']),\n\n        isNewTax() {\n            return this.tax.isNew === 'function'\n                ? this.tax.isNew()\n                : false;\n        },\n\n        allowSave() {\n            return this.isNewTax\n                ? this.acl.can('tax.creator')\n                : this.acl.can('tax.editor');\n        },\n\n        tooltipSave() {\n            if (!this.allowSave) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.allowSave,\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        isShopwareDefaultTax() {\n            return this.$te(`global.tax-rates.${this.tax.name}`, 'en-GB');\n        },\n\n        label() {\n            return this.isShopwareDefaultTax ? this.$tc(`global.tax-rates.${this.tax.name}`) : this.tax.name;\n        },\n\n        showCustomFields() {\n            return this.customFieldSets && this.customFieldSets.length > 0;\n        },\n\n        isDefaultTaxRate() {\n            if (!this.defaultTaxRateId) {\n                return false;\n            }\n            return this.taxId === this.defaultTaxRateId;\n        },\n    },\n\n    watch: {\n        taxId() {\n            if (!this.taxId) {\n                this.createdComponent();\n            }\n        },\n        isDefaultTaxRate() {\n            this.isDefault = this.isDefaultTaxRate;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n            if (this.taxId) {\n                if (!this.feature.isActive('VUE3')) {\n                    this.taxId = this.$route.params.id;\n                }\n\n                this.taxRepository.get(this.taxId).then((tax) => {\n                    this.tax = tax;\n                    this.isLoading = false;\n                });\n                this.loadCustomFieldSets();\n                this.reloadDefaultTaxRate();\n\n                return;\n            }\n\n            this.tax = this.taxRepository.create();\n            this.isLoading = false;\n        },\n\n        loadCustomFieldSets() {\n            this.customFieldDataProviderService.getCustomFieldSets('tax').then((sets) => {\n                this.customFieldSets = sets;\n            });\n        },\n\n        onSave() {\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            return this.taxRepository.save(this.tax).then(() => {\n                this.isSaveSuccessful = true;\n                if (!this.taxId) {\n                    this.$router.push({ name: 'sw.settings.tax.detail', params: { id: this.tax.id } });\n                }\n\n                this.taxRepository.get(this.tax.id).then((updatedTax) => {\n                    this.tax = updatedTax;\n                }).then(() => {\n                    return this.systemConfigApiService.saveValues(this.config).then(() => {\n                        this.defaultTaxRateId = this.tax.id;\n                        this.reloadDefaultTaxRate();\n                        this.isLoading = false;\n                    });\n                });\n            }).catch(() => {\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-tax.detail.messageSaveError'),\n                });\n                this.isLoading = false;\n            });\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'sw.settings.tax.index' });\n        },\n\n        abortOnLanguageChange() {\n            return this.taxRepository.hasChanges(this.tax);\n        },\n\n        saveOnLanguageChange() {\n            return this.onSave();\n        },\n\n        onChangeLanguage(languageId) {\n            Shopware.State.commit('context/setApiLanguageId', languageId);\n            this.createdComponent();\n        },\n\n        changeName(name) {\n            this.tax.name = name;\n        },\n\n        reloadDefaultTaxRate() {\n            this.systemConfigApiService\n                .getValues('core.tax')\n                .then(response => {\n                    this.defaultTaxRateId = response['core.tax.defaultTaxRate'] ?? null;\n                })\n                .then(() => {\n                    if (this.defaultTaxRateId) {\n                        this.taxRepository.get(this.defaultTaxRateId).then((tax) => {\n                            this.formerDefaultTaxName = tax.name;\n                        });\n                    }\n                })\n                .catch(() => {\n                    this.defaultTaxRateId = null;\n                });\n        },\n\n        onChangeDefaultTaxRate() {\n            const newDefaultTax = !this.isDefaultTaxRate ? this.taxId : '';\n\n            this.$set(this.config, 'core.tax.defaultTaxRate', newDefaultTax);\n            this.changeDefaultTaxRate = false;\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_tax_detail %}\\n<sw-page class=\\\"sw-settings-tax-detail\\\">\\n    \\n    {% block sw_settings_tax_detail_header %}\\n    <template #smart-bar-header>\\n        <h2 v-if=\\\"label\\\">\\n            {{ label }}\\n        </h2>\\n        <h2 v-else>\\n            {{ $tc('sw-settings-tax.detail.textHeadline') }}\\n        </h2>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_tax_detail_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_settings_tax_detail_actions_abort %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"{ message: 'ESC', appearance: 'light' }\\\"\\n            :disabled=\\\"isLoading\\\"\\n            @click=\\\"onCancel\\\"\\n        >\\n            {{ $tc('sw-settings-tax.detail.buttonCancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_tax_detail_actions_save %}\\n        <sw-button-process\\n            {% if VUE3 %}\\n            v-model:processSuccess=\\\"isSaveSuccessful\\\"\\n            {% else %}\\n            v-model=\\\"isSaveSuccessful\\\"\\n            {% endif %}\\n            v-tooltip.bottom=\\\"tooltipSave\\\"\\n            class=\\\"sw-settings-tax-detail__save-action\\\"\\n            variant=\\\"primary\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :disabled=\\\"isLoading || !allowSave\\\"\\n            @click.prevent=\\\"onSave\\\"\\n        >\\n            {{ $tc('sw-settings-tax.detail.buttonSave') }}\\n        </sw-button-process>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    <template #language-switch>\\n        <sw-language-switch\\n            :save-changes-function=\\\"saveOnLanguageChange\\\"\\n            :abort-change-function=\\\"abortOnLanguageChange\\\"\\n            @on-change=\\\"onChangeLanguage\\\"\\n        />\\n    </template>\\n\\n    \\n    {% block sw_settings_tax_detail_content %}\\n    <template #content>\\n        <sw-card-view>\\n            <template v-if=\\\"isLoading\\\">\\n                <sw-skeleton />\\n                <sw-skeleton />\\n            </template>\\n\\n            <template v-else>\\n                \\n                {% block sw_settings_tax_detail_content_card %}\\n                <sw-card\\n                    :title=\\\"$tc('sw-settings-tax.detail.titleCard')\\\"\\n                    position-identifier=\\\"sw-settings-tax-detail-content\\\"\\n                >\\n                    <sw-container\\n                        columns=\\\"repeat(auto-fit, minmax(250px, 1fr))\\\"\\n                        gap=\\\"0px 30px\\\"\\n                    >\\n\\n                        \\n                        {% block sw_settings_tax_detail_content_field_name %}\\n                        <sw-text-field\\n                            id=\\\"sw-field--tax-name\\\"\\n                            :value=\\\"label\\\"\\n                            required\\n                            name=\\\"sw-field--tax-name\\\"\\n                            :disabled=\\\"!acl.can('tax.editor') || isShopwareDefaultTax\\\"\\n                            :label=\\\"$tc('sw-settings-tax.detail.labelName')\\\"\\n                            :placeholder=\\\"$tc('sw-settings-tax.detail.placeholderName')\\\"\\n                            :error=\\\"taxNameError\\\"\\n                            {% if VUE3 %}\\n                            @update:value=\\\"changeName\\\"\\n                            {% else %}\\n                            @change=\\\"changeName\\\"\\n                            {% endif %}\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_tax_detail_content_field_tax_rate %}\\n                        <sw-number-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"tax.taxRate\\\"\\n                            {% else %}\\n                            v-model=\\\"tax.taxRate\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--tax-taxRate\\\"\\n                            required\\n                            :digits=\\\"3\\\"\\n                            :disabled=\\\"!acl.can('tax.editor')\\\"\\n                            :label=\\\"$tc('sw-settings-tax.detail.labelDefaultTaxRate')\\\"\\n                            :placeholder=\\\"$tc('sw-settings-tax.detail.placeholderDefaultTaxRate')\\\"\\n                            :error=\\\"taxTaxRateError\\\"\\n                        >\\n                            <template #suffix>\\n                                <span>\\n                                    <span v-html=\\\"$sanitize($tc('sw-settings-tax.general.taxRateSymbol'))\\\"></span>\\n                                </span>\\n                            </template>\\n                        </sw-number-field>\\n                        {% endblock %}\\n\\n                        <div class=\\\"sw-settings-tax-detail__switches\\\">\\n                            \\n                            {% block sw_settings_tax_detail_content_field_default_tax_rate %}\\n                            <sw-switch-field\\n                                :key=\\\"isDefault\\\"\\n                                class=\\\"sw-settings-tax-detail__default-tax-rate\\\"\\n                                :label=\\\"$tc('sw-settings-tax.detail.defaultTaxLabel')\\\"\\n                                :help-text=\\\"$tc('sw-settings-tax.detail.defaultTaxHelpText')\\\"\\n                                :value=\\\"isDefault\\\"\\n                                name=\\\"sw-field--isDefault\\\"\\n                                {% if VUE3 %}\\n                                @update:value=\\\"onChangeDefaultTaxRate\\\"\\n                                {% else %}\\n                                @change=\\\"onChangeDefaultTaxRate\\\"\\n                                {% endif %}\\n                            />\\n                        {% endblock %}\\n                        </div>\\n                    </sw-container>\\n                </sw-card>\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_tax_detail_rule_card %}\\n                <sw-tax-rule-card\\n                    v-if=\\\"tax.id\\\"\\n                    :disabled=\\\"!taxId\\\"\\n                    class=\\\"sw-settings-tax-detail__tax-rule-grid\\\"\\n                    :tax=\\\"tax\\\"\\n                    :is-loading=\\\"isLoading\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_tax_detail_custom_field_sets %}\\n                <sw-card\\n                    v-if=\\\"showCustomFields\\\"\\n                    position-identifier=\\\"sw-settings-tax-detail-custom-field-sets\\\"\\n                    :title=\\\"$tc('sw-settings-custom-field.general.mainMenuItemGeneral')\\\"\\n                    :is-loading=\\\"isLoading\\\"\\n                >\\n                    <sw-custom-field-set-renderer\\n                        :entity=\\\"tax\\\"\\n                        :disabled=\\\"!acl.can('tax.editor')\\\"\\n                        :sets=\\\"customFieldSets\\\"\\n                    />\\n                </sw-card>\\n                {% endblock %}\\n            </template>\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}