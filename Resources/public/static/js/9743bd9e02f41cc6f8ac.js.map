{"version":3,"sources":["webpack:///./src/module/sw-cms/component/sw-cms-layout-modal/index.js","webpack:///./src/module/sw-cms/component/sw-cms-layout-modal/sw-cms-layout-modal.html.twig","webpack:///./src/module/sw-cms/component/sw-cms-layout-modal/sw-cms-layout-modal.scss"],"names":["Mixin","Shopware","Criteria","Data","template","inject","mixins","getByName","props","headline","type","String","required","default","cmsPageTypes","Array","preSelection","Object","data","listMode","disableRouteParams","sortBy","sortDirection","limit","selectedPageObject","isLoading","term","total","pages","defaultCategoryId","defaultProductId","computed","pageRepository","this","repositoryFactory","create","cmsPageCriteria","criteria","page","addAssociation","addSorting","sort","length","addFilter","equalsAny","setTerm","columnConfig","property","label","$tc","inlineEdit","primary","gridPreSelection","_this$selectedPageObj","id","_defineProperty","dateFilter","Filter","watch","handler","newSelection","immediate","created","createdComponent","methods","acl","can","getDefaultLayouts","getList","_this","search","then","searchResult","catch","selectLayout","_this$selectedPageObj2","$emit","closeModal","selectInGrid","column","columnEntries","values","selectItem","onSearch","value","toggleListMode","gridItemClasses","pageId","index","_this$selectedPageObj3","concat","getPageType","_this$cmsPageTypeServ","isDefault","includes","defaultText","typeLabel","cmsPageTypeService","getType","title","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","systemConfigApiService","getValues","sent","stop","content","__esModule","module","i","locals","exports","add"],"mappings":"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","file":"static/js/9743bd9e02f41cc6f8ac.js","sourcesContent":["import template from './sw-cms-layout-modal.html.twig';\nimport './sw-cms-layout-modal.scss';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @private\n * @package buyers-experience\n */\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'systemConfigApiService',\n        'acl',\n        'cmsPageTypeService',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        headline: {\n            type: String,\n            required: false,\n            default: '',\n        },\n\n        cmsPageTypes: {\n            type: Array,\n            required: false,\n            default() {\n                return [];\n            },\n        },\n\n        preSelection: {\n            type: Object,\n            required: false,\n            default: () => {},\n        },\n    },\n\n    data() {\n        return {\n            listMode: 'grid',\n            disableRouteParams: true,\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            limit: 10,\n            selectedPageObject: null,\n            isLoading: false,\n            term: null,\n            total: null,\n            pages: [],\n            defaultCategoryId: '',\n            defaultProductId: '',\n        };\n    },\n\n    computed: {\n        pageRepository() {\n            return this.repositoryFactory.create('cms_page');\n        },\n\n        cmsPageCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            criteria\n                .addAssociation('previewMedia')\n                .addSorting(Criteria.sort(this.sortBy, this.sortDirection));\n\n            if (this.cmsPageTypes.length) {\n                criteria.addFilter(Criteria.equalsAny('type', this.cmsPageTypes));\n            }\n\n            if (this.term !== null) {\n                criteria.setTerm(this.term);\n            }\n\n            return criteria;\n        },\n\n        columnConfig() {\n            return [{\n                property: 'name',\n                label: this.$tc('sw-cms.list.gridHeaderName'),\n                inlineEdit: 'string',\n                primary: true,\n            }, {\n                property: 'type',\n                label: this.$tc('sw-cms.list.gridHeaderType'),\n            }, {\n                property: 'createdAt',\n                label: this.$tc('sw-cms.list.gridHeaderCreated'),\n            }, {\n                property: 'updatedAt',\n                label: this.$tc('sw-cms.list.gridHeaderUpdated'),\n            }];\n        },\n\n        gridPreSelection() {\n            if (!this.selectedPageObject?.id) {\n                return {};\n            }\n\n            return { [this.selectedPageObject.id]: this.selectedPageObject };\n        },\n\n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        },\n    },\n\n    watch: {\n        preSelection: {\n            handler: function handler(newSelection) {\n                this.selectedPageObject = newSelection;\n            },\n            immediate: true,\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.acl.can('system_config.read')) {\n                this.getDefaultLayouts();\n            }\n        },\n\n        getList() {\n            this.isLoading = true;\n\n            return this.pageRepository.search(this.cmsPageCriteria).then((searchResult) => {\n                this.total = searchResult.total;\n                this.pages = searchResult;\n                this.isLoading = false;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        selectLayout() {\n            this.$emit('modal-layout-select', this.selectedPageObject?.id, this.selectedPageObject);\n            this.closeModal();\n        },\n\n        selectInGrid(column) {\n            const columnEntries = Object.values(column);\n            if (columnEntries.length === 0) {\n                this.selectedPageObject = null;\n                return;\n            }\n\n            this.selectedPageObject = columnEntries[0];\n        },\n\n        selectItem(page) {\n            this.selectedPageObject = page;\n        },\n\n        onSearch(value) {\n            if (!value.length || value.length <= 0) {\n                this.term = null;\n            }\n\n            this.page = 1;\n            this.getList();\n        },\n\n        toggleListMode() {\n            this.listMode = this.listMode === 'grid' ? 'list' : 'grid';\n        },\n\n        gridItemClasses(pageId, index) {\n            return [\n                {\n                    'is--selected': pageId === this.selectedPageObject?.id,\n                },\n                'sw-cms-layout-modal__content-item',\n                `sw-cms-layout-modal__content-item--${index}`,\n            ];\n        },\n\n        closeModal() {\n            this.selectedPageObject = null;\n            this.term = null;\n            this.$emit('modal-close');\n        },\n\n        getPageType(page) {\n            const isDefault = [this.defaultProductId, this.defaultCategoryId].includes(page.id);\n            const defaultText = this.$tc('sw-cms.components.cmsListItem.defaultLayout');\n            const typeLabel = this.$tc(this.cmsPageTypeService.getType(page.type)?.title);\n            return isDefault ? `${defaultText} - ${typeLabel}` : typeLabel;\n        },\n\n        async getDefaultLayouts() {\n            const response = await this.systemConfigApiService.getValues('core.cms');\n\n            this.defaultCategoryId = response['core.cms.default_category_cms_page'];\n            this.defaultProductId = response['core.cms.default_product_cms_page'];\n        },\n    },\n};\n","export default \"\\n{% block sw_cms_layout_modal %}\\n<sw-modal\\n    class=\\\"sw-cms-layout-modal\\\"\\n    variant=\\\"large\\\"\\n    :title=\\\"$tc('sw-cms.components.cmsLayoutModal.modalTitle')\\\"\\n    @modal-close=\\\"closeModal\\\"\\n>\\n\\n    \\n    {% block sw_cms_layout_modal_header %}\\n    <div class=\\\"sw-cms-layout-modal__header\\\">\\n\\n        \\n        {% block sw_cms_layout_modal_header_search %}\\n        <sw-simple-search-field\\n            v-model=\\\"term\\\"\\n            class=\\\"sw-cms-layout-modal__header-search\\\"\\n            :placeholder=\\\"$tc('sw-cms.general.placeholderSearchBar')\\\"\\n            @search-term-change=\\\"onSearch\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_cms_layout_modal_header_sorting_container %}\\n        <div class=\\\"sw-cms-layout-modal__actions-sorting\\\">\\n\\n            \\n            {% block sw_cms_layout_modal_header_sorting_select %}\\n            <sw-sorting-select\\n                class=\\\"sw-cms-layout-modal__header-sorting-select\\\"\\n                :sort-by=\\\"sortBy\\\"\\n                :sort-direction=\\\"sortDirection\\\"\\n                @sorting-changed=\\\"onSort\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_cms_layout_modal_header_view_toggle %}\\n            <div\\n                class=\\\"sw-cms-layout-modal__actions-mode\\\"\\n                role=\\\"button\\\"\\n                tabindex=\\\"0\\\"\\n                @click=\\\"toggleListMode\\\"\\n                @keydown.enter=\\\"toggleListMode\\\"\\n            >\\n\\n                \\n                {% block sw_cms_layout_modal_header_view_toogle_grid %}\\n                <sw-icon\\n                    v-if=\\\"listMode === 'grid'\\\"\\n                    name=\\\"regular-view-normal\\\"\\n                    size=\\\"16\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_cms_layout_modal_header_view_toogle_list %}\\n                <sw-icon\\n                    v-if=\\\"listMode === 'list'\\\"\\n                    name=\\\"regular-view-grid\\\"\\n                    size=\\\"16\\\"\\n                />\\n                {% endblock %}\\n\\n            </div>\\n            {% endblock %}\\n\\n        </div>\\n        {% endblock %}\\n\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_layout_modal_content %}\\n    <div class=\\\"sw-cms-layout-modal__content\\\">\\n\\n        \\n        {% block sw_cms_layout_modal_loader %}\\n        <sw-loader v-if=\\\"isLoading\\\" />\\n        {% endblock %}\\n\\n        \\n        {% block sw_cms_layout_modal_content_container %}\\n        <div v-else-if=\\\"listMode === 'grid'\\\">\\n            <sw-container\\n                columns=\\\"repeat(auto-fill, minmax(250px, 1fr))\\\"\\n                gap=\\\"24px\\\"\\n            >\\n\\n                \\n                {% block sw_cms_layout_modal_content_listing %}\\n                <div\\n                    v-for=\\\"(cmsPage, index) in pages\\\"\\n                    :key=\\\"index\\\"\\n                    :class=\\\"gridItemClasses(cmsPage.id, index)\\\"\\n                >\\n                    \\n                    {% block sw_cms_layout_modal_content_listing_item %}\\n\\n                    \\n                    {% block sw_cms_layout_modal_content_listing_item_checkbox %}\\n                    <sw-checkbox-field\\n                        :value=\\\"cmsPage.id === selectedPageObject?.id\\\"\\n                        class=\\\"sw-cms-layout-modal__content-checkbox\\\"\\n                        {% if VUE3 %}\\n                        @update:value=\\\"selectItem(cmsPage)\\\"\\n                        {% else %}\\n                        @change=\\\"selectItem(cmsPage)\\\"\\n                        {% endif %}\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_layout_modal_content_listing_item_inner %}\\n                    <sw-cms-list-item\\n                        {% if VUE2 %}\\n                        :key=\\\"cmsPage.id\\\"\\n                        {% endif %}\\n                        :page=\\\"cmsPage\\\"\\n                        :is-default=\\\"[defaultProductId, defaultCategoryId].includes(cmsPage.id)\\\"\\n                        @item-click=\\\"selectItem(cmsPage)\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    {% endblock %}\\n                </div>\\n            </sw-container>\\n\\n            \\n            {% block sw_cms_layout_modal_content_pagination %}\\n            <sw-pagination\\n                class=\\\"sw-cms-layout-modal__content-pagination\\\"\\n                :page=\\\"page\\\"\\n                :limit=\\\"limit\\\"\\n                :total=\\\"total\\\"\\n                :auto-hide=\\\"false\\\"\\n                @page-change=\\\"onPageChange\\\"\\n            />\\n            {% endblock %}\\n\\n        </div>\\n        {% endblock %}\\n\\n        <sw-data-grid\\n            v-else-if=\\\"listMode === 'list'\\\"\\n            class=\\\"sw-cms-list__list-data-grid\\\"\\n            identifier=\\\"sw-cms-list\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :limit=\\\"limit\\\"\\n            :data-source=\\\"pages\\\"\\n            :columns=\\\"columnConfig\\\"\\n            :skeleton-item-amount=\\\"limit\\\"\\n            :sort-by=\\\"sortBy\\\"\\n            :sort-direction=\\\"sortDirection\\\"\\n            :allow-inline-edit=\\\"false\\\"\\n            :allow-column-edit=\\\"false\\\"\\n            :show-settings=\\\"false\\\"\\n            :show-actions=\\\"false\\\"\\n            :show-selection=\\\"true\\\"\\n            :maximum-select-items=\\\"1\\\"\\n            :pre-selection=\\\"gridPreSelection\\\"\\n            @selection-change=\\\"selectInGrid\\\"\\n            @column-sort=\\\"onSortColumn\\\"\\n        >\\n\\n            \\n            {% block sw_cms_list_listing_list_data_grid_column_name %}\\n            <template #column-name=\\\"{ item }\\\">\\n                <div\\n                    role=\\\"button\\\"\\n                    tabindex=\\\"0\\\"\\n                    @click=\\\"selectItem(item)\\\"\\n                    @keydown.enter=\\\"selectItem(item)\\\"\\n                >\\n                    {{ item.translated.name }}\\n                </div>\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_cms_list_listing_list_data_grid_column_type %}\\n            <template #column-type=\\\"{ item }\\\">\\n                {{ getPageType(item) }}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_cms_list_listing_list_data_grid_column_created %}\\n            <template #column-createdAt=\\\"{ item }\\\">\\n                {{ dateFilter(item.createdAt, { hour: '2-digit', minute: '2-digit' }) }}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_cms_list_listing_list_data_grid_column_updated %}\\n            <template #column-updatedAt=\\\"{ item }\\\">\\n                {{ dateFilter(item.updatedAt, { hour: '2-digit', minute: '2-digit' }) }}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_cms_list_listing_list_data_grid_pagination %}\\n            <template #pagination>\\n                <sw-pagination\\n                    :page=\\\"page\\\"\\n                    :limit=\\\"limit\\\"\\n                    :total=\\\"total\\\"\\n                    :auto-hide=\\\"false\\\"\\n                    @page-change=\\\"onPageChange\\\"\\n                />\\n            </template>\\n            {% endblock %}\\n        </sw-data-grid>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_layout_modal_footer %}\\n    <template #modal-footer>\\n        <sw-button @click=\\\"closeModal\\\">\\n            {{ $tc('sw-cms.components.cmsLayoutModal.actionCancel') }}\\n        </sw-button>\\n        <sw-button\\n            variant=\\\"primary\\\"\\n            @click=\\\"selectLayout\\\"\\n        >\\n            {{ $tc('sw-cms.components.cmsLayoutModal.actionConfirm') }}\\n        </sw-button>\\n    </template>\\n    {% endblock %}\\n\\n</sw-modal>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-cms-layout-modal.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f68c94a6\", content, true, {});"],"sourceRoot":""}