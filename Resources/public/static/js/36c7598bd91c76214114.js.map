{"version":3,"sources":["webpack:///./src/app/asyncComponent/media/sw-media-url-form/index.js","webpack:///./src/app/asyncComponent/media/sw-media-url-form/sw-media-url-form.html.twig"],"names":["template","props","variant","type","String","required","validValues","validator","value","includes","default","data","url","extensionFromUrl","extensionFromInput","computed","urlObject","URL","this","e","hasInvalidInput","invalidUrlError","code","missingFileExtension","fileExtension","isValid","watch","fileName","pathname","split","pop","length","methods","emitUrl","originalDomEvent","$emit","closeModal"],"mappings":"4HAYe,WACXA,SCbW,olGDeXC,MAAO,CACHC,QAAS,CACLC,KAAMC,OACNC,UAAU,EACVC,YAAa,CAAC,QAAS,UACvBC,UAAS,SAACC,GACN,MAAO,CAAC,QAAS,UAAUC,SAASD,IAExCE,QAAS,WAIjBC,KAAI,WACA,MAAO,CACHC,IAAK,GACLC,iBAAkB,GAClBC,mBAAoB,KAI5BC,SAAU,CACNC,UAAS,WACL,IACI,OAAO,IAAIC,IAAIC,KAAKN,KACtB,MAAOO,GAGL,OADAD,KAAKL,iBAAmB,GACjB,OAIfO,gBAAe,WACX,OAA0B,OAAnBF,KAAKF,WAAmC,KAAbE,KAAKN,KAG3CS,gBAAe,WACX,OAAIH,KAAKE,gBACE,CAAEE,KAAM,qBAGZ,MAGXC,qBAAoB,WAChB,OAA0B,OAAnBL,KAAKF,YAAuBE,KAAKL,kBAG5CW,cAAa,WACT,OAAON,KAAKL,kBAAoBK,KAAKJ,oBAGzCW,QAAO,WACH,OAA0B,OAAnBP,KAAKF,WAAsBE,KAAKM,gBAI/CE,MAAO,CACHV,UAAS,WACL,GAAuB,OAAnBE,KAAKF,UAAT,CAKA,IAAMW,EAAWT,KAAKF,UAAUY,SAASC,MAAM,KAAKC,MACjB,IAA/BH,EAASE,MAAM,KAAKE,OAKxBb,KAAKL,iBAAmBc,EAASE,MAAM,KAAKC,MAJxCZ,KAAKL,iBAAmB,QANxBK,KAAKL,iBAAmB,KAcpCmB,QAAS,CACLC,QAAO,SAACC,GACAhB,KAAKO,UACLP,KAAKiB,MAAM,wBAAyB,CAChCD,mBACAtB,IAAKM,KAAKF,UACVQ,cAAeN,KAAKM,gBAGH,UAAjBN,KAAKhB,SACLgB,KAAKkB,eAKjBA,WAAU,WACNlB,KAAKiB,MAAM","file":"static/js/36c7598bd91c76214114.js","sourcesContent":["import template from './sw-media-url-form.html.twig';\n\n/**\n * @status ready\n * @description The <u>sw-media-url-form</u> component is used to validate urls from the user.\n * @package content\n * @example-type static\n * @component-example\n * <sw-media-url-form variant=\"inline\">\n * </sw-media-url-form>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    props: {\n        variant: {\n            type: String,\n            required: true,\n            validValues: ['modal', 'inline'],\n            validator(value) {\n                return ['modal', 'inline'].includes(value);\n            },\n            default: 'inline',\n        },\n    },\n\n    data() {\n        return {\n            url: '',\n            extensionFromUrl: '',\n            extensionFromInput: '',\n        };\n    },\n\n    computed: {\n        urlObject() {\n            try {\n                return new URL(this.url);\n            } catch (e) {\n                // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n                this.extensionFromUrl = '';\n                return null;\n            }\n        },\n\n        hasInvalidInput() {\n            return this.urlObject === null && this.url !== '';\n        },\n\n        invalidUrlError() {\n            if (this.hasInvalidInput) {\n                return { code: 'INVALID_MEDIA_URL' };\n            }\n\n            return null;\n        },\n\n        missingFileExtension() {\n            return this.urlObject !== null && !this.extensionFromUrl;\n        },\n\n        fileExtension() {\n            return this.extensionFromUrl || this.extensionFromInput;\n        },\n\n        isValid() {\n            return this.urlObject !== null && this.fileExtension;\n        },\n    },\n\n    watch: {\n        urlObject() {\n            if (this.urlObject === null) {\n                this.extensionFromUrl = '';\n                return;\n            }\n\n            const fileName = this.urlObject.pathname.split('/').pop();\n            if (fileName.split('.').length === 1) {\n                this.extensionFromUrl = '';\n                return;\n            }\n\n            this.extensionFromUrl = fileName.split('.').pop();\n        },\n    },\n\n    methods: {\n        emitUrl(originalDomEvent) {\n            if (this.isValid) {\n                this.$emit('media-url-form-submit', {\n                    originalDomEvent,\n                    url: this.urlObject,\n                    fileExtension: this.fileExtension,\n                });\n\n                if (this.variant === 'modal') {\n                    this.closeModal();\n                }\n            }\n        },\n\n        closeModal() {\n            this.$emit('modal-close');\n        },\n    },\n};\n","export default \"\\n{% block sw_media_url_form %}\\n<sw-modal\\n    v-if=\\\"variant === 'modal'\\\"\\n    class=\\\"sw-media-url-form\\\"\\n    variant=\\\"small\\\"\\n    :title=\\\"$tc('global.sw-media-url-form.title')\\\"\\n    v-on=\\\"$listeners\\\"\\n>\\n\\n    \\n    {% block sw_media_url_form_input %}\\n    <sw-text-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"url\\\"\\n        {% else %}\\n        v-model=\\\"url\\\"\\n        {% endif %}\\n        class=\\\"sw-media-url-form__url-input\\\"\\n        label=\\\"URL\\\"\\n        :error=\\\"invalidUrlError\\\"\\n        :placeholder=\\\"$tc('global.sw-media-url-form.example')\\\"\\n        {% if VUE3 %}\\n        name=\\\"sw-field--url\\\"\\n        {% endif %}\\n    />\\n\\n    <sw-text-field\\n        v-if=\\\"missingFileExtension\\\"\\n        {% if VUE3 %}\\n        v-model:value=\\\"extensionFromInput\\\"\\n        {% else %}\\n        v-model=\\\"extensionFromInput\\\"\\n        {% endif %}\\n        class=\\\"sw-media-url-form__extension-input\\\"\\n        :label=\\\"$tc('global.sw-media-url-form.labelFileExtension')\\\"\\n        validation=\\\"required\\\"\\n        placeholder=\\\"jpg\\\"\\n        :help-text=\\\"$tc('global.sw-media-url-form.missingFileExtension')\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_url_form_footer %}\\n    <template #modal-footer>\\n        \\n        {% block sw_media_url_form_cancel_button %}\\n        <sw-button\\n            size=\\\"small\\\"\\n            @click=\\\"closeModal\\\"\\n        >\\n            {{ $tc('global.default.cancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_media_url_form_submit_button %}\\n        <sw-button\\n            class=\\\"sw-media-url-form__submit-button\\\"\\n            variant=\\\"primary\\\"\\n            size=\\\"small\\\"\\n            :disabled=\\\"!isValid\\\"\\n            @click.prevent=\\\"emitUrl\\\"\\n        >\\n\\n            {{ $tc('global.sw-media-url-form.upload') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n</sw-modal>\\n\\n<div v-else-if=\\\"variant === 'inline'\\\">\\n    \\n    {% block sw_media_url_form_input_inline %}\\n    <sw-text-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"url\\\"\\n        {% else %}\\n        v-model=\\\"url\\\"\\n        {% endif %}\\n        class=\\\"sw-media-url-form__url-input\\\"\\n        label=\\\"URL\\\"\\n        :error=\\\"invalidUrlError\\\"\\n        :placeholder=\\\"$tc('global.sw-media-url-form.example')\\\"\\n        {% if VUE3 %}\\n        name=\\\"sw-field--url\\\"\\n        {% endif %}\\n    />\\n\\n    <sw-text-field\\n        v-if=\\\"missingFileExtension\\\"\\n        {% if VUE3 %}\\n        v-model:value=\\\"extensionFromInput\\\"\\n        {% else %}\\n        v-model=\\\"extensionFromInput\\\"\\n        {% endif %}\\n        class=\\\"sw-media-url-form__extension-input\\\"\\n        :label=\\\"$tc('global.sw-media-url-form.labelFileExtension')\\\"\\n        validation=\\\"required\\\"\\n        placeholder=\\\"jpg\\\"\\n        :help-text=\\\"$tc('global.sw-media-url-form.missingFileExtension')\\\"\\n    />\\n    {% endblock %}\\n\\n    <sw-button\\n        class=\\\"sw-media-url-form__submit-button\\\"\\n        :disabled=\\\"!isValid\\\"\\n        size=\\\"small\\\"\\n        variant=\\\"primary\\\"\\n        @click=\\\"emitUrl\\\"\\n    >\\n        {{ $tc('global.sw-media-url-form.upload') }}\\n    </sw-button>\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}