{"version":3,"sources":["webpack:///./src/module/sw-media/component/sidebar/sw-media-sidebar/sw-media-sidebar.scss","webpack:///./src/module/sw-media/component/sidebar/sw-media-sidebar/index.js","webpack:///./src/module/sw-media/component/sidebar/sw-media-sidebar/sw-media-sidebar.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Filter","Context","template","inject","props","items","required","type","Array","validator","value","filter","element","includes","getEntityName","length","currentFolderId","String","editable","Boolean","data","currentFolder","computed","mediaFolderRepository","this","repositoryFactory","create","mediaNameFilter","getByName","mediaSidebarClasses","headLine","isSingleFile","isMultipleFile","firstEntity","name","getSelectedFilesCount","concat","$tc","count","assetFilter","watch","fetchCurrentFolder","created","createdComponent","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","get","api","sent","stop","onMediaFolderRenamed","$emit"],"mappings":"0GAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAA2EL,SAC5E,WAAYF,GAAS,EAAM,K,8GCN5CQ,G,UAA4BC,UAApBC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAMD,WACXC,SCVW,+wDDWXC,OAAQ,CAAC,qBACTC,MAAO,CACHC,MAAO,CACHC,UAAU,EACVC,KAAMC,MACNC,UAAS,SAACC,GAIN,OAAkC,IAHVA,EAAMC,QAAO,SAACC,GAClC,OAAQ,CAAC,QAAS,gBAAgBC,SAASD,EAAQE,oBAEhCC,SAI/BC,gBAAiB,CACbT,KAAMU,OACNX,UAAU,EACVd,QAAS,MAGb0B,SAAU,CACNX,KAAMY,QACNb,UAAU,EACVd,SAAS,IAIjB4B,KAAI,WACA,MAAO,CACHC,cAAe,OAIvBC,SAAU,CACNC,sBAAqB,WACjB,OAAOC,KAAKC,kBAAkBC,OAAO,iBAGzCC,gBAAe,WACX,OAAO3B,EAAO4B,UAAU,cAG5BC,oBAAmB,WACf,MAAO,CACH,eAAgBL,KAAKM,WAI7BC,aAAY,WACR,OAA6B,IAAtBP,KAAKnB,MAAMU,QAGtBiB,eAAc,WACV,OAAOR,KAAKnB,MAAMU,OAAS,GAG/Be,SAAQ,WACJ,OAAIN,KAAKO,aACoC,UAArCP,KAAKS,YAAYnB,gBACVU,KAAKG,gBAAgBH,KAAKS,aAE9BT,KAAKS,YAAYC,KAGxBV,KAAKQ,eACER,KAAKW,sBAGZX,KAAKH,cACEG,KAAKH,cAAca,KAGvB,MAGXC,sBAAqB,WACjB,MAAM,GAANC,OAAUZ,KAAKa,IAAI,yCAA0Cb,KAAKnB,MAAMU,OAAQ,CAAEuB,MAAOd,KAAKnB,MAAMU,WAGxGkB,YAAW,WACP,OAAOT,KAAKnB,MAAM,IAGtBkC,YAAW,WACP,OAAOxC,SAASC,OAAO4B,UAAU,WAIzCY,MAAO,CACHxB,gBAAe,WACXQ,KAAKiB,uBAIbC,QAAO,WACHlB,KAAKmB,oBAGTC,QAAS,CACLD,iBAAgB,WACZnB,KAAKiB,sBAGHA,mBAAkB,WAAI,IAADI,EAAA,YAAAC,IAAAC,IAAAC,MAAA,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAClBR,EAAK7B,gBAAgB,CAADmC,EAAAE,KAAA,QACK,OAA1BR,EAAKxB,cAAgB,KAAK8B,EAAAG,OAAA,wBAAAH,EAAAE,KAAA,EAIHR,EAAKtB,sBAAsBgC,IAAIV,EAAK7B,gBAAiBf,EAAQuD,KAAK,KAAD,EAA5FX,EAAKxB,cAAa8B,EAAAM,KAAA,wBAAAN,EAAAO,UAAAT,MANKH,IAS3Ba,qBAAoB,WAChBnC,KAAKoC,MAAM","file":"static/js/7ac97faa52d34d0d7bc9.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-media-sidebar.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"50696d17\", content, true, {});","import template from './sw-media-sidebar.html.twig';\nimport './sw-media-sidebar.scss';\n\nconst { Filter, Context } = Shopware;\n\n/**\n * @package buyers-experience\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n    inject: ['repositoryFactory'],\n    props: {\n        items: {\n            required: true,\n            type: Array,\n            validator(value) {\n                const invalidElements = value.filter((element) => {\n                    return !['media', 'media_folder'].includes(element.getEntityName());\n                });\n                return invalidElements.length === 0;\n            },\n        },\n\n        currentFolderId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        editable: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            currentFolder: null,\n        };\n    },\n\n    computed: {\n        mediaFolderRepository() {\n            return this.repositoryFactory.create('media_folder');\n        },\n\n        mediaNameFilter() {\n            return Filter.getByName('mediaName');\n        },\n\n        mediaSidebarClasses() {\n            return {\n                'no-headline': !this.headLine,\n            };\n        },\n\n        isSingleFile() {\n            return this.items.length === 1;\n        },\n\n        isMultipleFile() {\n            return this.items.length > 1;\n        },\n\n        headLine() {\n            if (this.isSingleFile) {\n                if (this.firstEntity.getEntityName() === 'media') {\n                    return this.mediaNameFilter(this.firstEntity);\n                }\n                return this.firstEntity.name;\n            }\n\n            if (this.isMultipleFile) {\n                return this.getSelectedFilesCount;\n            }\n\n            if (this.currentFolder) {\n                return this.currentFolder.name;\n            }\n\n            return null;\n        },\n\n        getSelectedFilesCount() {\n            return `${this.$tc('sw-media.sidebar.labelHeadlineMultiple', this.items.length, { count: this.items.length })}`;\n        },\n\n        firstEntity() {\n            return this.items[0];\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        currentFolderId() {\n            this.fetchCurrentFolder();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.fetchCurrentFolder();\n        },\n\n        async fetchCurrentFolder() {\n            if (!this.currentFolderId) {\n                this.currentFolder = null;\n                return;\n            }\n\n            this.currentFolder = await this.mediaFolderRepository.get(this.currentFolderId, Context.api);\n        },\n\n        onMediaFolderRenamed() {\n            this.$emit('media-sidebar-folder-renamed');\n        },\n    },\n};\n","export default \"\\n{% block sw_media_sidebar %}\\n<div\\n    class=\\\"sw-media-sidebar\\\"\\n    :class=\\\"mediaSidebarClasses\\\"\\n>\\n    \\n    {% block sw_media_sidebar_headline %}\\n    <h3\\n        v-if=\\\"headLine\\\"\\n        class=\\\"sw-media-sidebar__headline\\\"\\n    >\\n        {{ headLine }}\\n    </h3>\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_sidebar_item_quickinfo_content %}\\n    <div class=\\\"sw-media-sidebar__quickinfo-scroll-container\\\">\\n        <sw-media-quickinfo\\n            v-if=\\\"isSingleFile && firstEntity.getEntityName() === 'media'\\\"\\n            :item=\\\"firstEntity\\\"\\n            :editable=\\\"editable\\\"\\n            v-on=\\\"$listeners\\\"\\n        />\\n\\n        <sw-media-folder-info\\n            v-else-if=\\\"isSingleFile && firstEntity.getEntityName() === 'media_folder'\\\"\\n            :media-folder=\\\"firstEntity\\\"\\n            :editable=\\\"editable\\\"\\n            v-on=\\\"$listeners\\\"\\n        />\\n\\n        <sw-media-quickinfo-multiple\\n            v-else-if=\\\"isMultipleFile\\\"\\n            :editable=\\\"editable\\\"\\n            :items=\\\"items\\\"\\n            v-on=\\\"$listeners\\\"\\n        />\\n\\n        <sw-media-folder-info\\n            v-else-if=\\\"currentFolder\\\"\\n            :media-folder=\\\"currentFolder\\\"\\n            :editable=\\\"editable\\\"\\n            @media-folder-renamed=\\\"onMediaFolderRenamed\\\"\\n            v-on=\\\"$listeners\\\"\\n        />\\n\\n        <sw-empty-state\\n            v-else\\n            :title=\\\"$tc('sw-media.sidebar.labelNoMediaSelected')\\\"\\n        >\\n            <template #icon>\\n                <img\\n                    :src=\\\"assetFilter('/administration/static/img/empty-states/media-empty-state.svg')\\\"\\n                    :alt=\\\"$tc('sw-media.sidebar.labelNoMediaSelected')\\\"\\n                >\\n            </template>\\n        </sw-empty-state>\\n    </div>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}