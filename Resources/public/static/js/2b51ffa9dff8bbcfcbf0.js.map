{"version":3,"sources":["webpack:///./src/module/sw-media/component/sw-media-modal-v2/index.js","webpack:///./src/module/sw-media/component/sw-media-modal-v2/sw-media-modal-v2.html.twig","webpack:///./src/module/sw-media/component/sw-media-modal-v2/sw-media-modal-v2.scss"],"names":["_Shopware","Shopware","Context","Utils","template","inject","props","initialFolderId","type","String","required","default","entityContext","defaultTab","validValues","validator","value","includes","allowMultiSelect","Boolean","fileAccept","data","selection","uploads","folderId","this","currentFolder","compact","term","id","createId","selectedMediaItem","computed","mediaRepository","repositoryFactory","create","mediaFolderRepository","tabNameUpload","tabNameLibrary","hasUploads","length","uploadTag","concat","watch","fetchCurrentFolder","created","createdComponent","mounted","mountedComponent","beforeDestroy","beforeDestroyComponent","methods","addResizeListener","getComponentWidth","removeOnResizeListener","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","get","api","sent","stop","window","addEventListener","removeEventListener","componentWidth","$el","getBoundingClientRect","width","onEmitModalClosed","$emit","onEmitSelection","selectedMedia","filter","selected","getEntityName","refreshList","$refs","mediaLibrary","onMediaRemoveSelected","_ref","item","index","findIndex","selectedItem","splice","onMediaAddSelected","_ref2","push","onMediaItemSelect","_ref3","resetSelection","onItemsDeleted","ids","onMediaFoldersDissolved","folderIds","_this2","some","dissolvedId","parentId","onUploadsAdded","_ref4","_this3","_callee2","_context2","mediaService","runUploads","Promise","all","map","_ref5","targetId","resolve","then","media","onUploadFinished","_ref6","_this4","_callee3","updatedMedia","_context3","upload","onUploadFailed","task","selectedUpload","selectMediaItem","checkMediaItem","content","__esModule","module","i","locals","exports","add"],"mappings":"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","file":"static/js/2b51ffa9dff8bbcfcbf0.js","sourcesContent":["import template from './sw-media-modal-v2.html.twig';\nimport './sw-media-modal-v2.scss';\n\nconst { Context, Utils } = Shopware;\n\n/**\n * @event media-modal-selection-change EntityProxy[]\n * @event closeModal (void)\n * @package buyers-experience\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'mediaService'],\n\n    props: {\n        initialFolderId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        entityContext: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        defaultTab: {\n            type: String,\n            required: false,\n            validValues: ['upload', 'library'],\n            default: 'library',\n            validator(value) {\n                return ['upload', 'library'].includes(value);\n            },\n        },\n\n        allowMultiSelect: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        fileAccept: {\n            type: String,\n            required: false,\n            default: 'image/*',\n        },\n    },\n\n    data() {\n        return {\n            selection: [],\n            uploads: [],\n            folderId: this.initialFolderId,\n            currentFolder: null,\n            compact: false,\n            term: '',\n            id: Utils.createId(),\n            selectedMediaItem: {},\n        };\n    },\n\n    computed: {\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n        mediaFolderRepository() {\n            return this.repositoryFactory.create('media_folder');\n        },\n        tabNameUpload() {\n            return 'upload';\n        },\n\n        tabNameLibrary() {\n            return 'library';\n        },\n\n        hasUploads() {\n            return this.uploads.length > 0;\n        },\n\n        uploadTag() {\n            return `sw-media-modal-v2--${this.id}`;\n        },\n    },\n\n    watch: {\n        folderId() {\n            this.fetchCurrentFolder();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    beforeDestroy() {\n        this.beforeDestroyComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.fetchCurrentFolder();\n            this.addResizeListener();\n        },\n\n        mountedComponent() {\n            this.getComponentWidth();\n        },\n\n        beforeDestroyComponent() {\n            this.removeOnResizeListener();\n        },\n\n        async fetchCurrentFolder() {\n            if (!this.folderId) {\n                this.currentFolder = null;\n                return;\n            }\n\n            this.currentFolder = await this.mediaFolderRepository.get(this.folderId, Context.api);\n        },\n\n        addResizeListener() {\n            window.addEventListener('resize', this.getComponentWidth);\n        },\n\n        removeOnResizeListener() {\n            window.removeEventListener('resize', this.getComponentWidth);\n        },\n\n        getComponentWidth() {\n            const componentWidth = this.$el.getBoundingClientRect().width;\n            this.compact = componentWidth <= 900;\n        },\n\n        /*\n         * v-model\n         */\n        onEmitModalClosed() {\n            this.$emit('modal-close');\n        },\n\n        onEmitSelection() {\n            // emit media items only\n            const selectedMedia = this.selection.filter((selected) => {\n                return selected.getEntityName() === 'media';\n            });\n\n            this.$emit('media-modal-selection-change', selectedMedia);\n            this.onEmitModalClosed();\n        },\n\n        /*\n         * selection\n         */\n        refreshList() {\n            this.$refs.mediaLibrary.refreshList();\n        },\n\n        onMediaRemoveSelected({ item }) {\n            const index = this.selection.findIndex((selectedItem) => {\n                return item.id === selectedItem.id;\n            });\n            if (index === -1) {\n                return;\n            }\n\n            this.selection.splice(index, 1);\n        },\n\n        onMediaAddSelected({ item }) {\n            if (this.selection.includes(item)) {\n                return;\n            }\n\n            this.selection.push(item);\n        },\n\n        onMediaItemSelect({ item }) {\n            if (!this.allowMultiSelect) {\n                this.selection = [item];\n                this.selectedMediaItem = item;\n            }\n        },\n\n        resetSelection() {\n            this.selection.splice(0, this.selection.length);\n        },\n\n        onItemsDeleted(ids) {\n            this.onMediaFoldersDissolved(ids.folderIds);\n        },\n\n        onMediaFoldersDissolved(folderIds) {\n            if (!this.currentFolder) {\n                return;\n            }\n\n            if (folderIds.some((dissolvedId) => {\n                return dissolvedId === this.currentFolder.id;\n            })) {\n                this.folderId = this.currentFolder.parentId;\n            }\n\n            this.refreshList();\n        },\n\n        /*\n         * Media uploads\n         */\n        async onUploadsAdded({ data }) {\n            await this.mediaService.runUploads(this.uploadTag);\n\n            await Promise.all(data.map(({ targetId }) => {\n                return new Promise((resolve) => {\n                    this.mediaRepository.get(targetId, Context.api).then((media) => {\n                        this.uploads.push(media);\n                        resolve();\n                    });\n                });\n            }));\n        },\n\n        async onUploadFinished({ targetId }) {\n            const updatedMedia = await this.mediaRepository.get(targetId, Context.api);\n            this.selectedMediaItem = updatedMedia;\n\n            if (!this.uploads.some((upload) => {\n                return updatedMedia.id === upload.id;\n            })) {\n                this.uploads.push(updatedMedia);\n            }\n\n            if (this.allowMultiSelect) {\n                const foundSelectedItem = this.selection.some((selectedItem) => {\n                    return updatedMedia.id === selectedItem.id;\n                });\n                if (!foundSelectedItem) {\n                    this.selection.push(updatedMedia);\n                }\n            } else {\n                this.selection = [updatedMedia];\n            }\n        },\n\n        onUploadFailed(task) {\n            this.uploads = this.uploads.filter((selectedUpload) => {\n                return selectedUpload.id !== task.targetId;\n            });\n        },\n\n        selectMediaItem(upload) {\n            if (this.allowMultiSelect) {\n                return;\n            }\n\n            this.selectedMediaItem = upload;\n            this.selection = [upload];\n        },\n\n        checkMediaItem(upload) {\n            if (this.allowMultiSelect) {\n                return this.selection.includes(upload);\n            }\n\n            return upload.id === this.selectedMediaItem.id;\n        },\n    },\n};\n","export default \"\\n{% block sw_media_modal_v2 %}\\n<sw-modal\\n    ref=\\\"swMediaModal\\\"\\n    class=\\\"sw-media-modal-v2\\\"\\n    variant=\\\"full\\\"\\n    :title=\\\"$tc('sw-media.sw-media-modal-v2.titleModal')\\\"\\n    @modal-close=\\\"onEmitModalClosed\\\"\\n>\\n\\n    \\n    {% block sw_media_modal_v2_content %}\\n    <div class=\\\"sw-media-modal-v2__content\\\">\\n\\n        \\n        {% block sw_media_modal_v2_tabs %}\\n        <sw-tabs\\n            position-identifier=\\\"sw-media-modal\\\"\\n            variant=\\\"minimal\\\"\\n            :default-item=\\\"defaultTab\\\"\\n            class=\\\"sw-media-modal-v2__tabs\\\"\\n        >\\n            <template #default=\\\"{ active }\\\">\\n\\n                \\n                {% block sw_media_modal_v2_tab_items %}\\n                \\n                {% block sw_media_modal_v2_tab_item_library %}\\n                <sw-tabs-item\\n                    :name=\\\"tabNameLibrary\\\"\\n                    :active-tab=\\\"active\\\"\\n                    :disabled=\\\"hasUploads\\\"\\n                >\\n                    {{ $tc('sw-media.sw-media-modal-v2.labelTabItemLibrary') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_media_modal_v2_tab_item_upload %}\\n                <sw-tabs-item\\n                    :name=\\\"tabNameUpload\\\"\\n                    :active-tab=\\\"active\\\"\\n                    @click=\\\"resetSelection\\\"\\n                >\\n                    {{ $tc('sw-media.sw-media-modal-v2.labelTabItemUpload') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n                {% endblock %}\\n            </template>\\n\\n            <template #content=\\\"{ active }\\\">\\n\\n                \\n                {% block sw_media_modal_v2_tab_content %}\\n                <div class=\\\"sw-media-modal-v2__tab-content\\\">\\n\\n                    \\n                    {% block sw_media_modal_v2_tab_content_library %}\\n                    <template v-if=\\\"active === tabNameLibrary\\\">\\n\\n                        \\n                        {% block sw_media_modal_v2_navigation_and_search %}\\n                        <div\\n                            class=\\\"sw-media-modal-v2__breadcrumbs-and-search\\\"\\n                            :class=\\\"{'sw-media-modal-v2__breadcrumbs-and-search--compact': compact}\\\"\\n                        >\\n\\n                            \\n                            {% block sw_media_modal_v2_folder_breadcrumbs %}\\n                            <sw-media-breadcrumbs\\n                                {% if VUE3 %}\\n                                v-model:currentFolderId=\\\"folderId\\\"\\n                                {% else %}\\n                                v-model=\\\"folderId\\\"\\n                                {% endif %}\\n                                :small=\\\"compact\\\"\\n                            />\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_media_modal_v2_search_field %}\\n                            <sw-simple-search-field v-model=\\\"term\\\" />\\n                            {% endblock %}\\n                        </div>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_media_modal_v2_media_library %}\\n                        <sw-media-library\\n                            ref=\\\"mediaLibrary\\\"\\n                            :selection=\\\"selection\\\"\\n                            :folder-id=\\\"folderId\\\"\\n                            :term=\\\"term\\\"\\n                            :compact=\\\"compact\\\"\\n                            :allow-multi-select=\\\"allowMultiSelect\\\"\\n                            {% if VUE3 %}\\n                            @update:selection=\\\"selection = $event\\\"\\n                            {% else %}\\n                            @media-selection-change=\\\"selection = $event\\\"\\n                            {% endif %}\\n                            @media-folder-change=\\\"folderId = $event\\\"\\n                        />\\n                        {% endblock %}\\n                    </template>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_media_modal_v2_tab_content_upload %}\\n                    <div\\n                        v-if=\\\"active === tabNameUpload\\\"\\n                        class=\\\"sw-media-modal-v2__uploads-content\\\"\\n                    >\\n\\n                        \\n                        {% block sw_media_modal_v2_upload_component %}\\n                        <sw-upload-listener\\n                            :upload-tag=\\\"uploadTag\\\"\\n                            @media-upload-add=\\\"onUploadsAdded\\\"\\n                            @media-upload-finish=\\\"onUploadFinished\\\"\\n                            @media-upload-fail=\\\"onUploadFailed\\\"\\n                        />\\n\\n                        <sw-media-upload-v2\\n                            class=\\\"sw-media-modal-v2__upload-container\\\"\\n                            variant=\\\"regular\\\"\\n                            :file-accept=\\\"fileAccept\\\"\\n                            :upload-tag=\\\"uploadTag\\\"\\n                            :default-folder=\\\"entityContext\\\"\\n                            :target-folder=\\\"folderId\\\"\\n                            :allow-multi-select=\\\"allowMultiSelect\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_media_modal_v2_uploaded_items %}\\n                        <sw-media-grid\\n                            :presentation=\\\"compact ? 'list-preview' : 'medium-preview'\\\"\\n                            :class=\\\"{'sw-media-modal-v2__upload-media-grid--compact': compact }\\\"\\n                        >\\n                            <sw-media-media-item\\n                                v-for=\\\"upload in uploads\\\"\\n                                :key=\\\"`sw-media-modal-v2-upload-${upload.id}`\\\"\\n                                :item=\\\"upload\\\"\\n                                :show-context-menu-button=\\\"false\\\"\\n                                :show-selection-indicator=\\\"allowMultiSelect\\\"\\n                                :allow-multi-select=\\\"allowMultiSelect\\\"\\n                                :selected=\\\"checkMediaItem(upload)\\\"\\n                                :editable=\\\"false\\\"\\n                                :is-list=\\\"compact\\\"\\n                                @media-item-selection-remove=\\\"onMediaRemoveSelected\\\"\\n                                @media-item-selection-add=\\\"onMediaAddSelected\\\"\\n                                @media-item-click=\\\"onMediaItemSelect\\\"\\n                            />\\n                        </sw-media-grid>\\n                        {% endblock %}\\n                    </div>\\n                    {% endblock %}\\n                </div>\\n            </template>\\n            {% endblock %}\\n        </sw-tabs>\\n        {% endblock %}\\n\\n        \\n        {% block sw_media_modal_v2_media_sidebar %}\\n        <sw-media-sidebar\\n            :items=\\\"selection\\\"\\n            :current-folder-id=\\\"null\\\"\\n            @media-sidebar-items-delete=\\\"onItemsDeleted\\\"\\n            @media-sidebar-folder-items-dissolve=\\\"onMediaFoldersDissolved\\\"\\n            @media-sidebar-items-move=\\\"refreshList\\\"\\n            @media-item-selection-remove=\\\"onMediaRemoveSelected\\\"\\n        />\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_modal_v2_modal_footer %}\\n    <template #modal-footer>\\n        \\n        {% block sw_media_modal_v2_button_cancel %}\\n        <sw-button @click=\\\"onEmitModalClosed\\\">\\n            {{ $tc('sw-media.sw-media-modal-v2.labelButtonCancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_media_modal_v2_button_confirm_selection %}\\n        <sw-button\\n            variant=\\\"primary\\\"\\n            @click=\\\"onEmitSelection\\\"\\n        >\\n            {{ $tc('sw-media.sw-media-modal-v2.labelButtonSaveSelection') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n</sw-modal>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-media-modal-v2.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"ec3352ca\", content, true, {});"],"sourceRoot":""}