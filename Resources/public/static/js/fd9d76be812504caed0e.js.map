{"version":3,"sources":["webpack:///./src/module/sw-category/page/sw-category-detail/state.js","webpack:///./src/module/sw-category/page/sw-category-detail/index.js","webpack:///./src/module/sw-category/page/sw-category-detail/sw-category-detail.html.twig","webpack:///./src/module/sw-category/page/sw-category-detail/sw-category-detail.scss"],"names":["Criteria","Shopware","Data","namespaced","state","landingPage","category","customFieldSets","landingPagesToDelete","undefined","categoriesToDelete","mutations","setActiveLandingPage","_ref","setActiveCategory","_ref2","setCustomFieldSets","newCustomFieldSets","setLandingPagesToDelete","_ref3","setCategoriesToDelete","_ref4","actions","_ref5","payload","commit","loadActiveLandingPage","_ref6","_ref7","repository","id","apiContext","criteria","create","cmsPageId","Promise","resolve","get","then","_ref8","loadActiveCategory","_ref9","_ref10","isColumn","parentId","parentCriteria","addAssociation","parent","footerSalesChannels","length","_Shopware","Context","Mixin","_Shopware$Data","ChangesetGenerator","EntityCollection","_Shopware$Utils$objec","Utils","object","cloneDeep","merge","type","types","template","inject","mixins","getByName","shortcuts","active","this","acl","can","method","ESCAPE","props","categoryId","String","required","default","landingPageId","data","term","isLoading","isCustomFieldLoading","isSaveSuccessful","isMobileViewport","splitBreakpoint","isDisplayingLeavePageWarning","nextRoute","currentLanguageId","api","languageId","forceDiscardChanges","categoryCheckedItem","landingPageCheckedItem","entryPointOverwriteConfirmed","entryPointOverwriteSalesChannels","metaInfo","title","$createTitle","identifier","computed","changesetGenerator","showEmptyState","placeholder","landingPageRepository","repositoryFactory","categoryRepository","cmsPageRepository","State","showEntryPointOverwriteModal","cmsPage","currentPage","customFieldSetRepository","customFieldSetCriteria","addFilter","equals","customFieldSetLandingPageCriteria","mediaRepository","pageClasses","tooltipSave","message","$tc","disabled","showOnDisabledElements","systemKey","$device","getSystemKey","concat","appearance","landingPageTooltipSave","tooltipCancel","categoryCriteria","getAssociation","landingPageCriteria","assetFilter","Filter","watch","setLandingPage","setCategory","slotConfig","dispatch","getAssignedCmsPage","getAssignedCmsPageForLandingPage","beforeCreate","registerModule","pageState","created","createdComponent","beforeDestroy","unregisterModule","beforeRouteLeave","to","from","next","_this$changesetGenera","generate","changes","deletionQueue","keysToDelete","changedKeys","Object","keys","filter","key","includes","hasDeletions","name","methods","ExtensionAPI","publishData","path","scope","checkViewport","registerListener","categoryCheckedElementsCount","count","landingPageCheckedElementsCount","onResize","listener","onSearch","value","getViewportWidth","_this","setIds","addSorting","sort","search","response","sections","forEach","section","blocks","block","slots","slot","config","updateCmsPageDataMapping","cmsService","getEntityMappingTypes","_this2","updateCmsPageDataMappingForLandingPage","_this3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","abrupt","loadLandingPageCustomFieldSet","t0","createNotificationError","finish","stop","_this4","loadCustomFieldSet","_this5","customFieldSet","$store","finally","_this6","onSaveCategories","save","openChangeModal","destination","onLeaveModalClose","onLeaveModalConfirm","_this7","expression","$nextTick","$router","push","params","cancelEdit","resetCategory","onChangeLanguage","newLanguageId","abortOnLanguageChange","hasChanges","saveOnLanguageChange","onSaveLandingPage","onSave","saveFinish","_this8","_callee2","pageOverrides","_context2","getCmsPageOverrides","isPlainObject","checkForEntryPointOverwrite","updateSeoUrls","_objectSpread","catch","_this9","navigationSalesChannels","salesChannel","navigationCategoryId","add","footerCategoryId","serviceSalesChannels","serviceCategoryId","cancelEntryPointOverwrite","confirmEntryPointOverwrite","_this10","_this11","salesChannels","addLandingPageSalesChannelError","shopwareError","Classes","ShopwareError","code","detail","status","error","deleteSpecifcKeys","slotOverrides","isArray","values","configField","entity","hasOwnProperty","_this12","list","seoUrls","getters","all","map","seoUrl","seoPathInfo","isModified","seoUrlService","updateCanonicalUrl","onLandingPageDelete","onCategoryDelete","content","__esModule","module","i","locals","exports"],"mappings":"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","file":"static/js/fd9d76be812504caed0e.js","sourcesContent":["const { Criteria } = Shopware.Data;\n\n/**\n * @package content\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    namespaced: true,\n\n    state() {\n        return {\n            landingPage: null,\n            category: null,\n            customFieldSets: [],\n            landingPagesToDelete: undefined,\n            categoriesToDelete: undefined,\n        };\n    },\n\n    mutations: {\n        setActiveLandingPage(state, { landingPage }) {\n            state.landingPage = landingPage;\n        },\n\n        setActiveCategory(state, { category }) {\n            state.category = category;\n        },\n\n        setCustomFieldSets(state, newCustomFieldSets) {\n            state.customFieldSets = newCustomFieldSets;\n        },\n\n        setLandingPagesToDelete(state, { landingPagesToDelete }) {\n            state.landingPagesToDelete = landingPagesToDelete;\n        },\n\n        setCategoriesToDelete(state, { categoriesToDelete }) {\n            state.categoriesToDelete = categoriesToDelete;\n        },\n    },\n\n    actions: {\n        setActiveLandingPage({ commit }, payload) {\n            commit('setActiveLandingPage', payload);\n        },\n\n        loadActiveLandingPage({ commit }, { repository, id, apiContext, criteria }) {\n            if (id === 'create') {\n                const landingPage = repository.create(apiContext);\n                landingPage.cmsPageId = null;\n                commit('setActiveLandingPage', { landingPage });\n                return Promise.resolve();\n            }\n\n            if (!criteria) {\n                criteria = new Criteria(1, 25);\n            }\n\n            return repository.get(id, apiContext, criteria).then((landingPage) => {\n                commit('setActiveLandingPage', { landingPage });\n            });\n        },\n\n        setActiveCategory({ commit }, payload) {\n            commit('setActiveCategory', payload);\n        },\n\n        loadActiveCategory({ commit }, { repository, id, apiContext, criteria }) {\n            if (!criteria) {\n                criteria = new Criteria(1, 25);\n            }\n\n            return repository.get(id, apiContext, criteria).then((category) => {\n                category.isColumn = false;\n                if (category.parentId !== null) {\n                    const parentCriteria = new Criteria(1, 25);\n                    parentCriteria.addAssociation('footerSalesChannels');\n\n                    return repository.get(category.parentId, apiContext, parentCriteria).then((parent) => {\n                        category.parent = parent;\n\n                        category.isColumn = category.parent !== undefined\n                            && category.parent.footerSalesChannels !== undefined\n                            && category.parent.footerSalesChannels.length !== 0;\n\n                        return Promise.resolve(category);\n                    });\n                }\n\n                return Promise.resolve(category);\n            }).then((category) => {\n                commit('setActiveCategory', { category });\n            });\n        },\n    },\n};\n","import pageState from './state';\nimport template from './sw-category-detail.html.twig';\nimport './sw-category-detail.scss';\n\nconst { Context, Mixin } = Shopware;\nconst { Criteria, ChangesetGenerator, EntityCollection } = Shopware.Data;\nconst { cloneDeep, merge } = Shopware.Utils.object;\nconst type = Shopware.Utils.types;\n\n/**\n * @package content\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'acl',\n        'cmsService',\n        'repositoryFactory',\n        'seoUrlService',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('placeholder'),\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': {\n            active() {\n                return this.acl.can('category.editor');\n            },\n            method: 'onSave',\n        },\n        ESCAPE: 'cancelEdit',\n    },\n\n    props: {\n        categoryId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        landingPageId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            term: '',\n            isLoading: false,\n            isCustomFieldLoading: false,\n            isSaveSuccessful: false,\n            isMobileViewport: null,\n            splitBreakpoint: 1024,\n            isDisplayingLeavePageWarning: false,\n            nextRoute: null,\n            currentLanguageId: Shopware.Context.api.languageId,\n            forceDiscardChanges: false,\n            categoryCheckedItem: 0,\n            landingPageCheckedItem: 0,\n            entryPointOverwriteConfirmed: false,\n            entryPointOverwriteSalesChannels: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        changesetGenerator() {\n            return new ChangesetGenerator();\n        },\n\n        showEmptyState() {\n            return !this.category && !this.landingPage;\n        },\n\n        identifier() {\n            return this.category ? this.placeholder(this.category, 'name') : '';\n        },\n\n        landingPageRepository() {\n            return this.repositoryFactory.create('landing_page');\n        },\n\n        categoryRepository() {\n            return this.repositoryFactory.create('category');\n        },\n\n        cmsPageRepository() {\n            return this.repositoryFactory.create('cms_page');\n        },\n\n        landingPage() {\n            if (!Shopware.State.get('swCategoryDetail')) {\n                return {};\n            }\n\n            return Shopware.State.get('swCategoryDetail').landingPage;\n        },\n\n        category() {\n            if (!Shopware.State.get('swCategoryDetail')) {\n                return {};\n            }\n\n            return Shopware.State.get('swCategoryDetail').category;\n        },\n\n        showEntryPointOverwriteModal() {\n            return this.entryPointOverwriteSalesChannels !== null && this.entryPointOverwriteSalesChannels.length;\n        },\n\n        cmsPage() {\n            return Shopware.State.get('cmsPageState').currentPage;\n        },\n\n        cmsPageId() {\n            if (this.landingPage) {\n                return this.landingPage.cmsPageId;\n            }\n\n            return this.category ? this.category.cmsPageId : null;\n        },\n\n        customFieldSetRepository() {\n            return this.repositoryFactory.create('custom_field_set');\n        },\n\n        customFieldSetCriteria() {\n            const criteria = new Criteria(1, null);\n\n            criteria.addFilter(Criteria.equals('relations.entityName', 'category'));\n\n            return criteria;\n        },\n\n        customFieldSetLandingPageCriteria() {\n            const criteria = new Criteria(1, null);\n\n            criteria.addFilter(Criteria.equals('relations.entityName', 'landing_page'));\n\n            return criteria;\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        pageClasses() {\n            return {\n                'has--category': !!this.category,\n                'is--mobile': !!this.isMobileViewport,\n            };\n        },\n\n        tooltipSave() {\n            if (!this.acl.can('category.editor')) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.acl.can('category.editor'),\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        landingPageTooltipSave() {\n            if (!this.acl.can('landing_page.editor')) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.acl.can('landing_page.editor'),\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        tooltipCancel() {\n            return {\n                message: 'ESC',\n                appearance: 'light',\n            };\n        },\n\n        categoryCriteria() {\n            const criteria = new Criteria(1, 1);\n            criteria.getAssociation('seoUrls')\n                .addFilter(Criteria.equals('isCanonical', true));\n\n            criteria.addAssociation('tags')\n                .addAssociation('media')\n                .addAssociation('navigationSalesChannels.homeCmsPage.previewMedia')\n                .addAssociation('serviceSalesChannels')\n                .addAssociation('footerSalesChannels')\n                .addAssociation('translations');\n\n            return criteria;\n        },\n\n        landingPageCriteria() {\n            const criteria = new Criteria(1, 1);\n\n            criteria.addAssociation('tags');\n            criteria.addAssociation('salesChannels');\n\n            return criteria;\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        landingPageId() {\n            this.setLandingPage();\n        },\n\n        categoryId() {\n            this.setCategory();\n        },\n\n        cmsPageId() {\n            if (this.isLoading) {\n                return;\n            }\n\n            if (this.category) {\n                this.category.slotConfig = null;\n                Shopware.State.dispatch('cmsPageState/resetCmsPageState')\n                    .then(this.getAssignedCmsPage);\n            }\n\n            if (this.landingPage) {\n                this.landingPage.slotConfig = null;\n                Shopware.State.dispatch('cmsPageState/resetCmsPageState')\n                    .then(this.getAssignedCmsPageForLandingPage);\n            }\n        },\n    },\n\n    beforeCreate() {\n        Shopware.State.registerModule('swCategoryDetail', pageState);\n        Shopware.State.dispatch('cmsPageState/resetCmsPageState');\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    beforeDestroy() {\n        Shopware.State.unregisterModule('swCategoryDetail');\n    },\n\n    beforeRouteLeave(to, from, next) {\n        if (this.forceDiscardChanges) {\n            this.forceDiscardChanges = false;\n            next();\n\n            return;\n        }\n\n        if (!this.category) {\n            next();\n            return;\n        }\n\n        /*\n         * Generate change set for category and delete `id` and `versionId` to only consider actual changes.\n         * A new version without changes should not trigger the navigation guard.\n         */\n        const { changes, deletionQueue } = this.changesetGenerator.generate(this.category);\n        if (changes === null) {\n            next();\n            return;\n        }\n\n        const keysToDelete = ['id', 'versionId'];\n        const changedKeys = Object.keys(changes).filter(key => !keysToDelete.includes(key));\n        const hasDeletions = deletionQueue.length > 0;\n\n        /*\n         * Allow exiting the route to the `cms.page.create` route\n         * when just the cmsPage assignment has been cleared.\n         */\n        if (\n            to.name === 'sw.cms.create' &&\n            changedKeys.length === 1 &&\n            changedKeys[0] === 'cmsPageId' &&\n            changes.cmsPageId === null &&\n            !hasDeletions\n        ) {\n            next();\n            return;\n        }\n\n        if (changedKeys.length === 0 && !hasDeletions) {\n            next();\n            return;\n        }\n\n        this.isDisplayingLeavePageWarning = true;\n        this.nextRoute = to;\n        next(false);\n    },\n\n    methods: {\n        createdComponent() {\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-category-detail__category',\n                path: 'category',\n                scope: this,\n            });\n\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-category-detail__cmsPage',\n                path: 'cmsPage',\n                scope: this,\n            });\n\n            this.isLoading = true;\n            this.checkViewport();\n            this.registerListener();\n\n            if (this.categoryId !== null) {\n                this.setCategory();\n\n                return;\n            }\n\n            this.setLandingPage();\n        },\n\n        categoryCheckedElementsCount(count) {\n            this.categoryCheckedItem = count;\n        },\n\n        landingPageCheckedElementsCount(count) {\n            this.landingPageCheckedItem = count;\n        },\n\n        registerListener() {\n            this.$device.onResize({\n                listener: this.checkViewport,\n            });\n        },\n\n        onSearch(value) {\n            if (value.length === 0) {\n                value = undefined;\n            }\n            this.term = value;\n        },\n\n        checkViewport() {\n            this.isMobileViewport = this.$device.getViewportWidth() < this.splitBreakpoint;\n        },\n\n        getAssignedCmsPage() {\n            if (this.cmsPageId === null) {\n                return Promise.resolve(null);\n            }\n\n            const cmsPageId = this.cmsPageId;\n            const criteria = new Criteria(1, 1);\n            criteria.setIds([cmsPageId]);\n            criteria.addAssociation('previewMedia');\n            criteria.addAssociation('sections');\n            criteria.getAssociation('sections').addSorting(Criteria.sort('position'));\n\n            criteria.addAssociation('sections.blocks');\n            criteria.getAssociation('sections.blocks')\n                .addSorting(Criteria.sort('position', 'ASC'))\n                .addAssociation('slots');\n\n            return this.cmsPageRepository.search(criteria).then((response) => {\n                const cmsPage = response.get(cmsPageId);\n\n                if (cmsPageId !== this.cmsPageId) {\n                    return null;\n                }\n\n                if (this.category.slotConfig !== null) {\n                    cmsPage.sections.forEach((section) => {\n                        section.blocks.forEach((block) => {\n                            block.slots.forEach((slot) => {\n                                if (this.category.slotConfig[slot.id]) {\n                                    if (slot.config === null) {\n                                        slot.config = {};\n                                    }\n                                    merge(slot.config, cloneDeep(this.category.slotConfig[slot.id]));\n                                }\n                            });\n                        });\n                    });\n                }\n\n                this.updateCmsPageDataMapping();\n                Shopware.State.commit('cmsPageState/setCurrentPage', cmsPage);\n\n                return this.cmsPage;\n            });\n        },\n\n        updateCmsPageDataMapping() {\n            Shopware.State.commit('cmsPageState/setCurrentMappingEntity', 'category');\n            Shopware.State.commit(\n                'cmsPageState/setCurrentMappingTypes',\n                this.cmsService.getEntityMappingTypes('category'),\n            );\n            Shopware.State.commit('cmsPageState/setCurrentDemoEntity', this.category);\n        },\n\n        getAssignedCmsPageForLandingPage() {\n            if (this.cmsPageId === null) {\n                return Promise.resolve(null);\n            }\n\n            const cmsPageId = this.cmsPageId;\n            const criteria = new Criteria(1, 1);\n            criteria.setIds([cmsPageId]);\n            criteria.addAssociation('previewMedia');\n            criteria.addAssociation('sections');\n            criteria.getAssociation('sections').addSorting(Criteria.sort('position'));\n\n            criteria.addAssociation('sections.blocks');\n            criteria.getAssociation('sections.blocks')\n                .addSorting(Criteria.sort('position', 'ASC'))\n                .getAssociation('slots')\n                .addAssociation('translations');\n\n            return this.cmsPageRepository.search(criteria).then((response) => {\n                const cmsPage = response.get(cmsPageId);\n                if (cmsPageId !== this.cmsPageId) {\n                    return null;\n                }\n\n                if (this.landingPage.slotConfig !== null) {\n                    cmsPage.sections.forEach((section) => {\n                        section.blocks.forEach((block) => {\n                            block.slots.forEach((slot) => {\n                                if (this.landingPage.slotConfig[slot.id]) {\n                                    if (slot.config === null) {\n                                        slot.config = {};\n                                    }\n                                    merge(slot.config, cloneDeep(this.landingPage.slotConfig[slot.id]));\n                                }\n                            });\n                        });\n                    });\n                }\n\n                this.updateCmsPageDataMappingForLandingPage();\n                Shopware.State.commit('cmsPageState/setCurrentPage', cmsPage);\n                return this.cmsPage;\n            });\n        },\n\n        updateCmsPageDataMappingForLandingPage() {\n            Shopware.State.commit('cmsPageState/setCurrentMappingEntity', 'landing_page');\n            Shopware.State.commit(\n                'cmsPageState/setCurrentMappingTypes',\n                this.cmsService.getEntityMappingTypes('landing_page'),\n            );\n            Shopware.State.commit('cmsPageState/setCurrentDemoEntity', this.landingPage);\n        },\n\n        async setLandingPage() {\n            this.isLoading = true;\n\n            try {\n                if (this.landingPageId === null) {\n                    Shopware.State.commit('shopwareApps/setSelectedIds', []);\n\n                    await Shopware.State.dispatch('swCategoryDetail/setActiveLandingPage', { landingPage: null });\n                    await Shopware.State.dispatch('cmsPageState/resetCmsPageState');\n\n                    return;\n                }\n\n\n                Shopware.State.commit('shopwareApps/setSelectedIds', [this.landingPageId]);\n                await Shopware.State.dispatch('swCategoryDetail/loadActiveLandingPage', {\n                    repository: this.landingPageRepository,\n                    apiContext: Shopware.Context.api,\n                    id: this.landingPageId,\n                    criteria: this.landingPageCriteria,\n                });\n\n                await Shopware.State.dispatch('cmsPageState/resetCmsPageState');\n                await this.getAssignedCmsPageForLandingPage();\n                await this.loadLandingPageCustomFieldSet();\n            } catch {\n                this.createNotificationError({\n                    title: this.$tc('global.default.error'),\n                    message: this.$tc('global.notification.unspecifiedSaveErrorMessage'),\n                });\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        setCategory() {\n            this.isLoading = true;\n\n            if (this.categoryId === null) {\n                Shopware.State.commit('shopwareApps/setSelectedIds', []);\n\n                return Shopware.State.dispatch('swCategoryDetail/setActiveCategory', { category: null })\n                    .then(() => Shopware.State.dispatch('cmsPageState/resetCmsPageState'))\n                    .then(() => {\n                        this.isLoading = false;\n                    });\n            }\n\n            Shopware.State.commit('shopwareApps/setSelectedIds', [this.categoryId]);\n            return Shopware.State.dispatch('swCategoryDetail/loadActiveCategory', {\n                repository: this.categoryRepository,\n                apiContext: Shopware.Context.api,\n                id: this.categoryId,\n                criteria: this.categoryCriteria,\n            }).then(() => Shopware.State.dispatch('cmsPageState/resetCmsPageState'))\n                .then(this.getAssignedCmsPage)\n                .then(this.loadCustomFieldSet)\n                .then(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        loadCustomFieldSet() {\n            this.isCustomFieldLoading = true;\n\n            return this.customFieldSetRepository.search(this.customFieldSetCriteria)\n                .then((customFieldSet) => {\n                    return this.$store.commit('swCategoryDetail/setCustomFieldSets', customFieldSet);\n                }).finally(() => {\n                    this.isCustomFieldLoading = true;\n                });\n        },\n\n        loadLandingPageCustomFieldSet() {\n            this.isCustomFieldLoading = true;\n\n            return this.customFieldSetRepository.search(this.customFieldSetLandingPageCriteria)\n                .then((customFieldSet) => {\n                    return this.$store.commit('swCategoryDetail/setCustomFieldSets', customFieldSet);\n                }).finally(() => {\n                    this.isCustomFieldLoading = true;\n                });\n        },\n\n        onSaveCategories() {\n            return this.categoryRepository.save(this.category);\n        },\n\n        openChangeModal(destination) {\n            this.nextRoute = destination;\n            this.isDisplayingLeavePageWarning = true;\n        },\n\n        onLeaveModalClose() {\n            this.nextRoute = null;\n            this.isDisplayingLeavePageWarning = false;\n        },\n\n        onLeaveModalConfirm(destination) {\n            // Discard all category related errors that may have occurred\n            Shopware.State.dispatch(\n                'error/removeApiError',\n                { expression: 'category' },\n            );\n\n            this.forceDiscardChanges = true;\n            this.isDisplayingLeavePageWarning = false;\n\n            this.$nextTick(() => {\n                this.$router.push({ name: destination.name, params: destination.params });\n            });\n        },\n\n        cancelEdit() {\n            this.resetCategory();\n        },\n\n        resetCategory() {\n            this.$router.push({ name: 'sw.category.index' });\n        },\n\n        onChangeLanguage(newLanguageId) {\n            this.currentLanguageId = newLanguageId;\n\n            if (this.landingPageId !== null) {\n                this.setLandingPage();\n            }\n\n            this.setCategory();\n        },\n\n        abortOnLanguageChange() {\n            if (this.landingPage) {\n                return this.landingPage ? this.categoryRepository.hasChanges(this.landingPage) : false;\n            }\n\n            return this.category ? this.categoryRepository.hasChanges(this.category) : false;\n        },\n\n        saveOnLanguageChange() {\n            if (this.landingPage) {\n                return this.onSaveLandingPage();\n            }\n\n            return this.onSave();\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        async onSave() {\n            this.isSaveSuccessful = false;\n\n            const pageOverrides = this.getCmsPageOverrides();\n\n            if (type.isPlainObject(pageOverrides)) {\n                this.category.slotConfig = cloneDeep(pageOverrides);\n            }\n\n            if (!this.entryPointOverwriteConfirmed) {\n                this.checkForEntryPointOverwrite();\n                if (this.showEntryPointOverwriteModal) {\n                    return Promise.resolve();\n                }\n            }\n\n            this.isLoading = true;\n            await this.updateSeoUrls();\n\n            return this.categoryRepository.save(this.category, { ...Shopware.Context.api }).then(() => {\n                this.isSaveSuccessful = true;\n                this.entryPointOverwriteConfirmed = false;\n                return this.setCategory();\n            }).catch(() => {\n                this.isLoading = false;\n                this.entryPointOverwriteConfirmed = false;\n\n                this.createNotificationError({\n                    message: this.$tc(\n                        'global.notification.notificationSaveErrorMessageRequiredFieldsInvalid',\n                    ),\n                });\n            });\n        },\n\n        checkForEntryPointOverwrite() {\n            this.entryPointOverwriteSalesChannels = new EntityCollection('/sales_channel', 'sales_channel', Context.api);\n\n            this.category.navigationSalesChannels.forEach((salesChannel) => {\n                if (salesChannel.navigationCategoryId !== null && salesChannel.navigationCategoryId !== this.categoryId) {\n                    this.entryPointOverwriteSalesChannels.add(salesChannel);\n                }\n            });\n\n            this.category.footerSalesChannels.forEach((salesChannel) => {\n                if (salesChannel.footerCategoryId !== null && salesChannel.footerCategoryId !== this.categoryId) {\n                    this.entryPointOverwriteSalesChannels.add(salesChannel);\n                }\n            });\n\n            this.category.serviceSalesChannels.forEach((salesChannel) => {\n                if (salesChannel.serviceCategoryId !== null && salesChannel.serviceCategoryId !== this.categoryId) {\n                    this.entryPointOverwriteSalesChannels.add(salesChannel);\n                }\n            });\n        },\n\n        cancelEntryPointOverwrite() {\n            this.entryPointOverwriteSalesChannels = null;\n        },\n\n        confirmEntryPointOverwrite() {\n            this.entryPointOverwriteSalesChannels = null;\n            this.entryPointOverwriteConfirmed = true;\n            this.$nextTick(() => {\n                this.onSave();\n            });\n        },\n\n        onSaveLandingPage() {\n            this.isSaveSuccessful = false;\n\n            const pageOverrides = this.getCmsPageOverrides();\n\n            if (type.isPlainObject(pageOverrides)) {\n                this.landingPage.slotConfig = cloneDeep(pageOverrides);\n            }\n\n            if (this.landingPageId !== 'create') {\n                if (this.landingPage.salesChannels.length === 0) {\n                    this.addLandingPageSalesChannelError();\n\n                    return Promise.resolve();\n                }\n            }\n\n            this.isLoading = true;\n            return this.landingPageRepository.save(this.landingPage, Shopware.Context.api).then(() => {\n                this.isSaveSuccessful = true;\n\n                if (this.landingPageId === 'create') {\n                    this.$router.push({ name: 'sw.category.landingPageDetail', params: { id: this.landingPage.id } });\n                    return Promise.resolve();\n                }\n\n                return this.setLandingPage();\n            }).catch(() => {\n                this.isLoading = false;\n\n                if (this.landingPage.salesChannels.length === 0) {\n                    this.addLandingPageSalesChannelError();\n\n                    return;\n                }\n\n                this.createNotificationError({\n                    message: this.$tc(\n                        'global.notification.notificationSaveErrorMessageRequiredFieldsInvalid',\n                    ),\n                });\n            });\n        },\n\n        addLandingPageSalesChannelError() {\n            const shopwareError = new Shopware.Classes.ShopwareError(\n                {\n                    code: 'landing_page_sales_channel_blank',\n                    detail: 'This value should not be blank.',\n                    status: '400',\n                },\n            );\n\n            Shopware.State.dispatch(\n                'error/addApiError',\n                {\n                    expression: `landing_page.${this.landingPage.id}.salesChannels`,\n                    error: shopwareError,\n                },\n            );\n\n            this.createNotificationError({\n                message: this.$tc(\n                    'global.notification.notificationSaveErrorMessageRequiredFieldsInvalid',\n                ),\n            });\n        },\n\n        getCmsPageOverrides() {\n            if (this.cmsPage === null) {\n                return null;\n            }\n\n            this.deleteSpecifcKeys(this.cmsPage.sections);\n\n            const { changes } = this.changesetGenerator.generate(this.cmsPage);\n\n            const slotOverrides = {};\n            if (changes === null) {\n                return slotOverrides;\n            }\n\n            if (type.isArray(changes.sections)) {\n                changes.sections.forEach((section) => {\n                    if (type.isArray(section.blocks)) {\n                        section.blocks.forEach((block) => {\n                            if (type.isArray(block.slots)) {\n                                block.slots.forEach((slot) => {\n                                    slotOverrides[slot.id] = slot.config;\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n\n            return slotOverrides;\n        },\n\n        deleteSpecifcKeys(sections) {\n            if (!sections) {\n                return;\n            }\n\n            sections.forEach((section) => {\n                if (!section.blocks) {\n                    return;\n                }\n\n                section.blocks.forEach((block) => {\n                    if (!block.slots) {\n                        return;\n                    }\n\n                    block.slots.forEach((slot) => {\n                        if (!slot.config) {\n                            return;\n                        }\n\n                        Object.values(slot.config).forEach((configField) => {\n                            if (configField.entity) {\n                                delete configField.entity;\n                            }\n                            if (configField.hasOwnProperty('required')) {\n                                delete configField.required;\n                            }\n                            if (configField.type) {\n                                delete configField.type;\n                            }\n                        });\n                    });\n                });\n            });\n        },\n\n        updateSeoUrls() {\n            if (!Shopware.State.list().includes('swSeoUrl')) {\n                return Promise.resolve();\n            }\n\n            const seoUrls = Shopware.State.getters['swSeoUrl/getNewOrModifiedUrls']();\n\n            return Promise.all(seoUrls.map((seoUrl) => {\n                if (seoUrl.seoPathInfo) {\n                    seoUrl.isModified = true;\n                    return this.seoUrlService.updateCanonicalUrl(seoUrl, seoUrl.languageId);\n                }\n\n                return Promise.resolve();\n            }));\n        },\n\n        onLandingPageDelete() {\n            Shopware.State.commit('swCategoryDetail/setLandingPagesToDelete', {\n                landingPagesToDelete: null,\n            });\n        },\n\n        onCategoryDelete() {\n            Shopware.State.commit('swCategoryDetail/setCategoriesToDelete', {\n                categoriesToDelete: null,\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_category %}\\n<sw-page\\n    class=\\\"sw-category\\\"\\n    :class=\\\"pageClasses\\\"\\n>\\n    <template #search-bar>\\n        \\n        {% block sw_category_search_bar %}\\n        <sw-search-bar\\n            ref=\\\"searchBar\\\"\\n            initial-search-type=\\\"category\\\"\\n            :initial-search=\\\"term\\\"\\n            type-search-always-in-container\\n            @search=\\\"onSearch\\\"\\n        />\\n        {% endblock %}\\n    </template>\\n\\n    <template #smart-bar-header>\\n        \\n        {% block sw_category_smart_bar_header %}\\n        <h2 v-if=\\\"category\\\">\\n            {{ placeholder(category, 'name') }}\\n        </h2>\\n        <h2 v-else>\\n            {{ $tc('sw-category.general.headlineCategories') }}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n\\n    <template #language-switch>\\n        \\n        {% block sw_category_language_switch %}\\n        <sw-language-switch\\n            :save-changes-function=\\\"saveOnLanguageChange\\\"\\n            :abort-change-function=\\\"abortOnLanguageChange\\\"\\n            :disabled=\\\"landingPageId === 'create'\\\"\\n            @on-change=\\\"onChangeLanguage\\\"\\n        />\\n        {% endblock %}\\n    </template>\\n\\n    <template #smart-bar-actions>\\n        <template v-if=\\\"category || landingPage\\\">\\n            \\n            {% block sw_category_smart_bar_abort %}\\n            <sw-button\\n                v-tooltip.bottom=\\\"tooltipCancel\\\"\\n                :disabled=\\\"isLoading\\\"\\n                @click=\\\"cancelEdit\\\"\\n            >\\n                {{ $tc('sw-product.detail.buttonCancel') }}\\n            </sw-button>\\n            {% endblock %}\\n\\n            \\n            {% block sw_category_smart_bar_save %}\\n\\n            \\n            {% block sw_category_smart_bar_save_category %}\\n            <sw-button-process\\n                v-if=\\\"category\\\"\\n                v-tooltip.bottom=\\\"tooltipSave\\\"\\n                class=\\\"sw-category-detail__save-action\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :process-success=\\\"isSaveSuccessful\\\"\\n                :disabled=\\\"isLoading || !acl.can('category.editor')\\\"\\n                variant=\\\"primary\\\"\\n                {% if VUE3 %}\\n                @update:process-success=\\\"saveFinish\\\"\\n                {% else %}\\n                @process-finish=\\\"saveFinish\\\"\\n                {% endif %}\\n                @click.prevent=\\\"onSave\\\"\\n            >\\n                {{ $tc('sw-category.general.buttonSafeCategory') }}\\n            </sw-button-process>\\n            {% endblock %}\\n\\n            \\n            {% block sw_category_smart_bar_save_landing_page %}\\n            <sw-button-process\\n                v-if=\\\"landingPage\\\"\\n                v-tooltip.bottom=\\\"landingPageTooltipSave\\\"\\n                class=\\\"sw-category-detail__save-landing-page-action\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :process-success=\\\"isSaveSuccessful\\\"\\n                :disabled=\\\"isLoading || !acl.can('landing_page.editor')\\\"\\n                variant=\\\"primary\\\"\\n                {% if VUE3 %}\\n                @update:process-success=\\\"saveFinish\\\"\\n                {% else %}\\n                @process-finish=\\\"saveFinish\\\"\\n                {% endif %}\\n                @click.prevent=\\\"onSaveLandingPage\\\"\\n            >\\n                {{ $tc('sw-category.general.buttonSafeCategory') }}\\n            </sw-button-process>\\n            {% endblock %}\\n            {% endblock %}\\n        </template>\\n    </template>\\n\\n    <template #side-content>\\n        \\n        {% block sw_category_side_content %}\\n\\n        \\n        {% block sw_category_collapse %}\\n        <sw-sidebar-collapse\\n            class=\\\"sw-category-detail__category-collapse\\\"\\n            :expand-on-loading=\\\"landingPageId === null\\\"\\n        >\\n            <template #header>\\n\\n                \\n                {% block sw_category_collapse_header %}\\n                <div\\n                    v-if=\\\"categoryCheckedItem > 0\\\"\\n                    class=\\\"sw-category-detail__collapse-selected-count\\\"\\n                >\\n                    {{ $tc(`sw-category.general.treeHeadSelected`, 0, { count: categoryCheckedItem }) }}:\\n                </div>\\n                <div\\n                    v-else\\n                    class=\\\"sw-category-detail__collapse-headline\\\"\\n                >\\n                    {{ $tc(`sw-category.general.treeHeadline`) }}\\n                </div>\\n                {% endblock %}\\n\\n            </template>\\n\\n            <template #actions>\\n\\n                \\n                {% block sw_category_collapse_actions %}\\n                <div v-if=\\\"categoryCheckedItem > 0\\\">\\n                    <sw-button\\n                        class=\\\"sw-tree-actions__delete_categories\\\"\\n                        variant=\\\"danger\\\"\\n                        size=\\\"small\\\"\\n                        @click=\\\"onCategoryDelete\\\"\\n                    >\\n                        {{ $tc('global.default.delete') }}\\n                    </sw-button>\\n                </div>\\n                {% endblock %}\\n\\n            </template>\\n\\n            <template #content>\\n\\n                \\n                {% block sw_category_tree %}\\n                <sw-category-tree\\n                    ref=\\\"categoryTree\\\"\\n                    :category-id=\\\"categoryId\\\"\\n                    :current-language-id=\\\"currentLanguageId\\\"\\n                    :allow-edit=\\\"acl.can('category.editor')\\\"\\n                    :allow-create=\\\"acl.can('category.creator')\\\"\\n                    :allow-delete=\\\"acl.can('category.deleter')\\\"\\n                    @unsaved-changes=\\\"openChangeModal\\\"\\n                    @category-checked-elements-count=\\\"categoryCheckedElementsCount\\\"\\n                />\\n                {% endblock %}\\n\\n            </template>\\n        </sw-sidebar-collapse>\\n        {% endblock %}\\n\\n        \\n        {% block sw_landing_page_collapse %}\\n        <sw-sidebar-collapse\\n            class=\\\"sw-category-detail__landing-page-collapse\\\"\\n            :expand-on-loading=\\\"landingPageId !== null\\\"\\n        >\\n            <template #header>\\n\\n                \\n                {% block sw_landing_page_collapse_header %}\\n                <div\\n                    v-if=\\\"landingPageCheckedItem > 0\\\"\\n                    class=\\\"sw-category-detail__collapse-selected-count\\\"\\n                >\\n                    {{ $tc(`sw-landing-page.general.treeHeadSelected`, 0, { count: landingPageCheckedItem }) }}:\\n                </div>\\n                <div\\n                    v-else\\n                    class=\\\"sw-category-detail__collapse-headline\\\"\\n                >\\n                    {{ $tc(`sw-landing-page.general.treeHeadline`) }}\\n                </div>\\n                {% endblock %}\\n\\n            </template>\\n\\n            <template #actions>\\n\\n                \\n                {% block sw_landing_page_collapse_actions %}\\n                <div v-if=\\\"landingPageCheckedItem > 0\\\">\\n                    <sw-button\\n                        class=\\\"sw-tree-actions__delete_categories\\\"\\n                        variant=\\\"danger\\\"\\n                        size=\\\"small\\\"\\n                        @click=\\\"onLandingPageDelete\\\"\\n                    >\\n                        {{ $tc('global.default.delete') }}\\n                    </sw-button>\\n                </div>\\n                {% endblock %}\\n\\n            </template>\\n\\n            <template #content>\\n\\n                \\n                {% block sw_landing_page_tree %}\\n                <sw-landing-page-tree\\n                    ref=\\\"landingPageTree\\\"\\n                    :landing-page-id=\\\"landingPageId\\\"\\n                    :current-language-id=\\\"currentLanguageId\\\"\\n                    :allow-edit=\\\"acl.can('landing_page.editor')\\\"\\n                    :allow-create=\\\"acl.can('landing_page.creator')\\\"\\n                    :allow-delete=\\\"acl.can('landing_page.deleter')\\\"\\n                    @unsaved-changes=\\\"openChangeModal\\\"\\n                    @landing-page-checked-elements-count=\\\"landingPageCheckedElementsCount\\\"\\n                />\\n                {% endblock %}\\n\\n            </template>\\n        </sw-sidebar-collapse>\\n        {% endblock %}\\n        {% endblock %}\\n    </template>\\n\\n    \\n    {% block sw_category_content %}\\n    <template #content>\\n\\n        <template v-if=\\\"isLoading\\\">\\n            <sw-skeleton variant=\\\"detail-bold\\\" />\\n            <sw-skeleton />\\n        </template>\\n\\n        <template v-else>\\n            \\n            {% block sw_category_content_view %}\\n            <sw-category-view\\n                v-if=\\\"category\\\"\\n                ref=\\\"categoryView\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :type=\\\"category.type\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_category_content_entry_point_overwrite_modal %}\\n            <sw-category-entry-point-overwrite-modal\\n                v-if=\\\"showEntryPointOverwriteModal\\\"\\n                :sales-channels=\\\"entryPointOverwriteSalesChannels\\\"\\n                @cancel=\\\"cancelEntryPointOverwrite\\\"\\n                @confirm=\\\"confirmEntryPointOverwrite\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_landing_page_content_view %}\\n            <sw-landing-page-view\\n                v-if=\\\"landingPage\\\"\\n                ref=\\\"landingPageView\\\"\\n                :is-loading=\\\"isLoading\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_category_content_discard_changes_modal %}\\n            <sw-discard-changes-modal\\n                v-if=\\\"isDisplayingLeavePageWarning\\\"\\n                @keep-editing=\\\"onLeaveModalClose(nextRoute)\\\"\\n                @discard-changes=\\\"onLeaveModalConfirm(nextRoute)\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_category_content_empty %}\\n            <sw-empty-state\\n                v-if=\\\"showEmptyState\\\"\\n                :title=\\\"$tc('sw-category.general.emptyStateHeadline')\\\"\\n            >\\n                <template #icon>\\n                    <img\\n                        :src=\\\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\\\"\\n                        :alt=\\\"$tc('sw-category.general.emptyStateHeadline')\\\"\\n                    >\\n                </template>\\n            </sw-empty-state>\\n        {% endblock %}\\n\\n        </template>\\n    </template>\\n    {% endblock %}\\n\\n</sw-page>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-category-detail.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"21945f00\", content, true, {});"],"sourceRoot":""}