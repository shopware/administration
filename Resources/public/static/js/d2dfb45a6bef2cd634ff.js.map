{"version":3,"sources":["webpack:///./src/module/sw-cms/elements/text/config/sw-cms-el-config-text.html.twig","webpack:///./src/module/sw-cms/elements/text/config/index.js"],"names":["Mixin","Shopware","template","mixins","getByName","created","this","createdComponent","methods","initElementConfig","onBlur","content","emitChanges","onInput","element","config","value","$emit"],"mappings":"4HAAe,ICEPA,EAAUC,SAAVD,MAMO,WACXE,SDTW,mgHCWXC,OAAQ,CACJH,EAAMI,UAAU,gBAGpBC,QAAO,WACHC,KAAKC,oBAGTC,QAAS,CACLD,iBAAgB,WACZD,KAAKG,kBAAkB,SAG3BC,OAAM,SAACC,GACHL,KAAKM,YAAYD,IAGrBE,QAAO,SAACF,GACJL,KAAKM,YAAYD,IAGrBC,YAAW,SAACD,GACJA,IAAYL,KAAKQ,QAAQC,OAAOJ,QAAQK,QACxCV,KAAKQ,QAAQC,OAAOJ,QAAQK,MAAQL,EACpCL,KAAKW,MAAM,iBAAkBX,KAAKQ","file":"static/js/d2dfb45a6bef2cd634ff.js","sourcesContent":["export default \"\\n{% block sw_cms_el_config_text %}\\n<sw-tabs\\n    position-identifier=\\\"sw-cms-element-config-text\\\"\\n    class=\\\"sw-cms-el-config-text__tabs\\\"\\n    default-item=\\\"content\\\"\\n>\\n\\n    <template #default=\\\"{ active }\\\">\\n        \\n        {% block sw_cms_el_config_text_tab_content %}\\n        <sw-tabs-item\\n            :title=\\\"$tc('sw-cms.elements.general.config.tab.content')\\\"\\n            name=\\\"content\\\"\\n            :active-tab=\\\"active\\\"\\n        >\\n            {{ $tc('sw-cms.elements.general.config.tab.content') }}\\n        </sw-tabs-item>\\n        {% endblock %}\\n        \\n        {% block sw_cms_el_text_config_tab_options %}\\n        <sw-tabs-item\\n            :title=\\\"$tc('sw-cms.elements.general.config.tab.settings')\\\"\\n            name=\\\"settings\\\"\\n            :active-tab=\\\"active\\\"\\n        >\\n            {{ $tc('sw-cms.elements.general.config.tab.settings') }}\\n        </sw-tabs-item>\\n        {% endblock %}\\n    </template>\\n\\n    <template\\n        #content=\\\"{ active }\\\"\\n    >\\n        \\n        {% block sw_cms_el_text_config_content %}\\n        <sw-container\\n            v-if=\\\"active === 'content'\\\"\\n            class=\\\"sw-cms-el-config-text__tab-content\\\"\\n        >\\n            <sw-cms-mapping-field\\n                {% if VUE3 %}\\n                v-model:config=\\\"element.config.content\\\"\\n                {% else %}\\n                v-model=\\\"element.config.content\\\"\\n                {% endif %}\\n                :label=\\\"$tc('sw-cms.elements.text.config.label.content')\\\"\\n                value-types=\\\"string\\\"\\n            >\\n                <sw-text-editor\\n                    :value=\\\"element.config.content.value\\\"\\n                    :allow-inline-data-mapping=\\\"true\\\"\\n                    sanitize-input\\n                    enable-transparent-background\\n                    @input=\\\"onInput\\\"\\n                    @blur=\\\"onBlur\\\"\\n                />\\n\\n                <template #preview=\\\"{ demoValue }\\\">\\n                    <div class=\\\"sw-cms-el-config-text__mapping-preview\\\">\\n                        <div v-html=\\\"$sanitize(demoValue)\\\"></div>\\n                    </div>\\n                </template>\\n            </sw-cms-mapping-field>\\n        </sw-container>\\n        {% endblock %}\\n\\n        \\n        {% block sw_cms_el_text_config_settings %}\\n        <sw-container\\n            v-if=\\\"active === 'settings'\\\"\\n            class=\\\"sw-cms-el-config-text__tab-settings\\\"\\n        >\\n            \\n            {% block sw_cms_el_text_config_settings_vertical_align %}\\n            <sw-select-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"element.config.verticalAlign.value\\\"\\n                {% else %}\\n                v-model=\\\"element.config.verticalAlign.value\\\"\\n                {% endif %}\\n                :label=\\\"$tc('sw-cms.elements.general.config.label.verticalAlign')\\\"\\n                :placeholder=\\\"$tc('sw-cms.elements.general.config.label.verticalAlign')\\\"\\n            >\\n                <option value=\\\"flex-start\\\">\\n                    {{ $tc('sw-cms.elements.general.config.label.verticalAlignTop') }}\\n                </option>\\n                <option value=\\\"center\\\">\\n                    {{ $tc('sw-cms.elements.general.config.label.verticalAlignCenter') }}\\n                </option>\\n                <option value=\\\"flex-end\\\">\\n                    {{ $tc('sw-cms.elements.general.config.label.verticalAlignBottom') }}\\n                </option>\\n            </sw-select-field>\\n            {% endblock %}\\n        </sw-container>\\n        {% endblock %}\\n    </template>\\n</sw-tabs>\\n{% endblock %}\\n\";","import template from './sw-cms-el-config-text.html.twig';\n\nconst { Mixin } = Shopware;\n\n/**\n * @private\n * @package buyers-experience\n */\nexport default {\n    template,\n\n    mixins: [\n        Mixin.getByName('cms-element'),\n    ],\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.initElementConfig('text');\n        },\n\n        onBlur(content) {\n            this.emitChanges(content);\n        },\n\n        onInput(content) {\n            this.emitChanges(content);\n        },\n\n        emitChanges(content) {\n            if (content !== this.element.config.content.value) {\n                this.element.config.content.value = content;\n                this.$emit('element-update', this.element);\n            }\n        },\n    },\n};\n"],"sourceRoot":""}