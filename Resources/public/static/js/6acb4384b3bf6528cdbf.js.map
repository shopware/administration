{"version":3,"sources":["webpack:///./src/module/sw-settings-seo/component/sw-seo-url/state.js","webpack:///./src/module/sw-settings-seo/component/sw-seo-url/index.js","webpack:///./src/module/sw-settings-seo/component/sw-seo-url/sw-seo-url.html.twig"],"names":["namespaced","state","salesChannelCollection","seoUrlCollection","originalSeoUrls","defaultSeoUrl","currentSeoUrl","mutations","setSeoUrlCollection","setOriginalSeoUrls","setCurrentSeoUrl","setDefaultSeoUrl","setSalesChannelCollection","getters","isLoading","loading","getNewOrModifiedUrls","seoUrls","forEach","seoUrl","seoPathInfo","originalSeoUrl","find","url","id","push","Criteria","Shopware","Data","EntityCollection","template","inject","mixins","props","salesChannelId","type","String","required","default","urls","Array","Boolean","hasDefaultTemplate","disabled","resultLimit","Number","data","currentSalesChannelId","this","showEmptySeoUrlError","computed","State","get","seoUrlRepository","repositoryFactory","create","salesChannelRepository","isHeadlessSalesChannel","_this","salesChannel","entry","typeId","seoUrlHelptext","$tc","hasAdditionalSeoSlot","$scopedSlots","hasOwnProperty","allowInput","watch","initSeoUrlCollection","refreshCurrentSeoUrl","beforeCreate","list","includes","registerModule","swSeoUrlState","created","$root","$on","clearDefaultSeoUrls","createdComponent","beforeDestroy","$off","unregisterModule","methods","initSalesChannelCollection","salesChannelCriteria","addAssociation","search","then","commit","_this2","route","schema","entity","Context","api","defaultSeoUrlData","entityData","undefined","length","defaultSeoUrlEntity","Object","assign","add","_this3","_this4","actualLanguageId","languageId","_this$defaultSeoUrl$f","_this$defaultSeoUrl","_this$defaultSeoUrl$r","_this$defaultSeoUrl2","_this$defaultSeoUrl$p","_this$defaultSeoUrl3","item","pathInfo","routeName","foreignKey","isCanonical","isModified","onSalesChannelChanged","$emit"],"mappings":"4HAMe,OACXA,YAAY,EAEZC,MAAK,WACD,MAAO,CACHC,uBAAwB,KACxBC,iBAAkB,KAClBC,gBAAiB,GACjBC,cAAe,KACfC,cAAe,OAIvBC,UAAW,CACPC,oBAAmB,SAACP,EAAOE,GACvBF,EAAME,iBAAmBA,GAG7BM,mBAAkB,SAACR,EAAOG,GACtBH,EAAMG,gBAAkBA,GAG5BM,iBAAgB,SAACT,EAAOK,GACpBL,EAAMK,cAAgBA,GAG1BK,iBAAgB,SAACV,EAAOI,GACpBJ,EAAMI,cAAgBA,GAG1BO,0BAAyB,SAACX,EAAOC,GAC7BD,EAAMC,uBAAyBA,IAIvCW,QAAS,CACLC,UAAW,SAACb,GACR,OAAOA,EAAMc,SAGjBC,qBAAsB,SAACf,GACnB,OAAO,WACH,IAAMgB,EAAU,GAsBhB,OApBAhB,EAAME,iBAAiBe,SAAQ,SAACC,GAC5B,GAA2B,OAAvBA,EAAOC,YAAX,CAIA,IAAMC,EAAiBpB,EAAMG,gBAAgBkB,MAAK,SAACC,GAC/C,OAAOA,EAAIC,KAAOL,EAAOK,MAGzBH,GAAkBA,EAAeD,cAAgBD,EAAOC,cAIvDC,GAAmBF,EAAOC,cAI/BH,EAAQQ,KAAKN,OAGVF,MC/DjBS,EAAWC,SAASC,KAAKF,SACzBG,EAAmBF,SAASC,KAAKC,iBAGxB,WACXC,SCZW,wzFDcXC,OAAQ,CAAC,qBAETC,OAAQ,GAERC,MAAO,CACHC,eAAgB,CACZC,KAAMC,OACNC,UAAU,EACVC,QAAS,MAGbC,KAAM,CACFJ,KAAMK,MACNH,UAAU,EACVC,QAAO,WACH,MAAO,KAIfxB,UAAW,CACPqB,KAAMM,QACNJ,UAAU,EACVC,SAAS,GAGbI,mBAAoB,CAChBP,KAAMM,QACNJ,UAAU,EAGVC,SAAS,GAGbK,SAAU,CACNR,KAAMM,QACNJ,UAAU,EACVC,SAAS,GAGbM,YAAa,CACTT,KAAMU,OACNR,UAAU,EACVC,QAAS,KAIjBQ,KAAI,WACA,MAAO,CACHC,sBAAuBC,KAAKd,eAC5Be,sBAAsB,IAI9BC,SAAU,CACN/C,iBAAgB,WACZ,OAAOwB,SAASwB,MAAMC,IAAI,YAAYjD,kBAG1CG,cAAa,WACT,OAAKqB,SAASwB,MAAMC,IAAI,YAIjBzB,SAASwB,MAAMC,IAAI,YAAY9C,cAH3B,IAMfD,cAAa,WACT,OAAOsB,SAASwB,MAAMC,IAAI,YAAY/C,eAG1CgD,iBAAgB,WACZ,OAAOL,KAAKM,kBAAkBC,OAAO,YAGzCC,uBAAsB,WAClB,OAAOR,KAAKM,kBAAkBC,OAAO,kBAGzCE,uBAAsB,WAAI,IAADC,EAAA,KACrB,IAAK/B,SAASwB,MAAMC,IAAI,YACpB,OAAO,EAGX,GAA8D,OAA1DzB,SAASwB,MAAMC,IAAI,YAAYlD,uBAC/B,OAAO,EAGX,IAAMyD,EAAehC,SAASwB,MAAMC,IAAI,YAAYlD,uBAAuBoB,MAAK,SAACsC,GAC7E,OAAOA,EAAMpC,KAAOkC,EAAKX,yBAI7B,OAAsC,OAA/BC,KAAKD,uBAA2D,sCAAzBY,aAAY,EAAZA,EAAcE,SAGhEC,eAAc,WACV,OAAOd,KAAKS,uBAAyBT,KAAKe,IAAI,+CAAiD,MAGnGC,qBAAoB,WAChB,OAAOhB,KAAKiB,aAAaC,eAAe,mBAG5CC,WAAU,WACN,OAAOnB,KAAKN,oBAAqD,OAA/BM,KAAKD,wBAI/CqB,MAAO,CACH7B,KAAI,WACAS,KAAKqB,uBACLrB,KAAKsB,yBAIbC,aAAY,WAEH5C,SAASwB,MAAMqB,OAAOC,SAAS,aAChC9C,SAASwB,MAAMuB,eAAe,WAAYC,IAIlDC,QAAO,WACH5B,KAAK6B,MAAMC,IAAI,sBAAuB9B,KAAK+B,qBAC3C/B,KAAKgC,oBAGTC,cAAa,WACTjC,KAAK6B,MAAMK,KAAK,sBAAuBlC,KAAK+B,qBAC5CpD,SAASwB,MAAMgC,iBAAiB,aAGpCC,QAAS,CACLJ,iBAAgB,WACZhC,KAAKqC,6BACLrC,KAAKqB,uBACArB,KAAKC,sBACND,KAAKsB,wBAIbe,2BAA0B,WACtB,IAAMC,EAAuB,IAAI5D,EAAS,EAAGsB,KAAKJ,aAClD0C,EAAqBC,eAAe,QAEpCvC,KAAKQ,uBAAuBgC,OAAOF,GAAsBG,MAAK,SAACvF,GAC3DyB,SAASwB,MAAMuC,OAAO,qCAAsCxF,OAIpEmE,qBAAoB,WAAI,IAADsB,EAAA,KACnB3C,KAAKC,sBAAuB,EAC5B,IAAM9C,EAAmB,IAAI0B,EACzBmB,KAAKK,iBAAiBuC,MACtB5C,KAAKK,iBAAiBwC,OAAOC,OAC7BnE,SAASoE,QAAQC,IACjB,IAAItE,EAAS,EAAGsB,KAAKJ,cAGnBqD,EAAoBjD,KAAKT,KAAKjB,MAAK,SAAC4E,GACtC,OAAqC,OAA9BA,EAAWhE,uBAGIiE,IAAtBF,IAAoCjD,KAAKN,oBAAsBM,KAAKT,KAAK6D,QAAU,KACnFpD,KAAKC,sBAAuB,GAGhC,IAAMoD,EAAsBrD,KAAKK,iBAAiBE,SAClD+C,OAAOC,OAAOF,EAAqBJ,GACnC9F,EAAiBqG,IAAIH,GACrB1E,SAASwB,MAAMuC,OAAO,4BAA6BW,GAEnDrD,KAAKT,KAAKrB,SAAQ,SAACgF,GACf,IAAMJ,EAASH,EAAKtC,iBAAiBE,SACrC+C,OAAOC,OAAOT,EAAQI,GAEtB/F,EAAiBqG,IAAIV,MAGpBnE,SAASwB,MAAMC,IAAI,YAAY/C,gBAChC2C,KAAKC,sBAAuB,GAGhCtB,SAASwB,MAAMuC,OAAO,+BAAgCvF,GACtDwB,SAASwB,MAAMuC,OAAO,8BAA+B1C,KAAKT,MAC1DS,KAAK+B,uBAGTA,oBAAmB,WAAI,IAAD0B,EAAA,KAClBzD,KAAK7C,iBAAiBe,SAAQ,SAAC4E,GACvBA,EAAOtE,KAAOiF,EAAKpG,cAAcmB,IAIjCsE,EAAO1E,cAAgBqF,EAAKpG,cAAce,cAC1C0E,EAAO1E,YAAc,UAKjCkD,qBAAoB,WAAI,IAADoC,EAAA,KACbC,EAAmBhF,SAASoE,QAAQC,IAAIY,WAExCtG,EAAgB0C,KAAK7C,iBAAiBmB,MAAK,SAACwE,GAC9C,OAAOA,EAAOc,aAAeD,GAAoBb,EAAO5D,iBAAmBwE,EAAK3D,yBAGpF,IAAKzC,EAAe,CAAC,IAADuG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACVpB,EAAS9C,KAAKK,iBAAiBE,SAE/BpC,EAAS6B,KAAK7C,iBAAiBmB,MAAK,SAAC6F,GACvC,OAAOA,EAAKC,UAAYD,EAAKE,WAAaF,EAAKG,eAC7C,GAcN,OAZAxB,EAAOwB,WAA2C,QAAjCT,EAAqB,QAArBC,EAAG9D,KAAK3C,qBAAa,IAAAyG,OAAA,EAAlBA,EAAoBQ,kBAAU,IAAAT,IAAI1F,EAAOmG,WAC7DxB,EAAOyB,aAAc,EACrBzB,EAAOc,WAAaD,EACpBb,EAAO5D,eAAiBc,KAAKD,sBAC7B+C,EAAOuB,UAAyC,QAAhCN,EAAqB,QAArBC,EAAGhE,KAAK3C,qBAAa,IAAA2G,OAAA,EAAlBA,EAAoBK,iBAAS,IAAAN,IAAI5F,EAAOkG,UAC3DvB,EAAOsB,SAAuC,QAA/BH,EAAqB,QAArBC,EAAGlE,KAAK3C,qBAAa,IAAA6G,OAAA,EAAlBA,EAAoBE,gBAAQ,IAAAH,IAAI9F,EAAOiG,SACzDtB,EAAO0B,YAAa,EAEpBxE,KAAK7C,iBAAiBqG,IAAIV,QAE1BnE,SAASwB,MAAMuC,OAAO,4BAA6BI,GAKvDnE,SAASwB,MAAMuC,OAAO,4BAA6BpF,IAEvDmH,sBAAqB,SAACvF,GAClBc,KAAKD,sBAAwBb,EAC7Bc,KAAK0E,MAAM,0BAA2BxF,GACtCc,KAAKsB","file":"static/js/6acb4384b3bf6528cdbf.js","sourcesContent":["/**\n * @package buyers-experience\n */\n\n// Store\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    namespaced: true,\n\n    state() {\n        return {\n            salesChannelCollection: null,\n            seoUrlCollection: null,\n            originalSeoUrls: [],\n            defaultSeoUrl: null,\n            currentSeoUrl: null,\n        };\n    },\n\n    mutations: {\n        setSeoUrlCollection(state, seoUrlCollection) {\n            state.seoUrlCollection = seoUrlCollection;\n        },\n\n        setOriginalSeoUrls(state, originalSeoUrls) {\n            state.originalSeoUrls = originalSeoUrls;\n        },\n\n        setCurrentSeoUrl(state, currentSeoUrl) {\n            state.currentSeoUrl = currentSeoUrl;\n        },\n\n        setDefaultSeoUrl(state, defaultSeoUrl) {\n            state.defaultSeoUrl = defaultSeoUrl;\n        },\n\n        setSalesChannelCollection(state, salesChannelCollection) {\n            state.salesChannelCollection = salesChannelCollection;\n        },\n    },\n\n    getters: {\n        isLoading: (state) => {\n            return state.loading;\n        },\n\n        getNewOrModifiedUrls: (state) => {\n            return () => {\n                const seoUrls = [];\n\n                state.seoUrlCollection.forEach((seoUrl) => {\n                    if (seoUrl.seoPathInfo === null) {\n                        return;\n                    }\n\n                    const originalSeoUrl = state.originalSeoUrls.find((url) => {\n                        return url.id === seoUrl.id;\n                    });\n\n                    if (originalSeoUrl && originalSeoUrl.seoPathInfo === seoUrl.seoPathInfo) {\n                        return;\n                    }\n\n                    if (!originalSeoUrl && !seoUrl.seoPathInfo) {\n                        return;\n                    }\n\n                    seoUrls.push(seoUrl);\n                });\n\n                return seoUrls;\n            };\n        },\n    },\n};\n","/**\n * @package buyers-experience\n */\n\nimport swSeoUrlState from './state';\nimport template from './sw-seo-url.html.twig';\n\nconst Criteria = Shopware.Data.Criteria;\nconst EntityCollection = Shopware.Data.EntityCollection;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    mixins: [],\n\n    props: {\n        salesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        urls: {\n            type: Array,\n            required: false,\n            default() {\n                return [];\n            },\n        },\n\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        hasDefaultTemplate: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        resultLimit: {\n            type: Number,\n            required: false,\n            default: 25,\n        },\n    },\n\n    data() {\n        return {\n            currentSalesChannelId: this.salesChannelId,\n            showEmptySeoUrlError: false,\n        };\n    },\n\n    computed: {\n        seoUrlCollection() {\n            return Shopware.State.get('swSeoUrl').seoUrlCollection;\n        },\n\n        currentSeoUrl() {\n            if (!Shopware.State.get('swSeoUrl')) {\n                return {};\n            }\n\n            return Shopware.State.get('swSeoUrl').currentSeoUrl;\n        },\n\n        defaultSeoUrl() {\n            return Shopware.State.get('swSeoUrl').defaultSeoUrl;\n        },\n\n        seoUrlRepository() {\n            return this.repositoryFactory.create('seo_url');\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        isHeadlessSalesChannel() {\n            if (!Shopware.State.get('swSeoUrl')) {\n                return true;\n            }\n\n            if (Shopware.State.get('swSeoUrl').salesChannelCollection === null) {\n                return true;\n            }\n\n            const salesChannel = Shopware.State.get('swSeoUrl').salesChannelCollection.find((entry) => {\n                return entry.id === this.currentSalesChannelId;\n            });\n\n            // from Defaults.php\n            return this.currentSalesChannelId !== null && salesChannel?.typeId === 'f183ee5650cf4bdb8a774337575067a6';\n        },\n\n        seoUrlHelptext() {\n            return this.isHeadlessSalesChannel ? this.$tc('sw-seo-url.textSeoUrlsDisallowedForHeadless') : null;\n        },\n\n        hasAdditionalSeoSlot() {\n            return this.$scopedSlots.hasOwnProperty('seo-additional');\n        },\n\n        allowInput() {\n            return this.hasDefaultTemplate || this.currentSalesChannelId !== null;\n        },\n    },\n\n    watch: {\n        urls() {\n            this.initSeoUrlCollection();\n            this.refreshCurrentSeoUrl();\n        },\n    },\n\n    beforeCreate() {\n        // register a new module only if doesn't exist\n        if (!Shopware.State.list().includes('swSeoUrl')) {\n            Shopware.State.registerModule('swSeoUrl', swSeoUrlState);\n        }\n    },\n\n    created() {\n        this.$root.$on('seo-url-save-finish', this.clearDefaultSeoUrls);\n        this.createdComponent();\n    },\n\n    beforeDestroy() {\n        this.$root.$off('seo-url-save-finish', this.clearDefaultSeoUrls);\n        Shopware.State.unregisterModule('swSeoUrl');\n    },\n\n    methods: {\n        createdComponent() {\n            this.initSalesChannelCollection();\n            this.initSeoUrlCollection();\n            if (!this.showEmptySeoUrlError) {\n                this.refreshCurrentSeoUrl();\n            }\n        },\n\n        initSalesChannelCollection() {\n            const salesChannelCriteria = new Criteria(1, this.resultLimit);\n            salesChannelCriteria.addAssociation('type');\n\n            this.salesChannelRepository.search(salesChannelCriteria).then((salesChannelCollection) => {\n                Shopware.State.commit('swSeoUrl/setSalesChannelCollection', salesChannelCollection);\n            });\n        },\n\n        initSeoUrlCollection() {\n            this.showEmptySeoUrlError = false;\n            const seoUrlCollection = new EntityCollection(\n                this.seoUrlRepository.route,\n                this.seoUrlRepository.schema.entity,\n                Shopware.Context.api,\n                new Criteria(1, this.resultLimit),\n            );\n\n            const defaultSeoUrlData = this.urls.find((entityData) => {\n                return entityData.salesChannelId === null;\n            });\n\n            if (defaultSeoUrlData === undefined && (this.hasDefaultTemplate || this.urls.length <= 0)) {\n                this.showEmptySeoUrlError = true;\n            }\n\n            const defaultSeoUrlEntity = this.seoUrlRepository.create();\n            Object.assign(defaultSeoUrlEntity, defaultSeoUrlData);\n            seoUrlCollection.add(defaultSeoUrlEntity);\n            Shopware.State.commit('swSeoUrl/setDefaultSeoUrl', defaultSeoUrlEntity);\n\n            this.urls.forEach((entityData) => {\n                const entity = this.seoUrlRepository.create();\n                Object.assign(entity, entityData);\n\n                seoUrlCollection.add(entity);\n            });\n\n            if (!Shopware.State.get('swSeoUrl').defaultSeoUrl) {\n                this.showEmptySeoUrlError = true;\n            }\n\n            Shopware.State.commit('swSeoUrl/setSeoUrlCollection', seoUrlCollection);\n            Shopware.State.commit('swSeoUrl/setOriginalSeoUrls', this.urls);\n            this.clearDefaultSeoUrls();\n        },\n\n        clearDefaultSeoUrls() {\n            this.seoUrlCollection.forEach((entity) => {\n                if (entity.id === this.defaultSeoUrl.id) {\n                    return;\n                }\n\n                if (entity.seoPathInfo === this.defaultSeoUrl.seoPathInfo) {\n                    entity.seoPathInfo = null;\n                }\n            });\n        },\n\n        refreshCurrentSeoUrl() {\n            const actualLanguageId = Shopware.Context.api.languageId;\n\n            const currentSeoUrl = this.seoUrlCollection.find((entity) => {\n                return entity.languageId === actualLanguageId && entity.salesChannelId === this.currentSalesChannelId;\n            });\n\n            if (!currentSeoUrl) {\n                const entity = this.seoUrlRepository.create();\n                // Fetch any seo url as template, since we need to know foreignKey, pathInfo and the routeName\n                const seoUrl = this.seoUrlCollection.find((item) => {\n                    return item.pathInfo && item.routeName && item.foreignKey;\n                }) || {};\n\n                entity.foreignKey = this.defaultSeoUrl?.foreignKey ?? seoUrl.foreignKey;\n                entity.isCanonical = true;\n                entity.languageId = actualLanguageId;\n                entity.salesChannelId = this.currentSalesChannelId;\n                entity.routeName = this.defaultSeoUrl?.routeName ?? seoUrl.routeName;\n                entity.pathInfo = this.defaultSeoUrl?.pathInfo ?? seoUrl.pathInfo;\n                entity.isModified = true;\n\n                this.seoUrlCollection.add(entity);\n\n                Shopware.State.commit('swSeoUrl/setCurrentSeoUrl', entity);\n\n                return;\n            }\n\n            Shopware.State.commit('swSeoUrl/setCurrentSeoUrl', currentSeoUrl);\n        },\n        onSalesChannelChanged(salesChannelId) {\n            this.currentSalesChannelId = salesChannelId;\n            this.$emit('on-change-sales-channel', salesChannelId);\n            this.refreshCurrentSeoUrl();\n        },\n    },\n};\n","export default \"\\n{% block sw_seo_url %}\\n<div class=\\\"sw-seo-url\\\">\\n    <sw-card\\n        class=\\\"sw-seo-url__card\\\"\\n        position-identifier=\\\"sw-seo-url\\\"\\n        :title=\\\"$tc('sw-seo-url.titleCard')\\\"\\n        :is-loading=\\\"isLoading\\\"\\n    >\\n        \\n        {% block sw_seo_url_card %}\\n        <template v-if=\\\"showEmptySeoUrlError\\\">\\n            {{ $tc('sw-seo-url.textEmptySeoUrls') }}\\n        </template>\\n\\n        <template v-else>\\n            \\n            {% block sw_seo_url_card_seo_path %}\\n            <sw-inherit-wrapper\\n                {% if VUE3 %}\\n                v-model:value=\\\"currentSeoUrl.seoPathInfo\\\"\\n                {% else %}\\n                v-model=\\\"currentSeoUrl.seoPathInfo\\\"\\n                {% endif %}\\n                :has-parent=\\\"currentSalesChannelId !== null && !isHeadlessSalesChannel && hasDefaultTemplate\\\"\\n                :inherited-value=\\\"(currentSeoUrl.salesChannelId !== null && !isHeadlessSalesChannel) ? defaultSeoUrl.seoPathInfo : null\\\"\\n            >\\n\\n                <template #content=\\\"props\\\">\\n                    \\n                    {% block sw_seo_url_card_seo_path_edit %}\\n                    <sw-text-field\\n                        :map-inheritance=\\\"props\\\"\\n                        :value=\\\"props.currentValue\\\"\\n                        :disabled=\\\"props.isInherited || isHeadlessSalesChannel || !allowInput\\\"\\n                        :disable-inheritance-toggle=\\\"isHeadlessSalesChannel\\\"\\n                        :label=\\\"$tc('sw-seo-url.labelSeoPathInfo')\\\"\\n                        :help-text=\\\"seoUrlHelptext\\\"\\n                        {% if VUE3 %}\\n                        @update:value=\\\"props.updateCurrentValue\\\"\\n                        {% else %}\\n                        @input=\\\"props.updateCurrentValue\\\"\\n                        {% endif %}\\n                    />\\n                    {% endblock %}\\n                </template>\\n\\n            </sw-inherit-wrapper>\\n            {% endblock %}\\n        </template>\\n\\n        \\n        {% block sw_seo_url_card_toolbar %}\\n        <template\\n            v-if=\\\"!showEmptySeoUrlError\\\"\\n            #toolbar\\n        >\\n            <sw-sales-channel-switch\\n                ref=\\\"salesChannelSwitch\\\"\\n                :disabled=\\\"disabled\\\"\\n                :label=\\\"$tc('sw-seo-url.labelSalesChannelSelect')\\\"\\n                @change-sales-channel-id=\\\"onSalesChannelChanged\\\"\\n            />\\n        </template>\\n        {% endblock %}\\n\\n        <div\\n            v-if=\\\"hasAdditionalSeoSlot\\\"\\n            class=\\\"sw-seo-url__card-seo-additional\\\"\\n        >\\n            <slot\\n                name=\\\"seo-additional\\\"\\n                v-bind=\\\"{currentSalesChannelId}\\\"\\n            >\\n                \\n                {% block sw_seo_url_additional %}{% endblock %}\\n            </slot>\\n        </div>\\n\\n        {% endblock %}\\n    </sw-card>\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}