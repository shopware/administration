{"version":3,"sources":["webpack:///./src/module/sw-first-run-wizard/view/sw-first-run-wizard-paypal-info/index.js","webpack:///./src/module/sw-first-run-wizard/view/sw-first-run-wizard-paypal-info/sw-first-run-wizard-paypal-info.html.twig","webpack:///./src/module/sw-first-run-wizard/view/sw-first-run-wizard-paypal-info/sw-first-run-wizard-paypal-info.scss"],"names":["template","inject","data","isInstallingPlugin","pluginInstallationFailed","pluginError","pluginName","installPromise","Promise","resolve","computed","assetFilter","Shopware","Filter","getByName","created","this","createdComponent","methods","updateButtons","setTitle","installPayPal","$emit","$tc","buttonConfig","key","label","position","variant","action","disabled","activatePayPalAndRedirect","bind","_this","extensionStoreActionService","downloadExtension","then","installExtension","_this2","activateExtension","_document$location","document","location","origin","pathname","url","concat","href","catch","error","_error$response","_error$response$data","response","errors","pop","content","__esModule","default","module","i","locals","exports","add"],"mappings":"+JAOe,WACXA,SCRW,6lFDUXC,OAAQ,CAAC,+BAETC,KAAI,WACA,MAAO,CACHC,oBAAoB,EACpBC,0BAA0B,EAC1BC,YAAa,KACbC,WAAY,aACZC,eAAgBC,QAAQC,YAIhCC,SAAU,CACNC,YAAW,WACP,OAAOC,SAASC,OAAOC,UAAU,WAIzCC,QAAO,WACHC,KAAKC,oBAGTC,QAAS,CACLD,iBAAgB,WACZD,KAAKG,gBACLH,KAAKI,WACLJ,KAAKT,eAAiBS,KAAKK,iBAG/BD,SAAQ,WACJJ,KAAKM,MAAM,gBAAiBN,KAAKO,IAAI,+CAGzCJ,cAAa,WACT,IAAMK,EAAe,CACjB,CACIC,IAAK,OACLC,MAAOV,KAAKO,IAAI,0CAChBI,SAAU,OACVC,QAAS,KACTC,OAAQ,6CACRC,UAAU,GAEd,CACIL,IAAK,OACLC,MAAOV,KAAKO,IAAI,0CAChBI,SAAU,QACVC,QAAS,KACTC,OAAQ,oCACRC,UAAU,GAEd,CACIL,IAAK,YACLC,MAAOV,KAAKO,IAAI,oDAChBI,SAAU,QACVC,QAAS,UACTC,OAAQb,KAAKe,0BAA0BC,KAAKhB,MAC5Cc,UAAU,IAIlBd,KAAKM,MAAM,iBAAkBE,IAGjCH,cAAa,WAAI,IAADY,EAAA,KACZ,OAAOjB,KAAKkB,4BAA4BC,kBAAkBnB,KAAKV,YAC1D8B,MAAK,WACF,OAAOH,EAAKC,4BAA4BG,iBAAiBJ,EAAK3B,WAAY,cAItFyB,0BAAyB,WAAI,IAADO,EAAA,KACxBtB,KAAKb,oBAAqB,EAC1Ba,KAAKT,eAAe6B,MAAK,WACrB,OAAOE,EAAKJ,4BAA4BK,kBAAkBD,EAAKhC,WAAY,aAC5E8B,MAAK,WAEJ,IAAAI,EAA6BC,SAASC,SAA9BC,EAAMH,EAANG,OAAQC,EAAQJ,EAARI,SACVC,EAAG,GAAAC,OAAMH,GAAMG,OAAGF,EAAQ,mDAIhC,OAFAH,SAASC,SAASK,KAAOF,EAElBrC,QAAQC,SAAQ,MACxBuC,OAAM,SAACC,GAAW,IAADC,EAAAC,EAQhB,OAPAb,EAAKnC,oBAAqB,EAC1BmC,EAAKlC,0BAA2B,EAEd,QAAlB8C,EAAID,EAAMG,gBAAQ,IAAAF,GAAM,QAANC,EAAdD,EAAgBhD,YAAI,IAAAiD,GAApBA,EAAsBE,SACtBf,EAAKjC,YAAc4C,EAAMG,SAASlD,KAAKmD,OAAOC,QAG3C,S,qBElGvB,IAAIC,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM","file":"static/js/11e14e1c6a4d6302fb5d.js","sourcesContent":["import template from './sw-first-run-wizard-paypal-info.html.twig';\nimport './sw-first-run-wizard-paypal-info.scss';\n\n/**\n * @package services-settings\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['extensionStoreActionService'],\n\n    data() {\n        return {\n            isInstallingPlugin: false,\n            pluginInstallationFailed: false,\n            pluginError: null,\n            pluginName: 'SwagPayPal',\n            installPromise: Promise.resolve(),\n        };\n    },\n\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.updateButtons();\n            this.setTitle();\n            this.installPromise = this.installPayPal();\n        },\n\n        setTitle() {\n            this.$emit('frw-set-title', this.$tc('sw-first-run-wizard.paypalInfo.modalTitle'));\n        },\n\n        updateButtons() {\n            const buttonConfig = [\n                {\n                    key: 'back',\n                    label: this.$tc('sw-first-run-wizard.general.buttonBack'),\n                    position: 'left',\n                    variant: null,\n                    action: 'sw.first.run.wizard.index.mailer.selection',\n                    disabled: false,\n                },\n                {\n                    key: 'skip',\n                    label: this.$tc('sw-first-run-wizard.general.buttonSkip'),\n                    position: 'right',\n                    variant: null,\n                    action: 'sw.first.run.wizard.index.plugins',\n                    disabled: false,\n                },\n                {\n                    key: 'configure',\n                    label: this.$tc('sw-first-run-wizard.general.buttonNextPayPalInfo'),\n                    position: 'right',\n                    variant: 'primary',\n                    action: this.activatePayPalAndRedirect.bind(this),\n                    disabled: false,\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        installPayPal() {\n            return this.extensionStoreActionService.downloadExtension(this.pluginName)\n                .then(() => {\n                    return this.extensionStoreActionService.installExtension(this.pluginName, 'plugin');\n                });\n        },\n\n        activatePayPalAndRedirect() {\n            this.isInstallingPlugin = true;\n            this.installPromise.then(() => {\n                return this.extensionStoreActionService.activateExtension(this.pluginName, 'plugin');\n            }).then(() => {\n                // need a force reload, after plugin was activated\n                const { origin, pathname } = document.location;\n                const url = `${origin}${pathname}/#/sw/first/run/wizard/index/paypal/credentials`;\n\n                document.location.href = url;\n\n                return Promise.resolve(true);\n            }).catch((error) => {\n                this.isInstallingPlugin = false;\n                this.pluginInstallationFailed = true;\n\n                if (error.response?.data?.errors) {\n                    this.pluginError = error.response.data.errors.pop();\n                }\n\n                return true;\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_first_run_wizard_paypal_info %}\\n<div class=\\\"sw-first-run-wizard-paypal\\\">\\n    <div\\n        v-if=\\\"!isInstallingPlugin\\\"\\n        class=\\\"sw-first-run-wizard-paypal-info\\\"\\n    >\\n        <img\\n            class=\\\"sw-first-run-wizard-paypal-info__icon\\\"\\n            :src=\\\"assetFilter('/administration/static/img/paypal-official-logo.svg')\\\"\\n            alt=\\\"\\\"\\n        >\\n\\n        <h3 class=\\\"headline\\\">\\n            {{ $tc('sw-first-run-wizard.paypalInfo.headline') }}\\n        </h3>\\n\\n        <sw-container\\n            columns=\\\"1fr 1fr 1fr 1fr\\\"\\n            class=\\\"paymethods\\\"\\n        >\\n            <div class=\\\"paymethod\\\">\\n                <sw-icon\\n                    name=\\\"regular-check-circle\\\"\\n                    size=\\\"12px\\\"\\n                />\\n                <span>{{ $tc('sw-first-run-wizard.paypalInfo.paymethod.paypal') }}</span>\\n            </div>\\n            <div class=\\\"paymethod\\\">\\n                <sw-icon\\n                    name=\\\"regular-check-circle\\\"\\n                    size=\\\"12px\\\"\\n                />\\n                <span>{{ $tc('sw-first-run-wizard.paypalInfo.paymethod.debit') }}</span>\\n            </div>\\n            <div class=\\\"paymethod\\\">\\n                <sw-icon\\n                    name=\\\"regular-check-circle\\\"\\n                    size=\\\"12px\\\"\\n                />\\n                <span>{{ $tc('sw-first-run-wizard.paypalInfo.paymethod.creditcard') }}</span>\\n            </div>\\n            <div class=\\\"paymethod\\\">\\n                <sw-icon\\n                    name=\\\"regular-check-circle\\\"\\n                    size=\\\"12px\\\"\\n                />\\n                <span>{{ $tc('sw-first-run-wizard.paypalInfo.paymethod.invoice') }}**</span>\\n            </div>\\n        </sw-container>\\n        <div\\n            v-if=\\\"pluginInstallationFailed\\\"\\n            class=\\\"sw-first-run-wizard-paypal__error\\\"\\n        >\\n            <sw-alert\\n                :title=\\\"pluginError.title\\\"\\n                variant=\\\"error\\\"\\n                appearance=\\\"notification\\\"\\n            >\\n                {{ pluginError.detail }}\\n            </sw-alert>\\n        </div>\\n        <div class=\\\"disclaimer\\\">\\n            <p>{{ $tc('sw-first-run-wizard.paypalInfo.disclaimerLineOne') }}</p>\\n            <p>{{ $tc('sw-first-run-wizard.paypalInfo.disclaimerLineTwo') }}</p>\\n        </div>\\n    </div>\\n    <div\\n        v-else\\n        class=\\\"sw-first-run-wizard-paypal-install\\\"\\n    >\\n        <sw-loader size=\\\"48px\\\" />\\n        <p\\n            class=\\\"sw-loader-info-text\\\"\\n            v-html=\\\"$tc('sw-first-run-wizard.paypalInstall.loadingMessage')\\\"\\n        ></p>\\n    </div>\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-first-run-wizard-paypal-info.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0f164bc3\", content, true, {});"],"sourceRoot":""}