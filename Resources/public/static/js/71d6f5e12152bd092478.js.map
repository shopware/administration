{"version":3,"sources":["webpack:///./src/module/sw-media/component/sw-media-library/index.js","webpack:///./src/module/sw-media/component/sw-media-library/sw-media-library.html.twig","webpack:///./src/module/sw-media/component/sw-media-library/sw-media-library.scss"],"names":["_Shopware","Shopware","Mixin","Context","Criteria","Data","template","inject","mixins","getByName","model","prop","event","props","selection","type","Array","required","folderId","String","default","pendingUploads","limit","Number","validValues","validator","value","includes","term","compact","Boolean","editable","allowMultiSelect","data","isLoading","selectedItems","this","pageItem","pageFolder","itemLoaderDone","folderLoaderDone","items","subFolders","currentFolder","parentFolder","presentation","sorting","sortBy","sortDirection","folderSorting","computed","shouldDisplayEmptyState","selectableItems","length","isValidTerm","mediaRepository","repositoryFactory","create","mediaFolderRepository","mediaFolderConfigurationRepository","concat","_toConsumableArray","rootFolder","root","api","id","name","$tc","gridPresentation","showItemsAsList","showLoadMoreButton","nextMediaCriteria","criteria","addSorting","sort","setTerm","forEach","association","associationParts","split","addAssociation","path","currentPart","getAssociation","setLimit","nextFoldersCriteria","addFilter","equals","assetFilter","Filter","watch","listSelectionStartItem","feature","isActive","$emit","mapFolderSorting","refreshList","created","createdComponent","methods","_this","handleMediaItemClicked","_ref","item","_singleSelect","handleMediaGridItemSelected","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","clearSelection","fetchAssociatedFolders","loadItems","stop","_term$trim","trim","loadNextItems","isLoaderDone","total","_this3","_callee2","_yield$Promise$allSet","_yield$Promise$allSet2","nextFolders","nextMedia","_this3$items","_this3$subFolders","_context2","Promise","allSettled","sent","_slicedToArray","status","push","apply","_this4","_callee3","searchRankingFields","media","_context3","searchRankingService","getSearchFieldsByEntity","Object","keys","buildSearchQueriesForEntity","multi","contains","search","_this5","_callee4","_context4","_this6","_callee5","_context5","get","parentId","goToParentFolder","injectItem","getEntityName","Error","injectMedia","mediaEntity","mediaFolderId","some","alreadyListed","unshift","createFolder","_this7","_callee6","newFolder","configuration","_context6","configurationId","useParentConfiguration","createThumbnails","keepProportions","thumbnailQuality","save","removeNewFolder","shift","content","__esModule","module","i","locals","exports","add"],"mappings":"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","file":"static/js/71d6f5e12152bd092478.js","sourcesContent":["import template from './sw-media-library.html.twig';\nimport './sw-media-library.scss';\n\nconst { Mixin, Context } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package buyers-experience\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'searchRankingService',\n        'feature',\n    ],\n\n    mixins: [\n        Mixin.getByName('media-grid-listener'),\n    ],\n\n    model: {\n        prop: 'selection',\n        event: 'media-selection-change',\n    },\n\n    props: {\n        selection: {\n            type: Array,\n            required: true,\n        },\n\n        folderId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        pendingUploads: {\n            type: Array,\n            required: false,\n            default() {\n                return [];\n            },\n        },\n\n        limit: {\n            type: Number,\n            required: false,\n            default: 25,\n            validValues: [1, 5, 25, 50, 100, 500],\n            validator(value) {\n                return [1, 5, 25, 50, 100, 500].includes(value);\n            },\n        },\n\n        term: {\n            type: String,\n            required: false,\n            default: '',\n        },\n\n        compact: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        editable: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        allowMultiSelect: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            selectedItems: this.selection,\n            pageItem: 1,\n            pageFolder: 1,\n            itemLoaderDone: false,\n            folderLoaderDone: false,\n            items: [],\n            subFolders: [],\n            currentFolder: null,\n            parentFolder: null,\n            presentation: 'medium-preview',\n            sorting: { sortBy: 'fileName', sortDirection: 'asc' },\n            folderSorting: { sortBy: 'name', sortDirection: 'asc' },\n        };\n    },\n\n    computed: {\n        shouldDisplayEmptyState() {\n            return !this.isLoading && (this.selectableItems.length === 0 || (\n                this.isValidTerm(this.term) && this.selectableItems.length === 0\n            ));\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        mediaFolderRepository() {\n            return this.repositoryFactory.create('media_folder');\n        },\n\n        mediaFolderConfigurationRepository() {\n            return this.repositoryFactory.create('media_folder_configuration');\n        },\n\n        selectableItems() {\n            return [...this.subFolders, ...this.pendingUploads, ...this.items];\n        },\n\n        rootFolder() {\n            const root = this.mediaFolderRepository.create(Context.api);\n            root.id = '';\n            root.name = this.$tc('sw-media.index.rootFolderName');\n\n            return root;\n        },\n\n        gridPresentation() {\n            if (this.compact) {\n                return 'list-preview';\n            }\n\n            return this.presentation;\n        },\n\n        showItemsAsList() {\n            return this.gridPresentation === 'list-preview';\n        },\n\n        showLoadMoreButton() {\n            if (this.isLoading || this.shouldDisplayEmptyState) {\n                return false;\n            }\n\n            return !(this.itemLoaderDone && this.folderLoaderDone);\n        },\n\n        nextMediaCriteria() {\n            // always search without folderId criteria --> search for all items\n            const criteria = new Criteria(this.pageItem, this.limit);\n\n            criteria\n                .addSorting(Criteria.sort(this.sorting.sortBy, this.sorting.sortDirection))\n                .setTerm(this.term);\n\n            // ToDo NEXT-22186 - will be replaced by a new overview\n            [\n                'tags',\n                'productMedia.product',\n                'categories',\n                'productManufacturers.products',\n                'mailTemplateMedia.mailTemplate',\n                'documentBaseConfigs',\n                'avatarUsers',\n                'paymentMethods',\n                'shippingMethods',\n                'cmsBlocks.section.page',\n                'cmsSections.page',\n                'cmsPages',\n            ].forEach(association => {\n                const associationParts = association.split('.');\n\n                criteria.addAssociation(association);\n\n                let path = null;\n                associationParts.forEach(currentPart => {\n                    path = path ? `${path}.${currentPart}` : currentPart;\n\n                    criteria.getAssociation(path).setLimit(25);\n                });\n            });\n\n            return criteria;\n        },\n\n        nextFoldersCriteria() {\n            const criteria = new Criteria(this.pageFolder, this.limit)\n                .addSorting(Criteria.sort(this.folderSorting.sortBy, this.folderSorting.sortDirection))\n                .setTerm(this.term);\n\n            if (!this.term) {\n                criteria.addFilter(Criteria.equals('parentId', this.folderId));\n            }\n\n            return criteria;\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        selection() {\n            this.selectedItems = this.selection;\n            if (this.listSelectionStartItem !== null && !this.selectedItems.includes(this.listSelectionStartItem)) {\n                this.listSelectionStartItem = this.selectedItems[0] || null;\n            }\n        },\n\n        selectedItems() {\n            if (this.feature.isActive('VUE3')) {\n                this.$emit('update:selection', this.selectedItems);\n\n                return;\n            }\n\n            this.$emit('media-selection-change', this.selectedItems);\n        },\n\n        sorting() {\n            this.mapFolderSorting();\n            this.refreshList();\n        },\n\n        folderId() {\n            this.refreshList();\n        },\n\n        term() {\n            this.refreshList();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.refreshList();\n\n            if (this.allowMultiSelect) {\n                return;\n            }\n\n            this.handleMediaItemClicked = ({ item }) => {\n                this._singleSelect(item);\n            };\n\n            this.handleMediaGridItemSelected = () => {};\n        },\n\n        /*\n         * Object fetching\n         */\n        async refreshList() {\n            if (this.isLoading === true) {\n                return;\n            }\n\n            this.subFolders = [];\n            this.items = [];\n\n            this.isLoading = true;\n\n            this.clearSelection();\n            await this.fetchAssociatedFolders();\n\n            this.pageItem = 1;\n            this.pageFolder = 1;\n\n            this.itemLoaderDone = false;\n            this.folderLoaderDone = false;\n\n            this.loadItems();\n        },\n\n        isValidTerm(term) {\n            return term?.trim()?.length > 1;\n        },\n\n        loadNextItems() {\n            if (this.isLoading === true) {\n                return;\n            }\n            this.isLoading = true;\n            this.loadItems();\n        },\n\n        mapFolderSorting() {\n            switch (this.sorting.sortBy) {\n                case 'createdAt':\n                    this.folderSorting.sortBy = 'createdAt';\n                    this.folderSorting.sortDirection = this.sorting.sortDirection;\n                    break;\n                case 'fileName':\n                    this.folderSorting.sortBy = 'name';\n                    this.folderSorting.sortDirection = this.sorting.sortDirection;\n                    break;\n                default:\n                    this.folderSorting.sortBy = 'name';\n                    this.folderSorting.sortDirection = 'asc';\n            }\n        },\n\n        isLoaderDone(criteria, data) {\n            return criteria.limit >= data.total || criteria.limit > data.length;\n        },\n\n        async loadItems() {\n            this.isLoading = true;\n            const [nextFolders, nextMedia] = await Promise.allSettled([this.nextFolders(), this.nextMedia()]);\n\n            if (nextMedia.status === 'fulfilled') {\n                this.items.push(...nextMedia.value);\n            } else {\n                this.itemLoaderDone = false;\n            }\n\n            if (nextFolders.status === 'fulfilled') {\n                this.subFolders.push(...nextFolders.value);\n            } else {\n                this.folderLoaderDone = false;\n            }\n\n            this.isLoading = false;\n        },\n\n        async nextMedia() {\n            if (this.itemLoaderDone) {\n                return [];\n            }\n\n            let criteria = this.nextMediaCriteria;\n\n            if (this.isValidTerm(this.term)) {\n                const searchRankingFields = await this.searchRankingService.getSearchFieldsByEntity('media');\n\n                if (!searchRankingFields || Object.keys(searchRankingFields).length < 1) {\n                    this.isLoading = false;\n                    this.itemLoaderDone = true;\n\n                    return [];\n                }\n\n                criteria = this.searchRankingService.buildSearchQueriesForEntity(\n                    searchRankingFields,\n                    this.term,\n                    criteria,\n                );\n            }\n\n            // only fetch items of current folder\n            if (!this.isValidTerm(this.term)) {\n                criteria.addFilter(Criteria.equals('mediaFolderId', this.folderId));\n            }\n\n            // search only in current and all subFolders\n            if (this.folderId != null && this.isValidTerm(this.term)) {\n                criteria.addFilter(Criteria.multi('OR', [\n                    Criteria.equals('mediaFolderId', this.folderId),\n                    Criteria.contains('mediaFolder.path', this.folderId),\n                ]));\n            }\n\n            const media = await this.mediaRepository.search(criteria, Context.api);\n\n            this.itemLoaderDone = this.isLoaderDone(criteria, media);\n\n            this.pageItem += 1;\n\n            return media;\n        },\n\n        async nextFolders() {\n            if (this.folderLoaderDone) {\n                return [];\n            }\n\n            const subFolders = await this.mediaFolderRepository.search(this.nextFoldersCriteria, Context.api);\n\n            this.folderLoaderDone = this.isLoaderDone(this.nextFoldersCriteria, subFolders);\n\n            this.pageFolder += 1;\n\n            return subFolders;\n        },\n\n        async fetchAssociatedFolders() {\n            if (this.folderId === null) {\n                this.currentFolder = null;\n                this.parentFolder = null;\n                return;\n            }\n\n            this.currentFolder = await this.mediaFolderRepository.get(this.folderId, Context.api);\n\n            if (this.currentFolder && this.currentFolder.parentId) {\n                this.parentFolder = await this.mediaFolderRepository.get(this.currentFolder.parentId, Context.api);\n            } else {\n                this.parentFolder = this.rootFolder;\n            }\n        },\n\n        goToParentFolder() {\n            this.$emit('media-folder-change', this.parentFolder.id || null);\n        },\n\n        clearSelection() {\n            this.selectedItems = [];\n            this.listSelectionStartItem = null;\n        },\n\n        injectItem(item) {\n            if (item.getEntityName() === 'media') {\n                this.injectMedia(item);\n                return;\n            }\n\n            throw new Error('Injected entity has to be of \\'type media\\'');\n        },\n\n        injectMedia(mediaEntity) {\n            if (mediaEntity.mediaFolderId !== this.folderId) {\n                return;\n            }\n\n            if (!this.items.some((alreadyListed) => {\n                return alreadyListed.id === mediaEntity.id;\n            })) {\n                this.items.unshift(mediaEntity);\n            }\n        },\n\n        async createFolder() {\n            const newFolder = this.mediaFolderRepository.create(Context.api);\n            newFolder.parentId = this.folderId;\n            newFolder.name = '';\n\n            if (this.folderId !== null) {\n                newFolder.configurationId = this.currentFolder.configurationId;\n                newFolder.useParentConfiguration = true;\n            } else {\n                const configuration = this.mediaFolderConfigurationRepository.create(Context.api);\n                configuration.createThumbnails = true;\n                configuration.keepProportions = true;\n                configuration.thumbnailQuality = 80;\n\n                await this.mediaFolderConfigurationRepository.save(configuration, Context.api);\n\n                newFolder.configurationId = configuration.id;\n                newFolder.useParentConfiguration = false;\n            }\n\n            this.subFolders.unshift(newFolder);\n        },\n\n        removeNewFolder() {\n            this.subFolders.shift();\n        },\n    },\n};\n","export default \"\\n{% block sw_media_library %}\\n<div class=\\\"sw-media-library\\\">\\n    \\n    {% block sw_media_library_display_options %}\\n    <div class=\\\"sw-media-library__options-container\\\">\\n        <sw-media-display-options\\n            class=\\\"sw-media-library__display-options\\\"\\n            :presentation=\\\"presentation\\\"\\n            :sorting=\\\"sorting\\\"\\n            :hide-presentation=\\\"compact\\\"\\n            @media-presentation-change=\\\"presentation = $event\\\"\\n            @media-sorting-change=\\\"sorting = $event\\\"\\n        />\\n\\n        \\n        {% block sw_media_index_create_folder %}\\n        <sw-button\\n            v-if=\\\"editable\\\"\\n            v-tooltip=\\\"{\\n                message: $tc('sw-privileges.tooltip.warning'),\\n                disabled: acl.can('media.creator'),\\n                showOnDisabledElements: true\\n            }\\\"\\n            :disabled=\\\"!acl.can('media.creator')\\\"\\n            class=\\\"sw-media-index__create-folder-action\\\"\\n            variant=\\\"ghost\\\"\\n            size=\\\"small\\\"\\n            @click=\\\"createFolder\\\"\\n        >\\n            {{ $tc('sw-media.index.buttonCreateFolder') }}\\n        </sw-button>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_library_scroll_container %}\\n    <div\\n        ref=\\\"scrollContainer\\\"\\n        class=\\\"sw-media-library__scroll-container\\\"\\n    >\\n        <div class=\\\"sw-media-library__scroll-content\\\">\\n\\n            \\n            {% block sw_media_library_media_grid %}\\n            <sw-media-grid\\n                ref=\\\"mediaGrid\\\"\\n                class=\\\"sw-media-library_media-grid\\\"\\n                :presentation=\\\"gridPresentation\\\"\\n                @media-grid-selection-clear=\\\"clearSelection\\\"\\n            >\\n\\n                \\n                {% block sw_media_library_back_to_parent_item %}\\n                <sw-media-folder-item\\n                    v-if=\\\"parentFolder && (!isLoading || selectableItems.length > 0)\\\"\\n                    :allow-edit=\\\"acl.can('media.editor')\\\"\\n                    :allow-delete=\\\"acl.can('media.deleter')\\\"\\n                    class=\\\"sw-media-library__parent-folder\\\"\\n                    :item=\\\"parentFolder\\\"\\n                    :show-selection-indicator=\\\"false\\\"\\n                    :show-context-menu-button=\\\"false\\\"\\n                    :allow-multi-select=\\\"allowMultiSelect\\\"\\n                    :is-list=\\\"showItemsAsList\\\"\\n                    is-parent\\n                    @media-item-click=\\\"goToParentFolder\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_media_library_media_item_list %}\\n                <sw-media-entity-mapper\\n                    v-for=\\\"(gridItem, index) in selectableItems\\\"\\n                    :key=\\\"gridItem.getEntityName() + '_' + gridItem.id\\\"\\n                    :class=\\\"`sw-media-grid-item__item--${index}`\\\"\\n                    :item=\\\"gridItem\\\"\\n                    :allow-edit=\\\"acl.can('media.editor')\\\"\\n                    :allow-delete=\\\"acl.can('media.deleter')\\\"\\n                    :selected=\\\"showItemSelected(gridItem)\\\"\\n                    :show-selection-indicator=\\\"isListSelect\\\"\\n                    :show-context-menu-button=\\\"editable\\\"\\n                    :is-list=\\\"showItemsAsList\\\"\\n                    :editable=\\\"editable\\\"\\n                    :allow-multi-select=\\\"allowMultiSelect\\\"\\n                    @media-item-replaced=\\\"refreshList\\\"\\n                    @media-item-delete=\\\"refreshList\\\"\\n                    @media-folder-delete=\\\"refreshList\\\"\\n                    @media-folder-remove=\\\"removeNewFolder\\\"\\n                    @media-folder-dissolve=\\\"refreshList\\\"\\n                    @media-folder-move=\\\"refreshList\\\"\\n                    @media-folder-changed=\\\"refreshList\\\"\\n                    v-on=\\\"mediaItemSelectionHandler\\\"\\n                />\\n                {% endblock %}\\n\\n                <template v-if=\\\"isLoading\\\">\\n                    <sw-skeleton variant=\\\"media\\\" />\\n                    <sw-skeleton variant=\\\"media\\\" />\\n                    <sw-skeleton variant=\\\"media\\\" />\\n                    <sw-skeleton variant=\\\"media\\\" />\\n                    <sw-skeleton variant=\\\"media\\\" />\\n                    <sw-skeleton variant=\\\"media\\\" />\\n                    <sw-skeleton variant=\\\"media\\\" />\\n                    <sw-skeleton variant=\\\"media\\\" />\\n                </template>\\n\\n                \\n                {% block sw_media_library_load_more_button %}\\n                <sw-button\\n                    v-if=\\\"showLoadMoreButton\\\"\\n                    class=\\\"sw-media-library__load-more-button\\\"\\n                    @click=\\\"loadNextItems\\\"\\n                >\\n                    {{ $tc('sw-media.mediaLibrary.labelButtonLoadMore') }}\\n                </sw-button>\\n                {% endblock %}\\n            </sw-media-grid>\\n            {% endblock %}\\n        </div>\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_library_empty_state %}\\n    <sw-empty-state\\n        v-if=\\\"shouldDisplayEmptyState\\\"\\n        :title=\\\"$tc('sw-empty-state.messageNoResultTitle')\\\"\\n    >\\n        <template #icon>\\n            <img\\n                :src=\\\"assetFilter('/administration/static/img/empty-states/media-empty-state.svg')\\\"\\n                :alt=\\\"$tc('sw-empty-state.messageNoResultSubline')\\\"\\n            >\\n        </template>\\n\\n        <template #default>\\n            {{ $tc('sw-empty-state.messageNoResultSublineBefore') }}\\n            <router-link\\n                class=\\\"sw-empty-state__description-link\\\"\\n                :to=\\\"{ name: 'sw.profile.index.searchPreferences' }\\\"\\n            >\\n                {{ $tc('sw-empty-state.messageNoResultSublineLink') }}\\n            </router-link>\\n            {{ $tc('sw-empty-state.messageNoResultSublineAfter') }}\\n        </template>\\n    </sw-empty-state>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-media-library.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"e1189400\", content, true, {});"],"sourceRoot":""}