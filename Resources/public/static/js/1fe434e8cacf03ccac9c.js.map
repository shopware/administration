{"version":3,"sources":["webpack:///./src/module/sw-flow/component/modals/sw-flow-mail-send-modal/index.js","webpack:///./src/module/sw-flow/component/modals/sw-flow-mail-send-modal/sw-flow-mail-send-modal.html.twig","webpack:///./src/module/sw-flow/component/modals/sw-flow-mail-send-modal/sw-flow-mail-send-modal.scss"],"names":["_Shopware","Shopware","Component","Utils","ShopwareError","Classes","Criteria","Data","mapState","getComponentHelper","template","inject","props","sequence","type","Object","required","data","showCreateMailTemplateModal","mailTemplateId","showRecipientEmails","mailRecipient","documentTypeIds","recipients","selectedRecipient","mailTemplateIdError","recipientGridError","replyTo","replyToError","computed","_objectSpread","mailTemplateCriteria","criteria","addAssociation","documentTypeRepository","this","repositoryFactory","create","isNewMail","_this$sequence","id","recipientCustomer","value","label","$tc","recipientAdmin","recipientCustom","recipientDefault","recipientContactFormMail","entityAware","recipientOptions","_this$triggerEvent$aw","_this","allowedAwareOrigin","triggerEvent","aware","allowAwareConverted","forEach","awareUpperCase","slice","lastIndexOf","charAt","toUpperCase","includes","push","length","name","concat","_toConsumableArray","some","allowedAware","recipientColumns","property","inlineEdit","replyToOptions","replyToSelection","showReplyToField","created","createdComponent","methods","_this2","_config$recipient","_config$recipient2","config","recipient","entries","_ref","_ref2","_slicedToArray","key","newId","createId","email","isNew","addRecipient","onClose","$emit","getRecipientData","recipientData","assign","_defineProperty","isRecipientGridError","validateRecipient","invalidItemIndex","filter","item","findIndex","emailValidation","onAddAction","_this3","mailTemplateError","setMailError","resetError","$nextTick","onCreateMailTemplate","onCloseCreateMailTemplateModal","onCreateMailTemplateSuccess","mailTemplate","onChangeMailTemplate","mailTemplates","find","State","commit","onChangeRecipient","_this4","$refs","recipientsGrid","currentInlineEditId","enableInlineEdit","saveRecipient","_this5","index","cancelSaveRecipient","_this6","onEditRecipient","$set","errorName","errorMail","onDeleteRecipient","itemIndex","splice","code","setNameError","mail","error","allowDeleteRecipient","changeShowReplyToField","buildReplyToTooltip","snippet","settingsLink","$router","resolve","href","content","__esModule","default","module","i","locals","exports","add"],"mappings":"6yBAIA,IAAAA,EAAyDC,SAAjDC,EAASF,EAATE,UAAWC,EAAKH,EAALG,MAAkBC,EAAaJ,EAAxBK,QAAWD,cAC7BE,EAAaL,SAASM,KAAtBD,SACAE,EAAaN,EAAUO,qBAAvBD,SAMO,WACXE,SCbW,i+SDeXC,OAAQ,CACJ,qBAGJC,MAAO,CACHC,SAAU,CACNC,KAAMC,OACNC,UAAU,IAIlBC,KAAI,WACA,MAAO,CACHC,6BAA6B,EAC7BC,eAAgB,GAChBC,qBAAqB,EACrBC,cAAe,KACfC,gBAAiB,GACjBC,WAAY,GACZC,kBAAmB,KACnBC,oBAAqB,KACrBC,mBAAoB,KACpBC,QAAS,KACTC,aAAc,OAItBC,SAAQC,EAAA,CACJC,qBAAoB,WAChB,IAAMC,EAAW,IAAI1B,EAAS,EAAG,IAGjC,OAFA0B,EAASC,eAAe,oBAEjBD,GAGXE,uBAAsB,WAClB,OAAOC,KAAKC,kBAAkBC,OAAO,kBAGzCC,UAAS,WAAI,IAADC,EACR,QAAqB,QAAdA,EAACJ,KAAKtB,gBAAQ,IAAA0B,GAAbA,EAAeC,KAG3BC,kBAAiB,WACb,MAAO,CACH,CACIC,MAAO,UACPC,MAAOR,KAAKS,IAAI,wCAK5BC,eAAc,WACV,MAAO,CACH,CACIH,MAAO,QACPC,MAAOR,KAAKS,IAAI,qCAK5BE,gBAAe,WACX,MAAO,CACH,CACIJ,MAAO,SACPC,MAAOR,KAAKS,IAAI,sCAK5BG,iBAAgB,WACZ,MAAO,CACH,CACIL,MAAO,UACPC,MAAOR,KAAKS,IAAI,uCAK5BI,yBAAwB,WACpB,MAAO,CACH,CACIN,MAAO,kBACPC,MAAOR,KAAKS,IAAI,+CAK5BK,YAAW,WACP,MAAO,CAAC,gBAAiB,YAAa,aAAc,uBAGxDC,iBAAgB,WAAI,IAADC,EAAAC,EAAA,KACTC,EAA4C,QAA1BF,EAAGhB,KAAKmB,aAAaC,aAAK,IAAAJ,IAAI,GAChDK,EAAsB,GAS5B,OARAH,EAAmBI,SAAQ,SAAAF,GAEvB,IAAMG,GADNH,EAAQA,EAAMI,MAAMJ,EAAMK,YAAY,MAAQ,IACjBC,OAAO,GAAGC,cAAgBP,EAAMI,MAAM,GAC9DH,EAAoBO,SAASL,IAC9BF,EAAoBQ,KAAKN,MAIE,IAA/BF,EAAoBS,OACb9B,KAAKW,gBAGe,sBAA3BX,KAAKmB,aAAaY,KACZ,GAANC,OAAAC,IACOjC,KAAKY,kBAAgBqB,IACrBjC,KAAKa,0BAAwBoB,IAC7BjC,KAAKU,gBAAcuB,IACnBjC,KAAKW,kBAGZ,CAAC,qBAAsB,sBAAuB,0BAC7CiB,SAAS5B,KAAKmB,aAAaY,OAQTV,EAAoBa,MAAK,SAAAC,GAAY,OAAIlB,EAAKH,YAAYc,SAASO,MAPhF,GAANH,OAAAC,IACOjC,KAAKM,mBAAiB2B,IACtBjC,KAAKU,gBAAcuB,IACnBjC,KAAKW,kBAcV,GAANqB,OAAAC,IACOjC,KAAKU,gBAAcuB,IACnBjC,KAAKW,mBAIhByB,iBAAgB,WACZ,MAAO,CAAC,CACJC,SAAU,QACV7B,MAAO,0CACP8B,WAAY,UACb,CACCD,SAAU,OACV7B,MAAO,0CACP8B,WAAY,YAIpBC,eAAc,WACV,MAA+B,sBAA3BvC,KAAKmB,aAAaY,KACZ,GAANC,OAAAC,IACOjC,KAAKY,kBAAgBqB,IACrBjC,KAAKa,0BAAwBoB,IAC7BjC,KAAKW,kBAIV,GAANqB,OAAAC,IACOjC,KAAKY,kBAAgBqB,IACrBjC,KAAKW,mBAIhB6B,iBAAgB,WACZ,OAAQxC,KAAKR,SACT,KAAK,KACD,MAAO,UACX,IAAK,kBACD,MAAO,kBACX,QACI,MAAO,WAInBiD,iBAAgB,WACZ,QAA0B,OAAjBzC,KAAKR,SAAqC,oBAAjBQ,KAAKR,WAGxCnB,EAAS,cAAe,CAAC,gBAAiB,eAAgB,oBAGjEqE,QAAO,WACH1C,KAAK2C,oBAGTC,QAAS,CACLD,iBAAgB,WAAI,IAADE,EAAA,KAGf,GAFA7C,KAAKd,cAAgBc,KAAKe,iBAAiB,GAAGR,OAEzCP,KAAKG,UAAW,CAAC,IAAD2C,EAAAC,EACTC,EAAWhD,KAAKtB,SAAhBsE,OAERhD,KAAKd,cAAgC,QAAnB4D,EAAGE,EAAOC,iBAAS,IAAAH,OAAA,EAAhBA,EAAkBnE,KAER,YAAX,QAAhBoE,EAAAC,EAAOC,iBAAS,IAAAF,OAAA,EAAhBA,EAAkBpE,QAClBC,OAAOsE,QAAQF,EAAOC,UAAUnE,MAC3BwC,SAAQ,SAAA6B,GAAmB,IAADC,EAAAC,IAAAF,EAAA,GAAhBG,EAAGF,EAAA,GAAE7C,EAAK6C,EAAA,GACXG,EAAQvF,EAAMwF,WACpBX,EAAKzD,WAAWyC,KAAK,CACjBxB,GAAIkD,EACJE,MAAOH,EACPvB,KAAMxB,EACNmD,OAAO,OAInB1D,KAAK2D,eACL3D,KAAKf,qBAAsB,GAG3B+D,EAAOxD,UACPQ,KAAKR,QAAUwD,EAAOxD,SAG1BQ,KAAKhB,eAAiBgE,EAAOhE,eAC7BgB,KAAKb,gBAAkB6D,EAAO7D,kBAItCyE,QAAO,WACH5D,KAAK6D,MAAM,gBAGfC,iBAAgB,WACZ,IAAMC,EAAgB,GACtB,MAA2B,WAAvB/D,KAAKd,eAITc,KAAKZ,WAAWkC,SAAQ,SAAA2B,IACfA,EAAUQ,OAAUR,EAAUlB,OAInCnD,OAAOoF,OAAOD,EAAaE,IAAA,GACtBhB,EAAUQ,MAAQR,EAAUlB,UAT1BgC,GAefG,qBAAoB,WAChB,GAA2B,WAAvBlE,KAAKd,cACL,OAAO,EAGX,GAA+B,IAA3Bc,KAAKZ,WAAW0C,SACf9B,KAAKZ,WAAW,GAAGqE,QACnBzD,KAAKZ,WAAW,GAAG2C,KAEpB,OADA/B,KAAKmE,kBAAkBnE,KAAKZ,WAAW,GAAI,IACpC,EAGX,IAAMgF,EAAmBpE,KAAKZ,WAAWiF,QAAO,SAAAC,GAAI,OAAKA,EAAKZ,SACzDa,WAAU,SAAAtB,GAAS,OAAMA,EAAUlB,OAASkB,EAAUQ,QAAUe,YAAgBvB,EAAUQ,UAM/F,OAJIW,GAAoB,GACpBpE,KAAKmE,kBAAkBnE,KAAKZ,WAAWgF,GAAmBA,GAGvDA,GAAoB,GAG/BK,YAAW,WAAI,IAADC,EAAA,KAOV,GANA1E,KAAKV,oBAAsBU,KAAK2E,kBAAkB3E,KAAKhB,gBACnDgB,KAAKyC,mBACLzC,KAAKP,aAAeO,KAAK4E,aAAa5E,KAAKR,UAE/CQ,KAAKT,mBAAqBS,KAAKkE,yBAE3BlE,KAAKV,qBAAuBU,KAAKP,cAAgBO,KAAKT,oBAA1D,CAIAS,KAAK6E,aAEL,IAAMnG,EAAQiB,IAAA,GACPK,KAAKtB,UAAQ,IAChBsE,OAAQ,CACJhE,eAAgBgB,KAAKhB,eACrBG,gBAAiBa,KAAKb,gBACtB8D,UAAW,CACPtE,KAAMqB,KAAKd,cACXJ,KAAMkB,KAAK8D,oBAEftE,QAASQ,KAAKR,WAItBQ,KAAK8E,WAAU,WACXJ,EAAKb,MAAM,iBAAkBnF,QAIrCqG,qBAAoB,WAChB/E,KAAKjB,6BAA8B,GAGvCiG,+BAA8B,WAC1BhF,KAAKjB,6BAA8B,GAGvCkG,4BAA2B,SAACC,GACxBlF,KAAKhB,eAAiBkG,EAAa7E,GACnCL,KAAKmF,qBAAqBD,EAAa7E,GAAI6E,IAG/CC,qBAAoB,SAAC9E,EAAI6E,GACjB7E,IACAL,KAAKV,oBAAsB,OAGHU,KAAKoF,cAAcC,MAAK,SAAAf,GAAI,OAAIA,EAAKjE,KAAOA,MAC5C6E,GACxBpH,SAASwH,MAAMC,OAAO,+BAA+B,GAADvD,OAAAC,IAAMjC,KAAKoF,eAAa,CAAEF,MAItFM,kBAAiB,SAACvC,GACI,WAAdA,GACAjD,KAAKf,qBAAsB,EAC3Be,KAAK2D,gBAEL3D,KAAKf,qBAAsB,GAInC0E,aAAY,WAAI,IAAD8B,EAAA,KACLlC,EAAQvF,EAAMwF,WAEpBxD,KAAKZ,WAAWyC,KAAK,CACjBxB,GAAIkD,EACJE,MAAO,GACP1B,KAAM,GACN2B,OAAO,IAGX1D,KAAK8E,WAAU,WACXW,EAAKC,MAAMC,eAAeC,oBAAsBrC,EAChDkC,EAAKC,MAAMC,eAAeE,uBAIlCC,cAAa,SAAC7C,GAAY,IAAD8C,EAAA,KACfC,EAAQhG,KAAKZ,WAAWmF,WAAU,SAACD,GACrC,OAAOA,EAAKjE,KAAO4C,EAAU5C,MAG7BL,KAAKmE,kBAAkBlB,EAAW+C,GAClChG,KAAK8E,WAAU,WACXiB,EAAKL,MAAMC,eAAeC,oBAAsB3C,EAAU5C,GAC1D0F,EAAKL,MAAMC,eAAeE,uBAK9B5C,EAAUS,QACV1D,KAAK2D,eACL3D,KAAKZ,WAAW4G,GAAOtC,OAAQ,GAGnC1D,KAAK6E,eAGToB,oBAAmB,SAAChD,GAAY,IAADiD,EAAA,KAC3B,GAAKjD,EAAUS,MAQXT,EAAUlB,KAAO,GACjBkB,EAAUQ,MAAQ,OATA,CAClB,IAAMuC,EAAQhG,KAAKZ,WAAWmF,WAAU,SAACD,GACrC,OAAOA,EAAKjE,KAAO6F,EAAK7G,kBAAkBgB,MAI9CL,KAAKZ,WAAW4G,GAAShG,KAAKX,kBAMlCW,KAAK6E,cAGTsB,gBAAe,SAAC7B,GACZ,IAAM0B,EAAQhG,KAAKZ,WAAWmF,WAAU,SAACtB,GACrC,OAAOqB,EAAKjE,KAAO4C,EAAU5C,MAI5BiE,EAAKvC,MAASuC,EAAKb,MAIpBzD,KAAKmE,kBAAkBG,EAAM0B,IAH7BhG,KAAKoG,KAAKpG,KAAKZ,WAAY4G,EAAKrG,IAAA,GAAO2E,GAAI,IAAE+B,UAAW,QACxDrG,KAAKoG,KAAKpG,KAAKZ,WAAY4G,EAAKrG,IAAA,GAAO2E,GAAI,IAAEgC,UAAW,SAK5DtG,KAAK0F,MAAMC,eAAeC,oBAAsBtB,EAAKjE,GACrDL,KAAK0F,MAAMC,eAAeE,mBAC1B7F,KAAKX,kBAAiBM,EAAA,GAAQ2E,IAGlCiC,kBAAiB,SAACC,GACdxG,KAAKZ,WAAWqH,OAAOD,EAAW,IAGtC7B,kBAAiB,SAACO,GACd,OAAKA,EAME,KALI,IAAIjH,EAAc,CACrByI,KAAM,0CAOlBC,aAAY,SAAC5E,GAMT,OALeA,EAGN,KAFH,IAAI9D,EAAc,CAChByI,KAAM,0CAMlB9B,aAAY,SAACgC,GACT,IAAIC,EAAQ,KAcZ,OAZKD,IACDC,EAAQ,IAAI5I,EAAc,CACtByI,KAAM,0CAITlC,YAAgBoC,KACjBC,EAAQ,IAAI5I,EAAc,CACtByI,KAAM,kBAIPG,GAGX1C,kBAAiB,SAACG,EAAMkC,GACpB,IAAMH,EAAYrG,KAAK2G,aAAarC,EAAKvC,MACnCuE,EAAYtG,KAAK4E,aAAaN,EAAKb,OAQzC,OANAzD,KAAKoG,KAAKpG,KAAKZ,WAAYoH,EAAS7G,IAAA,GAC7B2E,GAAI,IACP+B,YACAC,eAGGD,GAAaC,GAGxBzB,WAAU,WACN7E,KAAKT,mBAAqB,KAC1BS,KAAKZ,WAAWkC,SAAQ,SAAAgD,GACpBA,EAAK+B,UAAY,KACjB/B,EAAKgC,UAAY,SAIzBQ,qBAAoB,SAACN,GACjB,OAAOA,IAAcxG,KAAKZ,WAAW0C,OAAS,GAGlDiF,uBAAsB,SAACxG,GACnB,OAAQA,GACJ,IAAK,UAID,OAHAP,KAAKP,aAAe,UACpBO,KAAKR,QAAU,MAGnB,IAAK,kBAID,OAHAQ,KAAKP,aAAe,UACpBO,KAAKR,QAAU,mBAGnB,QACIQ,KAAKR,QAAU,KAI3BwH,oBAAmB,SAACC,GAChB,IAGMnI,EAAO,CACToI,aAHclH,KAAKmH,QAAQC,QADjB,CAAErF,KAAM,wCAIMsF,MAG5B,OAAOrH,KAAKS,IAAIwG,EAAS,EAAGnI,O,qBEzfxC,IAAIwI,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAA2EL,SAC5E,WAAYF,GAAS,EAAM","file":"static/js/1fe434e8cacf03ccac9c.js","sourcesContent":["import { email as emailValidation } from 'src/core/service/validation.service';\nimport template from './sw-flow-mail-send-modal.html.twig';\nimport './sw-flow-mail-send-modal.scss';\n\nconst { Component, Utils, Classes: { ShopwareError } } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { mapState } = Component.getComponentHelper();\n\n/**\n * @private\n * @package services-settings\n */\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    props: {\n        sequence: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            showCreateMailTemplateModal: false,\n            mailTemplateId: '',\n            showRecipientEmails: false,\n            mailRecipient: null,\n            documentTypeIds: [],\n            recipients: [],\n            selectedRecipient: null,\n            mailTemplateIdError: null,\n            recipientGridError: null,\n            replyTo: null,\n            replyToError: null,\n        };\n    },\n\n    computed: {\n        mailTemplateCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addAssociation('mailTemplateType');\n\n            return criteria;\n        },\n\n        documentTypeRepository() {\n            return this.repositoryFactory.create('document_type');\n        },\n\n        isNewMail() {\n            return !this.sequence?.id;\n        },\n\n        recipientCustomer() {\n            return [\n                {\n                    value: 'default',\n                    label: this.$tc('sw-flow.modals.mail.labelCustomer'),\n                },\n            ];\n        },\n\n        recipientAdmin() {\n            return [\n                {\n                    value: 'admin',\n                    label: this.$tc('sw-flow.modals.mail.labelAdmin'),\n                },\n            ];\n        },\n\n        recipientCustom() {\n            return [\n                {\n                    value: 'custom',\n                    label: this.$tc('sw-flow.modals.mail.labelCustom'),\n                },\n            ];\n        },\n\n        recipientDefault() {\n            return [\n                {\n                    value: 'default',\n                    label: this.$tc('sw-flow.modals.mail.labelDefault'),\n                },\n            ];\n        },\n\n        recipientContactFormMail() {\n            return [\n                {\n                    value: 'contactFormMail',\n                    label: this.$tc('sw-flow.modals.mail.labelContactFormMail'),\n                },\n            ];\n        },\n\n        entityAware() {\n            return ['CustomerAware', 'UserAware', 'OrderAware', 'CustomerGroupAware'];\n        },\n\n        recipientOptions() {\n            const allowedAwareOrigin = this.triggerEvent.aware ?? [];\n            const allowAwareConverted = [];\n            allowedAwareOrigin.forEach(aware => {\n                aware = aware.slice(aware.lastIndexOf('\\\\') + 1);\n                const awareUpperCase = aware.charAt(0).toUpperCase() + aware.slice(1);\n                if (!allowAwareConverted.includes(awareUpperCase)) {\n                    allowAwareConverted.push(awareUpperCase);\n                }\n            });\n\n            if (allowAwareConverted.length === 0) {\n                return this.recipientCustom;\n            }\n\n            if (this.triggerEvent.name === 'contact_form.send') {\n                return [\n                    ...this.recipientDefault,\n                    ...this.recipientContactFormMail,\n                    ...this.recipientAdmin,\n                    ...this.recipientCustom,\n                ];\n            }\n            if (['newsletter.confirm', 'newsletter.register', 'newsletter.unsubscribe']\n                .includes(this.triggerEvent.name)) {\n                return [\n                    ...this.recipientCustomer,\n                    ...this.recipientAdmin,\n                    ...this.recipientCustom,\n                ];\n            }\n\n            const hasEntityAware = allowAwareConverted.some(allowedAware => this.entityAware.includes(allowedAware));\n\n            if (hasEntityAware) {\n                return [\n                    ...this.recipientCustomer,\n                    ...this.recipientAdmin,\n                    ...this.recipientCustom,\n                ];\n            }\n\n            return [\n                ...this.recipientAdmin,\n                ...this.recipientCustom,\n            ];\n        },\n\n        recipientColumns() {\n            return [{\n                property: 'email',\n                label: 'sw-flow.modals.mail.columnRecipientMail',\n                inlineEdit: 'string',\n            }, {\n                property: 'name',\n                label: 'sw-flow.modals.mail.columnRecipientName',\n                inlineEdit: 'string',\n            }];\n        },\n\n        replyToOptions() {\n            if (this.triggerEvent.name === 'contact_form.send') {\n                return [\n                    ...this.recipientDefault,\n                    ...this.recipientContactFormMail,\n                    ...this.recipientCustom,\n                ];\n            }\n\n            return [\n                ...this.recipientDefault,\n                ...this.recipientCustom,\n            ];\n        },\n\n        replyToSelection() {\n            switch (this.replyTo) {\n                case null:\n                    return 'default';\n                case 'contactFormMail':\n                    return 'contactFormMail';\n                default:\n                    return 'custom';\n            }\n        },\n\n        showReplyToField() {\n            return !(this.replyTo === null || this.replyTo === 'contactFormMail');\n        },\n\n        ...mapState('swFlowState', ['mailTemplates', 'triggerEvent', 'triggerActions']),\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.mailRecipient = this.recipientOptions[0].value;\n\n            if (!this.isNewMail) {\n                const { config } = this.sequence;\n\n                this.mailRecipient = config.recipient?.type;\n\n                if (config.recipient?.type === 'custom') {\n                    Object.entries(config.recipient.data)\n                        .forEach(([key, value]) => {\n                            const newId = Utils.createId();\n                            this.recipients.push({\n                                id: newId,\n                                email: key,\n                                name: value,\n                                isNew: false,\n                            });\n                        });\n\n                    this.addRecipient();\n                    this.showRecipientEmails = true;\n                }\n\n                if (config.replyTo) {\n                    this.replyTo = config.replyTo;\n                }\n\n                this.mailTemplateId = config.mailTemplateId;\n                this.documentTypeIds = config.documentTypeIds;\n            }\n        },\n\n        onClose() {\n            this.$emit('modal-close');\n        },\n\n        getRecipientData() {\n            const recipientData = {};\n            if (this.mailRecipient !== 'custom') {\n                return recipientData;\n            }\n\n            this.recipients.forEach(recipient => {\n                if (!recipient.email && !recipient.name) {\n                    return;\n                }\n\n                Object.assign(recipientData, {\n                    [recipient.email]: recipient.name,\n                });\n            });\n            return recipientData;\n        },\n\n        isRecipientGridError() {\n            if (this.mailRecipient !== 'custom') {\n                return false;\n            }\n\n            if (this.recipients.length === 1 &&\n                !this.recipients[0].email &&\n                !this.recipients[0].name) {\n                this.validateRecipient(this.recipients[0], 0);\n                return true;\n            }\n\n            const invalidItemIndex = this.recipients.filter(item => !item.isNew)\n                .findIndex(recipient => (!recipient.name || !recipient.email || !emailValidation(recipient.email)));\n\n            if (invalidItemIndex >= 0) {\n                this.validateRecipient(this.recipients[invalidItemIndex], invalidItemIndex);\n            }\n\n            return invalidItemIndex >= 0;\n        },\n\n        onAddAction() {\n            this.mailTemplateIdError = this.mailTemplateError(this.mailTemplateId);\n            if (this.showReplyToField) {\n                this.replyToError = this.setMailError(this.replyTo);\n            }\n            this.recipientGridError = this.isRecipientGridError();\n\n            if (this.mailTemplateIdError || this.replyToError || this.recipientGridError) {\n                return;\n            }\n\n            this.resetError();\n\n            const sequence = {\n                ...this.sequence,\n                config: {\n                    mailTemplateId: this.mailTemplateId,\n                    documentTypeIds: this.documentTypeIds,\n                    recipient: {\n                        type: this.mailRecipient,\n                        data: this.getRecipientData(),\n                    },\n                    replyTo: this.replyTo,\n                },\n            };\n\n            this.$nextTick(() => {\n                this.$emit('process-finish', sequence);\n            });\n        },\n\n        onCreateMailTemplate() {\n            this.showCreateMailTemplateModal = true;\n        },\n\n        onCloseCreateMailTemplateModal() {\n            this.showCreateMailTemplateModal = false;\n        },\n\n        onCreateMailTemplateSuccess(mailTemplate) {\n            this.mailTemplateId = mailTemplate.id;\n            this.onChangeMailTemplate(mailTemplate.id, mailTemplate);\n        },\n\n        onChangeMailTemplate(id, mailTemplate) {\n            if (id) {\n                this.mailTemplateIdError = null;\n            }\n\n            const currentMailTemplate = this.mailTemplates.find(item => item.id === id);\n            if (!currentMailTemplate && mailTemplate) {\n                Shopware.State.commit('swFlowState/setMailTemplates', [...this.mailTemplates, mailTemplate]);\n            }\n        },\n\n        onChangeRecipient(recipient) {\n            if (recipient === 'custom') {\n                this.showRecipientEmails = true;\n                this.addRecipient();\n            } else {\n                this.showRecipientEmails = false;\n            }\n        },\n\n        addRecipient() {\n            const newId = Utils.createId();\n\n            this.recipients.push({\n                id: newId,\n                email: '',\n                name: '',\n                isNew: true,\n            });\n\n            this.$nextTick(() => {\n                this.$refs.recipientsGrid.currentInlineEditId = newId;\n                this.$refs.recipientsGrid.enableInlineEdit();\n            });\n        },\n\n        saveRecipient(recipient) {\n            const index = this.recipients.findIndex((item) => {\n                return item.id === recipient.id;\n            });\n\n            if (this.validateRecipient(recipient, index)) {\n                this.$nextTick(() => {\n                    this.$refs.recipientsGrid.currentInlineEditId = recipient.id;\n                    this.$refs.recipientsGrid.enableInlineEdit();\n                });\n                return;\n            }\n\n            if (recipient.isNew) {\n                this.addRecipient();\n                this.recipients[index].isNew = false;\n            }\n\n            this.resetError();\n        },\n\n        cancelSaveRecipient(recipient) {\n            if (!recipient.isNew) {\n                const index = this.recipients.findIndex((item) => {\n                    return item.id === this.selectedRecipient.id;\n                });\n\n                // Reset data when saving is cancelled\n                this.recipients[index] = this.selectedRecipient;\n            } else {\n                recipient.name = '';\n                recipient.email = '';\n            }\n\n            this.resetError();\n        },\n\n        onEditRecipient(item) {\n            const index = this.recipients.findIndex((recipient) => {\n                return item.id === recipient.id;\n            });\n\n            // Recheck error in current item\n            if (!item.name && !item.email) {\n                this.$set(this.recipients, index, { ...item, errorName: null });\n                this.$set(this.recipients, index, { ...item, errorMail: null });\n            } else {\n                this.validateRecipient(item, index);\n            }\n\n            this.$refs.recipientsGrid.currentInlineEditId = item.id;\n            this.$refs.recipientsGrid.enableInlineEdit();\n            this.selectedRecipient = { ...item };\n        },\n\n        onDeleteRecipient(itemIndex) {\n            this.recipients.splice(itemIndex, 1);\n        },\n\n        mailTemplateError(mailTemplate) {\n            if (!mailTemplate) {\n                return new ShopwareError({\n                    code: 'c1051bb4-d103-4f74-8988-acbcafc7fdc3',\n                });\n            }\n\n            return null;\n        },\n\n        setNameError(name) {\n            const error = !name\n                ? new ShopwareError({\n                    code: 'c1051bb4-d103-4f74-8988-acbcafc7fdc3',\n                }) : null;\n\n            return error;\n        },\n\n        setMailError(mail) {\n            let error = null;\n\n            if (!mail) {\n                error = new ShopwareError({\n                    code: 'c1051bb4-d103-4f74-8988-acbcafc7fdc3',\n                });\n            }\n\n            if (!emailValidation(mail)) {\n                error = new ShopwareError({\n                    code: 'INVALID_MAIL',\n                });\n            }\n\n            return error;\n        },\n\n        validateRecipient(item, itemIndex) {\n            const errorName = this.setNameError(item.name);\n            const errorMail = this.setMailError(item.email);\n\n            this.$set(this.recipients, itemIndex, {\n                ...item,\n                errorName,\n                errorMail,\n            });\n\n            return errorName || errorMail;\n        },\n\n        resetError() {\n            this.recipientGridError = null;\n            this.recipients.forEach(item => {\n                item.errorName = null;\n                item.errorMail = null;\n            });\n        },\n\n        allowDeleteRecipient(itemIndex) {\n            return itemIndex !== this.recipients.length - 1;\n        },\n\n        changeShowReplyToField(value) {\n            switch (value) {\n                case 'default':\n                    this.replyToError = null;\n                    this.replyTo = null;\n\n                    return;\n                case 'contactFormMail':\n                    this.replyToError = null;\n                    this.replyTo = 'contactFormMail';\n\n                    return;\n                default:\n                    this.replyTo = '';\n            }\n        },\n\n        buildReplyToTooltip(snippet) {\n            const route = { name: 'sw.settings.basic.information.index' };\n            const routeData = this.$router.resolve(route);\n\n            const data = {\n                settingsLink: routeData.href,\n            };\n\n            return this.$tc(snippet, 0, data);\n        },\n    },\n};\n","export default \"\\n{% block sw_flow_mail_send_modal %}\\n<sw-modal\\n    class=\\\"sw-flow-mail-send-modal\\\"\\n    :title=\\\"$tc('sw-flow.modals.mail.titleSendMail')\\\"\\n    :closable=\\\"false\\\"\\n    @modal-close=\\\"onClose\\\"\\n>\\n    <sw-single-select\\n        :value=\\\"replyToSelection\\\"\\n        class=\\\"sw-flow-mail-send-modal__use-different-reply-to\\\"\\n        :options=\\\"replyToOptions\\\"\\n        :label=\\\"$tc('sw-flow.modals.mail.useDifferentReplyToLabel')\\\"\\n        :help-text=\\\"buildReplyToTooltip('sw-flow.modals.mail.tooltipDifferentReplyTo')\\\"\\n        {% if VUE3 %}\\n        @update:value=\\\"changeShowReplyToField\\\"\\n        {% else %}\\n        @change=\\\"changeShowReplyToField\\\"\\n        {% endif %}\\n    />\\n\\n    <sw-text-field\\n        v-if=\\\"showReplyToField\\\"\\n        {% if VUE3 %}\\n        v-model:value=\\\"replyTo\\\"\\n        {% else %}\\n        v-model=\\\"replyTo\\\"\\n        {% endif %}\\n        class=\\\"sw-flow-mail-send-modal__reply-to\\\"\\n        :label=\\\"$tc('sw-flow.modals.mail.labelReplyTo')\\\"\\n        :placeholder=\\\"$tc('sw-flow.modals.mail.placeholderReplyTo')\\\"\\n        :error=\\\"replyToError\\\"\\n        required\\n        @change=\\\"replyToError = null\\\"\\n    />\\n\\n    \\n    {% block sw_flow_mail_send_modal_recipient %}\\n    <sw-single-select\\n        {% if VUE3 %}\\n        v-model:value=\\\"mailRecipient\\\"\\n        {% else %}\\n        v-model=\\\"mailRecipient\\\"\\n        {% endif %}\\n        class=\\\"sw-flow-mail-send-modal__recipient\\\"\\n        :options=\\\"recipientOptions\\\"\\n        :label=\\\"$tc('sw-flow.modals.mail.labelRecipient')\\\"\\n        :placeholder=\\\"$tc('sw-flow.modals.mail.placeholderRecipient')\\\"\\n        {% if VUE3 %}\\n        @update:value=\\\"onChangeRecipient\\\"\\n        {% else %}\\n        @change=\\\"onChangeRecipient\\\"\\n        {% endif %}\\n    />\\n    {% endblock %}\\n    \\n    {% block sw_flow_mail_send_modal_recipient_emails_grid %}\\n    <sw-data-grid\\n        v-if=\\\"showRecipientEmails\\\"\\n        ref=\\\"recipientsGrid\\\"\\n        class=\\\"sw-flow-mail-send-modal__recipient-grid\\\"\\n        :class=\\\"recipientGridError ? 'has--error' : ''\\\"\\n        :data-source=\\\"recipients\\\"\\n        :columns=\\\"recipientColumns\\\"\\n        :show-selection=\\\"false\\\"\\n        :plain-appearance=\\\"true\\\"\\n        @inline-edit-save=\\\"saveRecipient\\\"\\n        @inline-edit-cancel=\\\"cancelSaveRecipient\\\"\\n    >\\n\\n        \\n        {% block sw_event_action_detail_recipients_grid_column_email %}\\n        <template #column-email=\\\"{ item, column, isInlineEdit, compact }\\\">\\n            <sw-text-field\\n                v-if=\\\"isInlineEdit\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"item.email\\\"\\n                {% else %}\\n                v-model=\\\"item.email\\\"\\n                {% endif %}\\n                class=\\\"sw-flow-mail-send-modal__recipient-email\\\"\\n                :size=\\\"compact ? 'small' : 'default'\\\"\\n                :error=\\\"item.errorMail\\\"\\n                :placeholder=\\\"$tc('sw-flow.modals.mail.placeholderRecipientEmailAddress')\\\"\\n            />\\n            <template v-else>\\n                {{ item.email }}\\n            </template>\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_event_action_detail_recipients_grid_column_name %}\\n        <template #column-name=\\\"{ item, column, isInlineEdit, compact }\\\">\\n            <sw-text-field\\n                v-if=\\\"isInlineEdit\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"item.name\\\"\\n                {% else %}\\n                v-model=\\\"item.name\\\"\\n                {% endif %}\\n                class=\\\"sw-flow-mail-send-modal__recipient-name\\\"\\n                :size=\\\"compact ? 'small' : 'default'\\\"\\n                :error=\\\"item.errorName\\\"\\n                :placeholder=\\\"$tc('sw-flow.modals.mail.placeholderRecipientName')\\\"\\n            />\\n            <template v-else>\\n                {{ item.name }}\\n            </template>\\n        </template>\\n        {% endblock %}\\n\\n        <template #actions=\\\"{ item, itemIndex }\\\">\\n            \\n            {% block sw_event_action_detail_recipients_grid_action_edit %}\\n            <sw-context-menu-item\\n                class=\\\"sw-flow-mail-send-modal__grid-action-edit\\\"\\n                @click=\\\"onEditRecipient(item)\\\"\\n            >\\n                {{ $tc('global.default.edit') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n\\n            \\n            {% block sw_event_action_detail_recipients_grid_action_delete %}\\n            <sw-context-menu-item\\n                class=\\\"sw-flow-mail-send-modal__grid-action-delete\\\"\\n                variant=\\\"danger\\\"\\n                :disabled=\\\"!allowDeleteRecipient(itemIndex)\\\"\\n                @click=\\\"onDeleteRecipient(itemIndex)\\\"\\n            >\\n                {{ $tc('global.default.delete') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n        </template>\\n    </sw-data-grid>\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_mail_send_modal_mail_template_select %}\\n    <sw-entity-single-select\\n        {% if VUE3 %}\\n        v-model:value=\\\"mailTemplateId\\\"\\n        {% else %}\\n        v-model=\\\"mailTemplateId\\\"\\n        {% endif %}\\n        class=\\\"sw-flow-mail-send-modal__mail-template-select\\\"\\n        required\\n        entity=\\\"mail_template\\\"\\n        value-property=\\\"title\\\"\\n        label-property=\\\"description\\\"\\n        :criteria=\\\"mailTemplateCriteria\\\"\\n        :label=\\\"$tc('sw-flow.modals.mail.labelEmailTemplate')\\\"\\n        :placeholder=\\\"$tc('sw-flow.modals.mail.placeholderEmailTemplate')\\\"\\n        :error=\\\"mailTemplateIdError\\\"\\n        {% if VUE3 %}\\n        @update:value=\\\"(id, template) => onChangeMailTemplate(id, template)\\\"\\n        {% else %}\\n        @change=\\\"(id, template) => onChangeMailTemplate(id, template)\\\"\\n        {% endif %}\\n    >\\n\\n        <template #before-item-list>\\n\\n            \\n            {% block sw_flow_mail_send_modal_mail_template_select_before_list %}\\n            <ul class=\\\"sw-select-result__item-list\\\">\\n                <li\\n                    class=\\\"sw-select-result sw-select-result__create-new-template\\\"\\n                    role=\\\"button\\\"\\n                    tabindex=\\\"0\\\"\\n                    @click=\\\"onCreateMailTemplate\\\"\\n                    @keydown.enter=\\\"onCreateMailTemplate\\\"\\n                >\\n                    {{ $tc('sw-flow.modals.mail.titleNewEmailTemplate') }}\\n                </li>\\n            </ul>\\n            {% endblock %}\\n        </template>\\n\\n        <template #selection-label-property=\\\"{ item }\\\">\\n            <strong>{{ item.translated.description }}</strong>\\n            <template v-if=\\\"item.translated.description\\\">\\n                -\\n            </template>\\n            {{ item.mailTemplateType.translated.name }}\\n        </template>\\n\\n        <template #result-label-property=\\\"{ item, highlightSearchTerm, labelProperty, searchTerm }\\\">\\n            <strong>\\n                <sw-highlight-text\\n                    :text=\\\"item.translated.description\\\"\\n                    :search-term=\\\"searchTerm\\\"\\n                />\\n            </strong>\\n            {{ item.mailTemplateType.translated.name }}\\n        </template>\\n    </sw-entity-single-select>\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_mail_send_modal_mail_template_detail_link %}\\n    <div class=\\\"sw-flow-mail-send-modal__mail-template-detail\\\">\\n        <router-link\\n            v-if=\\\"mailTemplateId\\\"\\n            target=\\\"_blank\\\"\\n            rel=\\\"noopener\\\"\\n            :to=\\\"{ name: 'sw.mail.template.detail', params: { id: mailTemplateId } }\\\"\\n        >\\n            {{ $tc('sw-flow.modals.mail.fieldMailTemplateDetailLink') }}\\n        </router-link>\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_mail_send_modal_document_types %}\\n    <sw-entity-multi-id-select\\n        {% if VUE3 %}\\n        v-model:ids=\\\"documentTypeIds\\\"\\n        {% else %}\\n        v-model=\\\"documentTypeIds\\\"\\n        {% endif %}\\n        :repository=\\\"documentTypeRepository\\\"\\n        class=\\\"sw-flow-mail-send-modal__document-types\\\"\\n        :label=\\\"$tc('sw-flow.modals.mail.labelLatestDocuments')\\\"\\n        :placeholder=\\\"$tc('sw-flow.modals.mail.placeholderLatestDocuments')\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_mail_send_create_new_template %}\\n    <sw-flow-create-mail-template-modal\\n        v-if=\\\"showCreateMailTemplateModal\\\"\\n        class=\\\"sw-flow-mail-send-modal__create-mail-template\\\"\\n        @process-finish=\\\"onCreateMailTemplateSuccess\\\"\\n        @modal-close=\\\"onCloseCreateMailTemplateModal\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_mail_send_modal_document_warning %}\\n    <sw-alert\\n        class=\\\"sw-flow-mail-send-modal__document_warning\\\"\\n        variant=\\\"info\\\"\\n    >\\n        {{ $tc('sw-flow.modals.mail.documentDescription') }}\\n    </sw-alert>\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_mail_send_modal_custom %}\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_mail_send_modal_footer %}\\n    <template #modal-footer>\\n        \\n        {% block sw_flow_mail_send_modal_footer_cancel_button %}\\n        <sw-button\\n            class=\\\"sw-flow-mail-send-modal__cancel-button\\\"\\n            size=\\\"small\\\"\\n            @click=\\\"onClose\\\"\\n        >\\n            {{ $tc('global.default.cancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_mail_send_modal_footer_save_button %}\\n        <sw-button\\n            class=\\\"sw-flow-mail-send-modal__save-button\\\"\\n            variant=\\\"primary\\\"\\n            size=\\\"small\\\"\\n            @click=\\\"onAddAction\\\"\\n        >\\n            {{ sequence.id ? $tc('sw-flow.modals.buttonSaveAction') : $tc('sw-flow.modals.buttonAddAction') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n</sw-modal>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-flow-mail-send-modal.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1d93a5f7\", content, true, {});"],"sourceRoot":""}