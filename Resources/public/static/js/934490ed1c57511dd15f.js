(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[87638],{871675:function(){},187638:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return u}}),s(568271);var a=s(593135);let{Mixin:o}=Shopware,{Criteria:n}=Shopware.Data,{types:i}=Shopware.Utils,{chunk:l}=Shopware.Utils.array,{cloneDeep:c}=Shopware.Utils.object;var u={template:'\n{% block sw_bulk_edit_customer %}\n<sw-page class="sw-bulk-edit-customer">\n    \n    {% block sw_bulk_edit_customer_search_bar %}\n    <template #search-bar>\n        <sw-search-bar />\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_bulk_edit_customer_smart_bar_header %}\n    <template #smart-bar-header>\n        <h2>{{ $tc(\'sw-bulk-edit.customer.textTitle\', selectedIds.length, { customerTotal: selectedIds.length }) }}</h2>\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_bulk_edit_customer_content_language_switch %}\n    <template #language-switch>\n        <sw-language-switch @on-change="onChangeLanguage" />\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_bulk_edit_customer_content_smart_bar_actions %}\n    <template #smart-bar-actions>\n        \n        {% block sw_bulk_edit_customer_actions_save %}\n        <sw-button-process\n            class="sw-bulk-edit-customer__save-action"\n            variant="primary"\n            :is-loading="isLoading"\n            :process-success="false"\n            :disabled="isLoading || !hasChanges"\n            @click="openModal"\n        >\n            {{ $tc(\'sw-bulk-edit.applyChanges\') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_bulk_edit_customer_content %}\n    <template #content>\n        <sw-card-view\n            v-if="selectedIds.length > 0 && isLoadedData"\n        >\n            \n            {% block sw_bulk_edit_customer_content_account_card %}\n            <sw-card\n                class="sw-bulk-edit-customer-base__account"\n                position-identifier="sw-bulk-edit-customer-account"\n                :title="$tc(\'sw-bulk-edit.customer.account.cardTitle\')"\n                :is-loading="isLoading"\n            >\n                \n                {% block sw_bulk_edit_customer_content_account_section %}\n                <sw-bulk-edit-change-type-field-renderer\n                    :form-fields="accountFormFields"\n                    :bulk-edit-data="bulkEditData"\n                    :entity="customer"\n                />\n                {% endblock %}\n            </sw-card>\n            {% endblock %}\n\n            \n            {% block sw_bulk_edit_customer_tags_card %}\n            <sw-card\n                class="sw-bulk-edit-customer-base__tags"\n                position-identifier="sw-bulk-edit-customer-tags"\n                :title="$tc(\'sw-bulk-edit.customer.tags.cardTitle\')"\n                :is-loading="isLoading"\n            >\n                \n                {% block sw_bulk_edit_customer_tags %}\n                <sw-bulk-edit-change-type-field-renderer\n                    :form-fields="tagsFormFields"\n                    :bulk-edit-data="bulkEditData"\n                    :entity="customer"\n                />\n                {% endblock %}\n            </sw-card>\n            {% endblock %}\n\n            \n            {% block sw_bulk_edit_customer_custom_field_card %}\n            <sw-card\n                class="sw-bulk-edit-customer-base__custom_fields"\n                position-identifier="sw-bulk-edit-customer-custom-field"\n                :title="$tc(\'sw-bulk-edit.customer.customFields.cardTitle\')"\n                :is-loading="isLoading"\n            >\n                <sw-bulk-edit-custom-fields\n                    class="sw-bulk-edit__custom-fields"\n                    :sets="customFieldSets"\n                    @change="onCustomFieldsChange"\n                />\n            </sw-card>\n            {% endblock %}\n        </sw-card-view>\n\n        \n        {% block sw_bulk_edit_customer_empty_state %}\n        <sw-empty-state\n            v-if="selectedIds.length <= 0 && !isLoading"\n            :title="$tc(\'sw-bulk-edit.customer.messageEmptyTitle\')"\n            :subline="$tc(\'sw-bulk-edit.customer.messageEmptySubline\')"\n        />\n        {% endblock %}\n\n        \n        {% block sw_bulk_edit_customer_save_modal %}\n        <router-view\n            v-slot="{ Component }"\n        >\n            <component\n                :is="Component"\n                :item-total="selectedIds.length"\n                :is-loading="isLoading"\n                :process-status="processStatus"\n                :bulk-edit-data="bulkEditData"\n                @modal-close="closeModal"\n                @bulk-save="onSave"\n            />\n        </router-view>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["feature","bulkEditApiFactory","repositoryFactory"],mixins:[o.getByName("notification")],data(){return{isLoading:!1,isLoadedData:!1,isSaveSuccessful:!1,bulkEditData:{},customFieldSets:[],processStatus:"",customer:{}}},metaInfo(){return{title:this.$createTitle()}},computed:{selectedIds(){return Shopware.State.get("shopwareApps").selectedIds},customFieldSetRepository(){return this.repositoryFactory.create("custom_field_set")},customerRepository(){return this.repositoryFactory.create("customer")},customFieldSetCriteria(){let e=new n(1,null);return e.addFilter(n.equals("relations.entityName","customer")),e},hasChanges(){let e=this.bulkEditData.customFields?.value,t=Object.values(this.bulkEditData).some(e=>e.isChanged),s=!i.isEmpty(e)&&Object.keys(e).length>0;return t||s},actionsRequestGroup(){return[{value:"accept",label:this.$tc("sw-bulk-edit.customer.account.customerGroupRequest.options.accept")},{value:"decline",label:this.$tc("sw-bulk-edit.customer.account.customerGroupRequest.options.decline")}]},accountFormFields(){let e=[{name:"groupId",config:{componentName:"sw-entity-single-select",entity:"customer_group",changeLabel:this.$tc("sw-bulk-edit.customer.account.customerGroup.label"),placeholder:this.$tc("sw-bulk-edit.customer.account.customerGroup.placeholder")}},{name:"active",type:"bool",config:{type:"switch",changeLabel:this.$tc("sw-bulk-edit.customer.account.status.label")}},{name:"languageId",config:{componentName:"sw-entity-single-select",entity:"language",changeLabel:this.$tc("sw-bulk-edit.customer.account.language.label"),placeholder:this.$tc("sw-bulk-edit.customer.account.language.placeholder")}},{name:"requestedCustomerGroupId",labelHelpText:this.$tc("sw-bulk-edit.customer.account.customerGroupRequest.helpText"),config:{componentName:"sw-single-select",entity:"customer_group",changeLabel:this.$tc("sw-bulk-edit.customer.account.customerGroupRequest.label"),placeholder:this.$tc("sw-bulk-edit.customer.account.customerGroupRequest.placeholder"),options:this.actionsRequestGroup}}];return this.feature.isActive("v6.7.0.0")&&e.splice(1,0,{name:"defaultPaymentMethodId",config:{componentName:"sw-entity-single-select",entity:"payment_method",changeLabel:this.$tc("sw-bulk-edit.customer.account.defaultPaymentMethod.label"),placeholder:this.$tc("sw-bulk-edit.customer.account.defaultPaymentMethod.placeholder")}}),e},tagsFormFields(){return[{name:"tags",config:{componentName:"sw-entity-tag-select",entityCollection:this.customer.tags,allowOverwrite:!0,allowClear:!0,allowAdd:!0,allowRemove:!0,changeLabel:this.$tc("sw-bulk-edit.order.tags.changeLabel"),placeholder:this.$tc("sw-bulk-edit.order.tags.placeholder")}}]}},beforeCreate(){Shopware.State.registerModule("swBulkEdit",a.Z)},created(){this.createdComponent()},beforeUnmount(){Shopware.State.unregisterModule("swBulkEdit")},methods:{createdComponent(){this.setRouteMetaModule(),Shopware.State.getters["context/isSystemDefaultLanguage"]||Shopware.State.commit("context/resetLanguageToDefault"),this.isLoading=!0,this.customer=this.customerRepository.create(Shopware.Context.api),this.loadCustomFieldSets().then(()=>{this.loadBulkEditData(),this.isLoadedData=!0}).catch(e=>{this.createNotificationError({title:this.$tc("global.default.error"),message:e})}).finally(()=>{this.isLoading=!1})},setRouteMetaModule(){this.isCompatEnabled("INSTANCE_SET")?(this.$set(this.$route.meta.$module,"color","#F88962"),this.$set(this.$route.meta.$module,"icon","regular-users")):(this.$route.meta.$module||(this.$route.meta.$module={}),this.$route.meta.$module.color="#F88962",this.$route.meta.$module.icon="regular-users")},defineBulkEditData(e,t=null,s="overwrite",a=!1){this.bulkEditData[e]||(this.isCompatEnabled("INSTANCE_SET")?this.$set(this.bulkEditData,e,{isChanged:a,type:s,value:t}):this.bulkEditData[e]={isChanged:a,type:s,value:t})},loadBulkEditData(){[this.accountFormFields,this.tagsFormFields].forEach(e=>{e.forEach(e=>{this.defineBulkEditData(e.name)})}),this.isCompatEnabled("INSTANCE_SET")?this.$set(this.bulkEditData,"customFields",{type:"overwrite",value:null}):this.bulkEditData.customFields={type:"overwrite",value:null}},loadCustomFieldSets(){return this.customFieldSetRepository.search(this.customFieldSetCriteria).then(e=>{this.customFieldSets=e})},onCustomFieldsChange(e){if(Object.keys(e).length<=0){this.bulkEditData=this.bulkEditData.filter(e=>"customFields"!==e.field);return}this.bulkEditData.customFields.value=e},onProcessData(){let e={requestData:[],syncData:[]};return Object.keys(this.bulkEditData).forEach(t=>{let s=c(this.bulkEditData[t]),a=this.customer[t];"active"!==t||a||(a=!1),"customFields"===t&&(a=s.value);let o={field:t,type:s.type,value:a};(s.isChanged||"customFields"===t&&s.value)&&("requestedCustomerGroupId"===t?e.requestData.push(o):e.syncData.push(o))}),e},openModal(){this.$router.push({name:"sw.bulk.edit.customer.save"})},async onSave(){this.isLoading=!0;let{requestData:e,syncData:t}=this.onProcessData(),s=this.bulkEditApiFactory.getHandler("customer"),a=l(this.selectedIds,50),o=[];return e.length&&o.push(s.bulkEditRequestedGroup(this.selectedIds,e)),a.forEach(e=>{t.length&&o.push(this.bulkEditApiFactory.getHandler("customer").bulkEdit(e,t))}),Promise.all(o).then(()=>{this.processStatus="success"}).catch(e=>{console.error(e),this.processStatus="fail"}).finally(()=>{this.isLoading=!1})},closeModal(){this.$router.push({name:"sw.bulk.edit.customer"})},onChangeLanguage(e){Shopware.State.commit("context/setApiLanguageId",e)}}}},593135:function(e,t){"use strict";t.Z={namespaced:!0,state(){let e=new Date().toISOString();return{isFlowTriggered:!0,orderDocuments:{invoice:{isChanged:!1,value:{documentDate:e,documentComment:null}},storno:{isChanged:!1,value:{documentDate:e,documentComment:null}},delivery_note:{isChanged:!1,value:{custom:{deliveryDate:e,deliveryNoteDate:e},documentDate:e,documentComment:null}},credit_note:{isChanged:!1,value:{documentDate:e,documentComment:null}},download:{isChanged:!1,value:[]}}}},mutations:{setIsFlowTriggered(e,t){e.isFlowTriggered=t},setOrderDocumentsIsChanged(e,{type:t,isChanged:s}){e.orderDocuments[t].isChanged=s},setOrderDocumentsValue(e,{type:t,value:s}){e.orderDocuments[t].value=s}},getters:{documentTypeConfigs(e){let t=[];return Object.entries(e.orderDocuments).forEach(([e,s])=>{"download"!==e&&!0===s.isChanged&&t.push({fileType:"pdf",type:e,config:s.value})}),t}}}},568271:function(e,t,s){var a=s(871675);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),s(745346).Z("06aa0541",a,!0,{})}}]);