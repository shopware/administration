(this.webpackJsonpAdministration=this.webpackJsonpAdministration||[]).push([[489],{HpF6:function(e,t,r){"use strict";t.a=Object.freeze({ACCOUNT_TYPE_PRIVATE:"private",ACCOUNT_TYPE_BUSINESS:"business"})},N65V:function(e,t,r){"use strict";r.r(t);var s=r("HZZ/"),n=r.n(s),o=r("J58c"),a=r.n(o),i=r("hJxD"),c=r.n(i),u=r("HpF6");function d(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function m(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?d(Object(r),!0).forEach((function(t){a()(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):d(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var l=Shopware.Component.getComponentHelper().mapPropertyErrors,h=Shopware.Classes.ShopwareError,p=Shopware.Mixin;t.default={template:'{%  block sw_customer_create %}\n<sw-page class="sw-customer-create">\n\n    \n    {% block sw_customer_create_header %}\n    <template #smart-bar-header>\n        <h2>{{ customer | salutation($tc(\'sw-customer.general.newCustomer\')) }}</h2>\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_customer_create_language_switch %}\n    <template #language-switch>\n        <sw-language-switch\n            v-tooltip="{ message: $tc(\'sw-customer.general.tooltipLanguageSwitch\') }"\n            disabled\n        />\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_customer_create_actions %}\n    <template #smart-bar-actions>\n        <sw-button-process\n            class="sw-customer-create__save-action"\n            :is-loading="isLoading"\n            :disabled="isLoading"\n            :process-success="isSaveSuccessful"\n            variant="primary"\n            @process-finish="saveFinish"\n            @click.prevent="onSave"\n        >\n            {{ $tc(\'sw-customer.detail.buttonSave\') }}\n        </sw-button-process>\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_customer_create_content %}\n    <template #content>\n        <sw-card-view>\n            \n            {% block sw_customer_create_base_form %}\n            <sw-card\n                :title="$tc(\'sw-customer.detailBase.labelAccountCard\')"\n                position-identifier="sw-customer-create-base-form"\n            >\n                <sw-customer-base-form\n                    :is-loading="isLoading"\n                    :customer="customer"\n                    @sales-channel-change="onChangeSalesChannel"\n                />\n            </sw-card>\n            {% endblock %}\n\n            \n            {% block sw_customer_create_adress_form %}\n            <sw-card\n                :title="$tc(\'sw-customer.detailBase.labelAddressesCard\')"\n                position-identifier="sw-customer-create-address-form"\n            >\n                <sw-customer-address-form\n                    v-bind="{ customer, address }"\n                />\n            </sw-card>\n            {% endblock %}\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',inject:["repositoryFactory","numberRangeService","systemConfigApiService","customerValidationService"],mixins:[p.getByName("notification")],data:function(){return{customer:null,address:null,customerNumberPreview:"",isSaveSuccessful:!1,salesChannels:null,isLoading:!1,errorEmailCustomer:null,defaultMinPasswordLength:null}},computed:m(m({},l("address",["company"])),{},{customerRepository:function(){return this.repositoryFactory.create("customer")},validCompanyField:function(){var e;return this.customer.accountType!==u.a.ACCOUNT_TYPE_BUSINESS||(null===(e=this.address.company)||void 0===e?void 0:e.trim().length)},validPasswordField:function(){var e;return(null===(e=this.customer.password)||void 0===e?void 0:e.trim().length)>=this.defaultMinPasswordLength}}),watch:{"customer.salesChannelId":function(e){var t=this;this.systemConfigApiService.getValues("core.systemWideLoginRegistration").then((function(r){r["core.systemWideLoginRegistration.isCustomerBoundToSalesChannel"]&&(t.customer.boundSalesChannelId=e)}))},"customer.accountType":function(e){e!==u.a.ACCOUNT_TYPE_BUSINESS&&this.addressCompanyError&&Shopware.State.dispatch("error/removeApiError",{expression:"customer_address.".concat(this.address.id,".company")})}},created:function(){this.createdComponent()},methods:{createdComponent:function(){Shopware.State.commit("context/resetLanguageToDefault"),this.customer=this.customerRepository.create();var e=this.repositoryFactory.create(this.customer.addresses.entity,this.customer.addresses.source);this.customer.accountType=u.a.ACCOUNT_TYPE_PRIVATE,this.address=e.create(),this.customer.addresses.add(this.address),this.customer.defaultBillingAddressId=this.address.id,this.customer.defaultShippingAddressId=this.address.id,this.customer.password="",this.customer.vatIds=[]},saveFinish:function(){this.isSaveSuccessful=!1,this.$router.push({name:"sw.customer.detail",params:{id:this.customer.id}})},validateEmail:function(){var e=this,t=this.customer,r=t.id,s=t.email,n=t.boundSalesChannelId;return s?this.customerValidationService.checkCustomerEmail({id:r,email:s,boundSalesChannelId:n}).then((function(e){return e})).catch((function(t){Shopware.State.dispatch("error/addApiError",{expression:"customer.".concat(e.customer.id,".email"),error:new h(t.response.data.errors[0])})})):Promise.resolve({isValid:!0})},onSave:function(){var e=this;return n()(c.a.mark((function t(){var r,s,n;return c.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e.isLoading=!0,r=!1,t.next=4,e.validateEmail();case 4:if((s=t.sent)&&s.isValid||(r=!0),e.isSaveSuccessful=!1,n=Promise.resolve(),e.customerNumberPreview===e.customer.customerNumber&&(n=e.numberRangeService.reserve("customer",e.customer.salesChannelId).then((function(t){e.customerNumberPreview="reserved",e.customer.customerNumber=t.number}))),e.validCompanyField||(e.createErrorMessageForCompanyField(),r=!0),!r){t.next=14;break}return e.createNotificationError({message:e.$tc("sw-customer.detail.messageSaveError")}),e.isLoading=!1,t.abrupt("return",!1);case 14:return t.abrupt("return",n.then((function(){return e.customerRepository.save(e.customer).then((function(){e.isLoading=!1,e.isSaveSuccessful=!0})).catch((function(){e.createNotificationError({message:e.$tc("sw-customer.detail.messageSaveError")}),e.isLoading=!1}))})));case 15:case"end":return t.stop()}}),t)})))()},onChangeSalesChannel:function(e){var t=this;this.customer.salesChannelId=e,this.numberRangeService.reserve("customer",e,!0).then((function(e){t.customerNumberPreview=e.number,t.customer.customerNumber=e.number}))},createErrorMessageForCompanyField:function(){this.isLoading=!1,Shopware.State.dispatch("error/addApiError",{expression:"customer_address.".concat(this.address.id,".company"),error:new Shopware.Classes.ShopwareError({code:"c1051bb4-d103-4f74-8988-acbcafc7fdc3"})}),this.createNotificationError({message:this.$tc("sw-customer.error.COMPANY_IS_REQUIRED")})},getDefaultRegistrationConfig:function(){var e=this;this.systemConfigApiService.getValues("core.register").then((function(t){e.defaultMinPasswordLength=t["core.register.minPasswordLength"]}))}}}}}]);