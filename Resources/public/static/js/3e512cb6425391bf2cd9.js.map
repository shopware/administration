{"version":3,"sources":["webpack:///./src/module/sw-promotion-v2/helper/promotion.helper.js","webpack:///./src/module/sw-promotion-v2/component/sw-promotion-discount-component/handler.js","webpack:///./src/module/sw-promotion-v2/component/sw-promotion-discount-component/index.js","webpack:///./src/module/sw-promotion-v2/component/sw-promotion-discount-component/sw-promotion-discount-component.html.twig","webpack:///./src/module/sw-promotion-v2/component/sw-promotion-discount-component/sw-promotion-discount-component.scss"],"names":["DiscountTypes","PERCENTAGE","ABSOLUTE","FIXED","FIXED_UNIT","DiscountScopes","CART","DELIVERY","SET","SETGROUP","PromotionPermissions","isEditingAllowed","promotion","undefined","hasOwnProperty","Error","hasOrders","PromotionDiscountHandler","_classCallCheck","_createClass","key","value","discountType","currencySymbol","arguments","length","this","getMaxValue","getMinValue","Mixin","Shopware","Criteria","Data","discountHandler","DiscountHandler","template","inject","mixins","getByName","props","type","Object","required","discount","data","displayAdvancedPrices","currencies","defaultCurrency","isLoading","showRuleModal","showDeleteModal","allowProductRules","cartScope","scope","shippingScope","considerAdvancedRules","availableSetGroups","syncService","httpClient","sorterKeys","pickerKeys","restrictedRules","computed","advancedPricesRepo","repositoryFactory","create","repositoryGroups","currencyRepository","ruleFilter","criteria","addAssociation","addSorting","sort","currencyPriceColumns","property","label","$tc","dataIndex","scopes","_this","name","index","forEach","keyValue","concat","nameValue","push","types","availableTypes","valueSuffix","getValueSuffix","maxValueSuffix","showMaxValueSettings","showAbsoluteAdvancedPricesSettings","showMaxValueAdvancedPrices","maxValue","maxValueAdvancedPricesTooltip","promotionDiscountPrices","isEditingDisabled","acl","can","displayAdvancedRuleOption","graduationSorters","_this2","result","graduationPickers","_this3","isSetGroup","split","isSet","graduationAppliers","i","appliers","maxCount","splittedScope","group","parseInt","packagerKey","count","graduationCounts","counts","isPickingModeVisible","startsWith","isMaxUsageVisible","promotionDiscountSnippet","ruleConditionDataProviderService","getAwarenessConfigurationByAssignmentName","snippet","created","createdComponent","methods","_this4","Service","search","then","response","find","currency","isSystemDefault","symbol","previousScope","loadSetGroups","loadSorters","keys","loadPickers","loadRestrictedRules","onDiscountScopeChanged","pickerKey","usageKey","onDiscountTypeChanged","getFixedValue","onDiscountValueChanged","onMaxValueChanged","clearAdvancedPrices","onClickAdvancedPrices","_this5","isMemberOfCollection","prepareAdvancedPrices","basePrice","setPrice","factor","newAdvancedCurrencyPrices","Context","api","discountId","id","price","currencyId","add","ids","getIds","remove","foundValue","currencyID","advancedPrice","onCloseAdvancedPricesModal","onShowDeleteModal","onCloseDeleteModal","onConfirmDelete","_this6","$nextTick","$emit","_this7","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","addFilter","equals","groups","abrupt","stop","_this8","_callee2","_context2","get","headers","getBasicHeaders","_this9","_callee3","_context3","_this10","getRestrictedRules","content","__esModule","default","module","locals","exports"],"mappings":"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","file":"static/js/3e512cb6425391bf2cd9.js","sourcesContent":["/**\n * @package buyers-experience\n */\nimport { hasOwnProperty } from 'src/core/service/utils/object.utils';\n\n/**\n * @private\n */\nexport const DiscountTypes = {\n    PERCENTAGE: 'percentage',\n    ABSOLUTE: 'absolute',\n    FIXED: 'fixed',\n    FIXED_UNIT: 'fixed_unit',\n};\n\n/**\n * @private\n */\nexport const DiscountScopes = {\n    CART: 'cart',\n    DELIVERY: 'delivery',\n    SET: 'set',\n    SETGROUP: 'setgroup',\n};\n\n/**\n * @private\n */\nexport const PromotionPermissions = {\n    isEditingAllowed,\n};\n\n/**\n * Gets if the editing of the promotion is allowed,\n * or if it's forbidden to change anything because\n * it has already been used.\n *\n * @param {Object} promotion\n */\nfunction isEditingAllowed(promotion) {\n    if (promotion === null) {\n        return false;\n    }\n\n    if (promotion === undefined) {\n        return false;\n    }\n\n    if (!hasOwnProperty(promotion, 'hasOrders')) {\n        throw new Error('Promotion Property hasOrders does not exist. Please use the Hydrator before!');\n    }\n\n    return !promotion.hasOrders;\n}\n","import { DiscountTypes } from 'src/module/sw-promotion-v2/helper/promotion.helper';\n\n/**\n * @package buyers-experience\n *\n * @private\n */\nexport default class PromotionDiscountHandler {\n    // Gets the suffix of the value text field depending\n    // on the currently selected type.\n    getValueSuffix(discountType, currencySymbol = '?') {\n        return (discountType === DiscountTypes.PERCENTAGE) ? '%' : currencySymbol;\n    }\n\n    // Gets the value minimum threshold depending\n    // on the currently selected type.\n    getMinValue() {\n        return 0.00;\n    }\n\n    // Gets the value maximum threshold depending\n    // on the currently selected type.\n    getMaxValue(discountType) {\n        return (discountType === DiscountTypes.PERCENTAGE) ? 100 : null;\n    }\n\n    // This function verifies the currently set value\n    // depending on the discount type, and fixes it if\n    // the min or maximum thresholds have been exceeded.\n    getFixedValue(value, discountType) {\n        if (discountType === DiscountTypes.PERCENTAGE) {\n            value = (value > 100) ? this.getMaxValue(discountType) : value;\n        }\n        if (value <= this.getMinValue()) {\n            value = this.getMinValue();\n        }\n\n        return value;\n    }\n}\n","import { DiscountTypes, DiscountScopes, PromotionPermissions } from 'src/module/sw-promotion-v2/helper/promotion.helper';\nimport template from './sw-promotion-discount-component.html.twig';\nimport './sw-promotion-discount-component.scss';\nimport DiscountHandler from './handler';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst discountHandler = new DiscountHandler();\n\n/**\n * @package buyers-experience\n *\n * @private\n */\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'feature',\n        'ruleConditionDataProviderService',\n    ],\n\n    mixins: [\n        Mixin.getByName('placeholder'),\n    ],\n\n    props: {\n        promotion: {\n            type: Object,\n            required: true,\n        },\n        discount: {\n            type: Object,\n            required: true,\n        },\n    },\n    data() {\n        return {\n            displayAdvancedPrices: false,\n            currencies: [],\n            defaultCurrency: null,\n            isLoading: false,\n            showRuleModal: false,\n            showDeleteModal: false,\n            currencySymbol: null,\n            allowProductRules: false,\n            cartScope: this.discount.scope === DiscountScopes.CART,\n            shippingScope: this.discount.scope === DiscountScopes.DELIVERY,\n            considerAdvancedRules: this.discount.considerAdvancedRules,\n            availableSetGroups: [],\n            syncService: null,\n            httpClient: null,\n            sorterKeys: [],\n            pickerKeys: [],\n            restrictedRules: [],\n        };\n    },\n\n    computed: {\n        advancedPricesRepo() {\n            return this.repositoryFactory.create('promotion_discount_prices');\n        },\n\n        repositoryGroups() {\n            return this.repositoryFactory.create('promotion_setgroup');\n        },\n\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n\n        ruleFilter() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addAssociation('conditions');\n            criteria.addSorting(Criteria.sort('name', 'ASC', false));\n\n            return criteria;\n        },\n\n        currencyPriceColumns() {\n            return [\n                {\n                    property: 'currency.translated.name',\n                    label: this.$tc('sw-promotion.detail.main.discounts.pricesModal.labelCurrency'),\n                },\n                {\n                    property: 'price',\n                    dataIndex: 'price',\n                    label: this.$tc('sw-promotion.detail.main.discounts.pricesModal.labelPrice'),\n                },\n            ];\n        },\n\n        scopes() {\n            const scopes = [\n                { key: DiscountScopes.CART, name: this.$tc('sw-promotion.detail.main.discounts.valueScopeCart') },\n                { key: DiscountScopes.DELIVERY, name: this.$tc('sw-promotion.detail.main.discounts.valueScopeDelivery') },\n                { key: DiscountScopes.SET, name: this.$tc('sw-promotion.detail.main.discounts.valueScopeSet') },\n            ];\n\n            let index = 1;\n            this.availableSetGroups.forEach(() => {\n                const keyValue = `${DiscountScopes.SETGROUP}-${index}`;\n                const nameValue = `${this.$tc('sw-promotion.detail.main.discounts.valueScopeSetGroup')}-${index}`;\n                scopes.push({ key: keyValue, name: nameValue });\n                index += 1;\n            });\n\n            // if our groups are not yet loaded (async)\n            // make sure that we have at least our selected entry visible\n            // to avoid an accidental save with another value\n            if (this.availableSetGroups.length <= 0) {\n                const nameValue = `${this.$tc('sw-promotion.detail.main.discounts.valueScopeSetGroup')}`;\n                scopes.push({ key: DiscountScopes.SETGROUP, name: nameValue });\n            }\n\n            return scopes;\n        },\n\n        types() {\n            const availableTypes = [\n                { key: DiscountTypes.ABSOLUTE, name: this.$tc('sw-promotion.detail.main.discounts.valueTypeAbsolute') },\n                { key: DiscountTypes.PERCENTAGE, name: this.$tc('sw-promotion.detail.main.discounts.valueTypePercentage') },\n                { key: DiscountTypes.FIXED_UNIT, name: this.$tc('sw-promotion.detail.main.discounts.valueTypeFixedUnit') },\n            ];\n\n            // do not allow a fixed-total price for cart. this would mean the whole\n            // cart is sold for price X.\n            // we do only allow this option if the scope is something else\n            if (!this.cartScope) {\n                availableTypes.push(\n                    { key: DiscountTypes.FIXED, name: this.$tc('sw-promotion.detail.main.discounts.valueTypeFixed') },\n                );\n            }\n\n            // if we do have a cart scope, only allow the fixed value if\n            // at least advanced rules have been activated\n            if (this.cartScope && this.discount.considerAdvancedRules) {\n                availableTypes.push(\n                    { key: DiscountTypes.FIXED, name: this.$tc('sw-promotion.detail.main.discounts.valueTypeFixed') },\n                );\n            }\n\n            return availableTypes;\n        },\n\n        valueSuffix() {\n            return discountHandler.getValueSuffix(this.discount.type, this.currencySymbol);\n        },\n\n        maxValueSuffix() {\n            return this.currencySymbol;\n        },\n\n        showMaxValueSettings() {\n            return this.discount.type === DiscountTypes.PERCENTAGE;\n        },\n\n        showAbsoluteAdvancedPricesSettings() {\n            return (this.discount.type === DiscountTypes.ABSOLUTE || this.discount.type === DiscountTypes.FIXED);\n        },\n\n        // only show advanced max value settings if\n        // at least a base max value has been set\n        showMaxValueAdvancedPrices() {\n            return this.discount.type === DiscountTypes.PERCENTAGE && this.discount.maxValue !== null;\n        },\n\n        maxValueAdvancedPricesTooltip() {\n            if (\n                this.discount.type === DiscountTypes.PERCENTAGE &&\n                this.discount.maxValue !== null &&\n                this.discount.promotionDiscountPrices.length > 0\n            ) {\n                return this.$tc('sw-promotion.detail.main.discounts.helpTextMaxValueAdvancedPrices');\n            }\n            return '';\n        },\n\n        isEditingDisabled() {\n            if (!this.acl.can('promotion.editor')) {\n                return true;\n            }\n\n            return !PromotionPermissions.isEditingAllowed(this.promotion);\n        },\n\n        displayAdvancedRuleOption() {\n            return (this.discount.scope !== DiscountScopes.DELIVERY);\n        },\n\n        graduationSorters() {\n            const result = [];\n\n            this.sorterKeys.forEach((keyValue) => {\n                result.push(\n                    {\n                        key: keyValue,\n                        name: this.$tc(`sw-promotion-v2.detail.conditions.filter.sorter.${keyValue}`),\n                    },\n                );\n            });\n\n            return result;\n        },\n\n        graduationPickers() {\n            const result = [];\n\n            this.pickerKeys.forEach((keyValue) => {\n                result.push(\n                    {\n                        key: keyValue,\n                        name: this.$tc(`sw-promotion-v2.detail.conditions.filter.picker.${keyValue}`),\n                    },\n                );\n            });\n\n            return result;\n        },\n\n        isSetGroup() {\n            const splittedScope = this.discount.scope.split('-');\n            if (splittedScope[0] === DiscountScopes.SETGROUP) {\n                return true;\n            }\n            return false;\n        },\n\n        isSet() {\n            return (this.discount.scope === DiscountScopes.SET);\n        },\n\n        graduationAppliers() {\n            const appliers = [\n                {\n                    key: 'ALL',\n                    name: this.$tc('sw-promotion-v2.detail.conditions.filter.applier.ALL'),\n                },\n            ];\n\n            // if selection is a setgroup and group is of type count, we reduce the standard maximum count\n            // to the defined value of the group definitions\n            let maxCount = 10;\n            const splittedScope = this.discount.scope.split('-');\n            if (splittedScope[0] === DiscountScopes.SETGROUP) {\n                let i = 0;\n                this.availableSetGroups.forEach((group) => {\n                    i += 1;\n                    if (i === parseInt(splittedScope[1], 10) && group.value < maxCount && group.packagerKey === 'COUNT') {\n                        maxCount = group.value;\n                    }\n                });\n            }\n\n            let i;\n            for (i = 1; i <= maxCount; i += 1) {\n                appliers.push(\n                    {\n                        key: i,\n                        name: this.$tc('sw-promotion-v2.detail.conditions.filter.applier.SELECT', 0, { count: i }),\n                    },\n                );\n            }\n\n            return appliers;\n        },\n\n        graduationCounts() {\n            const counts = [\n                {\n                    key: 'ALL',\n                    name: this.$tc('sw-promotion-v2.detail.conditions.filter.counter.ALL'),\n                },\n            ];\n\n            let i;\n            for (i = 1; i < 10; i += 1) {\n                counts.push(\n                    {\n                        key: i,\n                        name: this.$tc('sw-promotion-v2.detail.conditions.filter.counter.SELECT', 0, { count: i }),\n                    },\n                );\n            }\n\n            return counts;\n        },\n\n        isPickingModeVisible() {\n            if (this.discount.scope.startsWith(DiscountScopes.SETGROUP)) {\n                return true;\n            }\n\n            if (this.discount.scope === DiscountScopes.SET) {\n                return true;\n            }\n\n            return false;\n        },\n\n        isMaxUsageVisible() {\n            if (this.discount.scope === DiscountScopes.CART) {\n                return false;\n            }\n\n            return true;\n        },\n\n        promotionDiscountSnippet() {\n            return this.$tc(\n                this.ruleConditionDataProviderService\n                    .getAwarenessConfigurationByAssignmentName('promotionDiscounts').snippet,\n                2,\n            );\n        },\n\n    },\n    created() {\n        this.createdComponent();\n    },\n    methods: {\n        createdComponent() {\n            this.syncService = Shopware.Service('syncService');\n            this.httpClient = this.syncService.httpClient;\n\n            this.currencyRepository.search(new Criteria(1, 25)).then((response) => {\n                this.currencies = response;\n                this.defaultCurrency = this.currencies.find(currency => currency.isSystemDefault);\n                this.currencySymbol = this.defaultCurrency.symbol;\n            });\n\n            // remember the actual scope\n            // our setgroup are loaded async.\n            // so that would reset the dropdown to the first entry \"cart\".\n            // this means we have to reset it after our loading\n            const previousScope = this.discount.scope;\n\n            this.loadSetGroups().then(() => {\n                this.discount.scope = previousScope;\n            });\n\n            this.loadSorters().then((keys) => {\n                this.sorterKeys = keys;\n            });\n\n            this.loadPickers().then((keys) => {\n                this.pickerKeys = keys;\n            });\n\n            this.loadRestrictedRules();\n        },\n\n        onDiscountScopeChanged(value) {\n            this.cartScope = (value === DiscountScopes.CART);\n            this.shippingScope = (value === DiscountScopes.DELIVERY);\n\n            if (value === DiscountScopes.DELIVERY) {\n                this.discount.considerAdvancedRules = false;\n            } else {\n                this.discount.considerAdvancedRules = this.considerAdvancedRules;\n            }\n\n            // clear other values\n            this.discount.pickerKey = '';\n\n            // make sure to set to all, our cart doesn't have\n            // this option and thus we make sure its set to default ALL\n            this.discount.usageKey = 'ALL';\n\n            // immediately select\n            // a picker if none set for picker relevant scopes\n            if (this.isPickingModeVisible) {\n                this.discount.pickerKey = this.pickerKeys[0];\n            }\n        },\n\n        // This function verifies the currently set value\n        // depending on the discount type, and fixes it if\n        // the min or maximum thresholds have been exceeded.\n        onDiscountTypeChanged() {\n            this.discount.value = discountHandler.getFixedValue(this.discount.value, this.discount.type);\n        },\n\n        onDiscountValueChanged(value) {\n            this.discount.value = discountHandler.getFixedValue(value, this.discount.type);\n        },\n\n        // The number field does not allow a NULL input\n        // so the value cannot be cleared anymore.\n        // If the user removes the value, it will be 0 and converted\n        // into NULL, which means no max value applies anymore.\n        onMaxValueChanged(value) {\n            if (value === 0) {\n                // clear max value\n                this.discount.maxValue = null;\n                // clear any currency values if max value is gone\n                this.clearAdvancedPrices();\n            }\n        },\n\n        onClickAdvancedPrices() {\n            this.currencies.forEach((currency) => {\n                if (!this.isMemberOfCollection(currency)) {\n                    // if we have a max-value setting active\n                    // then our advanced prices is for this\n                    // otherwise its for the promotion value itself\n                    if (this.showMaxValueAdvancedPrices) {\n                        this.prepareAdvancedPrices(currency, this.discount.maxValue);\n                    } else {\n                        this.prepareAdvancedPrices(currency, this.discount.value);\n                    }\n                }\n            });\n            this.displayAdvancedPrices = true;\n        },\n\n        prepareAdvancedPrices(currency, basePrice) {\n            // first get the minimum value that is allowed\n            let setPrice = discountHandler.getMinValue();\n            // if basePrice is undefined take the minimum price\n            if (basePrice !== undefined) {\n                setPrice = basePrice;\n            }\n            // foreign currencies are translated at the exchange rate of the default currency\n            setPrice *= currency.factor;\n            // even if translated correctly the value may not be less than the allowed minimum value\n            if (setPrice < discountHandler.getMinValue()) {\n                setPrice = discountHandler.getMinValue();\n            }\n            // now create the value with the calculated and translated value\n            const newAdvancedCurrencyPrices = this.advancedPricesRepo.create(Shopware.Context.api);\n            newAdvancedCurrencyPrices.discountId = this.discount.id;\n            newAdvancedCurrencyPrices.price = setPrice;\n            newAdvancedCurrencyPrices.currencyId = currency.id;\n            newAdvancedCurrencyPrices.currency = currency;\n\n            this.discount.promotionDiscountPrices.add(newAdvancedCurrencyPrices);\n        },\n\n        clearAdvancedPrices() {\n            const ids = this.discount.promotionDiscountPrices.getIds();\n            let i;\n            for (i = 0; i < ids.length; i += 1) {\n                this.discount.promotionDiscountPrices.remove(ids[i]);\n            }\n        },\n\n        isMemberOfCollection(currency) {\n            let foundValue = false;\n            const currencyID = currency.id;\n            this.discount.promotionDiscountPrices.forEach((advancedPrice) => {\n                if (advancedPrice.currencyId === currencyID) {\n                    foundValue = true;\n                    advancedPrice.currency = currency;\n                }\n            });\n            return foundValue;\n        },\n\n        onCloseAdvancedPricesModal() {\n            if ((this.discount.type === DiscountTypes.PERCENTAGE) && this.discount.maxValue === null) {\n                // clear any currency values if max value is gone\n                this.clearAdvancedPrices();\n            } else {\n                this.discount.promotionDiscountPrices.forEach((advancedPrice) => {\n                    advancedPrice.price = discountHandler.getFixedValue(advancedPrice.price, DiscountTypes.ABSOLUTE);\n                });\n            }\n            this.displayAdvancedPrices = false;\n        },\n\n        onShowDeleteModal() {\n            this.showDeleteModal = true;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete() {\n            this.onCloseDeleteModal();\n            this.$nextTick(() => {\n                this.$emit('discount-delete', this.discount);\n            });\n        },\n\n        async loadSetGroups() {\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(\n                Criteria.equals('promotionId', this.promotion.id),\n            );\n\n            await this.repositoryGroups.search(criteria).then((groups) => {\n                this.availableSetGroups = groups;\n            });\n\n            return true;\n        },\n\n        async loadSorters() {\n            return this.httpClient.get(\n                '/_action/promotion/setgroup/sorter',\n                {\n                    headers: this.syncService.getBasicHeaders(),\n                },\n            ).then((response) => {\n                return response.data;\n            });\n        },\n\n        async loadPickers() {\n            return this.httpClient.get(\n                '/_action/promotion/discount/picker',\n                {\n                    headers: this.syncService.getBasicHeaders(),\n                },\n            ).then((response) => {\n                return response.data;\n            });\n        },\n\n        loadRestrictedRules() {\n            this.ruleConditionDataProviderService.getRestrictedRules('promotionSetGroups')\n                .then((result) => { this.restrictedRules = result; });\n        },\n    },\n};\n","export default \"\\n{% block sw_promotion_discount_component %}\\n<sw-card\\n    class=\\\"sw-promotion-discount-component\\\"\\n    position-identifier=\\\"sw-promotion-discount-component\\\"\\n    :title=\\\"$tc('sw-promotion.detail.main.discounts.card')\\\"\\n>\\n    <sw-context-button class=\\\"sw-promotion-discount-component__context-button\\\">\\n        \\n        {% block sw_promotion_detail_discounts_item_context_button_delete %}\\n        <sw-context-menu-item\\n            v-tooltip=\\\"{\\n                message: $tc('sw-privileges.tooltip.warning'),\\n                disabled: acl.can('promotion.editor'),\\n                showOnDisabledElements: true\\n            }\\\"\\n            variant=\\\"danger\\\"\\n            class=\\\"sw-promotion-context-item__delete-action\\\"\\n            :disabled=\\\"isEditingDisabled\\\"\\n            @click=\\\"onShowDeleteModal\\\"\\n        >\\n            {{ $tc('sw-promotion.detail.main.discounts.buttonDeleteDiscount') }}\\n        </sw-context-menu-item>\\n        {% endblock %}\\n    </sw-context-button>\\n\\n    <sw-container\\n        columns=\\\"1fr 1fr\\\"\\n        gap=\\\"0px 30px\\\"\\n    >\\n        \\n        {% block sw_promotion_discount_component_scope %}\\n        <sw-select-field\\n            ref=\\\"selectFieldScope\\\"\\n            {% if VUE3 %}\\n            v-model:value=\\\"discount.scope\\\"\\n            {% else %}\\n            v-model=\\\"discount.scope\\\"\\n            {% endif %}\\n            required\\n            validation=\\\"required\\\"\\n            :label=\\\"$tc('sw-promotion.detail.main.discounts.labelScope')\\\"\\n            :disabled=\\\"isEditingDisabled\\\"\\n            {% if VUE3 %}\\n            @update:value=\\\"onDiscountScopeChanged\\\"\\n            {% else %}\\n            @change=\\\"onDiscountScopeChanged\\\"\\n            {% endif %}\\n        >\\n            <option\\n                v-for=\\\"scope in scopes\\\"\\n                :key=\\\"scope.key\\\"\\n                :value=\\\"scope.key\\\"\\n            >\\n                {{ scope.name }}\\n            </option>\\n        </sw-select-field>\\n        {% endblock %}\\n\\n        \\n        {% block sw_promotion_discount_condition_consider_product_rules_field %}\\n        <template v-if=\\\"displayAdvancedRuleOption\\\">\\n            <sw-switch-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"discount.considerAdvancedRules\\\"\\n                {% else %}\\n                v-model=\\\"discount.considerAdvancedRules\\\"\\n                {% endif %}\\n                bordered\\n                :label=\\\"$tc('sw-promotion.detail.main.discounts.flagProductScopeLabel')\\\"\\n                :disabled=\\\"isEditingDisabled\\\"\\n            />\\n        </template>\\n        {% endblock %}\\n    </sw-container>\\n\\n    \\n    {% block sw_promotion_discount_condition_rules_form %}\\n    <template v-if=\\\"!shippingScope && discount.considerAdvancedRules === true\\\">\\n        <div v-if=\\\"!isSetGroup\\\">\\n            <sw-promotion-v2-rule-select\\n                {% if VUE3 %}\\n                v-model:collection=\\\"discount.discountRules\\\"\\n                {% else %}\\n                v-model=\\\"discount.discountRules\\\"\\n                {% endif %}\\n                class=\\\"sw-promotion-discount-component__select-discount-rules\\\"\\n                :local-mode=\\\"discount.isNew()\\\"\\n                :criteria=\\\"ruleFilter\\\"\\n                :label=\\\"$tc('sw-promotion.detail.main.discounts.labelRules')\\\"\\n                :placeholder=\\\"$tc('sw-promotion.detail.main.discounts.placeholder')\\\"\\n                :disabled=\\\"isEditingDisabled\\\"\\n                :restricted-rules=\\\"restrictedRules\\\"\\n                :restriction-snippet=\\\"promotionDiscountSnippet\\\"\\n                rule-aware-group-key=\\\"promotionDiscounts\\\"\\n            />\\n        </div>\\n\\n        <sw-container\\n            columns=\\\"1fr 1fr\\\"\\n            gap=\\\"0px 30px\\\"\\n        >\\n            \\n            {% block sw_promotion_cart_condition_setgroup_filter_apply_field %}\\n            <sw-select-field\\n                v-if=\\\"!isSet\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"discount.applierKey\\\"\\n                {% else %}\\n                v-model=\\\"discount.applierKey\\\"\\n                {% endif %}\\n                :label=\\\"$tc('sw-promotion.detail.main.discounts.labelApplyCount')\\\"\\n                :disabled=\\\"isEditingDisabled\\\"\\n            >\\n                <option\\n                    v-for=\\\"applier in graduationAppliers\\\"\\n                    :key=\\\"applier.key\\\"\\n                    :value=\\\"applier.key\\\"\\n                >\\n                    {{ applier.name }}\\n                </option>\\n            </sw-select-field>\\n            {% endblock %}\\n            \\n            {% block sw_promotion_cart_condition_setgroup_filter_usage_field %}\\n            <sw-select-field\\n                v-if=\\\"isMaxUsageVisible\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"discount.usageKey\\\"\\n                {% else %}\\n                v-model=\\\"discount.usageKey\\\"\\n                {% endif %}\\n                :label=\\\"$tc('sw-promotion.detail.main.discounts.labelMaxCount')\\\"\\n                :disabled=\\\"isEditingDisabled\\\"\\n            >\\n                <option\\n                    v-for=\\\"count in graduationCounts\\\"\\n                    :key=\\\"count.key\\\"\\n                    :value=\\\"count.key\\\"\\n                >\\n                    {{ count.name }}\\n                </option>\\n            </sw-select-field>\\n            {% endblock %}\\n\\n        </sw-container>\\n\\n        <template v-if=\\\"discount.applierKey!=='ALL'\\\">\\n            <sw-container\\n                columns=\\\"1fr 1fr\\\"\\n                gap=\\\"0px 30px\\\"\\n            >\\n                \\n                {% block sw_promotion_cart_condition_setgroup_filter_sorting_field %}\\n                <sw-select-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"discount.sorterKey\\\"\\n                    {% else %}\\n                    v-model=\\\"discount.sorterKey\\\"\\n                    {% endif %}\\n                    :label=\\\"$tc('sw-promotion.detail.main.discounts.labelSorting')\\\"\\n                    :disabled=\\\"isEditingDisabled\\\"\\n                >\\n                    <option\\n                        v-for=\\\"sorter in graduationSorters\\\"\\n                        :key=\\\"sorter.key\\\"\\n                        :value=\\\"sorter.key\\\"\\n                    >\\n                        {{ sorter.name }}\\n                    </option>\\n                </sw-select-field>\\n                {% endblock %}\\n                \\n                {% block sw_promotion_cart_condition_setgroup_filter_picker_field %}\\n                <sw-select-field\\n                    v-if=\\\"isPickingModeVisible\\\"\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"discount.pickerKey\\\"\\n                    {% else %}\\n                    v-model=\\\"discount.pickerKey\\\"\\n                    {% endif %}\\n                    :label=\\\"$tc('sw-promotion.detail.main.discounts.labelPicking')\\\"\\n                    :disabled=\\\"isEditingDisabled\\\"\\n                >\\n                    <option\\n                        v-for=\\\"picker in graduationPickers\\\"\\n                        :key=\\\"picker.key\\\"\\n                        :value=\\\"picker.key\\\"\\n                    >\\n                        {{ picker.name }}\\n                    </option>\\n                </sw-select-field>\\n                {% endblock %}\\n            </sw-container>\\n        </template>\\n\\n    </template>\\n    {% endblock %}\\n\\n    <sw-container\\n        columns=\\\"1fr 1fr\\\"\\n        gap=\\\"0px 30px\\\"\\n    >\\n        \\n        {% block sw_promotion_discount_component_type %}\\n        <sw-select-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"discount.type\\\"\\n            {% else %}\\n            v-model=\\\"discount.type\\\"\\n            {% endif %}\\n            class=\\\"sw-promotion-discount-component__type-select\\\"\\n            :label=\\\"$tc('sw-promotion.detail.main.discounts.labelType')\\\"\\n            :disabled=\\\"isEditingDisabled\\\"\\n            {% if VUE3 %}\\n            @update:value=\\\"onDiscountTypeChanged\\\"\\n            {% else %}\\n            @change=\\\"onDiscountTypeChanged\\\"\\n            {% endif %}\\n        >\\n            <option\\n                v-for=\\\"type in types\\\"\\n                :key=\\\"type.key\\\"\\n                :value=\\\"type.key\\\"\\n            >\\n                {{ type.name }}\\n            </option>\\n        </sw-select-field>\\n        {% endblock %}\\n        \\n        {% block sw_promotion_discount_component_value %}\\n        <sw-number-field\\n            class=\\\"sw-promotion-discount-component__discount-value\\\"\\n            validation=\\\"required\\\"\\n            required\\n            :digits=\\\"50\\\"\\n            :value=\\\"discount.value\\\"\\n            :label=\\\"$tc('sw-promotion.detail.main.discounts.labelValue')\\\"\\n            :placeholder=\\\"$tc('sw-promotion.detail.main.discounts.placeholderValue')\\\"\\n            :disabled=\\\"isEditingDisabled\\\"\\n            {% if VUE3 %}\\n            @update:value=\\\"onDiscountValueChanged\\\"\\n            {% else %}\\n            @change=\\\"onDiscountValueChanged\\\"\\n            {% endif %}\\n        >\\n            <template #suffix>\\n                {{ valueSuffix }}\\n            </template>\\n        </sw-number-field>\\n        {% endblock %}\\n    </sw-container>\\n\\n    \\n    {% block sw_promotion_discount_max_value %}\\n    <sw-container\\n        v-if=\\\"showMaxValueSettings\\\"\\n        :key=\\\"1\\\"\\n        columns=\\\"1fr 1fr\\\"\\n        justify=\\\"end\\\"\\n    >\\n        \\n        {% block sw_promotion_discount_max_value_field %}\\n        <sw-number-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"discount.maxValue\\\"\\n            {% else %}\\n            v-model=\\\"discount.maxValue\\\"\\n            {% endif %}\\n            :label=\\\"$tc('sw-promotion.detail.main.discounts.labelMaxValue')\\\"\\n            :help-text=\\\"maxValueAdvancedPricesTooltip\\\"\\n            :disabled=\\\"isEditingDisabled\\\"\\n            {% if VUE3 %}\\n            @update:value=\\\"onMaxValueChanged\\\"\\n            {% else %}\\n            @change=\\\"onMaxValueChanged\\\"\\n            {% endif %}\\n        >\\n            <template #suffix>\\n                {{ maxValueSuffix }}\\n            </template>\\n        </sw-number-field>\\n        {% endblock %}\\n        \\n        {% block sw_promotion_discount_max_value_advanced_prices %}\\n        <a\\n            v-if=\\\"showMaxValueAdvancedPrices\\\"\\n            class=\\\"sw-card__quick-link advanced-prices\\\"\\n            role=\\\"button\\\"\\n            tabindex=\\\"0\\\"\\n            @click=\\\"onClickAdvancedPrices\\\"\\n            @keydown.enter=\\\"onClickAdvancedPrices\\\"\\n        >\\n            {{ $tc('sw-promotion.detail.main.discounts.linkAdvancedPrices') }}\\n            <sw-icon\\n                name=\\\"regular-long-arrow-right\\\"\\n                small\\n            />\\n        </a>\\n        {% endblock %}\\n    </sw-container>\\n    {% endblock %}\\n\\n    \\n    {% block sw_promotion_discount_advanced_prices_link %}\\n    <sw-container\\n        v-if=\\\"showAbsoluteAdvancedPricesSettings\\\"\\n        :key=\\\"2\\\"\\n        columns=\\\"1fr\\\"\\n        justify=\\\"end\\\"\\n    >\\n        <a\\n            class=\\\"sw-card__quick-link advanced-prices\\\"\\n            role=\\\"button\\\"\\n            tabindex=\\\"0\\\"\\n            @click=\\\"onClickAdvancedPrices\\\"\\n            @keydown.enter=\\\"onClickAdvancedPrices\\\"\\n        >\\n            {{ $tc('sw-promotion.detail.main.discounts.linkAdvancedPrices') }}\\n            <sw-icon\\n                name=\\\"regular-long-arrow-right\\\"\\n                small\\n            />\\n        </a>\\n    </sw-container>\\n    {% endblock %}\\n\\n    \\n    {% block sw_promotion_discount_advanced_prices_modal %}\\n    <sw-modal\\n        v-if=\\\"displayAdvancedPrices\\\"\\n        :title=\\\"$tc('sw-promotion.detail.main.discounts.pricesModal.advancedPricesHeader')\\\"\\n        class=\\\"sw-promotion-discount-form__advanced-prices-modal\\\"\\n        @modal-close=\\\"onCloseAdvancedPricesModal\\\"\\n    >\\n\\n        <sw-one-to-many-grid\\n            :collection=\\\"discount.promotionDiscountPrices\\\"\\n            :local-mode=\\\"true\\\"\\n            :columns=\\\"currencyPriceColumns\\\"\\n            :show-selection=\\\"false\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :show-actions=\\\"!isEditingDisabled\\\"\\n        >\\n\\n            <template #column-currency.translated.name=\\\"{ item }\\\">\\n                <p>{{ item.currency.translated.name }}</p>\\n            </template>\\n\\n            <template #column-price=\\\"{ item }\\\">\\n                <sw-number-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"item.price\\\"\\n                    {% else %}\\n                    v-model=\\\"item.price\\\"\\n                    {% endif %}\\n                    type=\\\"text\\\"\\n                    size=\\\"small\\\"\\n                    :disabled=\\\"isEditingDisabled\\\"\\n                >\\n                    <template #suffix>\\n                        {{ item.currency.symbol }}\\n                    </template>\\n                </sw-number-field>\\n            </template>\\n        </sw-one-to-many-grid>\\n\\n        <template #modal-footer>\\n            <sw-button\\n                variant=\\\"primary\\\"\\n                size=\\\"small\\\"\\n                @click=\\\"onCloseAdvancedPricesModal\\\"\\n            >\\n                {{ $tc('sw-promotion.detail.main.discounts.pricesModal.closeModal') }}\\n            </sw-button>\\n        </template>\\n    </sw-modal>\\n    {% endblock %}\\n\\n    \\n    {% block sw_promotion_detail_discounts_modal_delete %}\\n    <sw-modal\\n        v-if=\\\"showDeleteModal\\\"\\n        variant=\\\"small\\\"\\n        :title=\\\"$tc('sw-promotion.detail.main.discounts.delete.confirmTitle')\\\"\\n        class=\\\"sw-promotion-detail-discounts-modal\\\"\\n        @modal-close=\\\"onCloseDeleteModal\\\"\\n    >\\n        \\n        {% block sw_promotion_detail_discounts_modal_delete_text %}\\n        <p>\\n            {{ $tc('sw-promotion.detail.main.discounts.delete.confirmText') }}\\n        </p>\\n        {% endblock %}\\n\\n        \\n        {% block sw_promotion_detail_discounts_modal_delete_footer %}\\n        <template #modal-footer>\\n            \\n            {% block sw_promotion_detail_discounts_modal_delete_action_cancel %}\\n            <sw-button\\n                size=\\\"small\\\"\\n                @click=\\\"onCloseDeleteModal\\\"\\n            >\\n                {{ $tc('sw-promotion.detail.main.discounts.delete.buttonCancel') }}\\n            </sw-button>\\n            {% endblock %}\\n\\n            \\n            {% block sw_promotion_detail_discounts_modal_delete_action_delete %}\\n            <sw-button\\n                size=\\\"small\\\"\\n                variant=\\\"danger\\\"\\n                class=\\\"sw-promotion-discount-delete-button\\\"\\n                @click=\\\"onConfirmDelete\\\"\\n            >\\n                {{ $tc('sw-promotion.detail.main.discounts.delete.buttonDelete') }}\\n            </sw-button>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n    </sw-modal>\\n    {% endblock %}\\n</sw-card>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-promotion-discount-component.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"71b513fd\", content, true, {});"],"sourceRoot":""}