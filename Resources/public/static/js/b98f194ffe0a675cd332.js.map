{"version":3,"sources":["webpack:///./src/module/sw-sales-channel/component/sw-sales-channel-detail-domains/sw-sales-channel-detail-domains.scss","webpack:///./src/module/sw-sales-channel/component/sw-sales-channel-detail-domains/index.js","webpack:///./src/module/sw-sales-channel/component/sw-sales-channel-detail-domains/sw-sales-channel-detail-domains.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Context","Shopware","Criteria","Data","ShopwareError","Classes","template","inject","props","salesChannel","required","disableEdit","type","Boolean","data","currentDomain","currentDomainBackup","url","language","languageId","currency","currencyId","snippetSet","snippetSetId","isLoadingDomains","deleteDomain","sortBy","sortDirection","error","computed","domainRepository","this","repositoryFactory","create","domains","entity","source","currentDomainModalTitle","isNew","$t","name","unicodeUriFilter","currentDomainModalButtonText","snippetSetCriteria","addSorting","sort","salesChannelFilterCriteria","criteria","addAssociation","addFilter","equals","id","currencyCriteria","hreflangLocalisationOptions","$tc","value","helpText","disabled","sortedDomains","_toConsumableArray","localSortDomains","methods","sortColumns","column","dataIndex","uri","Filter","getByName","_this","a","b","valA","getSortValue","toString","valB","compareVal","localeCompare","undefined","numeric","sensitivity","val","replace","hasOwnProperty","_typeof","onInput","verifyUrl","domain","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","domainExistsLocal","domainExistsInDatabase","sent","abrupt","stop","filter","length","isOriginalUrl","_this3","_callee2","globalDomainRepository","items","_context2","search","total","first","salesChannelId","setCurrentDomainBackup","resetCurrentDomainToBackup","setInitialCurrency","currencies","setInitialLanguage","languages","onClickOpenCreateDomainModal","api","onClickAddNewDomain","_this4","_callee3","_context3","code","onClickEditDomain","onCloseCreateDomainModal","onClickDeleteDomain","onConfirmDeleteDomain","_this5","$nextTick","remove","onCloseDeleteDomainModal","onLanguageSelect","onOptionSelect","get","onCurrencySelect","getDomainColumns","property","label","allowResize","primary","inlineEdit"],"mappings":"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","file":"static/js/b98f194ffe0a675cd332.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-sales-channel-detail-domains.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"88e51178\", content, true, {});","/**\n * @package buyers-experience\n */\n\nimport template from './sw-sales-channel-detail-domains.html.twig';\nimport './sw-sales-channel-detail-domains.scss';\n\nconst { Context } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { ShopwareError } = Shopware.Classes;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    props: {\n        // FIXME: add type to salesChannel property\n        // eslint-disable-next-line vue/require-prop-types\n        salesChannel: {\n            required: true,\n        },\n\n        disableEdit: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            currentDomain: null,\n            currentDomainBackup: {\n                url: null,\n                language: null,\n                languageId: null,\n                currency: null,\n                currencyId: null,\n                snippetSet: null,\n                snippetSetId: null,\n            },\n            isLoadingDomains: false,\n            deleteDomain: null,\n            sortBy: 'url',\n            sortDirection: 'ASC',\n            error: null,\n        };\n    },\n\n    computed: {\n        domainRepository() {\n            return this.repositoryFactory.create(\n                this.salesChannel.domains.entity,\n                this.salesChannel.domains.source,\n            );\n        },\n\n        currentDomainModalTitle() {\n            if (this.currentDomain.isNew()) {\n                return this.$t('sw-sales-channel.detail.titleCreateDomain');\n            }\n\n            return this.$t('sw-sales-channel.detail.titleEditDomain', 0, {\n                name: this.unicodeUriFilter(this.currentDomainBackup.url),\n            });\n        },\n\n        currentDomainModalButtonText() {\n            if (this.currentDomain.isNew()) {\n                return this.$t('sw-sales-channel.detail.buttonAddDomain');\n            }\n            return this.$t('sw-sales-channel.detail.buttonEditDomain');\n        },\n\n        snippetSetCriteria() {\n            return (new Criteria(1, 25))\n                .addSorting(Criteria.sort('name', 'ASC'));\n        },\n\n        salesChannelFilterCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria\n                .addAssociation('salesChannels')\n                .addSorting(Criteria.sort('name', 'ASC'));\n\n            return criteria.addFilter(Criteria.equals('salesChannels.id', this.salesChannel.id));\n        },\n\n        currencyCriteria() {\n            return (new Criteria(1, 25))\n                .addSorting(Criteria.sort('name', 'ASC'));\n        },\n\n        hreflangLocalisationOptions() {\n            return [\n                {\n                    name: this.$tc('sw-sales-channel.detail.hreflang.domainSettings.byIso'),\n                    value: false,\n                    helpText: this.$tc('sw-sales-channel.detail.hreflang.domainSettings.byIsoHelpText'),\n                },\n                {\n                    name: this.$tc('sw-sales-channel.detail.hreflang.domainSettings.byAbbreviation'),\n                    value: true,\n                    helpText: this.$tc('sw-sales-channel.detail.hreflang.domainSettings.byAbbreviationHelpText'),\n                },\n            ];\n        },\n\n        disabled() {\n            return !this.currentDomain ||\n                !this.currentDomain.currencyId ||\n                !this.currentDomain.snippetSetId ||\n                !this.currentDomain.url ||\n                !this.currentDomain.languageId ||\n                this.disableEdit ||\n                this.error !== null;\n        },\n\n        sortedDomains() {\n            const domains = [...this.salesChannel.domains];\n\n            return this.localSortDomains(domains);\n        },\n    },\n\n    methods: {\n        sortColumns(column) {\n            if (this.sortBy === column.dataIndex) {\n                // If the same column, that is already being sorted, is clicked again, change direction\n                this.sortDirection = this.sortDirection === 'ASC' ? 'DESC' : 'ASC';\n            } else {\n                // We clicked on a new column to be sorted, therefore set the sort field and the direction to 'ASC'\n                this.sortBy = column.dataIndex;\n                this.sortDirection = 'ASC';\n            }\n        },\n\n        unicodeUriFilter(uri) {\n            const unicodeUriFilter = Shopware.Filter.getByName('unicodeUri');\n            return unicodeUriFilter(uri);\n        },\n\n        localSortDomains(domains) {\n            domains.sort((a, b) => {\n                const valA = this.getSortValue(a, this.sortBy).toString();\n                const valB = this.getSortValue(b, this.sortBy).toString();\n\n                const compareVal = valA.localeCompare(valB, undefined, { numeric: true, sensitivity: 'base' });\n\n                if (this.sortDirection === 'ASC') {\n                    return compareVal;\n                }\n\n                return compareVal * -1;\n            });\n\n            return domains;\n        },\n\n        getSortValue(val, column) {\n            // Removes 'Id' from fields like 'languageId', so we're accessing 'language' instead\n            column = column.replace('Id', '');\n\n            if (val.hasOwnProperty(column) && typeof val[column] === 'object' && val[column].hasOwnProperty('name')) {\n                return val[column].name;\n            }\n\n            return val[column];\n        },\n\n        onInput() {\n            this.error = null;\n        },\n\n        async verifyUrl(domain) {\n            return !(this.domainExistsLocal(domain) || await this.domainExistsInDatabase(domain.url));\n        },\n\n        domainExistsLocal(currentDomain) {\n            return this.salesChannel.domains.filter(\n                (domain) => domain.id !== currentDomain.id && domain.url === currentDomain.url,\n            ).length > 0;\n        },\n\n        isOriginalUrl(url) {\n            return url === this.currentDomainBackup.url;\n        },\n\n        async domainExistsInDatabase(url) {\n            const globalDomainRepository = this.repositoryFactory.create(this.salesChannel.domains.entity);\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(Criteria.equals('url', url));\n\n            const items = await globalDomainRepository.search(criteria);\n\n            if (items.total === 0) {\n                return false;\n            }\n\n            // Edge case: Delete domain, which is in database already, and then try to re-add it.\n            // In that case a database entry is still available, yet locally it's not available anymore.\n            // We don't want to prevent re-adding this domain in that case.\n            return items.first().salesChannelId !== this.salesChannel.id;\n        },\n\n        setCurrentDomainBackup(domain) {\n            this.currentDomainBackup = {\n                url: domain.url,\n                language: domain.language,\n                languageId: domain.languageId,\n                currency: domain.currency,\n                currencyId: domain.currencyId,\n                snippetSet: domain.snippetSet,\n                snippetSetId: domain.snippetSetId,\n            };\n        },\n\n        resetCurrentDomainToBackup() {\n            this.currentDomain.url = this.currentDomainBackup.url;\n            this.currentDomain.language = this.currentDomainBackup.language;\n            this.currentDomain.languageId = this.currentDomainBackup.languageId;\n            this.currentDomain.currency = this.currentDomainBackup.currency;\n            this.currentDomain.currencyId = this.currentDomainBackup.currencyId;\n            this.currentDomain.snippetSet = this.currentDomainBackup.snippetSet;\n            this.currentDomain.snippetSetId = this.currentDomainBackup.snippetSetId;\n        },\n\n        setInitialCurrency(domain) {\n            const currency = this.salesChannel.currencies.first();\n            domain.currency = currency;\n            domain.currencyId = currency.id;\n            this.currentDomain = domain;\n        },\n\n        setInitialLanguage(domain) {\n            const language = this.salesChannel.languages.first();\n            domain.language = language;\n            domain.languageId = language.id;\n            this.currentDomain = domain;\n        },\n\n        onClickOpenCreateDomainModal() {\n            const domain = this.domainRepository.create(Context.api);\n\n            this.setCurrentDomainBackup(domain);\n\n            if (this.salesChannel.currencies.length === 1) {\n                this.setInitialCurrency(domain);\n            }\n\n            if (this.salesChannel.languages.length === 1) {\n                this.setInitialLanguage(domain);\n            }\n\n            this.currentDomain = domain;\n        },\n\n        async onClickAddNewDomain() {\n            if (this.isOriginalUrl(this.currentDomain.url)) {\n                this.currentDomain = null;\n                return;\n            }\n\n            if (!await this.verifyUrl(this.currentDomain)) {\n                this.error = new ShopwareError({\n                    code: 'DUPLICATED_URL',\n                });\n\n                return;\n            }\n\n            if (this.currentDomain.isNew()) {\n                this.salesChannel.domains.add(this.currentDomain);\n            }\n\n            this.currentDomain = null;\n        },\n\n        onClickEditDomain(domain) {\n            this.currentDomain = domain;\n            this.setCurrentDomainBackup(this.currentDomain);\n        },\n\n        onCloseCreateDomainModal() {\n            this.resetCurrentDomainToBackup();\n            this.currentDomain = null;\n        },\n\n        onClickDeleteDomain(domain) {\n            if (domain.isNew()) {\n                this.onConfirmDeleteDomain(domain);\n            } else {\n                this.deleteDomain = domain;\n            }\n        },\n\n        onConfirmDeleteDomain(domain) {\n            this.deleteDomain = null;\n\n            this.$nextTick(() => {\n                this.salesChannel.domains.remove(domain.id);\n            });\n        },\n\n        onCloseDeleteDomainModal() {\n            this.deleteDomain = null;\n        },\n\n        onLanguageSelect(id) {\n            this.onOptionSelect('language', this.salesChannel.languages.get(id));\n        },\n\n        onCurrencySelect(id) {\n            this.onOptionSelect('currency', this.salesChannel.currencies.get(id));\n        },\n\n        onOptionSelect(name, entity) {\n            this.currentDomain[name] = entity;\n        },\n\n        getDomainColumns() {\n            return [{\n                property: 'url',\n                dataIndex: 'url',\n                label: this.$t('sw-sales-channel.detail.columnDomainUrl'),\n                allowResize: false,\n                primary: true,\n                inlineEdit: true,\n            }, {\n                property: 'languageId',\n                dataIndex: 'languageId',\n                label: this.$t('sw-sales-channel.detail.columnDomainLanguage'),\n                allowResize: false,\n                inlineEdit: false,\n            }, {\n                property: 'snippetSetId',\n                dataIndex: 'snippetSetId',\n                label: this.$t('sw-sales-channel.detail.columnDomainSnippetSet'),\n                allowResize: false,\n                inlineEdit: false,\n            }, {\n                property: 'currencyId',\n                dataIndex: 'currencyId',\n                label: this.$t('sw-sales-channel.detail.columnDomainCurrency'),\n                allowResize: false,\n                inlineEdit: false,\n            }];\n        },\n    },\n};\n","export default \"\\n{% block sw_sales_channel_detail_domains %}\\n<sw-card\\n    :title=\\\"$tc('sw-sales-channel.detail.titleDomains')\\\"\\n    class=\\\"sw-sales-channel-detail-domains\\\"\\n    position-identifier=\\\"sw-sales-channel-detail-domains\\\"\\n>\\n\\n    \\n    {% block sw_sales_channel_detail_domains_meta %}\\n    <div class=\\\"sw-sales-channel-detail-domains__meta\\\">\\n        \\n        {% block sw_sales_channel_detail_domains_headline %}\\n        <h4 class=\\\"sw-sales-channel-detail-domains__headline sw-sales-channel-detail-base__headline\\\">\\n            <span class=\\\"sw-sales-channel-detail-domains__headline-text sw-sales-channel-detail-base__headline-text\\\">\\n                {{ $tc('sw-sales-channel.detail.titleDomainHeadline') }}\\n            </span>\\n        </h4>\\n        {% endblock %}\\n\\n        \\n        {% block sw_sales_channel_detail_domains_add_button %}\\n        <sw-button\\n            size=\\\"small\\\"\\n            :disabled=\\\"disableEdit\\\"\\n            class=\\\"sw-sales-channel-detail__button-domain-add\\\"\\n            @click=\\\"onClickOpenCreateDomainModal\\\"\\n        >\\n            {{ $tc('sw-sales-channel.detail.buttonAddDomain') }}\\n        </sw-button>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    <template #grid>\\n        \\n        {% block sw_sales_channel_detail_domains_grid %}\\n        <sw-data-grid\\n            ref=\\\"gridDomains\\\"\\n            :data-source=\\\"sortedDomains\\\"\\n            :columns=\\\"getDomainColumns()\\\"\\n            :show-selection=\\\"false\\\"\\n            :is-loading=\\\"isLoadingDomains\\\"\\n            :show-actions=\\\"true\\\"\\n            :sort-by=\\\"sortBy\\\"\\n            :sort-direction=\\\"sortDirection\\\"\\n            @column-sort=\\\"sortColumns\\\"\\n        >\\n            \\n            {% block sw_sales_channel_detail_domains_columns_template %}\\n\\n            \\n            {% block sw_sales_channel_detail_domains_column_url %}\\n            <template\\n                #column-url=\\\"{ item }\\\"\\n            >\\n                {{ item.url|unicodeUri }}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_sales_channel_detail_domains_column_language_id %}\\n            <template\\n                #column-languageId=\\\"{ item, isInlineEdit}\\\"\\n            >\\n                {{ item.language.name }}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_sales_channel_detail_domains_column_currency_id %}\\n            <template\\n                #column-currencyId=\\\"{ item, isInlineEdit}\\\"\\n            >\\n                {{ item.currency.translated.name }}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_sales_channel_detail_domains_column_snippet_set_id %}\\n            <template\\n                #column-snippetSetId=\\\"{ item, isInlineEdit}\\\"\\n            >\\n                {{ item.snippetSet.name }}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_sales_channel_detail_domains_column_actions %}\\n            <template #actions=\\\"{ item }\\\">\\n                \\n                {% block sw_sales_channel_detail_domains_column_action_domain_edit %}\\n                <sw-context-menu-item\\n                    :disabled=\\\"disableEdit\\\"\\n                    @click=\\\"onClickEditDomain(item)\\\"\\n                >\\n                    {{ $tc('sw-sales-channel.detail.buttonEditDomain') }}\\n                </sw-context-menu-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_sales_channel_detail_domains_column_action_domain_delete %}\\n                <sw-context-menu-item\\n                    :disabled=\\\"disableEdit\\\"\\n                    variant=\\\"danger\\\"\\n                    @click=\\\"onClickDeleteDomain(item)\\\"\\n                >\\n                    {{ $tc('sw-sales-channel.detail.buttonDeleteDomain') }}\\n                </sw-context-menu-item>\\n                {% endblock %}\\n            </template>\\n            {% endblock %}\\n            {% endblock %}\\n        </sw-data-grid>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_sales_channel_detail_domains_create_modal %}\\n    <sw-modal\\n        v-if=\\\"currentDomain\\\"\\n        :title=\\\"currentDomainModalTitle\\\"\\n        @modal-close=\\\"onCloseCreateDomainModal\\\"\\n    >\\n\\n        \\n        {% block sw_sales_channel_detail_domains_create_modal_content %}\\n        <sw-container\\n            columns=\\\"repeat(auto-fit, minmax(250px, 1fr))\\\"\\n            gap=\\\"0px 30px\\\"\\n        >\\n            \\n            {% block sw_sales_channel_detail_domains_input_url %}\\n            <sw-url-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"currentDomain.url\\\"\\n                {% else %}\\n                v-model=\\\"currentDomain.url\\\"\\n                {% endif %}\\n                type=\\\"text\\\"\\n                omit-url-hash\\n                omit-url-search\\n                :label=\\\"$tc('sw-sales-channel.detail.labelInputUrl')\\\"\\n                :error=\\\"error\\\"\\n                {% if VUE3 %}\\n                @update:value=\\\"onInput\\\"\\n                {% else %}\\n                @input=\\\"onInput\\\"\\n                {% endif %}\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_sales_channel_detail_domains_input_language %}\\n            <sw-single-select\\n                {% if VUE3 %}\\n                v-model:value=\\\"currentDomain.languageId\\\"\\n                {% else %}\\n                v-model=\\\"currentDomain.languageId\\\"\\n                {% endif %}\\n                class=\\\"sw-sales-channel-detail-domains__domain-language-select\\\"\\n                :options=\\\"salesChannel.languages\\\"\\n                label-property=\\\"name\\\"\\n                value-property=\\\"id\\\"\\n                required\\n                :label=\\\"$tc('sw-sales-channel.detail.labelInputLanguage')\\\"\\n                show-clearable-button\\n                {% if VUE3 %}\\n                @update:value=\\\"onLanguageSelect\\\"\\n                {% else %}\\n                @change=\\\"onLanguageSelect\\\"\\n                {% endif %}\\n            />\\n            {% endblock %}\\n        </sw-container>\\n\\n        <sw-container\\n            columns=\\\"repeat(auto-fit, minmax(250px, 1fr))\\\"\\n            gap=\\\"0px 30px\\\"\\n        >\\n            \\n            {% block sw_sales_channel_detail_domains_input_currency %}\\n            <sw-single-select\\n                {% if VUE3 %}\\n                v-model:value=\\\"currentDomain.currencyId\\\"\\n                {% else %}\\n                v-model=\\\"currentDomain.currencyId\\\"\\n                {% endif %}\\n                class=\\\"sw-sales-channel-detail-domains__domain-currency-select\\\"\\n                :label=\\\"$tc('sw-sales-channel.detail.labelInputCurrency')\\\"\\n                required\\n                show-clearable-button\\n                :options=\\\"salesChannel.currencies\\\"\\n                label-property=\\\"name\\\"\\n                value-property=\\\"id\\\"\\n                {% if VUE3 %}\\n                @update:value=\\\"onCurrencySelect\\\"\\n                {% else %}\\n                @change=\\\"onCurrencySelect\\\"\\n                {% endif %}\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_sales_channel_detail_domains_input_snippet_set %}\\n            <sw-entity-single-select\\n                {% if VUE3 %}\\n                v-model:value=\\\"currentDomain.snippetSetId\\\"\\n                {% else %}\\n                v-model=\\\"currentDomain.snippetSetId\\\"\\n                {% endif %}\\n                entity=\\\"snippet_set\\\"\\n                :criteria=\\\"snippetSetCriteria\\\"\\n                :label=\\\"$tc('sw-sales-channel.detail.labelInputSnippet')\\\"\\n                required\\n                show-clearable-button\\n                @option-select=\\\"onOptionSelect\\\"\\n            />\\n            {% endblock %}\\n        </sw-container>\\n\\n        \\n        {% block sw_sales_channel_detail_domains_hreflang %}\\n        <sw-radio-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"currentDomain.hreflangUseOnlyLocale\\\"\\n            {% else %}\\n            v-model=\\\"currentDomain.hreflangUseOnlyLocale\\\"\\n            {% endif %}\\n            :label=\\\"$tc('sw-sales-channel.detail.hreflang.domainSettings.label')\\\"\\n            identification=\\\"hreflang\\\"\\n            :options=\\\"hreflangLocalisationOptions\\\"\\n        />\\n        {% endblock %}\\n        {% endblock %}\\n\\n        <template #modal-footer>\\n            \\n            {% block sw_sales_channel_detail_domains_create_action_cancel %}\\n            <sw-button\\n                size=\\\"small\\\"\\n                @click=\\\"onCloseCreateDomainModal\\\"\\n            >\\n                {{ $tc('sw-sales-channel.modal.buttonCancel') }}\\n            </sw-button>\\n            {% endblock %}\\n\\n            \\n            {% block sw_sales_channel_detail_domains_create_action_create %}\\n            <sw-button\\n                size=\\\"small\\\"\\n                variant=\\\"primary\\\"\\n                :disabled=\\\"disabled\\\"\\n                @click=\\\"onClickAddNewDomain\\\"\\n            >\\n                {{ currentDomainModalButtonText }}\\n            </sw-button>\\n            {% endblock %}\\n        </template>\\n    </sw-modal>\\n    {% endblock %}\\n\\n    \\n    {% block sw_sales_channel_detail_domains_delete_modal %}\\n    <sw-modal\\n        v-if=\\\"deleteDomain\\\"\\n        :title=\\\"$tc('sw-sales-channel.detail.deleteDomainModalTitle')\\\"\\n        variant=\\\"small\\\"\\n        @modal-close=\\\"onCloseDeleteDomainModal\\\"\\n    >\\n\\n        \\n        {% block sw_sales_channel_detail_domains_delete_modal_confirm_text %}\\n        {{ $tc('sw-sales-channel.detail.textConfirmDeleteDomain', 0, { url: unicodeUriFilter(deleteDomain.url) }) }}\\n        {% endblock %}\\n\\n        \\n        {% block sw_sales_channel_detail_domains_delete_modal_footer %}\\n        <template #modal-footer>\\n            \\n            {% block sw_sales_channel_detail_domains_delete_modal_abort %}\\n            <sw-button\\n                size=\\\"small\\\"\\n                @click=\\\"onCloseDeleteDomainModal\\\"\\n            >\\n                {{ $tc('sw-sales-channel.detail.buttonCloseDeleteDomainModal') }}\\n            </sw-button>\\n            {% endblock %}\\n\\n            \\n            {% block sw_sales_channel_detail_domains_delete_modal_confirm %}\\n            <sw-button\\n                size=\\\"small\\\"\\n                variant=\\\"danger\\\"\\n                @click=\\\"onConfirmDeleteDomain(deleteDomain)\\\"\\n            >\\n                {{ $tc('sw-sales-channel.detail.buttonConfirmDeleteDomain') }}\\n            </sw-button>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n    </sw-modal>\\n    {% endblock %}\\n</sw-card>\\n{% endblock %}\\n\";"],"sourceRoot":""}