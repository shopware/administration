(this.webpackJsonpAdministration=this.webpackJsonpAdministration||[]).push([[574],{"7+ma":function(e,t,n){"use strict";n.r(t);var r=Shopware,i=r.Component,a=r.State,s=r.Mixin,c=r.Utils,o=c.get,d=c.format,l=c.array;t.default=i.wrapComponentConfig({template:'<div class="sw-order-create-general">\n    <sw-card\n        class="sw-order-create-general__general-info"\n        position-identifier="sw-order-create-general-info"\n        :title="$tc(\'sw-order.createBase.generalTab.labelGeneralInfoCard\')"\n    >\n        <sw-order-create-general-info\n            :cart="cart"\n            :context="context"\n            :is-loading="isLoading"\n        />\n    </sw-card>\n\n    <sw-extension-component-section\n        position-identifier="sw-order-create-base-line-items__before"\n    />\n\n    <sw-card\n        class="sw-order-create-general__line-items"\n        position-identifier="sw-order-create-line-items"\n        :is-loading="isLoading"\n        :title="$tc(\'sw-order.createBase.generalTab.labelLineItemsCard\')"\n    >\n        <template #grid>\n            <sw-order-line-items-grid-sales-channel\n                editable\n                :cart="cart"\n                :currency="currency"\n                :sales-channel-id="context.salesChannel.id"\n                :is-loading="isLoading"\n                :is-customer-active="isCustomerActive"\n                @on-save-item="onSaveItem"\n                @on-remove-items="onRemoveItems"\n            />\n\n            <sw-card-section\n                v-show="cart.lineItems.length"\n                divider="top"\n                slim\n            >\n\n                <sw-container\n                    class="sw-order-create-summary"\n                    columns="1fr 1fr"\n                >\n                    <sw-description-list\n                        class="sw-order-create-summary__data"\n                        grid="1fr 1fr"\n                    >\n                        <dt>{{ $tc(\'sw-order.createBase.summaryLabelAmount\') }}</dt>\n                        <dd>{{ currencyFilter(cart.price ? cart.price.positionPrice : 0, currency.shortName, currency.totalRounding.decimals) }}</dd>\n\n                        <template v-if="cartDelivery">\n                            <dt>{{ $tc(\'sw-order.createBase.summaryLabelShippingCosts\') }}</dt>\n                            <dd>\n                                <sw-order-saveable-field\n                                    v-tooltip="{\n                                        showDelay: 300,\n                                        message: shippingCostsDetail,\n                                        disabled: taxStatus === \'tax-free\'\n                                    }"\n                                    type="number"\n                                    editable\n                                    :value="cartDelivery.shippingCosts.totalPrice"\n                                    @value-change="onShippingChargeEdited"\n                                >\n                                    {{ currencyFilter(cartDelivery.shippingCosts.totalPrice, currency.shortName, currency.totalRounding.decimals) }}\n                                </sw-order-saveable-field>\n                            </dd>\n                        </template>\n\n                        <template\n                            v-for="(delivery, index) in cartDeliveryDiscounts"\n                            {% if VUE3 %}\n                            :key="index"\n                            {% endif %}\n                        >\n                            <dt\n                                {% if VUE2 %}\n                                :key="`dt-delivery-${index}`"\n                                {% endif %}\n                            >\n                                {{ $tc(\'sw-order.createBase.discountLabelShippingCosts\') }}\n                            </dt>\n                            <dd\n                                {% if VUE2 %}\n                                :key="`dd-delivery-${index}`"\n                                {% endif %}\n                            >\n                                {{ currencyFilter(delivery.shippingCosts.totalPrice, currency.shortName, currency.totalRounding.decimals) }}\n                            </dd>\n                        </template>\n\n                        <template v-if="taxStatus !== \'tax-free\'">\n                            <dt><strong>{{ $tc(\'sw-order.createBase.summaryLabelAmountWithoutTaxes\') }}</strong></dt>\n                            <dd>\n                                <strong>{{ currencyFilter(cart.price ? cart.price.netPrice : 0, currency.shortName, currency.totalRounding.decimals) }}</strong>\n                            </dd>\n                        </template>\n\n                        <template v-if="taxStatus !== \'tax-free\'">\n                            <template\n                                v-for="(calculatedTax, index) in filteredCalculatedTaxes"\n                                {% if VUE3 %}\n                                :key="index"\n                                {% endif %}\n                            >\n                                <dt\n                                    {% if VUE2 %}\n                                    :key="`dt-${index}`"\n                                    {% endif %}\n                                >\n                                    {{ $tc(\'sw-order.createBase.summaryLabelTaxes\', 1, { taxRate: calculatedTax.taxRate }) }}\n                                </dt>\n                                <dd\n                                    {% if VUE2 %}\n                                    :key="`dd-${index}`"\n                                    {% endif %}\n                                >\n                                    {{ currencyFilter(calculatedTax.tax, currency.shortName, currency.totalRounding.decimals) }}\n                                </dd>\n                            </template>\n                        </template>\n\n                        <template v-if="taxStatus !== \'tax-free\'">\n                            <dt><strong>{{ $tc(\'sw-order.createBase.summaryLabelAmountTotal\') }}</strong></dt>\n                            <dd>\n                                <strong>{{ currencyFilter(orderTotal, currency.shortName, currency.totalRounding.decimals) }}</strong>\n                            </dd>\n                            <template v-if="displayRounded">\n                                <dt><strong>{{ $tc(\'sw-order.createBase.summaryLabelAmountTotalRounded\') }}</strong>\n                                </dt>\n                                <dd>\n                                    <strong>{{ currencyFilter(cart.price ? cart.price.totalPrice : 0, currency.shortName, currency.totalRounding.decimals) }}</strong>\n                                </dd>\n                            </template>\n                        </template>\n\n                        <template v-if="taxStatus === \'tax-free\'">\n                            <dt><strong>{{ $tc(\'sw-order.detailBase.summaryLabelAmount\') }}</strong></dt>\n                            <dd>\n                                <strong>{{ currencyFilter(cart.price ? cart.price.totalPrice : 0, currency.shortName, currency.totalRounding.decimals) }}</strong>\n                            </dd>\n                        </template>\n                    </sw-description-list>\n                </sw-container>\n            </sw-card-section>\n        </template>\n    </sw-card>\n\n    <sw-extension-component-section\n        position-identifier="sw-order-create-base-line-items__after"\n    />\n</div>\n',mixins:[s.getByName("notification"),s.getByName("cart-notification")],data:function(){return{isLoading:!1}},computed:{customer:function(){return a.get("swOrder").customer},cart:function(){return a.get("swOrder").cart},currency:function(){return a.get("swOrder").context.currency},context:function(){return a.get("swOrder").context},isCustomerActive:function(){return a.getters["swOrder/isCustomerActive"]},cartDelivery:function(){return o(this.cart,"deliveries[0]",null)},cartDeliveryDiscounts:function(){return l.slice(this.cart.deliveries,1)||[]},taxStatus:function(){return o(this.cart,"price.taxStatus","")},shippingCostsDetail:function(){var e=this;if(!this.cartDelivery)return null;var t=this.sortByTaxRate(this.cartDelivery.shippingCosts.calculatedTaxes).map((function(t){var n;return e.$tc("sw-order.createBase.shippingCostsTax",0,{taxRate:t.taxRate,tax:d.currency(t.tax,e.currency.shortName,null===(n=e.currency.totalRounding)||void 0===n?void 0:n.decimals)})}));return"".concat(this.$tc("sw-order.createBase.tax"),"<br>").concat(t.join("<br>"))},filteredCalculatedTaxes:function(){var e;return this.cart.price&&this.cart.price.calculatedTaxes?this.sortByTaxRate(null!==(e=this.cart.price.calculatedTaxes)&&void 0!==e?e:[]).filter((function(e){return 0!==e.tax})):[]},displayRounded:function(){return!!this.cart.price&&this.cart.price.rawTotal!==this.cart.price.totalPrice},orderTotal:function(){return this.cart.price?this.displayRounded?this.cart.price.rawTotal:this.cart.price.totalPrice:0},currencyFilter:function(){return Shopware.Filter.getByName("currency")}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this;this.customer?(this.isLoading=!0,this.loadCart().finally((function(){e.isLoading=!1}))):this.$nextTick((function(){e.$router.push({name:"sw.order.create.initial"})}))},onSaveItem:function(e){var t,n=this;return this.isLoading=!0,a.dispatch("swOrder/saveLineItem",{salesChannelId:null===(t=this.customer)||void 0===t?void 0:t.salesChannelId,contextToken:this.cart.token,item:e}).finally((function(){n.isLoading=!1}))},onShippingChargeEdited:function(e){var t,n=this,r=Math.abs(e);this.cartDelivery.shippingCosts.unitPrice=r,this.cartDelivery.shippingCosts.totalPrice=r,this.isLoading=!0,a.dispatch("swOrder/modifyShippingCosts",{salesChannelId:null===(t=this.customer)||void 0===t?void 0:t.salesChannelId,contextToken:this.cart.token,shippingCosts:this.cartDelivery.shippingCosts}).catch((function(e){n.$emit("error",e)})).finally((function(){n.isLoading=!1}))},onRemoveItems:function(e){var t,n=this;return this.isLoading=!0,a.dispatch("swOrder/removeLineItems",{salesChannelId:null===(t=this.customer)||void 0===t?void 0:t.salesChannelId,contextToken:this.cart.token,lineItemKeys:e}).then((function(){e.forEach((function(e){var t=a.get("swOrder").promotionCodes.find((function(t){return t.discountId===e}));t&&a.commit("swOrder/setPromotionCodes",a.get("swOrder").promotionCodes.filter((function(e){return e.discountId!==t.discountId})))}))})).finally((function(){n.isLoading=!1}))},loadCart:function(){var e;return a.dispatch("swOrder/getCart",{salesChannelId:null===(e=this.customer)||void 0===e?void 0:e.salesChannelId,contextToken:this.cart.token})},sortByTaxRate:function(e){return e.sort((function(e,t){return e.taxRate-t.taxRate}))}}})}}]);
//# sourceMappingURL=afbda216bb0d8da41bf4.js.map