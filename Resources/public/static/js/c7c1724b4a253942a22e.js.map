{"version":3,"sources":["webpack:///./src/module/sw-settings-shipping/component/sw-settings-shipping-price-matrices/sw-settings-shipping-price-matrices.scss","webpack:///./src/module/sw-settings-shipping/component/sw-settings-shipping-price-matrices/index.js","webpack:///./src/module/sw-settings-shipping/component/sw-settings-shipping-price-matrices/sw-settings-shipping-price-matrices.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Mixin","Criteria","Data","Context","cloneDeep","Utils","object","_Shopware$Component$g","Component","getComponentHelper","mapState","mapGetters","template","inject","mixins","getByName","props","disabled","type","Boolean","required","computed","_objectSpread","ruleRepository","this","repositoryFactory","create","ruleFilter","criteria","addFilter","multi","contains","equals","shippingPriceRepository","isLoaded","currencies","length","shippingMethod","methods","onAddNewPriceGroup","newShippingPrice","api","shippingMethodId","id","quantityStart","ruleId","unrestrictedPriceMatrixExists","_inNewMatrix","prices","onDeletePriceMatrix","shippingPriceGroup","filter","shippingPrice","isNew","onDuplicatePriceMatrix","priceGroup","_this$shippingMethod$","_this","newPrices","forEach","price","calculation","calculationRule","calculationRuleId","currencyPrice","quantityEnd","push","apply"],"mappings":"0GAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,6oBCN5C,IAAAQ,EAA+CC,SAAvCC,EAAKF,EAALE,MAAeC,EAAQH,EAAhBI,KAAQD,SAAYE,EAAOL,EAAPK,QAC3BC,EAAcL,SAASM,MAAMC,OAA7BF,UACRG,EAAiCR,SAASS,UAAUC,qBAA5CC,EAAQH,EAARG,SAAUC,EAAUJ,EAAVI,WAMH,WACXC,SCZW,43CDcXC,OAAQ,CACJ,oBACA,mCACA,WAGJC,OAAQ,CACJd,EAAMe,UAAU,gBAChBf,EAAMe,UAAU,gBAGpBC,MAAO,CACHC,SAAU,CACNC,KAAMC,QACNC,UAAU,EACV5B,SAAS,IAIjB6B,SAAQC,MAAA,GACDZ,EAAS,mBAAoB,CAC5B,oBAGDC,EAAW,mBAAoB,CAC9B,sBACA,YACA,gCACA,0BACF,IAEFY,eAAc,WACV,OAAOC,KAAKC,kBAAkBC,OAAO,SAGzCC,WAAU,WACN,IAAMC,EAAW,IAAI3B,EAAS,EAAG,KAKjC,OAJA2B,EAASC,UAAU5B,EAAS6B,MAAM,KAAM,CACpC7B,EAAS8B,SAAS,yBAA0B,SAC5C9B,EAAS+B,OAAO,mBAAoB,SAEjCJ,GAGXK,wBAAuB,WACnB,OAAOT,KAAKC,kBAAkBC,OAAO,0BAGzCQ,SAAQ,WACJ,OAAOV,KAAKW,WAAWC,QAAUZ,KAAKa,kBAI9CC,QAAS,CACLC,mBAAkB,WACd,IAAMC,EAAmBhB,KAAKS,wBAAwBP,OAAOvB,EAAQsC,KACrED,EAAiBE,iBAAmBlB,KAAKa,eAAeM,GACxDH,EAAiBI,cAAgB,EACjCJ,EAAiBK,OAAS,KAGtBrB,KAAKsB,gCAELN,EAAiBO,cAAe,GAGpCvB,KAAKa,eAAeW,OAAOnD,IAAI2C,IAGnCS,oBAAmB,SAACC,GAChB1B,KAAKa,eAAeW,OAASxB,KAAKa,eAAeW,OAAOG,QAAO,SAACC,GAE5D,OAAIF,EAAmBG,OACfD,EAAcL,aAMfK,EAAcP,SAAWK,EAAmBL,WAI3DS,uBAAsB,SAACC,GAAa,IAADC,EAAAC,EAAA,KACzBC,EAAY,GAClBH,EAAWP,OAAOW,SAAQ,SAAAC,GACtB,IAAMpB,EAAmBiB,EAAKxB,wBAAwBP,OAAOvB,EAAQsC,KAEjEgB,EAAKX,gCAELN,EAAiBO,cAAe,GAGpCP,EAAiBK,OAAS,KAC1BL,EAAiBqB,YAAcD,EAAMC,YACrCrB,EAAiBsB,gBAAkBF,EAAME,gBACzCtB,EAAiBuB,kBAAoBH,EAAMG,kBAC3CvB,EAAiBE,iBAAmBkB,EAAMlB,iBAC1CF,EAAiBwB,cAAgB5D,EAAUwD,EAAMI,eACjDxB,EAAiBI,cAAgBgB,EAAMhB,cACvCJ,EAAiByB,YAAcL,EAAMK,YAErCP,EAAUQ,KAAK1B,OAGnBgB,EAAAhC,KAAKa,eAAeW,QAAOkB,KAAIC,MAAAX,EAAIE,O","file":"static/js/c7c1724b4a253942a22e.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-shipping-price-matrices.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"55925999\", content, true, {});","import template from './sw-settings-shipping-price-matrices.html.twig';\nimport './sw-settings-shipping-price-matrices.scss';\n\nconst { Mixin, Data: { Criteria }, Context } = Shopware;\nconst { cloneDeep } = Shopware.Utils.object;\nconst { mapState, mapGetters } = Shopware.Component.getComponentHelper();\n\n/**\n * @package checkout\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'ruleConditionDataProviderService',\n        'feature',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('placeholder'),\n    ],\n\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    computed: {\n        ...mapState('swShippingDetail', [\n            'shippingMethod',\n        ]),\n\n        ...mapGetters('swShippingDetail', [\n            'shippingPriceGroups',\n            'usedRules',\n            'unrestrictedPriceMatrixExists',\n            'newPriceMatrixExists',\n        ]),\n\n        ruleRepository() {\n            return this.repositoryFactory.create('rule');\n        },\n\n        ruleFilter() {\n            const criteria = new Criteria(1, 500);\n            criteria.addFilter(Criteria.multi('OR', [\n                Criteria.contains('rule.moduleTypes.types', 'price'),\n                Criteria.equals('rule.moduleTypes', null),\n            ]));\n            return criteria;\n        },\n\n        shippingPriceRepository() {\n            return this.repositoryFactory.create('shipping_method_price');\n        },\n\n        isLoaded() {\n            return this.currencies.length && this.shippingMethod;\n        },\n    },\n\n    methods: {\n        onAddNewPriceGroup() {\n            const newShippingPrice = this.shippingPriceRepository.create(Context.api);\n            newShippingPrice.shippingMethodId = this.shippingMethod.id;\n            newShippingPrice.quantityStart = 1;\n            newShippingPrice.ruleId = null;\n\n            // Create a flagged as new price matrix, if there is already an unrestricted.\n            if (this.unrestrictedPriceMatrixExists) {\n                // Flag to indicate that this price is in a new matrix\n                newShippingPrice._inNewMatrix = true;\n            }\n\n            this.shippingMethod.prices.add(newShippingPrice);\n        },\n\n        onDeletePriceMatrix(shippingPriceGroup) {\n            this.shippingMethod.prices = this.shippingMethod.prices.filter((shippingPrice) => {\n                // If the shipping price group is new and the prices is also flagged new, remove it\n                if (shippingPriceGroup.isNew) {\n                    if (shippingPrice._inNewMatrix) {\n                        return false;\n                    }\n                    return true;\n                }\n\n                return shippingPrice.ruleId !== shippingPriceGroup.ruleId;\n            });\n        },\n\n        onDuplicatePriceMatrix(priceGroup) {\n            const newPrices = [];\n            priceGroup.prices.forEach(price => {\n                const newShippingPrice = this.shippingPriceRepository.create(Context.api);\n                // Create a flagged as new price matrix, if there is already an unrestricted.\n                if (this.unrestrictedPriceMatrixExists) {\n                    // Flag to indicate that this price is in a new matrix\n                    newShippingPrice._inNewMatrix = true;\n                }\n\n                newShippingPrice.ruleId = null;\n                newShippingPrice.calculation = price.calculation;\n                newShippingPrice.calculationRule = price.calculationRule;\n                newShippingPrice.calculationRuleId = price.calculationRuleId;\n                newShippingPrice.shippingMethodId = price.shippingMethodId;\n                newShippingPrice.currencyPrice = cloneDeep(price.currencyPrice);\n                newShippingPrice.quantityStart = price.quantityStart;\n                newShippingPrice.quantityEnd = price.quantityEnd;\n\n                newPrices.push(newShippingPrice);\n            });\n\n            this.shippingMethod.prices.push(...newPrices);\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_shipping_price_matrices %}\\n<div class=\\\"sw-settings-shipping-price-matrices\\\">\\n    \\n    {% block sw_settings_shipping_price_matrices_price_matrix %}\\n    <sw-settings-shipping-price-matrix\\n        v-for=\\\"priceGroup in shippingPriceGroups\\\"\\n        :key=\\\"priceGroup.ruleId\\\"\\n        :price-group=\\\"priceGroup\\\"\\n        :disabled=\\\"disabled\\\"\\n        @duplicate-price-matrix=\\\"onDuplicatePriceMatrix\\\"\\n        @delete-price-matrix=\\\"onDeletePriceMatrix\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_shipping_detail_advanced_prices_actions %}\\n    <div class=\\\"sw-settings-shipping-price-matrices__actions\\\">\\n        \\n        {% block sw_settings_shipping_detail_advanced_prices_actions_add_button %}\\n        <sw-button\\n            v-tooltip=\\\"{\\n                showDelay: 300,\\n                showOnDisabledElements: true,\\n                message: $tc('sw-settings-shipping.priceMatrix.newMatrixAlreadyExists'),\\n                disabled: !newPriceMatrixExists\\n            }\\\"\\n            :disabled=\\\"newPriceMatrixExists || disabled\\\"\\n            class=\\\"sw-settings-shipping-price-matrices__actions-add-matrix\\\"\\n            @click=\\\"onAddNewPriceGroup\\\"\\n        >\\n            {{ $tc('sw-settings-shipping.priceMatrix.buttonAddAdditionalPriceMatrix') }}\\n        </sw-button>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}