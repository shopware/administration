(this.webpackJsonpAdministration=this.webpackJsonpAdministration||[]).push([[265],{"70jd":function(e,n,t){"use strict";t.r(n);var o=t("CsSd"),i=t.n(o);t("Fla9");function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var s=Shopware,a=s.Component,c=s.State,w=Shopware.Utils,d=Shopware.Utils.object.cloneDeep,f=a.getComponentHelper(),u=f.mapGetters,_=f.mapState;n.default={template:'\n{% block sw_flow_detail_flow %}\n<div class="sw-flow-detail-flow">\n    \n    {% block sw_flow_detail_flow_content %}\n    <div\n        class="sw-flow-detail-flow__content"\n        :class="{\'sw-flow-detail-flow-template\': isTemplate }"\n        :style="flowContainerStyle"\n    >\n        <sw-alert\n            v-if="isUnknownTrigger"\n            variant="warning"\n            class="sw-flow-detail-flow__warning-unknow-trigger"\n        >\n            <p>{{ $tc(\'sw-flow.flowNotification.messageUnknownTriggerWarning\') }}</p>\n            <p>{{ $tc(\'sw-flow.flowNotification.textIntroduce\') }}</p>\n            <ul>\n                <li>{{ $tc(\'sw-flow.flowNotification.textGuide1\') }}</li>\n                <li>{{ $tc(\'sw-flow.flowNotification.textGuide2\') }}</li>\n                <li>{{ $tc(\'sw-flow.flowNotification.textGuide3\') }}</li>\n            </ul>\n        </sw-alert>\n\n        <sw-alert\n            v-if="!isLoading && !isUnknownTrigger && showActionWarning "\n            variant="warning"\n            class="sw-flow-detail-flow__warning-box"\n        >\n            {{ $tc(\'sw-flow.detail.warningText\') }}\n        </sw-alert>\n        \n        {% block sw_flow_detail_trigger_card %}\n        <div class="sw-flow-detail-flow__trigger-card">\n            \n            {% block sw_flow_detail_flow_trigger_select %}\n            <div class="sw-flow-detail-flow__trigger-select">\n                \n                {% block sw_flow_detail_flow_single_select %}\n                <sw-flow-trigger\n                    :disabled="!acl.can(\'flow.editor\')"\n                    :event-name="flow.eventName"\n                    :is-unknown-trigger="isUnknownTrigger"\n                    @option-select="onEventChange"\n                />\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n            \n            {% block sw_flow_detail_flow_trigger_explains %}\n            <div\n                v-if="!flow.eventName"\n                class="sw-flow-detail-flow__trigger-explain"\n            >\n                \n                {% block sw_flow_detail_flow_trigger_explains_title %}\n                <h4>{{ $tc(\'sw-flow.detail.trigger.title\') }}</h4>\n                {% endblock %}\n\n                \n                {% block sw_flow_detail_flow_trigger_explains_help_text %}\n                <p v-html="$tc(\'sw-flow.detail.trigger.helpText\')"></p>\n                {% endblock %}\n            </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        \n        {% block sw_flow_detail_flow_sequence_diagram %}\n        <div\n            v-if="flow.eventName"\n            class="sw-flow-detail-flow__sequence-diagram"\n        >\n            \n            {% block sw_flow_detail_flow_start_line %}\n            <div class="sw-flow-detail-flow__oval"></div>\n            {% endblock %}\n\n            \n            {% block sw_flow_detail_flow_transition_group %}\n            <transition-group\n                name="list"\n                tag="div"\n            >\n                \n                {% block sw_flow_detail_flow_position %}\n                <div\n                    v-for="sequence in formatSequences"\n                    :key="getSequenceId(sequence)"\n                    class="sw-flow-detail-flow__position list-item"\n                >\n\n                    \n                    {% block sw_flow_sequence_icon_plus %}\n                    <div\n                        class="sw-flow-detail-flow__position-plus"\n                        :disabled="!acl.can(\'flow.editor\')"\n                        role="button"\n                        tabindex="0"\n                        @click="onAddRootSequence"\n                        @keydown.enter="onAddRootSequence"\n                    >\n                        <sw-icon\n                            small\n                            name="regular-plus-xs"\n                        />\n                    </div>\n                    {% endblock %}\n\n                    \n                    {% block sw_flow_sequence_icon_connection %}\n                    <div class="sw-flow-detail-flow__position-connection">\n                        <sw-icon\n                            small\n                            name="regular-chevron-right-s"\n                        />\n                    </div>\n                    {% endblock %}\n\n                    \n                    {% block sw_flow_detail_flow_sequences %}\n                    <div\n                        class="sw-flow-detail-flow__sequences"\n                    >\n                        <sw-flow-sequence\n                            name="root-sequence"\n                            :sequence="sequence"\n                            :disabled="!acl.can(\'flow.editor\')"\n                            :is-unknown-trigger="isUnknownTrigger"\n                        />\n                    </div>\n                    {% endblock %}\n                </div>\n                {% endblock %}\n            </transition-group>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    \n    {% block sw_flow_detail_flow_modal_extension %}\n    {% endblock %}\n</div>\n{% endblock %}\n',inject:["repositoryFactory","acl","flowActionService","ruleConditionDataProviderService"],props:{isLoading:{type:Boolean,required:!1,default:!1},isNewFlow:{type:Boolean,required:!1,default:!1},isTemplate:{type:Boolean,required:!1,default:!1},isUnknownTrigger:{type:Boolean,required:!1,default:!1}},data:function(){return{flowContainerStyle:null}},computed:r(r({sequenceRepository:function(){return this.repositoryFactory.create("flow_sequence")},formatSequences:function(){return this.convertSequenceData()},rootSequences:function(){return this.sequences.filter((function(e){return!e.parentId}))},showActionWarning:function(){var e=this;return!(!this.triggerActions.length||!this.sequences.length)&&this.sequences.some((function(n){var t=n.actionName,o=n._isNew,i=n.ruleId;return!(!t&&i)&&(!o&&!e.hasAvailableAction(t))}))}},_("swFlowState",["flow","triggerActions"])),u("swFlowState",["sequences","availableActions","hasAvailableAction"])),watch:{rootSequences:{handler:function(e){if(this.flow.eventName&&!e.length){var n=this.createSequence();c.commit("swFlowState/addSequence",n)}},immediate:!0},sequences:{handler:function(){var e=this,n=document.getElementsByName("root-sequence"),t=0;this.$nextTick((function(){Array.from(n).forEach((function(e){t=e.offsetWidth>t?e.offsetWidth:t})),e.flowContainerStyle=t<=870?null:t>870&&t<=1300?{"max-width":"1300px"}:{"max-width":"100%"}}))},immediate:!0}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e;null!==(e=this.triggerActions)&&void 0!==e&&e.length||this.getTriggerActions()},getTriggerActions:function(){return this.flowActionService.getActions().then((function(e){c.commit("swFlowState/setTriggerActions",e)}))},convertSequenceData:function(){var e=this;if(!this.sequences)return[];var n=d(this.sequences).reduce((function(e,n){return Array.isArray(e[n.displayGroup])||(e[n.displayGroup]=[]),e[n.displayGroup].push(n),e}),{});return Object.values(n).reduce((function(n,t){var o=e.convertToTreeData(t);return o&&n.push(o),n}),[])},convertToTreeData:function(e){var n=null;return e.forEach((function(t){if(t.parentId){var o=e.findIndex((function(e){return e.id===t.parentId}));e[o]&&(t.trueCase?e[o].trueBlock=r(r({},e[o].trueBlock),{},i()({},t.id,t)):e[o].falseBlock=r(r({},e[o].falseBlock),{},i()({},t.id,t)))}else n=null===t.actionName?t:r(r({},n),{},i()({},t.id,t))})),n},createSequence:function(){var e=this.sequenceRepository.create(),n=r(r({},e),{},{parentId:null,ruleId:null,actionName:null,config:{},position:1,displayGroup:1,id:w.createId()});return e=Object.assign(e,n)},onEventChange:function(e){if(c.commit("swFlowState/setEventName",e),c.commit("error/removeApiError",{expression:"flow.".concat(this.flow.id,".eventName")}),!this.rootSequences.length){var n=this.createSequence();c.commit("swFlowState/addSequence",n)}},onAddRootSequence:function(){if(this.acl.can("flow.editor")){var e=this.createSequence();e.position=1,e.displayGroup=this.rootSequences[this.rootSequences.length-1].displayGroup+1,c.commit("swFlowState/addSequence",e)}},getSequenceId:function(e){return e.id?e.displayGroup:Object.values(e)[0].displayGroup}}}},Fla9:function(e,n,t){var o=t("GqSJ");o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.i,o,""]]),o.locals&&(e.exports=o.locals);(0,t("P8hj").default)("e0be4bac",o,!0,{})},GqSJ:function(e,n,t){}}]);
//# sourceMappingURL=9cc6bc7e56e57eea3817.js.map