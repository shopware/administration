{"version":3,"sources":["webpack:///./src/module/sw-settings-search/component/sw-settings-search-searchable-content/sw-settings-search-searchable-content.scss","webpack:///./src/module/sw-settings-search/component/sw-settings-search-searchable-content/index.js","webpack:///./src/module/sw-settings-search/component/sw-settings-search-searchable-content/sw-settings-search-searchable-content.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Context","Mixin","Criteria","Data","template","inject","mixins","getByName","props","searchConfigId","type","String","required","productSearchConfigs","Object","data","showExampleModal","defaultTab","tabNames","generalTab","customTab","isLoading","isEnabledReset","searchConfigFields","fieldConfigs","label","this","$tc","value","defaultConfigs","searchable","ranking","tokenize","computed","productSearchFieldRepository","repositoryFactory","create","productSearchFieldCriteria","criteria","addFilter","equals","addSorting","sort","not","isListEmpty","length","getProductSearchFieldColumns","property","inlineEdit","sortable","width","align","storefrontEsEnable","_Context$app$storefro","app","watch","loadData","methods","onShowExampleModal","onCloseExampleModal","onAddNewConfig","item","createNewConfigItem","unshift","$emit","newItem","field","getConfigFieldDefault","fieldName","configFieldMatching","find","fieldConfig","_objectSpread","onResetToDefault","_this","isGeneralTab","forEach","searchConfigField","saveConfig","onChangeTab","tabContent","getProductSearchFieldsList","_this2","search","then","items","total","catch","createNotificationError","message","finally","_this3","saveAll","createNotificationSuccess","deleteConfig","configFieldId","_this4","delete"],"mappings":"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","file":"static/js/255d615c3f830ff2c46e.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-search-searchable-content.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5cc27389\", content, true, {});","/**\n * @package buyers-experience\n */\nimport template from './sw-settings-search-searchable-content.html.twig';\nimport './sw-settings-search-searchable-content.scss';\n\nconst { Context, Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        searchConfigId: {\n            type: String,\n            required: true,\n        },\n\n        productSearchConfigs: {\n            type: Object,\n            required: false,\n            default() {\n                return null;\n            },\n        },\n    },\n\n    data() {\n        return {\n            showExampleModal: false,\n            defaultTab: 'general',\n            tabNames: {\n                generalTab: 'general',\n                customTab: 'customfields',\n            },\n            isLoading: false,\n            isEnabledReset: true,\n            searchConfigFields: [],\n            fieldConfigs: [\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.name'),\n                    value: 'name',\n                    defaultConfigs: {\n                        searchable: true,\n                        ranking: 700,\n                        tokenize: true,\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.description'),\n                    value: 'description',\n                    defaultConfigs: {\n                        searchable: false,\n                        ranking: 0,\n                        tokenize: false,\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.productNumber'),\n                    value: 'productNumber',\n                    defaultConfigs: {\n                        searchable: true,\n                        ranking: 1000,\n                        tokenize: false,\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.manufacturerNumber'),\n                    value: 'manufacturerNumber',\n                    defaultConfigs: {\n                        searchable: true,\n                        ranking: 500,\n                        tokenize: false,\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.ean'),\n                    value: 'ean',\n                    defaultConfigs: {\n                        searchable: true,\n                        ranking: 500,\n                        tokenize: false,\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.customSearchKeywords'),\n                    value: 'customSearchKeywords',\n                    defaultConfigs: {\n                        searchable: true,\n                        ranking: 800,\n                        tokenize: false,\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.manufacturerName'),\n                    value: 'manufacturer.name',\n                    defaultConfigs: {\n                        searchable: true,\n                        ranking: 500,\n                        tokenize: false,\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.manufacturerCustomFields'),\n                    value: 'manufacturer.customFields',\n                    defaultConfigs: {\n                        searchable: false,\n                        ranking: 0,\n                        tokenize: false,\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.categoriesName'),\n                    value: 'categories.name',\n                    defaultConfigs: {\n                        searchable: false,\n                        ranking: 0,\n                        tokenize: false,\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.categoriesCustomFields'),\n                    value: 'categories.customFields',\n                    defaultConfigs: {\n                        searchable: false,\n                        ranking: 0,\n                        tokenize: false,\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.tagsName'),\n                    value: 'tags.name',\n                    defaultConfigs: {\n                        searchable: false,\n                        ranking: 0,\n                        tokenize: false,\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.metaTitle'),\n                    value: 'metaTitle',\n                    defaultConfigs: {\n                        searchable: false,\n                        ranking: 0,\n                        tokenize: false,\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.metaDescription'),\n                    value: 'metaDescription',\n                    defaultConfigs: {\n                        searchable: false,\n                        ranking: 0,\n                        tokenize: false,\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.propertiesValue'),\n                    value: 'properties.name',\n                    defaultConfigs: {\n                        searchable: false,\n                        ranking: 0,\n                        tokenize: false,\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-search.generalTab.configFields.variantValue'),\n                    value: 'options.name',\n                    defaultConfigs: {\n                        searchable: false,\n                        ranking: 0,\n                        tokenize: false,\n                    },\n                },\n            ],\n        };\n    },\n\n    computed: {\n        productSearchFieldRepository() {\n            return this.repositoryFactory.create('product_search_config_field');\n        },\n\n        productSearchFieldCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(Criteria.equals('searchConfigId', this.searchConfigId));\n            criteria.addSorting(Criteria.sort('field', 'ESC'));\n\n            if (this.defaultTab === this.tabNames.generalTab) {\n                criteria.addFilter(Criteria.equals('customFieldId', null));\n            } else {\n                criteria.addFilter(Criteria.not(\n                    'AND',\n                    [Criteria.equals('customFieldId', null)],\n                ));\n            }\n\n            return criteria;\n        },\n\n        isListEmpty() {\n            return !this.searchConfigFields || !this.searchConfigFields.length;\n        },\n\n        getProductSearchFieldColumns() {\n            return [{\n                property: 'field',\n                label: 'sw-settings-search.generalTab.list.columnContent',\n                inlineEdit: 'string',\n                sortable: true,\n                width: '250px',\n            }, {\n                property: 'searchable',\n                label: 'sw-settings-search.generalTab.list.columnSearchable',\n                align: 'center',\n                inlineEdit: 'string',\n                sortable: true,\n            }, {\n                property: 'ranking',\n                inlineEdit: 'number',\n                label: 'sw-settings-search.generalTab.list.columnRankingPoints',\n                align: 'center',\n                sortable: true,\n            }, {\n                property: 'tokenize',\n                inlineEdit: 'string',\n                label: 'sw-settings-search.generalTab.list.columnSplitKeywords',\n                align: 'center',\n                sortable: true,\n            }];\n        },\n\n        storefrontEsEnable() {\n            return Context.app.storefrontEsEnable ?? false;\n        },\n    },\n\n    watch: {\n        searchConfigId() {\n            this.loadData();\n        },\n\n        productSearchConfigs() {\n            this.loadData();\n        },\n    },\n\n    methods: {\n        onShowExampleModal() {\n            this.showExampleModal = true;\n        },\n\n        onCloseExampleModal() {\n            this.showExampleModal = false;\n        },\n\n        onAddNewConfig() {\n            const item = this.createNewConfigItem();\n            this.searchConfigFields.unshift(item);\n            this.$emit('edit-change', true);\n        },\n\n        createNewConfigItem() {\n            const newItem = this.productSearchFieldRepository.create();\n\n            newItem.searchConfigId = this.searchConfigId;\n            newItem.searchable = false;\n            newItem.ranking = 0;\n            newItem.field = '';\n            newItem.tokenize = false;\n\n            return newItem;\n        },\n\n        getConfigFieldDefault(fieldName) {\n            const configFieldMatching = this.fieldConfigs.find(fieldConfig => fieldConfig.value === fieldName);\n\n            if (configFieldMatching) {\n                return { ...configFieldMatching.defaultConfigs };\n            }\n\n            return {\n                ranking: 0,\n                searchable: false,\n                tokenize: false,\n            };\n        },\n\n        onResetToDefault() {\n            const isGeneralTab = this.defaultTab === this.tabNames.generalTab;\n\n            this.searchConfigFields.forEach((searchConfigField) => {\n                searchConfigField.ranking =\n                    isGeneralTab ? this.getConfigFieldDefault(searchConfigField.field).ranking : 0;\n                searchConfigField.searchable =\n                    isGeneralTab ? this.getConfigFieldDefault(searchConfigField.field).searchable : false;\n                searchConfigField.tokenize =\n                    isGeneralTab ? this.getConfigFieldDefault(searchConfigField.field).tokenize : false;\n\n                return searchConfigField;\n            });\n\n            this.saveConfig();\n        },\n\n        onChangeTab(tabContent) {\n            this.defaultTab = tabContent;\n            this.loadData();\n        },\n\n        loadData() {\n            this.getProductSearchFieldsList();\n        },\n\n        getProductSearchFieldsList() {\n            this.isLoading = true;\n            const criteria = this.productSearchFieldCriteria;\n\n            this.productSearchFieldRepository.search(criteria)\n                .then((items) => {\n                    this.total = items.total;\n                    this.isEnabledReset = !items.total;\n                    this.searchConfigFields = items;\n                }).catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-search.notification.loadError'),\n                    });\n                }).finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        saveConfig() {\n            this.isLoading = true;\n            this.productSearchFieldRepository\n                .saveAll(this.searchConfigFields)\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-settings-search.notification.saveSuccess'),\n                    });\n                    this.$emit('edit-change', false);\n                }).catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-search.notification.saveError'),\n                    });\n                }).finally(() => {\n                    this.isLoading = false;\n                    this.loadData();\n                });\n        },\n\n        deleteConfig(configFieldId) {\n            if (!configFieldId) {\n                return;\n            }\n\n            this.isLoading = true;\n            this.productSearchFieldRepository.delete(configFieldId)\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-settings-search.notification.saveSuccess'),\n                    });\n                }).catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-search.notification.saveError'),\n                    });\n                }).finally(() => {\n                    this.isLoading = false;\n                    this.loadData();\n                });\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_search_searchable_content %}\\n<sw-card\\n    class=\\\"sw-settings-search-searchable-content\\\"\\n    position-identifier=\\\"sw-settings-search-searchable-content\\\"\\n    :title=\\\"$tc('sw-settings-search.generalTab.labelSearchableContent')\\\"\\n>\\n    \\n    {% block sw_settings_search_searchable_content_title %}\\n    <span class=\\\"sw-field sw-settings-search__searchable-content-title\\\">\\n        {{ $tc('sw-settings-search.generalTab.textDescriptionSearchableContent') }}\\n    </span>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_search_searchable_actions %}\\n    <sw-container\\n        class=\\\"sw-field\\\"\\n        columns=\\\"repeat(auto-fit, minmax(100px, 1fr))\\\"\\n        align=\\\"center\\\"\\n        gap=\\\"0px 30px\\\"\\n    >\\n        <div class=\\\"sw-settings-search__searchable-content-button-group\\\">\\n            \\n            {% block sw_settings_search_searchable_add_item %}\\n            <sw-button\\n                v-if=\\\"defaultTab !== tabNames.generalTab\\\"\\n                class=\\\"sw-settings-search__searchable-content-add-button\\\"\\n                variant=\\\"ghost\\\"\\n                size=\\\"small\\\"\\n                :disabled=\\\"!acl.can('product_search_config.creator')\\\"\\n                @click=\\\"onAddNewConfig\\\"\\n            >\\n                {{ $tc('sw-settings-search.generalTab.buttonAddContent') }}\\n            </sw-button>\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_search_searchable_reset_default %}\\n            <sw-button\\n                v-if=\\\"defaultTab !== tabNames.customTab\\\"\\n                class=\\\"sw-settings-search__searchable-content-reset-button\\\"\\n                size=\\\"small\\\"\\n                :disabled=\\\"isEnabledReset || !acl.can('product_search_config.editor')\\\"\\n                @click=\\\"onResetToDefault\\\"\\n            >\\n                {{ $tc('sw-settings-search.generalTab.buttonResetDefault') }}\\n            </sw-button>\\n            {% endblock %}\\n        </div>\\n\\n        \\n        {% block sw_settings_search_searchable_show_example %}\\n        \\n        {% block sw_settings_search_searchable_show_example_link %}\\n        <div class=\\\"sw-settings-search__searchable-content-link-text\\\">\\n\\n            \\n            {% block sw_settings_search_searchable_show_example_link_element %}\\n            \\n            <a\\n                class=\\\"sw-settings-search__searchable-content-show-example-link\\\"\\n                role=\\\"button\\\"\\n                tabindex=\\\"0\\\"\\n                @click=\\\"onShowExampleModal\\\"\\n            >\\n                {{ $tc('sw-settings-search.generalTab.linkExample') }}\\n                <sw-icon\\n                    name=\\\"regular-long-arrow-right\\\"\\n                    small\\n                />\\n            </a>\\n            {% endblock %}\\n\\n            <router-link\\n                v-if=\\\"!storefrontEsEnable\\\"\\n                :to=\\\"{ name: 'sw.settings.search.index.liveSearch' }\\\"\\n                class=\\\"sw-settings-search__searchable-content-rebuild-link\\\"\\n            >\\n                {{ $tc('sw-settings-search.liveSearchTab.linkRebuildSearchIndex') }}\\n                <sw-icon\\n                    name=\\\"regular-long-arrow-right\\\"\\n                    small\\n                />\\n            </router-link>\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_search_searchable_show_example_modal %}\\n        <sw-settings-search-example-modal\\n            v-if=\\\"showExampleModal\\\"\\n            @modal-close=\\\"onCloseExampleModal\\\"\\n        />\\n        {% endblock %}\\n        {% endblock %}\\n    </sw-container>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_search_searchable_content_tabs %}\\n    <sw-tabs\\n        :default-item=\\\"defaultTab\\\"\\n        position-identifier=\\\"sw-settings-search-searchable-content\\\"\\n    >\\n        <template #default=\\\"{ active }\\\">\\n            \\n            {% block sw_settings_search_searchable_content_general_tab_title %}\\n            <sw-tabs-item\\n                v-bind=\\\"$props\\\"\\n                class=\\\"sw-settings-search__searchable-content-tab-title\\\"\\n                :name=\\\"tabNames.generalTab\\\"\\n                :active-tab=\\\"active\\\"\\n                @click=\\\"onChangeTab(tabNames.generalTab)\\\"\\n            >\\n                {{ $tc('sw-settings-search.generalTab.labelGeneralTab') }}\\n            </sw-tabs-item>\\n            {% endblock %}\\n\\n            <sw-tabs-item\\n                v-if=\\\"!storefrontEsEnable\\\"\\n                v-bind=\\\"$props\\\"\\n                class=\\\"sw-settings-search__searchable-content-tab-title\\\"\\n                :name=\\\"tabNames.customTab\\\"\\n                :active-tab=\\\"active\\\"\\n                @click=\\\"onChangeTab(tabNames.customTab)\\\"\\n            >\\n                {{ $tc('sw-settings-search.generalTab.labelCustomFieldsTab') }}\\n            </sw-tabs-item>\\n        </template>\\n\\n        <template #content=\\\"{ active }\\\">\\n            \\n            {% block sw_settings_search_searchable_content_general_tab_item %}\\n            <sw-settings-search-searchable-content-general\\n                v-if=\\\"active === tabNames.generalTab\\\"\\n                :is-empty=\\\"isListEmpty\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :columns=\\\"getProductSearchFieldColumns\\\"\\n                :repository=\\\"productSearchFieldRepository\\\"\\n                :search-configs=\\\"searchConfigFields\\\"\\n                :field-configs=\\\"fieldConfigs\\\"\\n                @data-load=\\\"loadData\\\"\\n                @config-save=\\\"saveConfig\\\"\\n            />\\n            {% endblock %}\\n\\n            <sw-settings-search-searchable-content-customfields\\n                v-if=\\\"active === tabNames.customTab && !storefrontEsEnable\\\"\\n                :is-empty=\\\"isListEmpty\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :columns=\\\"getProductSearchFieldColumns\\\"\\n                :repository=\\\"productSearchFieldRepository\\\"\\n                :search-configs=\\\"searchConfigFields\\\"\\n                @data-load=\\\"loadData\\\"\\n                @config-add=\\\"onAddNewConfig\\\"\\n                @config-save=\\\"saveConfig\\\"\\n                @config-delete=\\\"deleteConfig\\\"\\n            />\\n        </template>\\n    </sw-tabs>\\n    {% endblock %}\\n</sw-card>\\n{% endblock %}\\n\";"],"sourceRoot":""}