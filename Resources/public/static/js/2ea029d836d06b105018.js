(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[28873],{80174:function(){},28873:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return a}}),n(84388);let{Mixin:l,Data:{Criteria:i},Component:s}=Shopware,{mapState:o}=s.getComponentHelper();var a={template:'\n{% block sw_flow_list %}\n<div class="sw-flow-list">\n    \n    {% block sw_flow_list_search_bar %}{% endblock %}\n\n    \n    {% block sw_flow_list_smart_bar_header %}{% endblock %}\n\n    \n    {% block sw_flow_list_smart_bar_actions %}{% endblock %}\n\n    \n    {% block sw_flow_list_content %}\n    <sw-card\n        class="sw-flow-list-card"\n        position-identifier="sw-flow-list-card"\n    >\n        <sw-entity-listing\n            class="sw-flow-list__grid"\n            show-selection\n            :show-settings="false"\n            :allow-column-edit="false"\n            :allow-view="acl.can(\'flow.viewer\')"\n            :allow-edit="acl.can(\'flow.editor\')"\n            :allow-delete="acl.can(\'flow.deleter\')"\n            :columns="flowColumns"\n            :sort-by="sortBy"\n            :sort-direction="sortDirection"\n            :repository="flowRepository"\n            :items="flows"\n            :is-loading="isLoading"\n            :full-page="false"\n            :plain-appearance="true"\n            @column-sort="onSortColumn"\n            @page-change="onPageChange"\n            @update-records="updateRecords"\n            @selection-change="selectionChange"\n        >\n            \n            {% block sw_flow_list_grid_columns %}\n\n            \n            {% block sw_flow_list_grid_columns_active %}\n            <template #column-active="{ item }">\n                \n                {% block sw_flow_list_columns_active_label %}\n                <sw-icon\n                    size="12px"\n                    :color="item.active ? `#37d046` : `#de294c`"\n                    :name="item.active ? `regular-checkmark-xs` : `regular-times-s`"\n                />\n                {% endblock %}\n            </template>\n            {% endblock %}\n\n            \n            {% block sw_flow_list_grid_columns_event_name %}\n            <template #column-eventName="{ item }">\n                <div v-if="isValidTrigger(item.eventName)">\n                    <strong>\n                        {{ getTranslatedEventName(item.eventName) }}\n                    </strong>\n                    <p>{{ item.eventName }}</p>\n                </div>\n                <div v-else>\n                    <p>{{ $tc(\'sw-flow.list.unknownTrigger\') }}</p>\n                </div>\n            </template>\n            {% endblock %}\n            {% endblock %}\n\n            \n            {% block sw_flow_list_grid_actions %}\n            <template #actions="{ item }">\n\n                \n                {% block sw_flow_list_grid_actions_duplicate %}\n                <sw-context-menu-item\n                    class="sw-flow-list__item-duplicate"\n                    :disabled="!acl.can(\'flow.creator\')"\n                    @click="onDuplicateFlow(item)"\n                >\n                    {{ $tc(\'global.default.duplicate\') }}\n                </sw-context-menu-item>\n                {% endblock %}\n\n                \n                {% block sw_flow_list_grid_actions_edit %}\n                <sw-context-menu-item\n                    class="sw-flow-list__item-edit"\n                    :disabled="!acl.can(\'flow.editor\') && !acl.can(\'flow.viewer\')"\n                    @click="onEditFlow(item)"\n                >\n                    {{ detailPageLinkText }}\n                </sw-context-menu-item>\n                {% endblock %}\n\n                \n                {% block sw_flow_list_grid_actions_custom %}\n                {% endblock %}\n\n                \n                {% block sw_flow_list_grid_actions_delete %}\n                <sw-context-menu-item\n                    class="sw-context-menu-item--danger sw-flow-list__item-delete"\n                    :disabled="!acl.can(\'flow.deleter\')"\n                    @click="onDeleteFlow(item)"\n                >\n                    {{ $tc(\'global.default.delete\') }}\n                </sw-context-menu-item>\n                {% endblock %}\n            </template>\n            {% endblock %}\n\n            \n            {% block sw_flow_list_grid_action_modal %}\n            <template #action-modals="{ item }">\n                <sw-modal\n                    v-if="currentFlow.id === item.id && isDeleting"\n                    variant="small"\n                    :title="$tc(\'global.default.warning\')"\n                    @modal-close="onCloseDeleteModal"\n                >\n                    \n                    {% block sw_flow_list_grid_action_modal_confirm_delete_text %}\n                    <sw-alert variant="warning">\n                        {{ deleteWarningMessage() }}\n                    </sw-alert>\n                    {% endblock %}\n\n                    <template #modal-footer>\n                        \n                        {% block sw_flow_list_grid_action_modal_buttons %}\n                        <sw-button\n                            size="small"\n                            @click="onCloseDeleteModal"\n                        >\n                            {{ $tc(\'global.default.cancel\') }}\n                        </sw-button>\n                        <sw-button\n                            size="small"\n                            variant="danger"\n                            @click="onConfirmDelete(item)"\n                        >\n                            {{ $tc(\'global.default.delete\') }}\n                        </sw-button>\n                        {% endblock %}\n                    </template>\n                </sw-modal>\n            </template>\n            {% endblock %}\n\n            \n            {% block sw_flow_list_grid_bulk_modal_delete_confirm_text %}\n            <template #bulk-modal-delete-confirm-text="{ selectionCount }">\n                <sw-alert variant="warning">\n                    {{ bulkDeleteWarningMessage(selectionCount) }}\n                </sw-alert>\n            </template>\n            {% endblock %}\n        </sw-entity-listing>\n\n        \n        {% block sw_flow_list_empty_state %}\n        <sw-empty-state\n            v-if="!total && !isLoading"\n            class="sw-flow-list__empty-state"\n            :title="$tc(\'sw-flow.list.emptyStateTitle\')"\n            :subline="$tc(\'sw-flow.list.emptyStateSubTitle\')"\n        >\n            \n            {% block sw_flow_list_empty_state_icon %}\n            <template #icon>\n                <img\n                    :alt="$tc(\'sw-flow.list.emptyStateTitle\')"\n                    :src="assetFilter(\'/administration/static/img/empty-states/settings-empty-state.svg\')"\n                >\n            </template>\n            {% endblock %}\n        </sw-empty-state>\n        {% endblock %}\n\n        \n        {% block sw_flow_list_modal_content_custom %}\n        {% endblock %}\n    </sw-card>\n    {% endblock %}\n</div>\n{% endblock %}\n',inject:["acl","repositoryFactory"],mixins:[l.getByName("notification"),l.getByName("listing")],props:{searchTerm:{type:String,required:!1,default:""}},data(){return{sortBy:"createdAt",sortDirection:"DESC",total:0,isLoading:!1,isDeleting:!1,isDownloading:!1,flows:null,currentFlow:{},selectedItems:[]}},metaInfo(){return{title:this.$createTitle()}},computed:{flowRepository(){return this.repositoryFactory.create("flow")},flowCriteria(){let t=new i(this.page,this.limit);return this.searchTerm&&t.setTerm(this.searchTerm),t.addSorting(i.sort(this.sortBy,this.sortDirection)).addSorting(i.sort("updatedAt","DESC")),t},flowColumns(){return[{property:"active",label:this.$tc("sw-flow.list.labelColumnActive"),width:"80px",sortable:!0},{property:"name",dataIndex:"name",label:this.$tc("sw-flow.list.labelColumnName"),allowResize:!0,routerLink:"sw.flow.detail",primary:!0},{property:"eventName",dataIndex:"eventName",label:this.$tc("sw-flow.list.labelColumnTrigger"),allowResize:!0,multiLine:!0},{property:"description",label:this.$tc("sw-flow.list.labelColumnDescription"),allowResize:!0,sortable:!1}]},detailPageLinkText(){return!this.acl.can("flow.editor")&&this.acl.can("flow.viewer")?this.$tc("global.default.view"):this.$tc("global.default.edit")},assetFilter(){return Shopware.Filter.getByName("asset")},...o("swFlowState",["triggerEvents"])},watch:{searchTerm(t){this.onSearch(t)}},created(){this.createComponent()},methods:{createComponent(){this.getList()},getList(){this.isLoading=!0,Shopware.State.dispatch("swFlowState/fetchTriggerActions"),this.flowRepository.search(this.flowCriteria).then(t=>{this.total=t.total,this.flows=t}).finally(()=>{this.isLoading=!1})},isValidTrigger(t){return this.triggerEvents.some(e=>e.name===t)},onDuplicateFlow(t){let e={overwrites:{name:`${t.name} - ${this.$tc("global.default.copy")}`}};this.flowRepository.clone(t.id,e,Shopware.Context.api).then(t=>{this.createNotificationSuccess({message:this.$tc("sw-flow.flowNotification.messageDuplicateSuccess")}),t?.id&&this.$router.push({name:"sw.flow.detail",params:{id:t.id}})}).catch(()=>{this.createNotificationError({message:this.$tc("sw-flow.flowNotification.messageDuplicateError")})})},onEditFlow(t){t?.id&&this.$router.push({name:"sw.flow.detail",params:{id:t.id}})},onDeleteFlow(t){this.isDeleting=!0,this.currentFlow=t},onCloseDeleteModal(){this.isDownload=!1,this.currentFlow={}},onConfirmDelete(t){return this.isDeleting=!1,this.currentFlow={},this.flowRepository.delete(t.id).then(()=>{this.createNotificationSuccess({message:this.$tc("sw-flow.flowNotification.messageDeleteSuccess")}),this.getList()}).catch(()=>{this.createNotificationError({message:this.$tc("sw-flow.flowNotification.messageDeleteError")})})},updateRecords(t){this.flows=t,this.total=t.total,this.$emit("on-update-total",this.total)},getTranslatedEventName(t){let e=t.replace(/\./g,"_"),n=`global.businessEvents.${e}`,l=`sw-flow-custom-event.flow-list.${e}`;return this.$te(n)?this.$tc(n):this.$tc(l)},selectionChange(t){this.selectedItems=Object.values(t)},deleteWarningMessage(){return`${this.$tc("sw-flow.list.warningDeleteText")} ${this.$tc("sw-flow.list.confirmText")}`},bulkDeleteWarningMessage(t){return`${this.$tc("sw-flow.list.warningDeleteText")}
            ${this.$tc("global.entity-components.deleteMessage",t,{count:t})}`}}}},84388:function(t,e,n){var l=n(80174);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[t.id,l,""]]),l.locals&&(t.exports=l.locals),n(45346).Z("bb3c68ba",l,!0,{})}}]);