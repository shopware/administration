{"version":3,"sources":["webpack:///./src/module/sw-cms/component/sw-cms-section/index.js","webpack:///./src/module/sw-cms/component/sw-cms-section/sw-cms-section.html.twig","webpack:///./src/module/sw-cms/component/sw-cms-section/sw-cms-section.scss"],"names":["_Shopware","Shopware","Component","Mixin","Filter","mapPropertyErrors","getComponentHelper","template","inject","mixins","getByName","props","page","type","Object","required","section","active","Boolean","default","disabled","data","isCollapsed","computed","_objectSpread","blockRepository","this","repositoryFactory","create","slotRepository","sectionClasses","sizingMode","sectionTypeClass","concat","customSectionClass","cssClass","sectionStyles","backgroundMedia","id","url","assetFilter","backgroundColor","backgroundMediaMode","sectionSidebarClasses","sideBarEmpty","sectionMobileAndHidden","expandedClass","State","get","currentCmsDeviceView","mobileBehavior","isSideBarType","sideBarBlocks","length","blockCount","blocks","mainContentEmpty","mainContentBlocks","_this","filter","block","blockTypeExists","sectionPosition","sort","a","b","position","_this2","blockTypes","keys","cmsService","getCmsBlockRegistry","isVisible","view","visibility","desktop","tablet","mobile","toggleButtonText","$tc","sectionContentClasses","created","createdComponent","methods","openBlockBar","$emit","onAddSectionBlock","onBlockSelection","dispatch","onBlockDuplicate","onBlockDelete","blockId","remove","selectedBlock","commit","updateBlockPositions","forEach","index","getDropData","arguments","undefined","dropIndex","includes","hasBlockErrors","hasUniqueBlockErrors","hasSlotConfigErrors","some","error","_this$pageSlotsError","_this$pageSlotsError$","errorElements","pageSlotsError","parameters","elements","errorType","blockIds","_this$pageSlotConfigE","_this$pageSlotConfigE2","pageSlotConfigError","missingConfig","toggleVisibility","content","__esModule","module","i","locals","exports","add"],"mappings":"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","file":"static/js/4830df66d9cd016e7bb0.js","sourcesContent":["import template from './sw-cms-section.html.twig';\nimport './sw-cms-section.scss';\n\nconst { Component, Mixin, Filter } = Shopware;\nconst { mapPropertyErrors } = Component.getComponentHelper();\n\n/**\n * @private\n * @package buyers-experience\n */\nexport default {\n    template,\n\n    inject: [\n        'cmsService',\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        Mixin.getByName('cms-state'),\n    ],\n\n    props: {\n        page: {\n            type: Object,\n            required: true,\n        },\n\n        section: {\n            type: Object,\n            required: true,\n        },\n\n        active: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            isCollapsed: true,\n        };\n    },\n\n    computed: {\n        blockRepository() {\n            return this.repositoryFactory.create('cms_block');\n        },\n\n        slotRepository() {\n            return this.repositoryFactory.create('cms_slot');\n        },\n\n        sectionClasses() {\n            return {\n                'is--active': this.active,\n                'is--boxed': this.section.sizingMode === 'boxed',\n            };\n        },\n\n        sectionTypeClass() {\n            return `is--${this.section.type}`;\n        },\n\n        customSectionClass() {\n            return this.section.cssClass;\n        },\n\n        sectionStyles() {\n            let backgroundMedia = null;\n\n            if (this.section.backgroundMedia) {\n                if (this.section.backgroundMedia.id) {\n                    backgroundMedia = `url(\"${this.section.backgroundMedia.url}\")`;\n                } else {\n                    backgroundMedia = `url('${this.assetFilter(this.section.backgroundMedia.url)}')`;\n                }\n            }\n\n            return {\n                'background-color': this.section.backgroundColor || 'transparent',\n                'background-image': backgroundMedia,\n                'background-size': this.section.backgroundMediaMode,\n            };\n        },\n\n        sectionSidebarClasses() {\n            return {\n                'is--empty': this.sideBarEmpty,\n                'is--hidden': this.sectionMobileAndHidden,\n                'is--expanded': this.expandedClass,\n            };\n        },\n\n        sectionMobileAndHidden() {\n            const view = Shopware.State.get('cmsPageState').currentCmsDeviceView;\n            return view === 'mobile' && this.section.mobileBehavior === 'hidden';\n        },\n\n        isSideBarType() {\n            return this.section.type === 'sidebar';\n        },\n\n        sideBarEmpty() {\n            return this.sideBarBlocks.length === 0;\n        },\n\n        blockCount() {\n            return this.section.blocks.length;\n        },\n\n        mainContentEmpty() {\n            return this.mainContentBlocks.length === 0;\n        },\n\n        sideBarBlocks() {\n            const sideBarBlocks = this.section.blocks.filter((block => this.blockTypeExists(block.type)\n                && block.sectionPosition === 'sidebar'));\n            return sideBarBlocks.sort((a, b) => a.position - b.position);\n        },\n\n        mainContentBlocks() {\n            const mainContentBlocks = this.section.blocks.filter((block => this.blockTypeExists(block.type)\n                && block.sectionPosition !== 'sidebar'));\n            return mainContentBlocks.sort((a, b) => a.position - b.position);\n        },\n\n        assetFilter() {\n            return Filter.getByName('asset');\n        },\n\n        blockTypes() {\n            return Object.keys(this.cmsService.getCmsBlockRegistry());\n        },\n\n        isVisible() {\n            const view = Shopware.State.get('cmsPageState').currentCmsDeviceView;\n\n            return (view === 'desktop' && !this.section.visibility.desktop) ||\n                (view === 'tablet-landscape' && !this.section.visibility.tablet) ||\n                (view === 'mobile' && !this.section.visibility.mobile);\n        },\n\n        toggleButtonText() {\n            return this.$tc('sw-cms.sidebar.contentMenu.visibilitySectionTextButton', !this.isCollapsed);\n        },\n\n        expandedClass() {\n            return {\n                'is--expanded': this.isVisible && !this.isCollapsed,\n            };\n        },\n\n        sectionContentClasses() {\n            return {\n                'is--empty': this.mainContentEmpty,\n                'is--expanded': this.isVisible && !this.isCollapsed,\n            };\n        },\n\n        ...mapPropertyErrors('page', [\n            'slots',\n            'slotConfig',\n        ]),\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (!this.section.backgroundMediaMode) {\n                this.section.backgroundMediaMode = 'cover';\n            }\n        },\n\n        openBlockBar() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.$emit('page-config-open', 'blocks');\n        },\n\n        onAddSectionBlock() {\n            this.openBlockBar();\n        },\n\n        onBlockSelection(block) {\n            Shopware.State.dispatch('cmsPageState/setBlock', block);\n            this.$emit('page-config-open', 'itemConfig');\n        },\n\n        onBlockDuplicate(block, section) {\n            this.$emit('block-duplicate', block, section);\n        },\n\n        onBlockDelete(blockId) {\n            this.section.blocks.remove(blockId);\n\n            if (this.selectedBlock && this.selectedBlock.id === blockId) {\n                Shopware.State.commit('cmsPageState/removeSelectedBlock');\n            }\n\n            this.updateBlockPositions();\n        },\n\n        updateBlockPositions() {\n            this.section.blocks.forEach((block, index) => {\n                block.position = index;\n            });\n        },\n\n        getDropData(index, sectionPosition = 'main') {\n            return { dropIndex: index, section: this.section, sectionPosition };\n        },\n\n        blockTypeExists(type) {\n            return this.blockTypes.includes(type);\n        },\n\n        hasBlockErrors(block) {\n            return [\n                this.hasUniqueBlockErrors(block),\n                this.hasSlotConfigErrors(block),\n            ].some(error => !!error);\n        },\n\n        hasUniqueBlockErrors(block) {\n            const errorElements = this.pageSlotsError?.parameters?.elements;\n\n            if (!errorElements) {\n                return false;\n            }\n\n            return errorElements.some(errorType => errorType.blockIds.includes(block.id));\n        },\n\n        hasSlotConfigErrors(block) {\n            const errorElements = this.pageSlotConfigError?.parameters?.elements;\n\n            if (!errorElements) {\n                return false;\n            }\n\n            return errorElements.some(missingConfig => missingConfig.blockId === block.id);\n        },\n\n        toggleVisibility() {\n            this.isCollapsed = !this.isCollapsed;\n        },\n    },\n};\n","export default \"\\n{% block sw_cms_section %}\\n<div\\n    class=\\\"sw-cms-section\\\"\\n    :class=\\\"[sectionClasses, customSectionClass, sectionTypeClass]\\\"\\n>\\n\\n    \\n    {% block sw_cms_section_actions %}\\n    <sw-cms-section-actions\\n        :section=\\\"section\\\"\\n        :disabled=\\\"disabled\\\"\\n    />\\n    {% endblock %}\\n\\n    <div\\n        class=\\\"sw-cms-section__wrapper\\\"\\n        :style=\\\"sectionStyles\\\"\\n    >\\n        <sw-cms-visibility-toggle\\n            v-if=\\\"isVisible\\\"\\n            :text=\\\"toggleButtonText\\\"\\n            :is-collapsed=\\\"isCollapsed\\\"\\n            :class=\\\"expandedClass\\\"\\n            @toggle=\\\"toggleVisibility\\\"\\n        />\\n        \\n        {% block sw_cms_section_sidebar %}\\n        <div\\n            v-if=\\\"isSideBarType && (!isCollapsed || !isVisible)\\\"\\n            class=\\\"sw-cms-section__sidebar\\\"\\n            :class=\\\"sectionSidebarClasses\\\"\\n        >\\n\\n            <template v-if=\\\"sideBarEmpty\\\">\\n                \\n                {% block sw_cms_section_sidebar_block_empty %}\\n                <div\\n                    v-droppable=\\\"{ dragGroup: 'cms-stage', data: getDropData(blockCount, 'sidebar') }\\\"\\n                    class=\\\"sw-cms-section__empty-stage\\\"\\n                    role=\\\"button\\\"\\n                    tabindex=\\\"0\\\"\\n                    @click=\\\"openBlockBar\\\"\\n                    @keydown.enter=\\\"openBlockBar\\\"\\n                >\\n\\n                    <sw-icon\\n                        name=\\\"regular-plus-circle\\\"\\n                        size=\\\"24\\\"\\n                    />\\n                    <p>{{ $tc('sw-cms.detail.label.addBlocks') }}</p>\\n                </div>\\n                {% endblock %}\\n            </template>\\n\\n            <template v-else>\\n\\n                \\n                {% block sw_cms_section_sidebar_add_first_block %}\\n                <sw-cms-stage-add-block\\n                    v-if=\\\"isSystemDefaultLanguage && !disabled\\\"\\n                    :key=\\\"0\\\"\\n                    v-droppable=\\\"{ dragGroup: 'cms-stage', data: getDropData(0, 'sidebar') }\\\"\\n                    @stage-block-add=\\\"onAddSectionBlock\\\"\\n                />\\n                {% endblock %}\\n\\n                <template\\n                    v-for=\\\"(block, index) in sideBarBlocks\\\"\\n                    {% if VUE3 %}\\n                    :key=\\\"block.id\\\"\\n                    {% endif %}\\n                >\\n                    \\n                    {% block sw_cms_section_sidebar_block %}\\n                    <sw-cms-block\\n                        {% if VUE2 %}\\n                        :key=\\\"block.id\\\"\\n                        {% endif %}\\n                        class=\\\"sw-cms-stage-block\\\"\\n                        :block=\\\"block\\\"\\n                        :disabled=\\\"disabled\\\"\\n                        :active=\\\"selectedBlock !== null && selectedBlock.id === block.id\\\"\\n                        :has-errors=\\\"hasBlockErrors(block)\\\"\\n                        @block-overlay-click=\\\"onBlockSelection(block)\\\"\\n                    >\\n\\n                        \\n                        {% block sw_cms_section_sidebar_block_component %}\\n                        <component :is=\\\"`sw-cms-block-${block.type}`\\\">\\n                            \\n                            {% block sw_cms_section_content_block_slot %}\\n                            <template\\n                                v-for=\\\"el in block.slots\\\"\\n                                {% if VUE3 %}\\n                                :key=\\\"el.id\\\"\\n                                {% endif %}\\n                                #[el.slot]\\n                            >\\n                                <sw-cms-slot\\n                                    {% if VUE2 %}\\n                                    :key=\\\"el.id\\\"\\n                                    {% endif %}\\n                                    :element=\\\"el\\\"\\n                                    :disabled=\\\"disabled\\\"\\n                                    :active=\\\"selectedBlock !== null && selectedBlock.id === block.id\\\"\\n                                />\\n                            </template>\\n                            {% endblock %}\\n                        </component>\\n                        {% endblock %}\\n                    </sw-cms-block>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_section_add_sidebar_block %}\\n                    <sw-cms-stage-add-block\\n                        v-if=\\\"isSystemDefaultLanguage && !disabled\\\"\\n                        :key=\\\"index + 1\\\"\\n                        v-droppable=\\\"{ dragGroup: 'cms-stage', data: getDropData(block.position + 1, 'sidebar') }\\\"\\n                        @stage-block-add=\\\"onAddSectionBlock\\\"\\n                    />\\n                    {% endblock %}\\n                </template>\\n            </template>\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_cms_section_content %}\\n        <div\\n            v-if=\\\"!isCollapsed || !isVisible\\\"\\n            class=\\\"sw-cms-section__content\\\"\\n            :class=\\\"sectionContentClasses\\\"\\n        >\\n            <template v-if=\\\"mainContentEmpty\\\">\\n                \\n                {% block sw_cms_section_content_block_empty %}\\n                <div\\n                    v-droppable=\\\"{ dragGroup: 'cms-stage', data: getDropData(blockCount, 'main') }\\\"\\n                    class=\\\"sw-cms-section__empty-stage\\\"\\n                    role=\\\"button\\\"\\n                    tabindex=\\\"0\\\"\\n                    @click=\\\"openBlockBar\\\"\\n                    @keydown.enter=\\\"openBlockBar\\\"\\n                >\\n\\n                    <sw-icon\\n                        name=\\\"regular-plus-circle\\\"\\n                        size=\\\"24\\\"\\n                    />\\n                    <p>{{ $tc('sw-cms.detail.label.addBlocks') }}</p>\\n                </div>\\n                {% endblock %}\\n            </template>\\n\\n            <template v-else>\\n\\n                \\n                {% block sw_cms_section_content_add_first_block %}\\n                <sw-cms-stage-add-block\\n                    v-if=\\\"isSystemDefaultLanguage && !disabled\\\"\\n                    :key=\\\"0\\\"\\n                    v-droppable=\\\"{ dragGroup: 'cms-stage', data: getDropData(0) }\\\"\\n                    @stage-block-add=\\\"onAddSectionBlock\\\"\\n                />\\n                {% endblock %}\\n\\n                <template\\n                    v-for=\\\"(block, index) in mainContentBlocks\\\"\\n                    {% if VUE3 %}\\n                    :key=\\\"block.id\\\"\\n                    {% endif %}\\n                >\\n                    \\n                    {% block sw_cms_section_content_block %}\\n                    <sw-cms-block\\n                        {% if VUE2 %}\\n                        :key=\\\"block.id\\\"\\n                        {% endif %}\\n                        class=\\\"sw-cms-stage-block\\\"\\n                        :block=\\\"block\\\"\\n                        :disabled=\\\"disabled\\\"\\n                        :active=\\\"selectedBlock !== null && selectedBlock.id === block.id\\\"\\n                        :has-errors=\\\"hasBlockErrors(block)\\\"\\n                        @block-overlay-click=\\\"onBlockSelection(block)\\\"\\n                    >\\n\\n                        \\n                        {% block sw_cms_section_content_block_component %}\\n                        <component :is=\\\"`sw-cms-block-${block.type}`\\\">\\n                            \\n                            {% block sw_cms_section_content_block_component_slot %}\\n                            <template\\n                                v-for=\\\"el in block.slots\\\"\\n                                {% if VUE3 %}\\n                                :key=\\\"el.id\\\"\\n                                {% endif %}\\n                                #[el.slot]\\n                            >\\n                                <sw-cms-slot\\n                                    {% if VUE2 %}\\n                                    :key=\\\"el.id\\\"\\n                                    {% endif %}\\n                                    :element=\\\"el\\\"\\n                                    :disabled=\\\"disabled\\\"\\n                                    :active=\\\"selectedBlock !== null && selectedBlock.id === block.id\\\"\\n                                />\\n                            </template>\\n                            {% endblock %}\\n                        </component>\\n                        {% endblock %}\\n                    </sw-cms-block>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_section_add_content_block %}\\n                    <sw-cms-stage-add-block\\n                        v-if=\\\"isSystemDefaultLanguage && !disabled\\\"\\n                        :key=\\\"index + 1\\\"\\n                        v-droppable=\\\"{ dragGroup: 'cms-stage', data: getDropData(block.position + 1) }\\\"\\n                        @stage-block-add=\\\"onAddSectionBlock\\\"\\n                    />\\n                    {% endblock %}\\n                </template>\\n            </template>\\n        </div>\\n        {% endblock %}\\n    </div>\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-cms-section.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"60c9a3aa\", content, true, {});"],"sourceRoot":""}