(this.webpackJsonpAdministration=this.webpackJsonpAdministration||[]).push([[403],{"+ZDw":function(n,e,t){},Yfux:function(n,e,t){"use strict";t.r(e);var a=t("CsSd"),i=t.n(a);t("l4x4");function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){i()(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var o=Shopware.Defaults,c=Shopware.Data.Criteria;e.default={template:'\n{% block sw_sales_channel_modal_grid %}\n<sw-grid\n    v-if="!isLoading"\n    class="sw-sales-channel-modal-grid"\n    :items="salesChannelTypes"\n    :selectable="false"\n    :header="false"\n    :table="true"\n>\n    <template\n        #columns="{ item }"\n    >\n        \n        {% block sw_sales_channel_grid_columns %}\n        \n        {% block sw_sales_channel_grid_columns_icon %}\n        <sw-grid-column\n            flex="85px"\n            data-index="icon"\n            class="sw-sales-channel-modal-grid__icon-column"\n            label="icon"\n        >\n            <span\n                class="sw-sales-channel-modal-grid__icon"\n                role="button"\n                tabindex="0"\n                @click="onOpenDetail(item.id)"\n                @keydown.enter="onOpenDetail(item.id)"\n            >\n                <sw-icon\n                    v-if="item.iconName"\n                    :name="item.iconName"\n                />\n            </span>\n        </sw-grid-column>\n        {% endblock %}\n\n        \n        {% block sw_sales_channel_grid_columns_content %}\n        <sw-grid-column\n            flex="minmax(150px, 1fr)"\n            data-index="content"\n            label="content"\n        >\n            <div class="sw-sales-channel-modal-grid__item-content">\n                <h3\n                    class="sw-sales-channel-modal-grid__item-name"\n                    role="button"\n                    tabindex="0"\n                    @click="onOpenDetail(item.id)"\n                    @keydown.enter="onOpenDetail(item.id)"\n                >{{ item.translated.name }}</h3>\n                <div\n                    class="sw-sales-channel-modal-grid__item-description"\n                    role="button"\n                    tabindex="0"\n                    @click="onOpenDetail(item.id)"\n                    @keydown.enter="onOpenDetail(item.id)"\n                >{{ item.translated.description }}</div>\n            </div>\n        </sw-grid-column>\n        {% endblock %}\n\n        \n        {% block sw_sales_channel_grid_columns_actions %}\n        <sw-grid-column\n            flex="auto"\n            align="center"\n            data-index="actions"\n            class="sw-sales-channel-modal-grid__actions"\n            label="actions"\n        >\n            <sw-button\n                v-tooltip="{\n                    message: $tc(\'sw-sales-channel.modal.messageNoProductStreams\'),\n                    showOnDisabledElements: true,\n                    disabled: !addChannelAction.disabled(item.id)\n                }"\n                class="sw-sales-channel-modal__add-channel-action"\n                size="small"\n                variant="primary"\n                :is-loading="addChannelAction.loading(item.id)"\n                :disabled="addChannelAction.disabled(item.id)"\n                @click="onAddChannel(item.id)"\n            >\n                {{ $tc(\'sw-sales-channel.modal.buttonAddChannel\') }}\n            </sw-button>\n        </sw-grid-column>\n        {% endblock %}\n        {% endblock %}\n    </template>\n</sw-grid>\n\n\n{% block sw_sales_channel_modal_grid_loader %}\n<sw-loader v-else />\n    {% endblock %}\n{% endblock %}\n',inject:["repositoryFactory"],props:{productStreamsExist:{type:Boolean,required:!1,default:!0},productStreamsLoading:{type:Boolean,required:!1,default:!1},addChannelAction:{type:Object,required:!0}},data:function(){return{salesChannelTypes:[],isLoading:!1,total:0}},computed:{salesChannelTypeRepository:function(){return this.repositoryFactory.create("sales_channel_type")}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var n=this;this.isLoading=!0;var e=l(l({},Shopware.Context.api),{},{languageId:Shopware.State.get("session").languageId});this.salesChannelTypeRepository.search(new c(1,500),e).then((function(e){n.total=e.total,n.salesChannelTypes=e,n.isLoading=!1}))},onAddChannel:function(n){this.$emit("grid-channel-add",n)},onOpenDetail:function(n){var e=this.salesChannelTypes.find((function(e){return e.id===n}));this.$emit("grid-detail-open",e)},isProductComparisonSalesChannelType:function(n){return n===o.productComparisonTypeId}}}},l4x4:function(n,e,t){var a=t("+ZDw");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[n.i,a,""]]),a.locals&&(n.exports=a.locals);(0,t("P8hj").default)("444e8491",a,!0,{})}}]);
//# sourceMappingURL=da597c272782b58576ab.js.map