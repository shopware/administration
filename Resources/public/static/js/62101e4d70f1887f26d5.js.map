{"version":3,"sources":["webpack:///./src/module/sw-order/component/sw-order-promotion-field/index.js","webpack:///./src/module/sw-order/component/sw-order-promotion-field/sw-order-promotion-field.html.twig","webpack:///./src/module/sw-order/component/sw-order-promotion-field/sw-order-promotion-field.scss"],"names":["Component","Shopware","ChangesetGenerator","Data","mapState","getComponentHelper","template","inject","mixins","props","isLoading","type","Boolean","required","default","data","promotionError","disabledAutoPromotions","computed","_objectSpread","orderLineItemRepository","this","repositoryFactory","create","hasLineItem","order","lineItems","filter","item","hasOwnProperty","length","currency","manualPromotions","referencedId","automaticPromotions","promotionCodeTags","get","map","payload","set","newValue","old","promotionCodeLength","latestTag","onSubmitCode","code","isInvalid","detail","$tc","hasAutomaticPromotions","changesetGenerator","hasOrderUnsavedChanges","generate","changes","watch","newState","oldState","toggleAutomaticPromotions","created","createdComponent","methods","deleteAutomaticPromotions","_this","Promise","resolve","syncDeleted","promotion","id","versionContext","then","forEach","createNotificationSuccess","message","label","catch","error","$emit","state","_this2","handleUnsavedOrderChangesResponse","$nextTick","orderService","versionId","response","handlePromotionResponse","_this3","addPromotionToOrder","_this4","Object","values","errors","value","level","createNotificationWarning","createNotificationError","onRemoveExistingCode","removedItem","_this5","lineItem","find","delete","getLineItemByPromotionCode","content","__esModule","module","i","locals","exports","add"],"mappings":"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","file":"static/js/62101e4d70f1887f26d5.js","sourcesContent":["import './sw-order-promotion-field.scss';\nimport template from './sw-order-promotion-field.html.twig';\n\n/**\n * @package checkout\n */\n\nconst { Component } = Shopware;\nconst { ChangesetGenerator } = Shopware.Data;\nconst { mapState } = Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'orderService',\n        'acl',\n    ],\n\n    mixins: [\n        'notification',\n    ],\n\n    props: {\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            promotionError: null,\n            disabledAutoPromotions: false,\n        };\n    },\n\n    computed: {\n        ...mapState('swOrderDetail', [\n            'order',\n            'versionContext',\n        ]),\n\n        orderLineItemRepository() {\n            return this.repositoryFactory.create('order_line_item');\n        },\n\n        hasLineItem() {\n            return this.order.lineItems.filter(item => item.hasOwnProperty('id')).length > 0;\n        },\n\n        currency() {\n            return this.order.currency;\n        },\n\n        manualPromotions() {\n            return this.order.lineItems.filter(item => item.type === 'promotion' && item.referencedId !== null);\n        },\n\n        automaticPromotions() {\n            return this.order.lineItems.filter(item => item.type === 'promotion' && item.referencedId === null);\n        },\n\n        promotionCodeTags: {\n            get() {\n                return this.manualPromotions.map(item => item.payload);\n            },\n\n            set(newValue) {\n                const old = this.manualPromotions;\n\n                this.promotionError = null;\n\n                if (newValue.length < old.length) {\n                    return;\n                }\n\n                const promotionCodeLength = old.length;\n                const latestTag = newValue[promotionCodeLength];\n\n                if (newValue.length > old.length) {\n                    this.onSubmitCode(latestTag.code);\n                }\n\n                if (promotionCodeLength > 0 && latestTag.isInvalid) {\n                    this.promotionError = { detail: this.$tc('sw-order.createBase.textInvalidPromotionCode') };\n                }\n            },\n        },\n\n        hasAutomaticPromotions() {\n            return this.automaticPromotions.length > 0;\n        },\n\n        changesetGenerator() {\n            return new ChangesetGenerator();\n        },\n\n        hasOrderUnsavedChanges() {\n            return this.changesetGenerator.generate(this.order).changes !== null;\n        },\n    },\n\n    watch: {\n        // Validate if switch can be toggled\n        disabledAutoPromotions(newState, oldState) {\n            // To prevent recursion when value is set in next tick\n            if (oldState === this.hasAutomaticPromotions) return;\n\n            this.toggleAutomaticPromotions(newState);\n        },\n\n        automaticPromotions() {\n            // Sync value with database\n            this.disabledAutoPromotions = !this.hasAutomaticPromotions;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.disabledAutoPromotions = !this.hasAutomaticPromotions;\n        },\n\n        deleteAutomaticPromotions() {\n            if (this.automaticPromotions.length === 0) {\n                return Promise.resolve();\n            }\n\n            return this.orderLineItemRepository\n                .syncDeleted(this.automaticPromotions.map(promotion => promotion.id), this.versionContext)\n                .then(() => {\n                    this.automaticPromotions.forEach((promotion) => {\n                        this.createNotificationSuccess({\n                            message: this.$tc('sw-order.detailBase.textPromotionRemoved', 0, {\n                                promotion: promotion.label,\n                            }),\n                        });\n                    });\n                }).catch((error) => {\n                    this.$emit('loading-change', false);\n                    this.$emit('error', error);\n                });\n        },\n\n        toggleAutomaticPromotions(state) {\n            this.$emit('loading-change', true);\n\n            // Throw notification warning and reset switch state\n            if (this.hasOrderUnsavedChanges) {\n                this.$emit('loading-change', false);\n                this.handleUnsavedOrderChangesResponse();\n                this.$nextTick(() => {\n                    this.disabledAutoPromotions = !state;\n                });\n                return;\n            }\n\n            this.deleteAutomaticPromotions().then(() => {\n                return this.orderService.toggleAutomaticPromotions(\n                    this.order.id,\n                    this.order.versionId,\n                    state,\n                );\n            }).then((response) => {\n                this.handlePromotionResponse(response);\n                this.$emit('reload-entity-data');\n            }).catch((error) => {\n                this.$emit('loading-change', false);\n                this.$emit('error', error);\n            });\n        },\n\n        onSubmitCode(code) {\n            this.$emit('loading-change', true);\n\n            if (this.hasOrderUnsavedChanges) {\n                this.$emit('loading-change', false);\n                this.handleUnsavedOrderChangesResponse();\n                return;\n            }\n\n            this.orderService.addPromotionToOrder(\n                this.order.id,\n                this.order.versionId,\n                code,\n            ).then((response) => {\n                this.handlePromotionResponse(response);\n                this.$emit('reload-entity-data');\n            }).catch((error) => {\n                this.$emit('loading-change', false);\n                this.$emit('error', error);\n            });\n        },\n\n        handlePromotionResponse(response) {\n            Object.values(response.data.errors).forEach((value) => {\n                switch (value.level) {\n                    case 0: {\n                        this.createNotificationSuccess({\n                            message: value.message,\n                        });\n                        break;\n                    }\n\n                    case 10: {\n                        this.createNotificationWarning({\n                            message: value.message,\n                        });\n                        break;\n                    }\n\n                    default: {\n                        this.createNotificationError({\n                            message: value.message,\n                        });\n                        break;\n                    }\n                }\n            });\n        },\n\n        handleUnsavedOrderChangesResponse() {\n            this.createNotificationWarning({\n                message: this.$tc('sw-order.detailBase.textUnsavedChanges', 0),\n            });\n        },\n\n        onRemoveExistingCode(removedItem) {\n            this.$emit('loading-change', true);\n\n            if (this.hasOrderUnsavedChanges) {\n                this.$emit('loading-change', false);\n                this.handleUnsavedOrderChangesResponse();\n                return;\n            }\n\n            const lineItem = this.order.lineItems.find((item) => {\n                return item.type === 'promotion' && item.payload.code === removedItem.code;\n            });\n\n            this.orderLineItemRepository\n                .delete(lineItem.id, this.versionContext)\n                .then(() => {\n                    this.$emit('reload-entity-data');\n                })\n                .catch((error) => {\n                    this.$emit('loading-change', false);\n                    this.$emit('error', error);\n                });\n        },\n\n        getLineItemByPromotionCode(code) {\n            return this.order.lineItems.find(item => {\n                return item.type === 'promotion' && item.payload.code === code;\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_order_promotion_field %}\\n<div class=\\\"sw-order-promotion-field\\\">\\n\\n    \\n    {% block sw_order_promotion_field_codes %}\\n    <sw-order-promotion-tag-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"promotionCodeTags\\\"\\n        {% else %}\\n        v-model=\\\"promotionCodeTags\\\"\\n        {% endif %}\\n        :disabled=\\\"!hasLineItem || isLoading || !acl.can('order_line_item.editor')\\\"\\n        :currency=\\\"currency\\\"\\n        :label=\\\"$tc('sw-order.detailsTab.promotionsField.labelPromotions')\\\"\\n        :placeholder=\\\"$tc('sw-order.detailsTab.promotionsField.placeholderPromotions')\\\"\\n        :error=\\\"promotionError\\\"\\n        @on-remove-code=\\\"onRemoveExistingCode\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_promotion_field_switch %}\\n    <sw-switch-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"disabledAutoPromotions\\\"\\n        {% else %}\\n        v-model=\\\"disabledAutoPromotions\\\"\\n        {% endif %}\\n        :disabled=\\\"isLoading || !acl.can('order_line_item.editor')\\\"\\n        :label=\\\"$tc('sw-order.detailsTab.promotionsField.labelToggleAutomaticPromotions')\\\"\\n    />\\n    {% endblock %}\\n\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-order-promotion-field.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"8e361e16\", content, true, {});"],"sourceRoot":""}