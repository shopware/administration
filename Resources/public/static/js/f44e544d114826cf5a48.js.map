{"version":3,"sources":["webpack:///./src/module/sw-category/view/sw-category-detail-base/index.js","webpack:///./src/module/sw-category/view/sw-category-detail-base/sw-category-detail-base.html.twig","webpack:///./src/module/sw-category/view/sw-category-detail-base/sw-category-detail-base.scss"],"names":["_Shopware$Component$g","Shopware","Component","getComponentHelper","mapState","mapPropertyErrors","template","inject","mixins","props","isLoading","type","Boolean","required","computed","_objectSpread","customFieldSetsArray","state","customFieldSets","categoryTypes","value","label","this","$tc","typeLinkLabel","disabled","isSalesChannelEntryPoint","categoryTypeHelpText","includes","category","concat","navigationSalesChannels","length","serviceSalesChannels","footerSalesChannels","State","get","content","__esModule","default","module","i","locals","exports","add"],"mappings":"wvBAGA,IAAAA,EAAwCC,SAASC,UAAUC,qBAAnDC,EAAQJ,EAARI,SAAUC,EAAiBL,EAAjBK,kBAMH,WACXC,SCVW,q1IDYXC,OAAQ,CACJ,oBACA,OAGJC,OAAQ,CACJ,eAGJC,MAAO,CACHC,UAAW,CACPC,KAAMC,QACNC,UAAU,IAIlBC,SAAQC,MAAA,GACDX,EAAS,mBAAoB,CAC5BY,qBAAsB,SAAAC,GAClB,OAAKA,EAAMC,gBAIJD,EAAMC,gBAHF,OAOhBb,EAAkB,WAAY,CAC7B,OACA,UACF,IAEFc,cAAa,WACT,MAAO,CACH,CACIC,MAAO,OACPC,MAAOC,KAAKC,IAAI,wCAEpB,CACIH,MAAO,SACPC,MAAOC,KAAKC,IAAI,0CAOpB,CACIH,MAAO,OACPC,MAAOC,KAAKE,cACZC,SAAUH,KAAKI,4BAK3BF,cAAa,WACT,OAAIF,KAAKI,yBACEJ,KAAKC,IAAI,kDAGbD,KAAKC,IAAI,wCAGpBI,qBAAoB,WAChB,MAAI,CAAC,OAAQ,SAAU,QAAQC,SAASN,KAAKO,SAASlB,MAC3CW,KAAKC,IAAI,2CAADO,OAA4CR,KAAKO,SAASlB,OAGtE,MAGXe,yBAAwB,WACpB,OAAOJ,KAAKO,SAASE,wBAAwBC,OAAS,GAC/CV,KAAKO,SAASI,qBAAqBD,OAAS,GAC5CV,KAAKO,SAASK,oBAAoBF,OAAS,GAGtDH,SAAQ,WACJ,OAAO5B,SAASkC,MAAMC,IAAI,oBAAoBP,c,qBEvF1D,IAAIQ,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM","file":"static/js/f44e544d114826cf5a48.js","sourcesContent":["import template from './sw-category-detail-base.html.twig';\nimport './sw-category-detail-base.scss';\n\nconst { mapState, mapPropertyErrors } = Shopware.Component.getComponentHelper();\n\n/**\n * @package content\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        'placeholder',\n    ],\n\n    props: {\n        isLoading: {\n            type: Boolean,\n            required: true,\n        },\n    },\n\n    computed: {\n        ...mapState('swCategoryDetail', {\n            customFieldSetsArray: state => {\n                if (!state.customFieldSets) {\n                    return [];\n                }\n\n                return state.customFieldSets;\n            },\n        }),\n\n        ...mapPropertyErrors('category', [\n            'name',\n            'type',\n        ]),\n\n        categoryTypes() {\n            return [\n                {\n                    value: 'page',\n                    label: this.$tc('sw-category.base.general.types.page'),\n                },\n                {\n                    value: 'folder',\n                    label: this.$tc('sw-category.base.general.types.folder'),\n                },\n                // @todo NEXT-22697 - Re-implement, when re-enabling cms-aware\n                // {\n                //     value: 'custom_entity',\n                //     label: this.$tc('sw-category.base.general.types.customEntity'),\n                // },\n                {\n                    value: 'link',\n                    label: this.typeLinkLabel,\n                    disabled: this.isSalesChannelEntryPoint,\n                },\n            ];\n        },\n\n        typeLinkLabel() {\n            if (this.isSalesChannelEntryPoint) {\n                return this.$tc('sw-category.base.general.types.linkUnavailable');\n            }\n\n            return this.$tc('sw-category.base.general.types.link');\n        },\n\n        categoryTypeHelpText() {\n            if (['page', 'folder', 'link'].includes(this.category.type)) {\n                return this.$tc(`sw-category.base.general.types.helpText.${this.category.type}`);\n            }\n\n            return null;\n        },\n\n        isSalesChannelEntryPoint() {\n            return this.category.navigationSalesChannels.length > 0\n                || this.category.serviceSalesChannels.length > 0\n                || this.category.footerSalesChannels.length > 0;\n        },\n\n        category() {\n            return Shopware.State.get('swCategoryDetail').category;\n        },\n    },\n};\n","export default \"\\n{% block sw_category_detail_base %}\\n<div class=\\\"sw-category-detail-base\\\">\\n    \\n    {% block sw_category_detail_information %}\\n    <sw-card\\n        position-identifier=\\\"sw-category-detail-base\\\"\\n        :title=\\\"$tc('sw-category.base.general.headlineInformationCard')\\\"\\n        :is-loading=\\\"isLoading\\\"\\n    >\\n        <sw-container\\n            columns=\\\"repeat(auto-fit, minmax(150px, 1fr))\\\"\\n            gap=\\\"0px 30px\\\"\\n        >\\n            \\n            {% block sw_category_detail_information_name %}\\n            <sw-text-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"category.name\\\"\\n                {% else %}\\n                v-model=\\\"category.name\\\"\\n                {% endif %}\\n                required\\n                name=\\\"categoryName\\\"\\n                validation=\\\"required\\\"\\n                :disabled=\\\"!acl.can('category.editor')\\\"\\n                :label=\\\"$tc('sw-category.base.general.categoryNameLabel')\\\"\\n                :placeholder=\\\"placeholder(category, 'name')\\\"\\n                :error=\\\"categoryNameError\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_category_detail_information_active %}\\n            <sw-switch-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"category.active\\\"\\n                {% else %}\\n                v-model=\\\"category.active\\\"\\n                {% endif %}\\n                :disabled=\\\"!acl.can('category.editor')\\\"\\n                name=\\\"categoryActive\\\"\\n                class=\\\"sw-category-detail-base__active\\\"\\n                :label=\\\"$tc('sw-category.base.general.isCategoryActiveLabel')\\\"\\n            />\\n            {% endblock %}\\n        </sw-container>\\n\\n        \\n        {% block sw_category_detail_information_tags %}\\n        <sw-entity-tag-select\\n            v-if=\\\"category && !isLoading\\\"\\n            {% if VUE3 %}\\n            v-model:entityCollection=\\\"category.tags\\\"\\n            {% else %}\\n            v-model=\\\"category.tags\\\"\\n            {% endif %}\\n            class=\\\"sw-category-detail-base__tags\\\"\\n            :label=\\\"$tc('sw-category.base.general.labelCategoryTags')\\\"\\n            :placeholder=\\\"$tc('sw-category.base.general.labelCategoryTagsPlaceholder')\\\"\\n            :disabled=\\\"!acl.can('category.editor')\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_category_detail_information_type %}\\n        <div class=\\\"sw-category-detail-base__type-container\\\">\\n\\n            \\n            {% block sw_category_detail_information_type_select %}\\n            <sw-single-select\\n                {% if VUE3 %}\\n                v-model:value=\\\"category.type\\\"\\n                {% else %}\\n                v-model=\\\"category.type\\\"\\n                {% endif %}\\n                class=\\\"sw-category-detail-base__type-selection\\\"\\n                :help-text=\\\"categoryTypeHelpText\\\"\\n                :label=\\\"$tc('sw-category.base.general.types.title')\\\"\\n                :disabled=\\\"!acl.can('category.editor')\\\"\\n                :error=\\\"categoryTypeError\\\"\\n                :options=\\\"categoryTypes\\\"\\n                show-clearable-button\\n            />\\n            {% endblock %}\\n\\n        </div>\\n        {% endblock %}\\n\\n    </sw-card>\\n    {% endblock %}\\n\\n    \\n    {% block sw_category_detail_entry_point %}\\n    <sw-category-entry-point-card\\n        v-if=\\\"(category.type === 'folder' || category.type === 'page') && !category.isColumn\\\"\\n        v-bind=\\\"{ category, isLoading }\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_category_detail_link %}\\n    <sw-category-link-settings\\n        v-if=\\\"category.type === 'link'\\\"\\n        v-bind=\\\"{ category, isLoading }\\\"\\n    />\\n    {% endblock %}\\n\\n    <template v-if=\\\"category.type !== 'link'\\\">\\n        \\n        {% block sw_category_detail_menu %}\\n        <sw-category-detail-menu v-bind=\\\"{ category, isLoading }\\\" />\\n        {% endblock %}\\n    </template>\\n\\n    \\n    {% block sw_category_detail_attribute_sets %}\\n    <sw-card\\n        v-if=\\\"customFieldSetsArray.length > 0 && category.type !=='folder'\\\"\\n        position-identifier=\\\"sw-category-detail-attribute-sets\\\"\\n        :title=\\\"$tc('sw-settings-custom-field.general.mainMenuItemGeneral')\\\"\\n        :is-loading=\\\"isLoading\\\"\\n    >\\n        <sw-custom-field-set-renderer\\n            :entity=\\\"category\\\"\\n            :sets=\\\"customFieldSetsArray\\\"\\n        />\\n    </sw-card>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-category-detail-base.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"468ceafe\", content, true, {});"],"sourceRoot":""}