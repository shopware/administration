{"version":3,"sources":["webpack:///./src/module/sw-cms/elements/youtube-video/config/sw-cms-el-config-youtube-video.scss","webpack:///./src/module/sw-cms/elements/youtube-video/config/index.js","webpack:///./src/module/sw-cms/elements/youtube-video/config/sw-cms-el-config-youtube-video.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","template","inject","mixins","getByName","data","mediaModalIsOpen","initialFolderId","computed","startValue","this","convertTimeToInputFormat","element","config","start","value","string","endValue","end","videoID","get","set","link","shortenLink","mediaRepository","repositoryFactory","create","uploadTag","concat","id","previewSource","previewMedia","created","createdComponent","methods","setTimeValue","type","convertTimeToUrlFormat","initElementConfig","time","returnValues","incomingTime","test","minutes","Math","floor","seconds","toString","length","splittedTime","split","Number","incomingLink","linkPostfix","replace","positionOfPostfix","exec","index","substring","linkPrefix","onImageUpload","_ref","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","targetId","mediaEntity","wrap","_context","prev","next","sent","updateElementData","$emit","stop","onImageRemove","onCloseModal","onSelectionChanges","media","arguments","undefined","$set","onOpenMediaModal"],"mappings":"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","file":"static/js/e9e6731b4e3496e20e09.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-cms-el-config-youtube-video.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"bc5ac3d6\", content, true, {});","import template from './sw-cms-el-config-youtube-video.html.twig';\nimport './sw-cms-el-config-youtube-video.scss';\n\nconst { Mixin } = Shopware;\n\n/**\n * @private\n * @package buyers-experience\n */\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('cms-element'),\n    ],\n\n    data() {\n        return {\n            mediaModalIsOpen: false,\n            initialFolderId: null,\n        };\n    },\n\n    computed: {\n        startValue() {\n            return this.convertTimeToInputFormat(this.element.config.start.value).string;\n        },\n\n        endValue() {\n            return this.convertTimeToInputFormat(this.element.config.end.value).string;\n        },\n\n        videoID: {\n            get() {\n                return this.element.config.videoID.value;\n            },\n\n            set(link) {\n                this.element.config.videoID.value = this.shortenLink(link);\n            },\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        uploadTag() {\n            return `cms-element-youtube-video-config-${this.element.id}`;\n        },\n\n        previewSource() {\n            if (this.element.data && this.element.data.previewMedia && this.element.data.previewMedia.id) {\n                return this.element.data.previewMedia;\n            }\n\n            return this.element.config.previewMedia.value;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        setTimeValue(value, type) {\n            this.element.config[type].value = this.convertTimeToUrlFormat(value).string;\n        },\n\n        createdComponent() {\n            this.initElementConfig('youtube-video');\n        },\n\n        convertTimeToInputFormat(time) {\n            /* converting the time to a human readable format.\n             * e.g. 1337 (seconds) -> 22:17\n             */\n\n            const returnValues = {};\n            let incomingTime = time;\n\n            const regex = /^[0-9]*$/;\n            const isValidFormat = regex.test(time);\n\n            if (!isValidFormat) {\n                incomingTime = 0;\n            }\n\n            const minutes = Math.floor(incomingTime / 60);\n            let seconds = incomingTime - minutes * 60;\n\n            returnValues.minutes = minutes;\n            returnValues.seconds = seconds;\n\n            if (seconds.toString().length === 1) {\n                seconds = `0${seconds}`;\n            }\n\n            returnValues.string = `${minutes}:${seconds}`;\n\n            return returnValues;\n        },\n\n        convertTimeToUrlFormat(time) {\n            /* converting the time to an url format so the YouTube iFrame-API can read the time.\n             * e.g. 0:42 -> 42 (seconds)\n             */\n\n            const returnValues = {};\n            let incomingTime = time;\n\n            const regex = /[0-9]?[0-9]:[0-9][0-9]/;\n            const isValidFormat = regex.test(incomingTime);\n\n            if (!isValidFormat) {\n                incomingTime = '00:00';\n            }\n\n            const splittedTime = incomingTime.split(':');\n            returnValues.minutes = Number(splittedTime[0]);\n            returnValues.seconds = Number(splittedTime[1]);\n            returnValues.string = returnValues.minutes * 60 + returnValues.seconds;\n\n            return returnValues;\n        },\n\n        shortenLink(link) {\n            let incomingLink = link;\n\n            /* shareLink is the link you get when you click the share button under a YouTube video.\n             *  e.g. https://youtu.be/bG57TZPYsyw\n             *\n             * urlLink is the link of the YouTube video from the searchbar. e.g. https://www.youtube.com/watch?v=bG57TZPYsyw\n             */\n\n            const shareLink = /https\\:\\/\\/youtu\\.be\\//;\n            const linkType = shareLink.test(incomingLink) ? 'shareLink' : 'urlLink';\n\n            if (linkType === 'shareLink') {\n                const linkPrefix = /https\\:\\/\\/youtu\\.be\\//;\n                const linkPostfix = /\\?/;\n\n                incomingLink = incomingLink.replace(linkPrefix, '');\n\n                if (linkPostfix.test(incomingLink)) {\n                    const positionOfPostfix = linkPostfix.exec(incomingLink).index;\n                    incomingLink = incomingLink.substring(0, positionOfPostfix);\n                }\n            } else {\n                const linkPrefix = /https\\:\\/\\/www\\.youtube\\.com\\/watch\\?v\\=/;\n                const linkPostfix = /\\&/;\n\n                if (linkPrefix.test(incomingLink)) {\n                    // removing the https://www...\n                    incomingLink = incomingLink.replace(linkPrefix, '');\n                }\n\n                if (linkPostfix.test(incomingLink)) {\n                    /* removing everthing that comes after the video id.\n                     * Example: bG57TZPYsyw&t=3s -> bG57TZPYsyw\n                     */\n\n                    const positionOfPostfix = linkPostfix.exec(incomingLink).index;\n                    incomingLink = incomingLink.substring(0, positionOfPostfix);\n                }\n            }\n\n            return incomingLink;\n        },\n\n        async onImageUpload({ targetId }) {\n            const mediaEntity = await this.mediaRepository.get(targetId);\n\n            this.element.config.previewMedia.value = mediaEntity.id;\n\n            this.updateElementData(mediaEntity);\n\n            this.$emit('element-update', this.element);\n        },\n\n        onImageRemove() {\n            this.element.config.previewMedia.value = null;\n\n            this.updateElementData();\n\n            this.$emit('element-update', this.element);\n        },\n\n        onCloseModal() {\n            this.mediaModalIsOpen = false;\n        },\n\n        onSelectionChanges(mediaEntity) {\n            const media = mediaEntity[0];\n            this.element.config.previewMedia.value = media.id;\n\n            this.updateElementData(media);\n\n            this.$emit('element-update', this.element);\n        },\n\n        updateElementData(media = null) {\n            this.$set(this.element.data, 'previewMediaId', media === null ? null : media.id);\n            this.$set(this.element.data, 'previewMedia', media);\n        },\n\n        onOpenMediaModal() {\n            this.mediaModalIsOpen = true;\n        },\n    },\n};\n","export default \"\\n{% block sw_cms_element_youtube_video_config %}\\n<div class=\\\"sw-cms-el-config-youtube-video\\\">\\n\\n    \\n    {% block sw_cms_element_youtube_video_config_video_id %}\\n    <sw-text-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"videoID\\\"\\n        {% else %}\\n        v-model=\\\"videoID\\\"\\n        {% endif %}\\n        class=\\\"sw-cms-el-config-youtube-video__video-id\\\"\\n        :label=\\\"$tc('sw-cms.elements.vimeoVideo.config.label.videoId')\\\"\\n        :placeholder=\\\"$tc('sw-cms.elements.vimeoVideo.config.placeholder.videoId')\\\"\\n    />\\n    {% endblock %}\\n\\n    <div class=\\\"sw-cms-el-config-youtube-video__switches\\\">\\n\\n        \\n        {% block sw_cms_element_youtube_video_config_autoplay %}\\n        <sw-switch-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"element.config.autoPlay.value\\\"\\n            {% else %}\\n            v-model=\\\"element.config.autoPlay.value\\\"\\n            {% endif %}\\n            :label=\\\"$tc('sw-cms.elements.vimeoVideo.config.label.autoPlay')\\\"\\n            :help-text=\\\"$tc('sw-cms.elements.vimeoVideo.config.helpText.autoPlay')\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_cms_element_youtube_video_config_loop %}\\n        <sw-switch-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"element.config.loop.value\\\"\\n            {% else %}\\n            v-model=\\\"element.config.loop.value\\\"\\n            {% endif %}\\n            :label=\\\"$tc('sw-cms.elements.vimeoVideo.config.label.loop')\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_cms_element_youtube_video_config_show_controls %}\\n        <sw-switch-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"element.config.showControls.value\\\"\\n            {% else %}\\n            v-model=\\\"element.config.showControls.value\\\"\\n            {% endif %}\\n            :label=\\\"$tc('sw-cms.elements.vimeoVideo.config.label.showControls')\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_cms_element_youtube_video_config_advanced_privacy_mode %}\\n        <sw-switch-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"element.config.advancedPrivacyMode.value\\\"\\n            {% else %}\\n            v-model=\\\"element.config.advancedPrivacyMode.value\\\"\\n            {% endif %}\\n            :label=\\\"$tc('sw-cms.elements.vimeoVideo.config.label.advancedPrivacy')\\\"\\n            :help-text=\\\"$tc('sw-cms.elements.vimeoVideo.config.helpText.advancedPrivacy')\\\"\\n        />\\n        {% endblock %}\\n    </div>\\n\\n    <div class=\\\"sw-cms-el-config-youtube-video__start-and-end\\\">\\n\\n        \\n        {% block sw_cms_element_youtube_video_config_start %}\\n        <sw-text-field\\n            :value=\\\"startValue\\\"\\n            :label=\\\"$tc('sw-cms.elements.vimeoVideo.config.label.start')\\\"\\n            placeholder=\\\"0:00\\\"\\n            @change=\\\"setTimeValue($event, 'start')\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_cms_element_youtube_video_config_end %}\\n        <sw-text-field\\n            :value=\\\"endValue\\\"\\n            :label=\\\"$tc('sw-cms.elements.vimeoVideo.config.label.end')\\\"\\n            placeholder=\\\"0:00\\\"\\n            @change=\\\"setTimeValue($event, 'end')\\\"\\n        />\\n        {% endblock %}\\n    </div>\\n\\n    \\n    {% block sw_cms_element_youtube_video_config_display_mode %}\\n    <sw-select-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"element.config.displayMode.value\\\"\\n        {% else %}\\n        v-model=\\\"element.config.displayMode.value\\\"\\n        {% endif %}\\n        :placeholder=\\\"$tc('sw-cms.elements.general.config.label.displayMode')\\\"\\n        :label=\\\"$tc('sw-cms.elements.general.config.label.displayMode')\\\"\\n    >\\n        <option value=\\\"standard\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.displayModeStandard') }}\\n        </option>\\n        <option value=\\\"streched\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.displayModeStretch') }}\\n        </option>\\n    </sw-select-field>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_element_youtube_video_config_needs_confirmation %}\\n    <div class=\\\"sw-cms-el-config-youtube-video__confirmation\\\">\\n        <sw-switch-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"element.config.needsConfirmation.value\\\"\\n            {% else %}\\n            v-model=\\\"element.config.needsConfirmation.value\\\"\\n            {% endif %}\\n            :label=\\\"$tc('sw-cms.elements.vimeoVideo.config.label.needsConfirmation')\\\"\\n        />\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_element_youtube_video_config_preview_media %}\\n    <sw-cms-mapping-field\\n        v-if=\\\"element.config.needsConfirmation.value\\\"\\n        {% if VUE3 %}\\n        v-model:config=\\\"element.config.previewMedia\\\"\\n        {% else %}\\n        v-model=\\\"element.config.previewMedia\\\"\\n        {% endif %}\\n        :label=\\\"$tc('sw-cms.elements.vimeoVideo.config.label.previewImage')\\\"\\n        value-types=\\\"entity\\\"\\n        entity=\\\"media\\\"\\n    >\\n        <sw-media-upload-v2\\n            variant=\\\"regular\\\"\\n            :upload-tag=\\\"uploadTag\\\"\\n            :source=\\\"previewSource\\\"\\n            :allow-multi-select=\\\"false\\\"\\n            :default-folder=\\\"cmsPageState.pageEntityName\\\"\\n            :caption=\\\"$tc('sw-cms.elements.general.config.caption.mediaUpload')\\\"\\n            @media-upload-sidebar-open=\\\"onOpenMediaModal\\\"\\n            @media-upload-remove-image=\\\"onImageRemove\\\"\\n        />\\n\\n        \\n        {% block sw_cms_element_youtube_video_config_preview_media_display %}\\n        <template #preview=\\\"{ demoValue }\\\">\\n            <div class=\\\"sw-cms-el-config-image__mapping-preview\\\">\\n                <img\\n                    v-if=\\\"demoValue.url\\\"\\n                    :src=\\\"demoValue.url\\\"\\n                    alt=\\\"\\\"\\n                >\\n                <sw-alert\\n                    v-else\\n                    class=\\\"sw-cms-el-config-image__preview-info\\\"\\n                    variant=\\\"info\\\"\\n                >\\n                    {{ $tc('sw-cms.detail.label.mappingEmptyPreview') }}\\n                </sw-alert>\\n            </div>\\n        </template>\\n        {% endblock %}\\n    </sw-cms-mapping-field>\\n\\n    \\n    {% block sw_cms_element_youtube_video_config_preview_media_upload_listener %}\\n    <sw-upload-listener\\n        :upload-tag=\\\"uploadTag\\\"\\n        auto-upload\\n        @media-upload-finish=\\\"onImageUpload\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_element_youtube_video_config_preview_media_modal %}\\n    <sw-media-modal-v2\\n        v-if=\\\"mediaModalIsOpen\\\"\\n        variant=\\\"regular\\\"\\n        :caption=\\\"$tc('sw-cms.elements.general.config.caption.mediaUpload')\\\"\\n        :entity-context=\\\"cmsPageState.entityName\\\"\\n        :allow-multi-select=\\\"false\\\"\\n        :initial-folder-id=\\\"cmsPageState.defaultMediaFolderId\\\"\\n        @media-upload-remove-image=\\\"onImageRemove\\\"\\n        @media-modal-selection-change=\\\"onSelectionChanges\\\"\\n        @modal-close=\\\"onCloseModal\\\"\\n    />\\n    {% endblock %}\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}