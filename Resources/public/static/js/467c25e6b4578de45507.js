(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[64542],{29082:function(){},64542:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return o}}),n(61220);let{Mixin:a}=Shopware,{Criteria:i}=Shopware.Data,{warn:s}=Shopware.Utils.debug,{mapPropertyErrors:l}=Shopware.Component.getComponentHelper();var o={template:'\n{% block sw_settings_payment_detail %}\n<sw-page class="sw-settings-payment-detail">\n\n    \n    {% block sw_settings_payment_detail_header %}\n    <template #smart-bar-header>\n        <h2>{{ placeholder(paymentMethod, \'name\', $tc(\'sw-settings-payment.detail.textHeadline\')) }}</h2>\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_payment_detail_actions %}\n    <template #smart-bar-actions>\n        \n        {% block sw_settings_payment_detail_actions_abort %}\n        <sw-button\n            v-tooltip.bottom="tooltipCancel"\n            :disabled="isLoading"\n            @click="onCancel"\n        >\n            {{ $tc(\'sw-settings-payment.detail.buttonCancel\') }}\n        </sw-button>\n        {% endblock %}\n\n        \n        {% block sw_settings_payment_detail_actions_save %}\n        <sw-button-process\n            v-tooltip.bottom="tooltipSave"\n            class="sw-payment-detail__save-action"\n            :is-loading="isLoading"\n            :process-success="isSaveSuccessful"\n            :disabled="isLoading || !acl.can(\'payment.editor\')"\n            variant="primary"\n            @update:process-success="saveFinish"\n            @click.prevent="onSave"\n        >\n            {{ $tc(\'sw-settings-payment.detail.buttonSave\') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_payment_detail_language_switch %}\n    <template #language-switch>\n        <sw-language-switch\n            :save-changes-function="saveOnLanguageChange"\n            :abort-change-function="abortOnLanguageChange"\n            @on-change="onChangeLanguage"\n        />\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_payment_detail_content %}\n    <template #content>\n        <sw-card-view>\n            <template v-if="isLoading">\n                <sw-skeleton />\n                <sw-skeleton />\n            </template>\n\n            <template v-else>\n                \n                {% block sw_product_stream_detail_content_language_info %}\n                <sw-language-info\n                    :entity-description="placeholder(paymentMethod, \'name\', $tc(\'sw-settings-payment.detail.textHeadline\'))"\n                />\n                {% endblock %}\n\n                \n                {% block sw_settings_payment_detail_content_card %}\n                <sw-card\n                    position-identifier="sw-settings-payment-detail-content"\n                    :title="$tc(\'sw-settings-payment.detail.titleCard\')"\n                    :is-loading="isLoading"\n                >\n                    <template v-if="!isLoading">\n                        \n                        {% block sw_settings_payment_detail_content_field_plugin %}\n                        <sw-plugin-box\n                            v-if="!!paymentMethod.pluginId"\n                            :plugin-id="paymentMethod.pluginId"\n                        />\n                        {% endblock %}\n\n                        <sw-container\n                            columns="3fr 3fr 1fr"\n                            gap="0px 30px"\n                        >\n                            \n                            {% block sw_settings_payment_detail_content_field_name %}\n                            <sw-text-field\n                                v-model:value="paymentMethod.name"\n                                name="sw-field--paymentMethod-name"\n                                class="sw-settings-payment-detail__field-name"\n                                required\n                                :disabled="!acl.can(\'payment.editor\')"\n                                :label="$tc(\'sw-settings-payment.detail.labelName\')"\n                                :placeholder="placeholder(paymentMethod, \'name\', $tc(\'sw-settings-payment.detail.placeholderName\'))"\n                                :error="paymentMethodNameError"\n                            />\n                            {% endblock %}\n\n                            \n                            {% block sw_settings_payment_detail_content_field_technical_name %}\n                            <sw-text-field\n                                v-model:value="paymentMethod.technicalName"\n                                name="sw-field--paymentMethod-technicalName"\n                                class="sw-settings-payment-detail__field-technical-name"\n                                :required="feature.isActive(\'v6.7.0.0\')"\n                                :disabled="!acl.can(\'payment.editor\')"\n                                :label="$tc(\'sw-settings-payment.detail.labelTechnicalName\')"\n                                :placeholder="placeholder(paymentMethod, \'technicalName\', $tc(\'sw-settings-payment.detail.placeholderTechnicalName\'))"\n                                :error="paymentMethodTechnicalNameError"\n                                :help-text="$tc(\'sw-settings-payment.detail.helpTextTechnicalName\')"\n                                :class="!paymentMethod.technicalName ? \'has--warning\' : \'\'"\n                            >\n                                {# @deprecated tag:v6.7.0 - Hint can be removed: with technical names now required, the hint is no longer needed. Also remove the snippet and dynamic class has--warning #}\n                                <template #hint>\n                                    <span v-if="!paymentMethod.technicalName">{{ $tc(\'sw-settings-payment.detail.hintTextTechnicalName\') }}</span>\n                                </template>\n                            </sw-text-field>\n                            {% endblock %}\n\n                            \n                            {% block sw_settings_payment_detail_content_field_position %}\n                            <sw-number-field\n                                v-model:value="paymentMethod.position"\n                                name="sw-field--paymentMethod-position"\n                                class="sw-settings-payment-detail__field-position"\n                                :disabled="!acl.can(\'payment.editor\')"\n                                :label="$tc(\'sw-settings-payment.detail.labelPosition\')"\n                                :placeholder="$tc(\'sw-settings-payment.detail.placeholderPosition\')"\n                            />\n                            {% endblock %}\n                        </sw-container>\n\n                        <sw-container\n                            columns="repeat(auto-fit, minmax(250px, 1fr))"\n                            gap="0px 30px"\n                        >\n                            \n                            {% block sw_settings_payment_detail_base_content_field_description %}\n                            <sw-textarea-field\n                                v-model:value="paymentMethod.description"\n                                name="sw-field--paymentMethod-description"\n                                :disabled="!acl.can(\'payment.editor\')"\n                                :value="paymentMethod.description"\n                                class="sw-settings-payment-detail__description"\n                                :label="$tc(\'sw-settings-payment.detail.labelDescription\')"\n                                :placeholder="placeholder(paymentMethod, \'description\', $tc(\'sw-settings-payment.detail.placeholderDescription\'))"\n                            />\n                            {% endblock %}\n\n                            \n                            {% block sw_settings_payment_detail_base_content_media_upload %}\n                            <sw-upload-listener\n                                :upload-tag="uploadTag"\n                                auto-upload\n                                @media-upload-finish="setMediaItem"\n                            />\n                            <sw-media-upload-v2\n                                :disabled="!acl.can(\'payment.editor\')"\n                                :upload-tag="uploadTag"\n                                :source="mediaItem"\n                                class="sw-settings-payment-detail__logo-image-upload"\n                                :allow-multi-select="false"\n                                variant="regular"\n                                :label="$tc(\'sw-settings-payment.detail.labelLogoUpload\')"\n                                :default-folder="paymentMethod.getEntityName()"\n                                @media-drop="onDropMedia"\n                                @media-upload-sidebar-open="openMediaSidebar"\n                                @media-upload-remove-image="onUnlinkLogo"\n                            />\n                            {% endblock %}\n                        </sw-container>\n\n                        <sw-container\n                            columns="repeat(auto-fit, minmax(250px, 2fr))"\n                            gap="0px 30px"\n                        >\n                            \n                            {% block sw_settings_payment_detail_content_field_active %}\n                            <sw-switch-field\n                                v-model:value="paymentMethod.active"\n                                name="sw-field--paymentMethod-active"\n                                class="sw-settings-payment-detail__field-active"\n                                :disabled="!acl.can(\'payment.editor\')"\n                                :label="$tc(\'sw-settings-payment.detail.labelActive\')"\n                            />\n                            {% endblock %}\n\n                            \n                            {% block sw_settings_payment_detail_content_field_after_order_enabled %}\n                            <sw-switch-field\n                                v-model:value="paymentMethod.afterOrderEnabled"\n                                name="sw-field--paymentMethod-afterOrderEnabled"\n                                class="sw-settings-payment-detail__field-after-order"\n                                :disabled="!acl.can(\'payment.editor\')"\n                                :label="$tc(\'sw-settings-payment.detail.labelAfterOrderEnabled\')"\n                            />\n                            {% endblock %}\n                        </sw-container>\n                    </template>\n                </sw-card>\n                {% endblock %}\n\n                \n                {% block sw_settings_payment_detail_top_rule %}\n                <sw-card\n                    class="sw-settings-payment-detail__condition_container"\n                    position-identifier="sw-settings-payment-detail-condition-container"\n                    :title="$tc(\'sw-settings-payment.detail.topRule\')"\n                    :is-loading="isLoading"\n                >\n                    \n                    {% block sw_settings_payment_detail_top_rule_select %}\n                    <sw-select-rule-create\n                        v-if="!isLoading"\n                        class="sw-settings-payment-detail__field-availability-rule"\n                        :disabled="!acl.can(\'payment.editor\')"\n                        :rule-id="paymentMethod.availabilityRuleId"\n                        :rule-filter="ruleFilter"\n                        :placeholder="$tc(\'sw-settings-payment.detail.placeholderAvailabilityRule\')"\n                        rule-aware-group-key="paymentMethods"\n                        @save-rule="onSaveRule"\n                        @dismiss-rule="onDismissRule"\n                    />\n                    {% endblock %}\n                </sw-card>\n                {% endblock %}\n\n                \n                {% block sw_settings_payment_detail_custom_field_sets %}\n                <sw-card\n                    v-if="showCustomFields"\n                    position-identifier="sw-settings-payment-detail-custom-field-sets"\n                    :title="$tc(\'sw-settings-custom-field.general.mainMenuItemGeneral\')"\n                    :is-loading="isLoading"\n                >\n                    <sw-custom-field-set-renderer\n                        :entity="paymentMethod"\n                        :disabled="!acl.can(\'payment.editor\')"\n                        :sets="customFieldSets"\n                    />\n                </sw-card>\n                {% endblock %}\n\n                \n                {% block sw_settings_payment_detail_delete_payment_method %}\n                <sw-card\n                    v-if="!isNewPaymentMethod && acl.can(\'payment.deleter\')"\n                    position-identifier="sw-settings-payment-detail-delete"\n                    class="sw-settings-payment-detail-delete"\n                    :title="$tc(\'sw-settings-payment.detail.delete.textHeadline\')"\n                    :is-loading="isLoading"\n                >\n                    <sw-alert\n                        v-if="forbidDelete"\n                        variant="info">\n                        {{ $tc(\'sw-settings-payment.detail.delete.textAlert\') }}\n                    </sw-alert>\n\n                    <div class="sw-settings-payment-detail-delete__container">\n                        <sw-button\n                            variant="ghost-danger"\n                            :disabled="forbidDelete || !acl.can(\'payment.deleter\')"\n                            @click="showDeleteModal = true"\n                        >\n                            {{ $tc(\'sw-settings-payment.detail.delete.textButton\') }}\n                        </sw-button>\n                    </div>\n                </sw-card>\n                {% endblock %}\n\n                {% block sw_settings_payment_detail_delete_modal %}\n                <sw-modal\n                    v-if="showDeleteModal && acl.can(\'payment.deleter\')"\n                    :title="$tc(\'global.default.warning\')"\n                    variant="default"\n                    @modal-close="showDeleteModal = false">\n\n                    {% block sw_settings_payment_detail_delete_modal_info %}\n                    <div class="sw_theme_manager__confirm-delete-text">\n                        <p class="text-secondary">\n                            {{ $tc(\'sw-settings-payment.detail.delete.modal.textConfirmation\') }}\n                        </p>\n                    </div>\n                    {% endblock %}\n\n                    {% block sw_settings_payment_detail_delete_modal_footer %}\n                    <template #modal-footer>\n                        {% block sw_settings_payment_detail_reset_modal_cancel %}\n                        <sw-button\n                            size="small"\n                            @click="showDeleteModal = false">\n                            {{ $tc(\'sw-settings-payment.detail.delete.modal.buttonCancel\') }}\n                        </sw-button>\n                        {% endblock %}\n\n                        {% block sw_settings_payment_detail_reset_modal_confirm %}\n                        <sw-button\n                            :disabled="deletionInProcess"\n                            variant="danger"\n                            size="small"\n                            @click="deletePaymentMethod">\n                            {{ $tc(\'sw-settings-payment.detail.delete.modal.buttonDelete\') }}\n                        </sw-button>\n                        {% endblock %}\n                    </template>\n                    {% endblock %}\n                </sw-modal>\n                {% endblock %}\n            </template>\n        </sw-card-view>\n    </template>\n    {% endblock %}\n\n    <template #sidebar>\n        <sw-sidebar :propagate-width="true">\n            <sw-sidebar-media-item ref="mediaSidebarItem">\n                <template\n                    #context-menu-items="media"\n                >\n                    <sw-context-menu-item @click="setMediaFromSidebar(media.mediaItem)">\n                        {{ $tc(\'sw-settings-payment.detail.sidebar.labelUseAsLogo\') }}\n                    </sw-context-menu-item>\n                </template>\n            </sw-sidebar-media-item>\n        </sw-sidebar>\n    </template>\n\n</sw-page>\n{% endblock %}\n',inject:["repositoryFactory","acl","customFieldDataProviderService","feature"],mixins:[a.getByName("notification"),a.getByName("placeholder")],shortcuts:{"SYSTEMKEY+S":{active(){return this.acl.can("payment.editor")},method:"onSave"},ESCAPE:"onCancel"},data(){return{paymentMethod:null,mediaItem:null,uploadTag:"sw-payment-method-upload-tag",isLoading:!1,isSaveSuccessful:!1,customFieldSets:null,showDeleteModal:!1,deletionInProcess:!1}},metaInfo(){return{title:this.$createTitle(this.identifier)}},computed:{isNewPaymentMethod(){return this.paymentMethod._isNew},identifier(){return this.placeholder(this.paymentMethod,"name")},paymentMethodRepository(){return this.repositoryFactory.create("payment_method")},ruleRepository(){return this.repositoryFactory.create("rule")},mediaRepository(){return this.repositoryFactory.create("media")},tooltipSave(){if(!this.acl.can("payment.editor"))return{message:this.$tc("sw-privileges.tooltip.warning"),disabled:this.acl.can("payment.editor"),showOnDisabledElements:!0};let e=this.$device.getSystemKey();return{message:`${e} + S`,appearance:"light"}},tooltipCancel(){return{message:"ESC",appearance:"light"}},ruleFilter(){let e=new i(1,25);return e.addFilter(i.multi("OR",[i.contains("rule.moduleTypes.types","payment"),i.equals("rule.moduleTypes",null)])),e.addAssociation("conditions").addSorting(i.sort("name","ASC",!1)),e},showCustomFields(){return this.paymentMethod&&this.customFieldSets&&this.customFieldSets.length>0},paymentMethodCriteria(){let e=new i;return e.setIds([this.paymentMethodId]),this.acl.can("payment.deleter")&&(e.getAssociation("customers").setLimit(1),e.getAssociation("salesChannels").setLimit(1),e.getAssociation("salesChannelDefaultAssignments").setLimit(1),e.getAssociation("orderTransactions").setLimit(1)),e},forbidDelete(){return this.paymentMethod.orderTransactions?.length!==0||this.paymentMethod.salesChannels?.length!==0||this.paymentMethod.customers?.length!==0||this.paymentMethod.salesChannelDefaultAssignments?.length!==0},...l("paymentMethod",["name","technicalName"])},watch:{"paymentMethod.mediaId"(){this.paymentMethod.mediaId&&this.setMediaItem({targetId:this.paymentMethod.mediaId})}},created(){this.createdComponent()},methods:{createdComponent(){this.paymentMethodId=this.$route.params.id,this.loadEntityData(),this.loadCustomFieldSets()},onSaveRule(e){this.paymentMethod.availabilityRuleId=e},onDismissRule(){this.paymentMethod.availabilityRuleId=null},abortOnLanguageChange(){return this.paymentMethodRepository.hasChanges(this.paymentMethod)},saveOnLanguageChange(){return this.onSave()},onChangeLanguage(){this.loadEntityData()},loadEntityData(){this.isLoading=!0,this.paymentMethodRepository.search(this.paymentMethodCriteria).then(e=>e.first()).then(e=>{this.paymentMethod=e,e?.mediaId&&this.setMediaItem({targetId:e.mediaId})}).finally(()=>{this.isLoading=!1})},loadCustomFieldSets(){this.customFieldDataProviderService.getCustomFieldSets("payment_method").then(e=>{this.customFieldSets=e})},saveFinish(){this.isSaveSuccessful=!1},onSave(){return this.isSaveSuccessful=!1,this.isLoading=!0,this.paymentMethodRepository.save(this.paymentMethod).then(()=>{this.isSaveSuccessful=!0,this.$refs.mediaSidebarItem.getList(),this.loadEntityData()}).catch(e=>{throw this.onError(e),s(this._name,e.message,e.response),e}).finally(()=>{this.isLoading=!1})},onError(e){let t=null;try{t=e.response.data.errors[0].detail}catch(e){t=""}this.createNotificationError({title:this.$tc("global.default.error"),message:`${this.$tc("sw-settings-payment.detail.messageSaveError",0,{name:this.paymentMethod.name})} ${t}`})},onCancel(){this.$router.push({name:"sw.settings.payment.overview"})},setMediaItem({targetId:e}){this.mediaRepository.get(e).then(t=>{this.mediaItem=t,this.paymentMethod.mediaId=e})},setMediaFromSidebar(e){this.mediaItem=e,this.paymentMethod.mediaId=e.id},onUnlinkLogo(){this.mediaItem=null,this.paymentMethod.mediaId=null},onDropMedia(e){this.setMediaItem({targetId:e.id})},openMediaSidebar(){this.$refs.mediaSidebarItem.openContent()},async deletePaymentMethod(){this.acl.can("payment.deleter")&&(this.deletionInProcess=!0,await this.paymentMethodRepository.delete(this.paymentMethod.id),await this.$router.replace({name:"sw.settings.payment.overview"}))}}}},61220:function(e,t,n){var a=n(29082);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),n(45346).Z("348c5f6a",a,!0,{})}}]);