{"version":3,"sources":["webpack:///./src/module/sw-order/page/sw-order-detail/sw-order-detail.scss","webpack:///./src/module/sw-order/state/order-detail.store.js","webpack:///./src/module/sw-order/page/sw-order-detail/index.js","webpack:///./src/module/sw-order/page/sw-order-detail/sw-order-detail.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","namespaced","state","order","loading","states","editing","savedSuccessful","versionContext","orderAddressIds","getters","isLoading","Object","values","some","loadState","isEditing","mutations","setOrder","newOrder","setLoading","value","name","data","undefined","setEditing","setSavedSuccessful","setVersionContext","setOrderAddressIds","orderAddressId","customerAddressId","ids","forEach","push","_Shopware","Shopware","State","Mixin","Criteria","Data","mapState","Component","getComponentHelper","ApiService","Classes","template","inject","mixins","getByName","props","orderId","type","String","required","identifier","isSaveSuccessful","createdById","isDisplayingLeavePageWarning","nextRoute","hasNewVersionId","hasOrderDeepEdit","metaInfo","title","this","$createTitle","computed","_objectSpread","orderIdentifier","orderNumber","orderChanges","orderRepository","hasChanges","showTabs","$route","meta","$module","routes","detail","children","length","showWarningTabStyle","isOrderEditing","_this$orderAddressIds","repositoryFactory","create","orderCriteria","criteria","addAssociation","getAssociation","addFilter","equals","addSorting","sort","naturalSorting","watch","createdComponent","updateEditing","beforeCreate","registerModule","swOrderDetailState","beforeDestroy","beforeDestroyComponent","unregisterModule","beforeRouteLeave","to","from","next","created","methods","ExtensionAPI","publishData","id","path","scope","window","addEventListener","commit","Context","api","createNewVersionId","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","deleteVersion","versionId","stop","updateIdentifier","updateCreatedById","onChangeLanguage","$root","$emit","saveEditsFinish","onStartEditing","onSaveEdits","_this2","_callee2","_this2$orderAddressId","_context2","Promise","all","_toConsumableArray","filter","map","changeOrderAddress","then","catch","error","createNotificationError","message","save","mergeVersion","onError","finally","onCancelEditing","_this3","oldVersionContext","missingProductLineItems","convertedProductLineItems","onSaveAndRecalculate","_this4","orderService","recalculateOrder","reloadEntityData","resolve","onRecalculateAndReload","_this5","onSaveAndReload","_this6","onUpdateLoading","loadingValue","onUpdateEditing","editingValue","errorDetails","response","errors","e","$tc","onLeaveModalClose","onLeaveModalConfirm","_this7","$nextTick","_this8","get","reject","_this9","createVersion","newContext","getVersionHeader"],"mappings":"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","file":"static/js/c791355ce3c5890e0dc5.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-order-detail.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"56a3747c\", content, true, {});","/**\n * @package checkout\n */\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    namespaced: true,\n\n    state() {\n        return {\n            order: null,\n            loading: {\n                order: false,\n                states: false,\n            },\n            editing: false,\n            savedSuccessful: false,\n            versionContext: null,\n            orderAddressIds: [],\n        };\n    },\n\n    getters: {\n        isLoading: (state) => {\n            return Object.values(state.loading).some((loadState) => loadState);\n        },\n\n        isEditing: (state) => {\n            return state.editing;\n        },\n    },\n\n    mutations: {\n        setOrder(state, newOrder) {\n            state.order = newOrder;\n        },\n\n        setLoading(state, value) {\n            const name = value[0];\n            const data = value[1];\n\n            if (typeof data !== 'boolean') {\n                return;\n            }\n\n            if (state.loading[name] !== undefined) {\n                state.loading[name] = data;\n            }\n        },\n\n        setEditing(state, value) {\n            state.editing = value;\n        },\n\n        setSavedSuccessful(state, value) {\n            state.savedSuccessful = value;\n        },\n\n        setVersionContext(state, versionContext) {\n            state.versionContext = versionContext;\n        },\n\n        setOrderAddressIds(state, value) {\n            if (!value) {\n                state.orderAddressIds = [];\n                return;\n            }\n\n            const { orderAddressId, customerAddressId } = value;\n\n            if (!state.orderAddressIds.some(ids => ids.orderAddressId === orderAddressId)) {\n                state.orderAddressIds.push(value);\n                return;\n            }\n\n            state.orderAddressIds.forEach(ids => {\n                if (ids.orderAddressId !== orderAddressId) {\n                    return;\n                }\n\n                ids.customerAddressId = customerAddressId;\n            });\n        },\n    },\n};\n","import template from './sw-order-detail.html.twig';\nimport './sw-order-detail.scss';\nimport swOrderDetailState from '../../state/order-detail.store';\n\n/**\n * @package checkout\n */\n\nconst { State, Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { mapState } = Shopware.Component.getComponentHelper();\nconst ApiService = Shopware.Classes.ApiService;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'orderService',\n        'feature',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        orderId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            identifier: '',\n            isEditing: false,\n            isLoading: true,\n            isSaveSuccessful: false,\n            createdById: '',\n            isDisplayingLeavePageWarning: false,\n            nextRoute: null,\n            hasNewVersionId: false,\n            hasOrderDeepEdit: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        ...mapState('swOrderDetail', [\n            'order',\n            'versionContext',\n            'orderAddressIds',\n            'editing',\n        ]),\n\n        orderIdentifier() {\n            return this.order !== null ? this.order.orderNumber : '';\n        },\n\n        orderChanges() {\n            if (!this.order) {\n                return false;\n            }\n\n            return this.orderRepository.hasChanges(this.order);\n        },\n\n        showTabs() {\n            return this.$route.meta.$module.routes.detail.children.length > 1;\n        },\n\n        showWarningTabStyle() {\n            return this.isOrderEditing && this.$route.name === 'sw.order.detail.documents';\n        },\n\n        isOrderEditing() {\n            return this.orderChanges || this.hasOrderDeepEdit || this.orderAddressIds?.length > 0;\n        },\n\n        orderRepository() {\n            return this.repositoryFactory.create('order');\n        },\n\n        orderCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria\n                .addAssociation('currency')\n                .addAssociation('orderCustomer.salutation')\n                .addAssociation('language');\n\n            criteria\n                .getAssociation('lineItems')\n                .addFilter(Criteria.equals('parentId', null))\n                .addSorting(Criteria.sort('position', 'ASC'));\n\n            criteria\n                .getAssociation('lineItems.children')\n                .addSorting(Criteria.naturalSorting('label'));\n\n            criteria\n                .addAssociation('salesChannel');\n\n            criteria\n                .addAssociation('addresses.country')\n                .addAssociation('addresses.countryState')\n                .addAssociation('deliveries.shippingMethod')\n                .addAssociation('deliveries.shippingOrderAddress')\n                .addAssociation('transactions.paymentMethod')\n                .addAssociation('documents.documentType')\n                .addAssociation('tags');\n\n            criteria.addAssociation('stateMachineState');\n\n            criteria\n                .getAssociation('deliveries')\n                .addAssociation('stateMachineState')\n                .addSorting(Criteria.sort('shippingCosts.unitPrice', 'DESC'));\n\n            criteria.getAssociation('transactions')\n                .addAssociation('stateMachineState')\n                .addSorting(Criteria.sort('createdAt'));\n\n            criteria.addAssociation('billingAddress');\n\n            return criteria;\n        },\n    },\n\n    watch: {\n        orderId() {\n            this.createdComponent();\n        },\n\n        isOrderEditing(value) {\n            this.updateEditing(value);\n        },\n    },\n\n    beforeCreate() {\n        State.registerModule('swOrderDetail', swOrderDetailState);\n    },\n\n    beforeDestroy() {\n        this.beforeDestroyComponent();\n\n        State.unregisterModule('swOrderDetail');\n    },\n\n    beforeRouteLeave(to, from, next) {\n        if (this.isOrderEditing) {\n            this.nextRoute = next;\n            this.isDisplayingLeavePageWarning = true;\n        } else {\n            next();\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-order-detail-base__order',\n                path: 'order',\n                scope: this,\n            });\n\n            window.addEventListener('beforeunload', this.beforeDestroyComponent);\n\n            Shopware.State.commit(\n                'shopwareApps/setSelectedIds',\n                this.orderId ? [this.orderId] : [],\n            );\n\n            State.commit('swOrderDetail/setVersionContext', Shopware.Context.api);\n            this.createNewVersionId();\n        },\n\n        async beforeDestroyComponent() {\n            if (this.hasNewVersionId) {\n                State.commit('swOrderDetail/setVersionContext', Shopware.Context.api);\n\n                // clean up recently created version\n                await this.orderRepository.deleteVersion(\n                    this.orderId,\n                    this.versionContext.versionId,\n                    this.versionContext,\n                );\n            }\n        },\n\n        updateIdentifier(identifier) {\n            this.identifier = identifier;\n        },\n\n        updateCreatedById(createdById) {\n            this.createdById = createdById;\n        },\n\n        onChangeLanguage() {\n            this.$root.$emit('language-change');\n        },\n\n        saveEditsFinish() {\n            this.isSaveSuccessful = false;\n            this.isEditing = false;\n        },\n\n        onStartEditing() {\n            this.$root.$emit('order-edit-start');\n        },\n\n        async onSaveEdits() {\n            this.isLoading = true;\n\n            // change new order address\n            if (this.orderAddressIds?.length) {\n                await Promise.all([\n                    ...this.orderAddressIds\n                        .filter(ids => ids.orderAddressId !== ids.customerAddressId)\n                        .map(ids => this.changeOrderAddress(ids)),\n                ]).then(() => {\n                    State.commit('swOrderDetail/setOrderAddressIds', false);\n                }).catch((error) => {\n                    this.createNotificationError({\n                        message: error,\n                    });\n                });\n            }\n\n            this.orderRepository.save(this.order, this.versionContext)\n                .then(() => {\n                    this.hasOrderDeepEdit = false;\n                    return this.orderRepository.mergeVersion(this.versionContext.versionId, this.versionContext);\n                }).catch((error) => {\n                    this.onError('error', error);\n                }).finally(() => {\n                    State.commit('swOrderDetail/setVersionContext', Shopware.Context.api);\n\n                    return this.createNewVersionId().then(() => {\n                        State.commit('swOrderDetail/setLoading', ['order', false]);\n                        State.commit('swOrderDetail/setSavedSuccessful', true);\n                        this.isLoading = false;\n                    });\n                });\n\n            this.$root.$emit('order-edit-save');\n        },\n\n        onCancelEditing() {\n            this.isLoading = true;\n            State.commit('swOrderDetail/setLoading', ['order', true]);\n\n            const oldVersionContext = this.versionContext;\n            State.commit('swOrderDetail/setVersionContext', Shopware.Context.api);\n            this.hasNewVersionId = false;\n\n            return this.orderRepository.deleteVersion(\n                this.orderId,\n                oldVersionContext.versionId,\n                oldVersionContext,\n            ).then(() => {\n                this.hasOrderDeepEdit = false;\n                State.commit('swOrderDetail/setOrderAddressIds', false);\n            }).catch((error) => {\n                this.onError('error', error);\n            }).finally(() => {\n                this.missingProductLineItems = [];\n                this.convertedProductLineItems = [];\n\n                return this.createNewVersionId().then(() => {\n                    State.commit('swOrderDetail/setLoading', ['order', false]);\n                });\n            });\n        },\n\n        onSaveAndRecalculate() {\n            State.commit('swOrderDetail/setLoading', ['order', true]);\n\n            return this.orderRepository.save(this.order, this.versionContext).then(() => {\n                return this.orderService.recalculateOrder(this.orderId, this.versionContext.versionId, {}, {});\n            }).then(() => {\n                return this.reloadEntityData();\n            }).catch((error) => {\n                this.onError('error', error);\n            })\n                .finally(() => {\n                    Shopware.State.commit('swOrderDetail/setLoading', ['order', false]);\n\n                    return Promise.resolve();\n                });\n        },\n\n        onRecalculateAndReload() {\n            State.commit('swOrderDetail/setLoading', ['order', true]);\n\n            return this.orderService.recalculateOrder(this.orderId, this.versionContext.versionId, {}, {}).then(() => {\n                return this.reloadEntityData();\n            }).catch((error) => {\n                this.onError('error', error);\n            }).finally(() => {\n                Shopware.State.commit('swOrderDetail/setLoading', ['order', false]);\n\n                return Promise.resolve();\n            });\n        },\n\n        onSaveAndReload() {\n            State.commit('swOrderDetail/setLoading', ['order', true]);\n\n            return this.orderRepository.save(this.order, this.versionContext).then(() => {\n                return this.reloadEntityData();\n            }).catch((error) => {\n                this.onError('error', error);\n            }).finally(() => {\n                Shopware.State.commit('swOrderDetail/setLoading', ['order', false]);\n\n                return Promise.resolve();\n            });\n        },\n\n        onUpdateLoading(loadingValue) {\n            this.isLoading = loadingValue;\n        },\n\n        onUpdateEditing(editingValue) {\n            this.isEditing = editingValue;\n        },\n\n        onError(error) {\n            let errorDetails = null;\n\n            try {\n                errorDetails = error.response.data.errors[0].detail;\n            } catch (e) {\n                errorDetails = '';\n            }\n\n            this.createNotificationError({\n                message: this.$tc('sw-order.detail.messageRecalculationError') + errorDetails,\n            });\n        },\n\n        onLeaveModalClose() {\n            this.nextRoute(false);\n            this.nextRoute = null;\n            this.isDisplayingLeavePageWarning = false;\n        },\n\n        onLeaveModalConfirm() {\n            this.isDisplayingLeavePageWarning = false;\n\n            this.$nextTick(() => {\n                this.nextRoute();\n            });\n        },\n\n        reloadEntityData() {\n            State.commit('swOrderDetail/setLoading', ['order', true]);\n\n            return this.orderRepository.get(this.orderId, this.versionContext, this.orderCriteria).then((response) => {\n                if (this.$route.name !== 'sw.order.detail.documents') {\n                    this.hasOrderDeepEdit = true;\n                }\n\n                State.commit('swOrderDetail/setOrder', response);\n                State.commit('swOrderDetail/setLoading', ['order', false]);\n                this.isLoading = false;\n\n                return Promise.resolve();\n            }).catch(() => {\n                Shopware.State.commit('swOrderDetail/setLoading', ['order', false]);\n\n                return Promise.reject();\n            });\n        },\n\n        createNewVersionId() {\n            return this.orderRepository.createVersion(this.orderId, this.versionContext).then((newContext) => {\n                this.hasNewVersionId = true;\n\n                State.commit('swOrderDetail/setVersionContext', newContext);\n\n                this.orderRepository.get(this.orderId, newContext, this.orderCriteria).then((response) => {\n                    State.commit('swOrderDetail/setOrder', response);\n                    State.commit('swOrderDetail/setLoading', ['order', false]);\n                    this.isLoading = false;\n\n                    return Promise.resolve();\n                }).catch(() => {\n                    Shopware.State.commit('swOrderDetail/setLoading', ['order', false]);\n\n                    return Promise.reject();\n                });\n            });\n        },\n\n        changeOrderAddress(ids) {\n            const { orderAddressId, customerAddressId } = ids;\n\n            return this.orderService.changeOrderAddress(\n                orderAddressId,\n                customerAddressId,\n                {},\n                ApiService.getVersionHeader(this.order.versionId),\n            );\n        },\n\n        updateEditing(value) {\n            State.commit('swOrderDetail/setEditing', value);\n        },\n    },\n};\n","export default \"\\n{% block sw_order_detail %}\\n<sw-page\\n    v-if=\\\"orderId\\\"\\n    class=\\\"sw-order-detail\\\"\\n>\\n    \\n    {% block sw_order_detail_header %}\\n    <template #smart-bar-header>\\n\\n        \\n        {% block sw_order_detail_header_title %}\\n        <h2 v-if=\\\"orderIdentifier\\\">\\n            {{ $tc('sw-order.detail.textHeadline') }} {{ orderIdentifier }}\\n\\n            \\n            {% block sw_order_detail_header_label_manual_order %}\\n            <sw-label\\n                v-if=\\\"createdById\\\"\\n                appearance=\\\"pill\\\"\\n                size=\\\"small\\\"\\n                class=\\\"sw-order-detail__manual-order-label\\\"\\n            >\\n                {{ $tc('sw-order.detail.labelManualOrder') }}\\n            </sw-label>\\n            {% endblock %}\\n        </h2>\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_detail_header_title_new %}\\n        <h2 v-else>\\n            {{ $tc('sw-order.detail.textHeadlineNew') }}\\n        </h2>\\n        {% endblock %}\\n\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_detail_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch\\n            @on-change=\\\"onChangeLanguage\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_detail_actions %}\\n    <template #smart-bar-actions>\\n\\n        \\n        {% block sw_order_detail_actions_slot_smart_bar_actions %}\\n        \\n        {% block sw_order_detail_actions_abort %}\\n        <sw-button\\n            v-tooltip=\\\"{\\n                message: $tc('sw-privileges.tooltip.warning'),\\n                disabled: acl.can('order.editor'),\\n                showOnDisabledElements: true\\n            }\\\"\\n            class=\\\"sw-order-detail__smart-bar-cancel-button\\\"\\n            :disabled=\\\"isLoading || !acl.can('order.editor')\\\"\\n            @click=\\\"onCancelEditing\\\"\\n        >\\n            {{ $tc('global.default.cancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_detail_actions_save %}\\n        <sw-button-process\\n            v-tooltip=\\\"{\\n                message: $tc('sw-privileges.tooltip.warning'),\\n                disabled: acl.can('order.editor'),\\n                showOnDisabledElements: true\\n            }\\\"\\n            class=\\\"sw-order-detail__smart-bar-save-button\\\"\\n            variant=\\\"primary\\\"\\n            :disabled=\\\"isLoading || !acl.can('order.editor')\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :process-success=\\\"isSaveSuccessful\\\"\\n            {% if VUE3 %}\\n            @update:process-success=\\\"saveEditsFinish\\\"\\n            {% else %}\\n            @process-finish=\\\"saveEditsFinish\\\"\\n            {% endif %}\\n            @click.prevent=\\\"onSaveEdits\\\"\\n        >\\n            {{ $tc('global.default.save') }}\\n        </sw-button-process>\\n        {% endblock %}\\n        {% endblock %}\\n\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_detail_content %}\\n    <template #content>\\n        \\n        {% block sw_order_detail_content_leave_page_modal %}\\n        <sw-order-leave-page-modal\\n            v-if=\\\"isDisplayingLeavePageWarning\\\"\\n            @page-leave-cancel=\\\"onLeaveModalClose\\\"\\n            @page-leave-confirm=\\\"onLeaveModalConfirm\\\"\\n        />\\n        {% endblock %}\\n        <sw-card-view>\\n\\n            <sw-alert\\n                v-if=\\\"isOrderEditing\\\"\\n                class=\\\"sw-order-detail__unsaved-warning\\\"\\n                variant=\\\"warning\\\"\\n            >\\n                {{ $tc('sw-order.detail.textUnsavedOrderWarning') }}\\n            </sw-alert>\\n            \\n            {% block sw_order_detail_content_tabs %}\\n            <sw-tabs\\n                v-if=\\\"showTabs\\\"\\n                class=\\\"sw-order-detail__tabs\\\"\\n                :class=\\\"{ 'has-warning': showWarningTabStyle }\\\"\\n                position-identifier=\\\"sw-order-detail\\\"\\n            >\\n\\n                \\n                {% block sw_order_detail_content_tabs_general %}\\n                <sw-tabs-item\\n                    class=\\\"sw-order-detail__tabs-tab-general\\\"\\n                    :route=\\\"{ name: 'sw.order.detail.general', params: { id: $route.params.id } }\\\"\\n                    :title=\\\"$tc('sw-order.detail.tabGeneral')\\\"\\n                >\\n                    {{ $tc('sw-order.detail.tabGeneral') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_detail_content_tabs_details %}\\n                <sw-tabs-item\\n                    class=\\\"sw-order-detail__tabs-tab-details\\\"\\n                    :route=\\\"{ name: 'sw.order.detail.details', params: { id: $route.params.id } }\\\"\\n                    :title=\\\"$tc('sw-order.detail.tabDetails')\\\"\\n                >\\n                    {{ $tc('sw-order.detail.tabDetails') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_detail_content_tabs_documents %}\\n                <sw-tabs-item\\n                    class=\\\"sw-order-detail__tabs-tab-documents\\\"\\n                    :class=\\\"{ 'has-warning': isOrderEditing }\\\"\\n                    :route=\\\"{ name: 'sw.order.detail.documents', params: { id: $route.params.id } }\\\"\\n                    :title=\\\"$tc('sw-order.detail.tabDocuments')\\\"\\n                >\\n                    {{ $tc('sw-order.detail.tabDocuments') }}\\n\\n                    <sw-icon\\n                        v-if=\\\"isOrderEditing\\\"\\n                        v-tooltip=\\\"{ message: $tc('sw-order.documentTab.tooltipSaveBeforeCreateDocument') }\\\"\\n                        class=\\\"sw-order-detail__tab-warning-badge\\\"\\n                        name=\\\"solid-exclamation-circle\\\"\\n                        size=\\\"12px\\\"\\n                    />\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_detail_content_tabs_extension %}{% endblock %}\\n            </sw-tabs>\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_detail_content_view %}\\n            <template v-if=\\\"isLoading\\\">\\n                <sw-skeleton />\\n                <sw-skeleton />\\n            </template>\\n\\n            {# v-show is used here as underlying components influence the loading state and v-if would destroy this behaviour #}\\n            <router-view\\n                v-if=\\\"order\\\"\\n                v-show=\\\"!isLoading\\\"\\n                ref=\\\"baseComponent\\\"\\n                :order-id=\\\"orderId\\\"\\n                :is-editing=\\\"isEditing\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :is-save-successful=\\\"isSaveSuccessful\\\"\\n                {% if VUE3 %}\\n                @identifier-change.native=\\\"updateIdentifier\\\"\\n                @created-by-id-change.native=\\\"updateCreatedById\\\"\\n                @loading-change.native=\\\"onUpdateLoading\\\"\\n                @editing-change.native=\\\"onUpdateEditing\\\"\\n                @save-and-recalculate.native=\\\"onSaveAndRecalculate\\\"\\n                @recalculate-and-reload.native=\\\"onRecalculateAndReload\\\"\\n                @reload-entity-data.native=\\\"reloadEntityData\\\"\\n                @save-and-reload.native=\\\"onSaveAndReload\\\"\\n                @save-edits.native=\\\"onSaveEdits\\\"\\n                @error.native=\\\"onError\\\"\\n                {% else %}\\n                @identifier-change=\\\"updateIdentifier\\\"\\n                @created-by-id-change=\\\"updateCreatedById\\\"\\n                @loading-change=\\\"onUpdateLoading\\\"\\n                @editing-change=\\\"onUpdateEditing\\\"\\n                @save-and-recalculate=\\\"onSaveAndRecalculate\\\"\\n                @recalculate-and-reload=\\\"onRecalculateAndReload\\\"\\n                @reload-entity-data=\\\"reloadEntityData\\\"\\n                @save-and-reload=\\\"onSaveAndReload\\\"\\n                @save-edits=\\\"onSaveEdits\\\"\\n                @error=\\\"onError\\\"\\n                {% endif %}\\n            />\\n            {% endblock %}\\n\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n\\n</sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}