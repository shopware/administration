{"version":3,"sources":["webpack:///./src/module/sw-bulk-edit/component/product/sw-bulk-edit-product-media/index.js","webpack:///./src/module/sw-bulk-edit/component/product/sw-bulk-edit-product-media/sw-bulk-edit-product-media.html.twig"],"names":["_Shopware","Shopware","Context","Utils","Mixin","Criteria","Data","mapState","Component","getComponentHelper","isEmpty","types","template","inject","mixins","getByName","props","disabled","type","Boolean","required","default","data","showMediaModal","mediaDefaultFolderId","computed","_objectSpread","productMediaRepository","this","repositoryFactory","create","mediaDefaultFolderRepository","mediaDefaultFolderCriteria","criteria","addAssociation","addFilter","equals","created","createdComponent","methods","loadMediaDefaultFolder","_this","getMediaDefaultFolderId","then","search","api","mediaDefaultFolder","_defaultFolder$folder","defaultFolder","first","folder","id","onAddMedia","media","_this2","forEach","item","addMedia","catch","_ref","fileName","createNotificationError","message","$tc","isExistingMedia","Promise","reject","newMedia","mediaId","url","product","add","resolve","some","_ref2"],"mappings":"stBAKA,IAAAA,EAAkCC,SAA1BC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAKJ,EAALI,MAChBC,EAAaJ,SAASK,KAAtBD,SACAE,EAAaN,SAASO,UAAUC,qBAAhCF,SACAG,EAAYP,EAAMQ,MAAlBD,QAGO,WACXE,SCZW,yoBDcXC,OAAQ,CAAC,qBAETC,OAAQ,CACJV,EAAMW,UAAU,iBAGpBC,MAAO,CACHC,SAAU,CACNC,KAAMC,QACNC,UAAU,EACVC,SAAS,IAIjBC,KAAI,WACA,MAAO,CACHC,gBAAgB,EAChBC,qBAAsB,OAI9BC,SAAQC,IAAA,GACDnB,EAAS,kBAAmB,CAC3B,aACF,IAEFoB,uBAAsB,WAClB,OAAOC,KAAKC,kBAAkBC,OAAO,kBAGzCC,6BAA4B,WACxB,OAAOH,KAAKC,kBAAkBC,OAAO,yBAGzCE,2BAA0B,WACtB,IAAMC,EAAW,IAAI5B,EAAS,EAAG,GAKjC,OAHA4B,EAASC,eAAe,UACxBD,EAASE,UAAU9B,EAAS+B,OAAO,SAAU,YAEtCH,KAKfI,QAAO,WACHT,KAAKU,oBAGTC,QAAS,CACLD,iBAAgB,WACZV,KAAKY,0BAGTA,uBAAsB,WAAI,IAADC,EAAA,KACrBb,KAAKc,0BAA0BC,MAAK,SAACnB,GACjCiB,EAAKjB,qBAAuBA,MAIpCkB,wBAAuB,WACnB,OAAOd,KAAKG,6BAA6Ba,OAAOhB,KAAKI,2BAA4B9B,EAAQ2C,KACpFF,MAAK,SAACG,GAAwB,IAADC,EACpBC,EAAgBF,EAAmBG,QACzC,OAAsB,OAAlBD,EACO,KAGa,QAAxBD,EAAIC,EAAcE,cAAM,IAAAH,GAApBA,EAAsBI,GACfH,EAAcE,OAAOC,GAGzB,SAInBC,WAAU,SAACC,GAAQ,IAADC,EAAA,KACV5C,EAAQ2C,IAIZA,EAAME,SAAQ,SAACC,GACXF,EAAKG,SAASD,GAAME,OAAM,SAAAC,GAAmB,IAAhBC,EAAQD,EAARC,SACzBN,EAAKO,wBAAwB,CACzBC,QAASR,EAAKS,IAAI,gDAAiD,EAAG,CAAEH,sBAMxFH,SAAQ,SAACJ,GACL,GAAIzB,KAAKoC,gBAAgBX,GACrB,OAAOY,QAAQC,OAAOb,GAG1B,IAAMc,EAAWvC,KAAKD,uBAAuBG,OAAO7B,SAASC,QAAQ2C,KASrE,OARAsB,EAASC,QAAUf,EAAMF,GACzBgB,EAASd,MAAQ,CACbgB,IAAKhB,EAAMgB,IACXlB,GAAIE,EAAMF,IAGdvB,KAAK0C,QAAQjB,MAAMkB,IAAIJ,GAEhBF,QAAQO,WAGnBR,gBAAe,SAACX,GACZ,OAAOzB,KAAK0C,QAAQjB,MAAMoB,MAAK,SAAAC,GAAsB,IAAnBvB,EAAEuB,EAAFvB,GAAIiB,EAAOM,EAAPN,QAClC,OAAOjB,IAAOE,EAAMF,IAAMiB,IAAYf,EAAMF","file":"static/js/42b7f17011b67bcf05f1.js","sourcesContent":["/**\n * @package system-settings\n */\nimport template from './sw-bulk-edit-product-media.html.twig';\n\nconst { Context, Utils, Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { mapState } = Shopware.Component.getComponentHelper();\nconst { isEmpty } = Utils.types;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            showMediaModal: false,\n            mediaDefaultFolderId: null,\n        };\n    },\n\n    computed: {\n        ...mapState('swProductDetail', [\n            'product',\n        ]),\n\n        productMediaRepository() {\n            return this.repositoryFactory.create('product_media');\n        },\n\n        mediaDefaultFolderRepository() {\n            return this.repositoryFactory.create('media_default_folder');\n        },\n\n        mediaDefaultFolderCriteria() {\n            const criteria = new Criteria(1, 1);\n\n            criteria.addAssociation('folder');\n            criteria.addFilter(Criteria.equals('entity', 'product'));\n\n            return criteria;\n        },\n\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.loadMediaDefaultFolder();\n        },\n\n        loadMediaDefaultFolder() {\n            this.getMediaDefaultFolderId().then((mediaDefaultFolderId) => {\n                this.mediaDefaultFolderId = mediaDefaultFolderId;\n            });\n        },\n\n        getMediaDefaultFolderId() {\n            return this.mediaDefaultFolderRepository.search(this.mediaDefaultFolderCriteria, Context.api)\n                .then((mediaDefaultFolder) => {\n                    const defaultFolder = mediaDefaultFolder.first();\n                    if (defaultFolder === null) {\n                        return null;\n                    }\n\n                    if (defaultFolder.folder?.id) {\n                        return defaultFolder.folder.id;\n                    }\n\n                    return null;\n                });\n        },\n\n        onAddMedia(media) {\n            if (isEmpty(media)) {\n                return;\n            }\n\n            media.forEach((item) => {\n                this.addMedia(item).catch(({ fileName }) => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-product.mediaForm.errorMediaItemDuplicated', 0, { fileName }),\n                    });\n                });\n            });\n        },\n\n        addMedia(media) {\n            if (this.isExistingMedia(media)) {\n                return Promise.reject(media);\n            }\n\n            const newMedia = this.productMediaRepository.create(Shopware.Context.api);\n            newMedia.mediaId = media.id;\n            newMedia.media = {\n                url: media.url,\n                id: media.id,\n            };\n\n            this.product.media.add(newMedia);\n\n            return Promise.resolve();\n        },\n\n        isExistingMedia(media) {\n            return this.product.media.some(({ id, mediaId }) => {\n                return id === media.id || mediaId === media.id;\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_bulk_edit_product_media %}\\n<div class=\\\"sw-bulk-edit-product-media\\\">\\n    \\n    {% block sw_bulk_edit_product_media_form %}\\n    <sw-bulk-edit-product-media-form\\n        :disabled=\\\"disabled\\\"\\n        @media-open=\\\"showMediaModal = true\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_bulk_edit_product_media_modal %}\\n    <sw-media-modal-v2\\n        v-if=\\\"showMediaModal\\\"\\n        :initial-folder-id=\\\"mediaDefaultFolderId\\\"\\n        :entity-context=\\\"product.getEntityName()\\\"\\n        @media-modal-selection-change=\\\"onAddMedia\\\"\\n        @modal-close=\\\"showMediaModal = false\\\"\\n    />\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}