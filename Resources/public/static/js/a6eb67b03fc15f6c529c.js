(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[41842],{347433:function(){},41842:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return o}}),t(769037);let{Mixin:s}=Shopware,{Criteria:l}=Shopware.Data;var o={template:'\n{% block sw_cms_element_cross_selling_config %}\n<div class="sw-cms-el-config-cross-selling">\n    \n    {% block sw_cms_element_cross_selling_config_tabs %}\n    <sw-tabs\n        position-identifier="sw-cms-element-cross-selling"\n        class="sw-cms-el-config-cross-selling__tabs"\n        default-item="content"\n    >\n        <template #default="{ active }">\n            \n            {% block sw_cms_element_cross_selling_config_tab_content %}\n            <sw-tabs-item\n                name="content"\n                :title="$tc(\'sw-cms.elements.general.config.tab.content\')"\n                :active-tab="active"\n            >\n                {{ $tc(\'sw-cms.elements.general.config.tab.content\') }}\n            </sw-tabs-item>\n            {% endblock %}\n\n            \n            {% block sw_cms_element_cross_selling_config_tab_options %}\n            <sw-tabs-item\n                name="options"\n                :title="$tc(\'sw-cms.elements.general.config.tab.options\')"\n                :active-tab="active"\n            >\n                {{ $tc(\'sw-cms.elements.general.config.tab.options\') }}\n            </sw-tabs-item>\n            {% endblock %}\n        </template>\n\n        <template #content="{ active }">\n            \n            {% block sw_cms_element_cross_selling_config_content %}\n            <sw-container\n                v-if="active === \'content\'"\n                class="sw-cms-el-config-cross-selling__tab-content"\n            >\n                \n                {% block sw_cms_element_cross_selling_config_content_warning_text %}\n                <sw-alert\n                    v-if="isProductPageType"\n                    class="sw-cms-el-config-cross-selling__warning-text"\n                    variant="info"\n                >\n                    {{ $tc(\'sw-cms.elements.crossSelling.config.infoText.productDetailElement\') }}\n                </sw-alert>\n                {% endblock %}\n\n                \n                {% block sw_cms_element_cross_selling_config_content_products %}\n                <sw-entity-single-select\n                    v-if="!isProductPageType"\n                    ref="cmsProductSelection"\n                    v-model:value="element.config.product.value"\n                    entity="product"\n                    class="sw-cms-el-config-cross-selling__products"\n                    :label="$tc(\'sw-cms.elements.crossSelling.config.label.selection\')"\n                    :placeholder="$tc(\'sw-cms.elements.crossSelling.config.placeholder.selection\')"\n                    :criteria="productCriteria"\n                    :context="productSelectContext"\n                    show-clearable-button\n                    @update:value="onProductChange"\n                >\n                    \n                    {% block sw_entity_single_select_variant_selected_item %}\n                    <template #selection-label-property="{ item }">\n                        <sw-product-variant-info\n                            :variations="item.variation"\n                        >\n                            {{ item.translated.name || item.name }}\n                        </sw-product-variant-info>\n                    </template>\n                    {% endblock %}\n\n                    \n                    {% block sw_entity_single_select_variant_result_item %}\n                    <template #result-item="{ item, index }">\n                        <sw-select-result\n                            v-bind="{ item, index }"\n                        >\n                            \n                            {% block sw_entity_single_select_base_results_list_result_label %}\n                            <span class="sw-select-result__result-item-text">\n                                <sw-product-variant-info :variations="item.variation">\n                                    {{ item.translated.name || item.name }}\n                                </sw-product-variant-info>\n                            </span>\n                            {% endblock %}\n                        </sw-select-result>\n                    </template>\n                    {% endblock %}\n                </sw-entity-single-select>\n                {% endblock %}\n            </sw-container>\n            {% endblock %}\n\n            \n            {% block sw_cms_element_cross_selling_config_options %}\n            <sw-container\n                v-else-if="active === \'options\'"\n                class="sw-cms-el-config-cross-selling__tab-options"\n            >\n                \n                {% block sw_cms_element_cross_selling_config_options_box_layout %}\n                <sw-select-field\n                    v-model:value="element.config.boxLayout.value"\n                    :label="$tc(\'sw-cms.elements.productBox.config.label.layoutType\')"\n                >\n                    <option value="standard">\n                        {{ $tc(\'sw-cms.elements.productBox.config.label.layoutTypeStandard\') }}\n                    </option>\n                    <option value="image">\n                        {{ $tc(\'sw-cms.elements.productBox.config.label.layoutTypeImage\') }}\n                    </option>\n                    <option value="minimal">\n                        {{ $tc(\'sw-cms.elements.productBox.config.label.layoutTypeMinimal\') }}\n                    </option>\n                </sw-select-field>\n                {% endblock %}\n\n                \n                {% block sw_cms_element_cross_selling_config_options_display_mode %}\n                <sw-select-field\n                    v-model:value="element.config.displayMode.value"\n                    :label="$tc(\'sw-cms.elements.general.config.label.displayMode\')"\n                >\n                    <option value="standard">\n                        {{ $tc(\'sw-cms.elements.general.config.label.displayModeStandard\') }}\n                    </option>\n                    <option value="cover">\n                        {{ $tc(\'sw-cms.elements.general.config.label.displayModeCover\') }}\n                    </option>\n                    <option value="contain">\n                        {{ $tc(\'sw-cms.elements.general.config.label.displayModeContain\') }}\n                    </option>\n                </sw-select-field>\n                {% endblock %}\n\n                \n                {% block sw_cms_element_cross_selling_config_options_min_width %}\n                <sw-text-field\n                    v-model:value="element.config.elMinWidth.value"\n                    :label="$tc(\'sw-cms.elements.crossSelling.config.label.minWidth\')"\n                    :placeholder="$tc(\'sw-cms.elements.crossSelling.config.placeholder.minWidth\')"\n                />\n                {% endblock %}\n            </sw-container>\n            {% endblock %}\n        </template>\n    </sw-tabs>\n    {% endblock %}\n</div>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory"],emits:["element-update"],mixins:[s.getByName("cms-element")],computed:{productRepository(){return this.repositoryFactory.create("product")},productSelectContext(){return{...Shopware.Context.api,inheritance:!0}},productCriteria(){let e=new l(1,25);return e.addAssociation("options.group"),e},selectedProductCriteria(){let e=new l(1,25);return e.addAssociation("crossSellings.assignedProducts.product"),e},isProductPageType(){return this.cmsPageState?.currentPage?.type==="product_detail"}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("cross-selling")},async onProductChange(e){e?await this.fetchProduct(e):this.deleteProduct(),this.$emit("element-update",this.element)},async fetchProduct(e){let n=await this.productRepository.get(e,this.productSelectContext,this.selectedProductCriteria);this.element.config.product.value=e,this.isCompatEnabled("INSTANCE_SET")?this.$set(this.element.data,"product",n):this.element.data.product=n},deleteProduct(){this.element.config.product.value=null,this.isCompatEnabled("INSTANCE_SET")?this.$set(this.element.data,"product",null):this.element.data.product=null}}}},769037:function(e,n,t){var s=t(347433);s.__esModule&&(s=s.default),"string"==typeof s&&(s=[[e.id,s,""]]),s.locals&&(e.exports=s.locals),t(745346).Z("7024a69c",s,!0,{})}}]);