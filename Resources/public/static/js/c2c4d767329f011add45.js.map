{"version":3,"sources":["webpack:///./src/module/sw-settings-seo/component/sw-seo-url-template-card/sw-seo-url-template-card.scss","webpack:///./src/module/sw-settings-seo/component/sw-seo-url-template-card/index.js","webpack:///./src/module/sw-settings-seo/component/sw-seo-url-template-card/sw-seo-url-template-card.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","mapCollectionPropertyErrors","Component","getComponentHelper","EntityCollection","Data","Criteria","utils","Utils","template","inject","mixins","getByName","data","defaultSeoUrlTemplates","seoUrlTemplates","seoUrlPreviewCriteria","isLoading","debouncedPreviews","previewLoadingStates","errorMessages","previews","noEntityError","variableStores","seoUrlTemplateRepository","salesChannelId","salesChannels","selectedProperty","computed","_objectSpread","salesChannelRepository","this","repositoryFactory","create","salesChannelIsHeadless","_this","currentSalesChannel","find","entity","id","typeId","created","createdComponent","methods","route","schema","Context","api","addFilter","not","equals","fetchSalesChannels","fetchSeoUrlTemplates","_this2","arguments","length","undefined","criteria","search","then","response","forEach","has","createSeoUrlTemplatesFromDefaultRoutes","seoUrlTemplate","fetchSeoUrlPreview","hasOwnProperty","seoUrlTemplateService","getContext","createVariableOptions","_this3","defaultEntity","some","routeName","entityName","storeOptions","Object","entries","_ref","_ref2","_slicedToArray","property","value","push","name","concat","keys","innerProperty","$set","getVariableOptions","getLabel","replace","$tc","getPlaceholder","values","onClickSave","_this4","key","createSaveErrorNotification","entry","remove","sync","createSaveSuccessNotification","catch","titleSaveSuccess","messageSaveSuccess","createNotificationError","title","message","createNotificationSuccess","onSelectInput","propertyName","templateValue","onInput","debouncedPreviewSeoUrlTemplate","_this5","debounce","_this6","parse","preview","filter","elem","err","errors","detail","_this7","onSalesChannelChanged","getTemplatesForSalesChannel","templateEntity"],"mappings":"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","file":"static/js/c2c4d767329f011add45.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-seo-url-template-card.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"74291886\", content, true, {});","/**\n * @package buyers-experience\n */\n\nimport template from './sw-seo-url-template-card.html.twig';\nimport './sw-seo-url-template-card.scss';\n\nconst { Mixin } = Shopware;\nconst { mapCollectionPropertyErrors } = Shopware.Component.getComponentHelper();\nconst EntityCollection = Shopware.Data.EntityCollection;\nconst Criteria = Shopware.Data.Criteria;\nconst utils = Shopware.Utils;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['seoUrlTemplateService', 'repositoryFactory'],\n\n    mixins: [Mixin.getByName('notification')],\n\n\n    data() {\n        return {\n            defaultSeoUrlTemplates: null,\n            seoUrlTemplates: null,\n            seoUrlPreviewCriteria: {},\n            isLoading: true,\n            debouncedPreviews: {},\n            previewLoadingStates: {},\n            errorMessages: {},\n            previews: {},\n            noEntityError: [],\n            variableStores: {},\n            seoUrlTemplateRepository: {},\n            salesChannelId: null,\n            salesChannels: [],\n            selectedProperty: null,\n        };\n    },\n\n    computed: {\n        ...mapCollectionPropertyErrors('seoUrlTemplates', ['template']),\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        salesChannelIsHeadless() {\n            const currentSalesChannel = this.salesChannels.find((entity) => {\n                return entity.id === this.salesChannelId;\n            });\n\n            if (!currentSalesChannel) {\n                return false;\n            }\n\n            // from Defaults.php\n            return currentSalesChannel.typeId === 'f183ee5650cf4bdb8a774337575067a6';\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.seoUrlTemplateRepository = this.repositoryFactory.create('seo_url_template');\n            this.seoUrlTemplates = new EntityCollection(\n                this.seoUrlTemplateRepository.route,\n                this.seoUrlTemplateRepository.schema.entity,\n                Shopware.Context.api,\n                new Criteria(1, 25),\n            );\n\n            this.defaultSeoUrlTemplates = new EntityCollection(\n                this.seoUrlTemplateRepository.route,\n                this.seoUrlTemplateRepository.schema.entity,\n                Shopware.Context.api,\n                new Criteria(1, 25),\n            );\n\n            this.seoUrlPreviewCriteria['frontend.navigation.page'] =\n                (new Criteria(1, 25)).addFilter(\n                    Criteria.not('and', [Criteria.equals('path', null)]),\n                );\n\n            this.fetchSalesChannels();\n            this.fetchSeoUrlTemplates();\n        },\n        fetchSeoUrlTemplates(salesChannelId = null) {\n            const criteria = new Criteria(1, 25);\n\n            if (!salesChannelId) {\n                salesChannelId = null;\n            }\n            criteria.addFilter(Criteria.equals('salesChannelId', salesChannelId));\n\n            this.isLoading = true;\n\n            this.seoUrlTemplateRepository.search(criteria).then((response) => {\n                response.forEach(entity => {\n                    if (!this.seoUrlTemplates.has(entity.id)) {\n                        this.seoUrlTemplates.add(entity);\n                    }\n                });\n\n                if (!salesChannelId) {\n                    // Save the defaults as blueprint for creating dynamically new entities\n                    response.forEach(entity => {\n                        if (!this.defaultSeoUrlTemplates.has(entity)) {\n                            this.defaultSeoUrlTemplates.add(entity);\n                        }\n                    });\n                } else {\n                    this.createSeoUrlTemplatesFromDefaultRoutes(salesChannelId);\n                }\n                this.isLoading = false;\n\n                this.seoUrlTemplates.forEach(seoUrlTemplate => {\n                    // Fetch preview / validate seo url template\n                    this.fetchSeoUrlPreview(seoUrlTemplate);\n\n                    // Create stores for the possible variables\n                    if (!this.variableStores.hasOwnProperty(seoUrlTemplate.id)) {\n                        this.seoUrlTemplateService.getContext(seoUrlTemplate).then(data => {\n                            this.createVariableOptions(seoUrlTemplate.id, data);\n                        });\n                    }\n                });\n            });\n        },\n        createSeoUrlTemplatesFromDefaultRoutes(salesChannelId) {\n            // Iterate over the default seo url templates and create new entities for the actual sales channel\n            // if they do not exist\n            this.defaultSeoUrlTemplates.forEach(defaultEntity => {\n                const entityAlreadyExists = this.seoUrlTemplates.some((entity) => {\n                    return entity.routeName === defaultEntity.routeName && entity.salesChannelId === salesChannelId;\n                });\n\n                if (!entityAlreadyExists) {\n                    const entity = this.seoUrlTemplateRepository.create();\n                    entity.routeName = defaultEntity.routeName;\n                    entity.salesChannelId = salesChannelId;\n                    entity.entityName = defaultEntity.entityName;\n                    entity.template = null;\n                    this.seoUrlTemplates.add(entity);\n                }\n            });\n        },\n        createVariableOptions(id, data) {\n            const storeOptions = [];\n\n            Object.entries(data).forEach(([property, value]) => {\n                storeOptions.push({ name: `${property}` });\n\n                if (value instanceof Object) {\n                    Object.keys(value).forEach((innerProperty) => {\n                        storeOptions.push({ name: `${property}.${innerProperty}` });\n                    });\n                }\n            });\n\n            this.$set(this.variableStores, id, storeOptions);\n        },\n        getVariableOptions(id) {\n            if (this.variableStores.hasOwnProperty(id)) {\n                return this.variableStores[id];\n            }\n            return false;\n        },\n        getLabel(seoUrlTemplate) {\n            const routeName = seoUrlTemplate.routeName.replace(/\\./g, '-');\n            if (this.$tc(`sw-seo-url-template-card.routeNames.${routeName}`)) {\n                return this.$tc(`sw-seo-url-template-card.routeNames.${routeName}`);\n            }\n\n            return seoUrlTemplate.routeName;\n        },\n        getPlaceholder(seoUrlTemplate) {\n            if (!seoUrlTemplate.salesChannelId) {\n                return null;\n            }\n\n            const defaultEntity = Object.values(this.defaultSeoUrlTemplates).find(entity => {\n                return entity.routeName === seoUrlTemplate.routeName;\n            });\n\n            return defaultEntity.template;\n        },\n        onClickSave() {\n            const hasError = Object.keys(this.errorMessages).some((key) => {\n                return this.errorMessages[key] !== null;\n            });\n\n            if (hasError) {\n                this.createSaveErrorNotification();\n                return;\n            }\n\n\n            this.seoUrlTemplates.forEach((entry) => {\n                if (entry.template === null) {\n                    this.seoUrlTemplates.remove(entry.id);\n                }\n            });\n\n            this.seoUrlTemplateRepository.sync(this.seoUrlTemplates).then(() => {\n                this.seoUrlTemplates = new EntityCollection(\n                    this.seoUrlTemplateRepository.route,\n                    this.seoUrlTemplateRepository.schema.entity,\n                    Shopware.Context.api,\n                    new Criteria(1, 25),\n                );\n                this.fetchSeoUrlTemplates(this.salesChannelId);\n                this.createSaveSuccessNotification();\n            }).catch(() => {\n                this.createSaveErrorNotification();\n            });\n        },\n        createSaveErrorNotification() {\n            const titleSaveSuccess = this.$tc('global.default.error');\n            const messageSaveSuccess = this.$tc('sw-seo-url-template-card.general.messageSaveError');\n\n            this.createNotificationError({\n                title: titleSaveSuccess,\n                message: messageSaveSuccess,\n            });\n        },\n        createSaveSuccessNotification() {\n            const titleSaveSuccess = this.$tc('global.default.success');\n            const messageSaveSuccess = this.$tc('sw-seo-url-template-card.general.messageSaveSuccess');\n\n            this.createNotificationSuccess({\n                title: titleSaveSuccess,\n                message: messageSaveSuccess,\n            });\n        },\n\n        onSelectInput(propertyName, entity) {\n            if (propertyName === null) {\n                return;\n            }\n            const templateValue = entity.template ? (`${entity.template}/`) : '';\n            entity.template = `${templateValue}{{ ${propertyName} }}`;\n            this.fetchSeoUrlPreview(entity);\n        },\n        onInput(entity) {\n            this.debouncedPreviewSeoUrlTemplate(entity);\n        },\n        debouncedPreviewSeoUrlTemplate(entity) {\n            if (!this.debouncedPreviews[entity.id]) {\n                this.debouncedPreviews[entity.id] = utils.debounce(() => {\n                    if (entity.template && entity.template !== '') {\n                        this.fetchSeoUrlPreview(entity);\n                    } else {\n                        this.$set(this.errorMessages, entity.id, null);\n                    }\n                }, 400);\n            } else {\n                this.$set(this.errorMessages, entity.id, null);\n            }\n\n            this.debouncedPreviews[entity.id]();\n        },\n        fetchSeoUrlPreview(entity) {\n            this.$set(this.previewLoadingStates, entity.id, true);\n            const criteria = this.seoUrlPreviewCriteria[entity.routeName]\n                ? this.seoUrlPreviewCriteria[entity.routeName] : (new Criteria(1, 25));\n            entity.criteria = criteria.parse();\n            this.seoUrlTemplateService.preview(entity).then((response) => {\n                this.noEntityError = this.noEntityError.filter((elem) => {\n                    return elem !== entity.id;\n                });\n                this.$set(this.previews, entity.id, response);\n                if (response === null) {\n                    this.noEntityError.push(entity.id);\n                } else {\n                    this.$set(this.errorMessages, entity.id, null);\n                }\n                this.previewLoadingStates[entity.id] = false;\n            }).catch(err => {\n                this.$set(this.errorMessages, entity.id, err.response.data.errors[0].detail);\n                this.$set(this.previews, entity.id, []);\n                this.previewLoadingStates[entity.id] = false;\n            });\n        },\n        fetchSalesChannels() {\n            this.salesChannelRepository.search(new Criteria(1, 25)).then((response) => {\n                this.salesChannels = response;\n            });\n        },\n        onSalesChannelChanged(salesChannelId) {\n            this.salesChannelId = salesChannelId;\n            this.fetchSeoUrlTemplates(salesChannelId);\n        },\n        getTemplatesForSalesChannel(salesChannelId) {\n            return this.seoUrlTemplates.filter((templateEntity) => {\n                return templateEntity.salesChannelId === salesChannelId;\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_seo_url_template_card %}\\n<sw-card\\n    class=\\\"sw-seo-url-template-card\\\"\\n    position-identifier=\\\"sw-seo-url-template-card\\\"\\n    :title=\\\"$tc('sw-seo-url-template-card.general.titleCard')\\\"\\n    :is-loading=\\\"isLoading\\\"\\n>\\n    <template #toolbar>\\n        <sw-sales-channel-switch\\n            :label=\\\"$tc('sw-seo-url-template-card.general.labelSalesChannelSelect')\\\"\\n            @change-sales-channel-id=\\\"onSalesChannelChanged\\\"\\n        />\\n    </template>\\n\\n    \\n    {% block sw_seo_url_template_card_info_box %}\\n    <sw-alert\\n        :title=\\\"$tc('sw-seo-url-template-card.general.headlineInfoMessageBoxEmptyProperties')\\\"\\n    >\\n        <span>{{ $tc('sw-seo-url-template-card.general.textInfoMessageBoxEmptyProperties') }}</span>\\n    </sw-alert>\\n    {% endblock %}\\n\\n    \\n    {% block sw_seo_url_template_card_entries %}\\n    <template v-if=\\\"!isLoading && !salesChannelIsHeadless\\\">\\n        <div\\n            v-for=\\\"(seoUrlTemplate, index) in getTemplatesForSalesChannel(salesChannelId)\\\"\\n            :key=\\\"index\\\"\\n            class=\\\"sw-seo-url-template-card__seo-url\\\"\\n        >\\n            <sw-container\\n                columns=\\\"3fr 1fr\\\"\\n                gap=\\\"5px\\\"\\n            >\\n                \\n                {% block sw_seo_url_template_card_entries_input_wrapper %}\\n                <sw-inherit-wrapper\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"seoUrlTemplate.template\\\"\\n                    {% else %}\\n                    v-model=\\\"seoUrlTemplate.template\\\"\\n                    {% endif %}\\n                    :has-parent=\\\"seoUrlTemplate.salesChannelId !== null\\\"\\n                    :inherited-value=\\\"getPlaceholder(seoUrlTemplate)\\\"\\n                    @input=\\\"onInput(seoUrlTemplate)\\\"\\n                >\\n\\n                    <template #content=\\\"props\\\">\\n                        \\n                        {% block sw_seo_url_template_card_entries_input %}\\n                        <sw-text-field\\n                            :map-inheritance=\\\"props\\\"\\n                            :value=\\\"props.currentValue\\\"\\n                            :disabled=\\\"props.isInherited\\\"\\n                            :error=\\\"seoUrlTemplatesTemplateError[index]\\\"\\n                            :name=\\\"`sw-field--seo-url-template-${seoUrlTemplate.entity}`\\\"\\n                            :label=\\\"getLabel(seoUrlTemplate)\\\"\\n                            :placeholder=\\\"getPlaceholder(seoUrlTemplate)\\\"\\n                            {% if VUE3 %}\\n                            @update:value=\\\"props.updateCurrentValue\\\"\\n                            {% else %}\\n                            @input=\\\"props.updateCurrentValue\\\"\\n                            {% endif %}\\n                        >\\n\\n                            <template #suffix>\\n                                \\n                                {% block sw_seo_url_template_card_entries_input_suffix %}\\n                                <sw-loader\\n                                    v-if=\\\"previewLoadingStates[seoUrlTemplate.id]\\\"\\n                                    size=\\\"16px\\\"\\n                                />\\n                                <sw-icon\\n                                    v-else-if=\\\"errorMessages[seoUrlTemplate.id]\\\"\\n                                    v-tooltip=\\\"$tc('sw-seo-url-template-card.general.tooltipInvalidTemplate')\\\"\\n                                    name=\\\"regular-times\\\"\\n                                />\\n                                <sw-icon\\n                                    v-else-if=\\\"noEntityError.includes(seoUrlTemplate.id)\\\"\\n                                    v-tooltip=\\\"$tc('sw-seo-url-template-card.general.textUrlNoEntitiesForPreview', 0, {\\n                                        entity: $tc(`global.entities.${seoUrlTemplate.entityName}`, 0)\\n                                    })\\\"\\n                                    name=\\\"regular-exclamation-triangle\\\"\\n                                />\\n                                <sw-icon\\n                                    v-else-if=\\\"!props.currentValue\\\"\\n                                    v-tooltip=\\\"$tc('sw-seo-url-template-card.general.textUrlPreviewEmptyTemplate', 1, {\\n                                        entity: $tc(`global.entities.${seoUrlTemplate.entityName}`, 0)\\n                                    })\\\"\\n                                    name=\\\"regular-exclamation-triangle\\\"\\n                                />\\n                                <sw-icon\\n                                    v-else\\n                                    v-tooltip=\\\"$tc('sw-seo-url-template-card.general.tooltipValidTemplate')\\\"\\n                                    name=\\\"regular-checkmark\\\"\\n                                />\\n                                {% endblock %}\\n                            </template>\\n\\n                        </sw-text-field>\\n                        {% endblock %}\\n                    </template>\\n                </sw-inherit-wrapper>\\n                {% endblock %}\\n                \\n                {% block sw_seo_url_template_card_entries_variables %}\\n                <sw-single-select\\n                    v-if=\\\"getVariableOptions(seoUrlTemplate.id) && !noEntityError.includes(seoUrlTemplate.id)\\\"\\n                    :value=\\\"selectedProperty\\\"\\n                    value-property=\\\"name\\\"\\n                    label-property=\\\"name\\\"\\n                    show-clearable-button\\n                    :options=\\\"getVariableOptions(seoUrlTemplate.id)\\\"\\n                    :placeholder=\\\"$tc('sw-seo-url-template-card.general.placeholderSelectVariables')\\\"\\n                    :label=\\\"$tc('sw-seo-url-template-card.general.labelPossibleValues')\\\"\\n                    @change=\\\"(propertyName) => onSelectInput(propertyName, seoUrlTemplate)\\\"\\n                />\\n                {% endblock %}\\n            </sw-container>\\n            \\n            {% block sw_seo_url_template_card_entries_preview %}\\n            <div\\n                v-if=\\\"seoUrlTemplate.template\\\"\\n                class=\\\"sw-seo-url-template-card__preview\\\"\\n            >\\n                \\n                {% block sw_seo_url_template_card_entries_preview_label %}\\n                <span class=\\\"sw-seo-url-template-card__preview-label\\\">\\n                    {{ $tc('sw-seo-url-template-card.general.preview') }}\\n                </span>\\n                {% endblock %}\\n                \\n                {% block sw_seo_url_template_card_entries_preview_item %}\\n                <div class=\\\"sw-seo-url-template-card__preview-item\\\">\\n                    <span v-if=\\\"previews[seoUrlTemplate.id] && previews[seoUrlTemplate.id].length > 0\\\">\\n                        {{ previews[seoUrlTemplate.id][0].seoPathInfo }}\\n                    </span>\\n                    <span v-else>\\n                        {{ $tc('sw-seo-url-template-card.general.textUrlPreviewNotPossible') }}\\n                    </span>\\n                    <span v-if=\\\"noEntityError.includes(seoUrlTemplate.id)\\\">\\n                        {{ $tc('sw-seo-url-template-card.general.textUrlNoEntitiesForPreview', 0, { entity: $tc(`global.entities.${seoUrlTemplate.entityName}`, 0) }) }}\\n                    </span>\\n                </div>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </div>\\n    </template>\\n    <div v-if=\\\"salesChannelIsHeadless && !isLoading\\\">\\n        {{ $tc('sw-seo-url.textSeoUrlsDisallowedForHeadless') }}\\n    </div>\\n    {% endblock %}\\n</sw-card>\\n{% endblock %}\\n\";"],"sourceRoot":""}