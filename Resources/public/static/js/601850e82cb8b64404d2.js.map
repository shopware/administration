{"version":3,"sources":["webpack:///./src/module/sw-users-permissions/components/sw-users-permissions-role-listing/sw-users-permissions-role-listing.html.twig","webpack:///./src/module/sw-users-permissions/components/sw-users-permissions-role-listing/index.js","webpack:///./src/module/sw-users-permissions/components/sw-users-permissions-role-listing/sw-users-permissions-role-listing.scss"],"names":["_Shopware","Shopware","Data","Mixin","Criteria","template","inject","mixins","getByName","data","roles","isLoading","itemToDelete","confirmDelete","disableRouteParams","confirmPasswordModal","computed","rolesColumns","property","label","this","$tc","roleRepository","repositoryFactory","create","roleCriteria","criteria","page","limit","addFilter","equals","term","setTerm","sortBy","addSorting","sort","sortDirection","showListingResults","length","created","createdComponent","methods","$emit","getList","_this","search","then","total","finally","onSearch","searchTerm","getItemToDelete","item","id","onDelete","role","onCloseDeleteModal","onConfirmDelete","deleteRole","context","_this2","delete","createNotificationSuccess","message","name","catch","createNotificationError","onCloseConfirmPasswordModal","content","__esModule","default","module","i","locals","exports","add"],"mappings":"+JAAe,ICMfA,EAAwBC,SAAhBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACNC,EAAaF,EAAbE,SAGO,WACXC,SDXW,y8MCaXC,OAAQ,CACJ,oBACA,OAGJC,OAAQ,CACJJ,EAAMK,UAAU,WAChBL,EAAMK,UAAU,iBAGpBC,KAAI,WACA,MAAO,CACHC,MAAO,GACPC,WAAW,EACXC,aAAc,KACdC,cAAe,KACfC,oBAAoB,EACpBC,sBAAsB,IAI9BC,SAAU,CACNC,aAAY,WACR,MAAO,CAAC,CACJC,SAAU,OACVC,MAAOC,KAAKC,IAAI,mDACjB,CACCH,SAAU,cACVC,MAAOC,KAAKC,IAAI,4DAIxBC,eAAc,WACV,OAAOF,KAAKG,kBAAkBC,OAAO,aAGzCC,aAAY,WACR,IAAMC,EAAW,IAAItB,EAASgB,KAAKO,KAAMP,KAAKQ,OAa9C,OAXAF,EAASG,UAAUzB,EAAS0B,OAAO,SAAU,OAC7CJ,EAASG,UAAUzB,EAAS0B,OAAO,YAAa,OAE5CV,KAAKW,MACLL,EAASM,QAAQZ,KAAKW,MAGtBX,KAAKa,QACLP,EAASQ,WAAW9B,EAAS+B,KAAKf,KAAKa,OAAQb,KAAKgB,eAAiB,QAGlEV,GAGXW,mBAAkB,WACd,OAAIjB,KAAKT,YAIDS,KAAKV,OAASU,KAAKV,MAAM4B,OAAS,GAAOlB,KAAKW,MAAQX,KAAKW,KAAKO,QAAU,KAI1FC,QAAO,WACHnB,KAAKoB,oBAGTC,QAAS,CACLD,iBAAgB,WACZpB,KAAKsB,MAAM,aAGfC,QAAO,WAAI,IAADC,EAAA,KAIN,OAHAxB,KAAKT,WAAY,EACjBS,KAAKV,MAAQ,GAENU,KAAKE,eAAeuB,OAAOzB,KAAKK,cAAcqB,MAAK,SAACpC,GACvDkC,EAAKG,MAAQrC,EAAMqC,MACnBH,EAAKlC,MAAQA,KACdsC,SAAQ,WACPJ,EAAKjC,WAAY,MAIzBsC,SAAQ,SAACC,GACL9B,KAAKW,KAAOmB,EAEZ9B,KAAKsB,MAAM,aAGfS,gBAAe,SAACC,GACZ,QAAKhC,KAAKR,cAGHQ,KAAKR,aAAayC,KAAOD,EAAKC,IAGzCC,SAAQ,SAACC,GACLnC,KAAKR,aAAe2C,GAGxBC,mBAAkB,WACdpC,KAAKR,aAAe,MAGxB6C,gBAAe,WACXrC,KAAKP,cAAgBO,KAAKR,aAE1BQ,KAAKoC,qBAELpC,KAAKL,sBAAuB,GAGhC2C,WAAU,SAACC,GAAU,IAADC,EAAA,KAChBxC,KAAKL,sBAAuB,EAC5B,IAAMwC,EAAOnC,KAAKP,cAClBO,KAAKP,cAAgB,KAErBO,KAAKE,eAAeuC,OAAON,EAAKF,GAAIM,GAASb,MAAK,WAC9Cc,EAAKE,0BAA0B,CAC3BC,QAASH,EAAKvC,IACV,0EACA,EACA,CAAE2C,KAAMT,EAAKS,SAIrBJ,EAAKlB,MAAM,eACZuB,OAAM,WACLL,EAAKM,wBAAwB,CACzBH,QAASH,EAAKvC,IACV,wEACA,EACA,CAAE2C,KAAMT,EAAKS,aAM7BG,4BAA2B,WACvB/C,KAAKL,sBAAuB,M,qBCrJxC,IAAIqD,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM","file":"static/js/601850e82cb8b64404d2.js","sourcesContent":["export default \"\\n{% block sw_users_permissions_role_listing %}\\n<sw-card\\n    class=\\\"sw-users-permissions-role-listing\\\"\\n    position-identifier=\\\"sw-users-permissions-role-listing\\\"\\n    :title=\\\"$tc('sw-users-permissions.roles.general.cardLabel')\\\"\\n>\\n\\n    \\n    {% block sw_users_permissions_role_listing_toolbar %}\\n    <div class=\\\"sw-users-permissions-role-listing__toolbar\\\">\\n        <sw-container\\n            columns=\\\"1fr minmax(100px, 200px)\\\"\\n            gap=\\\"0 10px\\\"\\n        >\\n            \\n            {% block sw_users_permissions_role_listing_toolbar_search_field %}\\n            <sw-simple-search-field\\n                v-model=\\\"term\\\"\\n                size=\\\"small\\\"\\n                variant=\\\"form\\\"\\n                @search-term-change=\\\"onSearch\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_users_permissions_role_listing_toolbar_add_role_button %}\\n            <sw-button\\n                :router-link=\\\"{ name: 'sw.users.permissions.role.detail' }\\\"\\n                variant=\\\"ghost\\\"\\n                size=\\\"small\\\"\\n                :disabled=\\\"!acl.can('users_and_permissions.creator')\\\"\\n                class=\\\"sw-users-permissions-role-listing__add-role-button\\\"\\n            >\\n                {{ $tc('sw-users-permissions.roles.general.labelCreateNewRole') }}\\n            </sw-button>\\n            {% endblock %}\\n        </sw-container>\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_users_permissions_role_listing_verify_modal %}\\n    <sw-verify-user-modal\\n        v-if=\\\"confirmPasswordModal\\\"\\n        @verified=\\\"deleteRole\\\"\\n        @close=\\\"onCloseConfirmPasswordModal\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_users_permissions_role_listing_grid %}\\n    <sw-data-grid\\n        v-if=\\\"showListingResults\\\"\\n        :data-source=\\\"roles\\\"\\n        :columns=\\\"rolesColumns\\\"\\n        identifier=\\\"roles-grid\\\"\\n        :show-settings=\\\"true\\\"\\n        :show-selection=\\\"false\\\"\\n        :is-loading=\\\"isLoading\\\"\\n        @column-sort=\\\"onSortColumn\\\"\\n    >\\n\\n        \\n        {% block sw_users_permissions_role_listing_grid_actions %}\\n        <template #actions=\\\"{ item }\\\">\\n            \\n            {% block sw_users_permissions_role_listing_grid_actions_edit %}\\n            <sw-context-menu-item\\n                :router-link=\\\"{ name: 'sw.users.permissions.role.detail', params: { id: item.id } }\\\"\\n                class=\\\"sw-users-permissions-role-listing__context-menu-edit\\\"\\n                :disabled=\\\"!acl.can('users_and_permissions.editor')\\\"\\n            >\\n                {{ $tc('sw-users-permissions.roles.role-grid.contextMenuEdit') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n\\n            \\n            {% block sw_users_permissions_role_listing_grid_actions_delete %}\\n            <sw-context-menu-item\\n                variant=\\\"danger\\\"\\n                class=\\\"sw-users-permissions-role-listing__context-menu-delete\\\"\\n                :disabled=\\\"!acl.can('users_and_permissions.deleter')\\\"\\n                @click=\\\"onDelete(item)\\\"\\n            >\\n                {{ $tc('sw-users-permissions.roles.role-grid.contextMenuDelete') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_users_permissions_role_listing_grid_columns %}\\n        <template #column-name=\\\"{ item }\\\">\\n            \\n            {% block sw_users_permissions_role_listing_grid_columns_name %}\\n            <router-link :to=\\\"{ name: 'sw.users.permissions.role.detail', params: { id: item.id } }\\\">\\n                {{ item.name }}\\n            </router-link>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_users_permissions_role_listing_grid_action_modals %}\\n        <template #action-modals=\\\"{ item }\\\">\\n            \\n            {% block sw_users_permissions_role_listing_grid_actions_modals_modal %}\\n            <sw-modal\\n                v-if=\\\"getItemToDelete(item)\\\"\\n                :title=\\\"$tc('sw-users-permissions.roles.role-grid.titleModalDelete')\\\"\\n                variant=\\\"small\\\"\\n                @modal-close=\\\"onCloseDeleteModal\\\"\\n            >\\n                \\n                {% block sw_users_permissions_role_listing_grid_actions_modals_modal_delete_text %}\\n                <p class=\\\"sw-users-permissions-role-listing__confirm-delete-text\\\">\\n                    {{ $tc('sw-users-permissions.roles.role-grid.textModalDelete', 0, { name: item.name }) }}\\n                </p>\\n                {% endblock %}\\n\\n                \\n                {% block sw_users_permissions_role_listing_grid_actions_modals_modal_footer %}\\n                <template #modal-footer>\\n                    \\n                    {% block sw_users_permissions_role_listing_grid_actions_modals_modal_close_delete %}\\n                    <sw-button\\n                        size=\\\"small\\\"\\n                        @click=\\\"onCloseDeleteModal\\\"\\n                    >\\n                        {{ $tc('sw-users-permissions.roles.role-grid.labelButtonCancel') }}\\n                    </sw-button>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_users_permissions_role_listing_grid_actions_modals_modal_confirm_delete %}\\n                    <sw-button\\n                        variant=\\\"danger\\\"\\n                        size=\\\"small\\\"\\n                        @click=\\\"onConfirmDelete(item)\\\"\\n                    >\\n                        {{ $tc('sw-users-permissions.roles.role-grid.labelButtonDelete') }}\\n                    </sw-button>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n            </sw-modal>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        <template #pagination>\\n            \\n            {% block sw_users_permissions_role_listing_grid_pagination %}\\n            <sw-pagination\\n                :page=\\\"page\\\"\\n                :limit=\\\"limit\\\"\\n                :total=\\\"total\\\"\\n                :auto-hide=\\\"true\\\"\\n                @page-change=\\\"onPageChange\\\"\\n            />\\n            {% endblock %}\\n        </template>\\n    </sw-data-grid>\\n    {% endblock %}\\n\\n    \\n    {% block sw_users_permissions_role_listing_empty_state %}\\n    <sw-empty-state\\n        v-else\\n        :absolute=\\\"false\\\"\\n        :title=\\\"$tc('sw-users-permissions.roles.role-grid.messageEmptyTitle')\\\"\\n        :subline=\\\"$tc('sw-users-permissions.roles.role-grid.messageEmptySubline')\\\"\\n    />\\n    {% endblock %}\\n\\n</sw-card>\\n{% endblock %}\\n\";","/**\n * @package services-settings\n */\nimport template from './sw-users-permissions-role-listing.html.twig';\nimport './sw-users-permissions-role-listing.scss';\n\nconst { Data, Mixin } = Shopware;\nconst { Criteria } = Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            roles: [],\n            isLoading: false,\n            itemToDelete: null,\n            confirmDelete: null,\n            disableRouteParams: true,\n            confirmPasswordModal: false,\n        };\n    },\n\n    computed: {\n        rolesColumns() {\n            return [{\n                property: 'name',\n                label: this.$tc('sw-users-permissions.roles.role-grid.labelName'),\n            }, {\n                property: 'description',\n                label: this.$tc('sw-users-permissions.roles.role-grid.labelDescription'),\n            }];\n        },\n\n        roleRepository() {\n            return this.repositoryFactory.create('acl_role');\n        },\n\n        roleCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n            // Roles created by apps should not be visible and editable in the admin\n            criteria.addFilter(Criteria.equals('app.id', null));\n            criteria.addFilter(Criteria.equals('deletedAt', null));\n\n            if (this.term) {\n                criteria.setTerm(this.term);\n            }\n\n            if (this.sortBy) {\n                criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection || 'ASC'));\n            }\n\n            return criteria;\n        },\n\n        showListingResults() {\n            if (this.isLoading) {\n                return false;\n            }\n\n            return (this.roles && this.roles.length > 0) || (this.term && this.term.length <= 0);\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.$emit('get-list');\n        },\n\n        getList() {\n            this.isLoading = true;\n            this.roles = [];\n\n            return this.roleRepository.search(this.roleCriteria).then((roles) => {\n                this.total = roles.total;\n                this.roles = roles;\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onSearch(searchTerm) {\n            this.term = searchTerm;\n\n            this.$emit('get-list');\n        },\n\n        getItemToDelete(item) {\n            if (!this.itemToDelete) {\n                return false;\n            }\n            return this.itemToDelete.id === item.id;\n        },\n\n        onDelete(role) {\n            this.itemToDelete = role;\n        },\n\n        onCloseDeleteModal() {\n            this.itemToDelete = null;\n        },\n\n        onConfirmDelete() {\n            this.confirmDelete = this.itemToDelete;\n\n            this.onCloseDeleteModal();\n\n            this.confirmPasswordModal = true;\n        },\n\n        deleteRole(context) {\n            this.confirmPasswordModal = false;\n            const role = this.confirmDelete;\n            this.confirmDelete = null;\n\n            this.roleRepository.delete(role.id, context).then(() => {\n                this.createNotificationSuccess({\n                    message: this.$tc(\n                        'sw-users-permissions.roles.role-grid.notification.deleteSuccess.message',\n                        0,\n                        { name: role.name },\n                    ),\n                });\n\n                this.$emit('get-list');\n            }).catch(() => {\n                this.createNotificationError({\n                    message: this.$tc(\n                        'sw-users-permissions.roles.role-grid.notification.deleteError.message',\n                        0,\n                        { name: role.name },\n                    ),\n                });\n            });\n        },\n\n        onCloseConfirmPasswordModal() {\n            this.confirmPasswordModal = false;\n        },\n    },\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-users-permissions-role-listing.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"cc55046a\", content, true, {});"],"sourceRoot":""}