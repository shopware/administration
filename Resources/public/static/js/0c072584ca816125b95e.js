(this.webpackJsonpAdministration=this.webpackJsonpAdministration||[]).push([[476],{Me0v:function(t,e,n){var a=n("QdE+");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,n("P8hj").default)("255e8000",a,!0,{})},"QdE+":function(t,e,n){},jgZy:function(t,e,n){"use strict";n.r(e);var a=n("CsSd"),i=n.n(a);n("Me0v");function s(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?s(Object(n),!0).forEach((function(e){i()(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}var l=Shopware.Mixin,c=Shopware.Component.getComponentHelper().mapPropertyErrors;e.default={template:'\n{% block sw_settings_tax_detail %}\n<sw-page class="sw-settings-tax-detail">\n    \n    {% block sw_settings_tax_detail_header %}\n    <template #smart-bar-header>\n        <h2 v-if="label">\n            {{ label }}\n        </h2>\n        <h2 v-else>\n            {{ $tc(\'sw-settings-tax.detail.textHeadline\') }}\n        </h2>\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_tax_detail_actions %}\n    <template #smart-bar-actions>\n        \n        {% block sw_settings_tax_detail_actions_abort %}\n        <sw-button\n            v-tooltip.bottom="{ message: \'ESC\', appearance: \'light\' }"\n            :disabled="isLoading"\n            @click="onCancel"\n        >\n            {{ $tc(\'sw-settings-tax.detail.buttonCancel\') }}\n        </sw-button>\n        {% endblock %}\n\n        \n        {% block sw_settings_tax_detail_actions_save %}\n        <sw-button-process\n            {% if VUE3 %}\n            v-model:processSuccess="isSaveSuccessful"\n            {% else %}\n            v-model="isSaveSuccessful"\n            {% endif %}\n            v-tooltip.bottom="tooltipSave"\n            class="sw-settings-tax-detail__save-action"\n            variant="primary"\n            :is-loading="isLoading"\n            :disabled="isLoading || !allowSave"\n            @click.prevent="onSave"\n        >\n            {{ $tc(\'sw-settings-tax.detail.buttonSave\') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <template #language-switch>\n        <sw-language-switch\n            :save-changes-function="saveOnLanguageChange"\n            :abort-change-function="abortOnLanguageChange"\n            @on-change="onChangeLanguage"\n        />\n    </template>\n\n    \n    {% block sw_settings_tax_detail_content %}\n    <template #content>\n        <sw-card-view>\n            <template v-if="isLoading">\n                <sw-skeleton />\n                <sw-skeleton />\n            </template>\n\n            <template v-else>\n                \n                {% block sw_settings_tax_detail_content_card %}\n                <sw-card\n                    :title="$tc(\'sw-settings-tax.detail.titleCard\')"\n                    position-identifier="sw-settings-tax-detail-content"\n                >\n                    <sw-container\n                        columns="repeat(auto-fit, minmax(250px, 1fr))"\n                        gap="0px 30px"\n                    >\n\n                        \n                        {% block sw_settings_tax_detail_content_field_name %}\n                        <sw-text-field\n                            id="sw-field--tax-name"\n                            :value="label"\n                            required\n                            name="sw-field--tax-name"\n                            :disabled="!acl.can(\'tax.editor\') || isShopwareDefaultTax"\n                            :label="$tc(\'sw-settings-tax.detail.labelName\')"\n                            :placeholder="$tc(\'sw-settings-tax.detail.placeholderName\')"\n                            :error="taxNameError"\n                            {% if VUE3 %}\n                            @update:value="changeName"\n                            {% else %}\n                            @change="changeName"\n                            {% endif %}\n                        />\n                        {% endblock %}\n\n                        \n                        {% block sw_settings_tax_detail_content_field_tax_rate %}\n                        <sw-number-field\n                            {% if VUE3 %}\n                            v-model:value="tax.taxRate"\n                            {% else %}\n                            v-model="tax.taxRate"\n                            {% endif %}\n                            name="sw-field--tax-taxRate"\n                            required\n                            :digits="3"\n                            :disabled="!acl.can(\'tax.editor\')"\n                            :label="$tc(\'sw-settings-tax.detail.labelDefaultTaxRate\')"\n                            :placeholder="$tc(\'sw-settings-tax.detail.placeholderDefaultTaxRate\')"\n                            :error="taxTaxRateError"\n                        >\n                            <template #suffix>\n                                <span>\n                                    <span v-html="$sanitize($tc(\'sw-settings-tax.general.taxRateSymbol\'))"></span>\n                                </span>\n                            </template>\n                        </sw-number-field>\n                        {% endblock %}\n\n                        <div class="sw-settings-tax-detail__switches">\n                            \n                            {% block sw_settings_tax_detail_content_field_default_tax_rate %}\n                            <sw-switch-field\n                                :key="isDefault"\n                                class="sw-settings-tax-detail__default-tax-rate"\n                                :label="$tc(\'sw-settings-tax.detail.defaultTaxLabel\')"\n                                :help-text="$tc(\'sw-settings-tax.detail.defaultTaxHelpText\')"\n                                :value="isDefault"\n                                name="sw-field--isDefault"\n                                {% if VUE3 %}\n                                @update:value="onChangeDefaultTaxRate"\n                                {% else %}\n                                @change="onChangeDefaultTaxRate"\n                                {% endif %}\n                            />\n                        {% endblock %}\n                        </div>\n                    </sw-container>\n                </sw-card>\n                {% endblock %}\n\n                \n                {% block sw_settings_tax_detail_rule_card %}\n                <sw-tax-rule-card\n                    v-if="tax.id"\n                    :disabled="!taxId"\n                    class="sw-settings-tax-detail__tax-rule-grid"\n                    :tax="tax"\n                    :is-loading="isLoading"\n                />\n                {% endblock %}\n\n                \n                {% block sw_settings_tax_detail_custom_field_sets %}\n                <sw-card\n                    v-if="showCustomFields"\n                    position-identifier="sw-settings-tax-detail-custom-field-sets"\n                    :title="$tc(\'sw-settings-custom-field.general.mainMenuItemGeneral\')"\n                    :is-loading="isLoading"\n                >\n                    <sw-custom-field-set-renderer\n                        :entity="tax"\n                        :disabled="!acl.can(\'tax.editor\')"\n                        :sets="customFieldSets"\n                    />\n                </sw-card>\n                {% endblock %}\n            </template>\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',inject:["repositoryFactory","acl","customFieldDataProviderService","systemConfigApiService","feature"],mixins:[l.getByName("notification")],shortcuts:{"SYSTEMKEY+S":{active:function(){return this.allowSave},method:"onSave"},ESCAPE:"onCancel"},props:{taxId:{type:String,required:!1,default:null}},data:function(){return{tax:{},isLoading:!1,isSaveSuccessful:!1,customFieldSets:null,defaultTaxRateId:null,changeDefaultTaxRate:!1,formerDefaultTaxName:"",config:{},isDefault:!1}},metaInfo:function(){return{title:this.$createTitle(this.identifier)}},computed:o(o({identifier:function(){return this.tax.name||""},taxRepository:function(){return this.repositoryFactory.create("tax")}},c("tax",["name","taxRate"])),{},{isNewTax:function(){return"function"===this.tax.isNew&&this.tax.isNew()},allowSave:function(){return this.isNewTax?this.acl.can("tax.creator"):this.acl.can("tax.editor")},tooltipSave:function(){if(!this.allowSave)return{message:this.$tc("sw-privileges.tooltip.warning"),disabled:this.allowSave,showOnDisabledElements:!0};var t=this.$device.getSystemKey();return{message:"".concat(t," + S"),appearance:"light"}},isShopwareDefaultTax:function(){return this.$te("global.tax-rates.".concat(this.tax.name),"en-GB")},label:function(){return this.isShopwareDefaultTax?this.$tc("global.tax-rates.".concat(this.tax.name)):this.tax.name},showCustomFields:function(){return this.customFieldSets&&this.customFieldSets.length>0},isDefaultTaxRate:function(){return!!this.defaultTaxRateId&&this.taxId===this.defaultTaxRateId}}),watch:{taxId:function(){this.taxId||this.createdComponent()},isDefaultTaxRate:function(){this.isDefault=this.isDefaultTaxRate}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var t=this;if(this.isLoading=!0,this.taxId)return this.feature.isActive("VUE3")||(this.taxId=this.$route.params.id),this.taxRepository.get(this.taxId).then((function(e){t.tax=e,t.isLoading=!1})),this.loadCustomFieldSets(),void this.reloadDefaultTaxRate();this.tax=this.taxRepository.create(),this.isLoading=!1},loadCustomFieldSets:function(){var t=this;this.customFieldDataProviderService.getCustomFieldSets("tax").then((function(e){t.customFieldSets=e}))},onSave:function(){var t=this;return this.isSaveSuccessful=!1,this.isLoading=!0,this.taxRepository.save(this.tax).then((function(){t.isSaveSuccessful=!0,t.taxId||t.$router.push({name:"sw.settings.tax.detail",params:{id:t.tax.id}}),t.taxRepository.get(t.tax.id).then((function(e){t.tax=e})).then((function(){return t.systemConfigApiService.saveValues(t.config).then((function(){t.defaultTaxRateId=t.tax.id,t.reloadDefaultTaxRate(),t.isLoading=!1}))}))})).catch((function(){t.createNotificationError({message:t.$tc("sw-settings-tax.detail.messageSaveError")}),t.isLoading=!1}))},onCancel:function(){this.$router.push({name:"sw.settings.tax.index"})},abortOnLanguageChange:function(){return this.taxRepository.hasChanges(this.tax)},saveOnLanguageChange:function(){return this.onSave()},onChangeLanguage:function(t){Shopware.State.commit("context/setApiLanguageId",t),this.createdComponent()},changeName:function(t){this.tax.name=t},reloadDefaultTaxRate:function(){var t=this;this.systemConfigApiService.getValues("core.tax").then((function(e){var n;t.defaultTaxRateId=null!==(n=e["core.tax.defaultTaxRate"])&&void 0!==n?n:null})).then((function(){t.defaultTaxRateId&&t.taxRepository.get(t.defaultTaxRateId).then((function(e){t.formerDefaultTaxName=e.name}))})).catch((function(){t.defaultTaxRateId=null}))},onChangeDefaultTaxRate:function(){var t=this.isDefaultTaxRate?"":this.taxId;this.$set(this.config,"core.tax.defaultTaxRate",t),this.changeDefaultTaxRate=!1}}}}}]);
//# sourceMappingURL=0c072584ca816125b95e.js.map