(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[86502],{367784:function(){},286502:function(e,t,i){"use strict";i.r(t),i.d(t,{default:function(){return a}}),i(973675);let{Mixin:s,Context:r}=Shopware,{Criteria:n}=Shopware.Data;var a={template:'\n{% block sw_media_library %}\n<div class="sw-media-library">\n    \n    {% block sw_media_library_display_options %}\n    <div class="sw-media-library__options-container">\n        <sw-media-display-options\n            class="sw-media-library__display-options"\n            :presentation="presentation"\n            :sorting="sorting"\n            :hide-presentation="compact"\n            @media-presentation-change="presentation = $event"\n            @media-sorting-change="sorting = $event"\n        />\n\n        <sw-extension-teaser-popover\n            position-identifier="sw-media-generate-image-button"\n        />\n\n        \n        {% block sw_media_index_create_folder %}\n        <sw-button\n            v-if="editable"\n            v-tooltip="{\n                message: $tc(\'sw-privileges.tooltip.warning\'),\n                disabled: acl.can(\'media.creator\'),\n                showOnDisabledElements: true\n            }"\n            :disabled="!acl.can(\'media.creator\')"\n            class="sw-media-index__create-folder-action"\n            variant="ghost"\n            size="small"\n            @click="createFolder"\n        >\n            {{ $tc(\'sw-media.index.buttonCreateFolder\') }}\n        </sw-button>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    \n    {% block sw_media_library_scroll_container %}\n    <div\n        ref="scrollContainer"\n        class="sw-media-library__scroll-container"\n    >\n        <div class="sw-media-library__scroll-content">\n\n            \n            {% block sw_media_library_media_grid %}\n            <sw-media-grid\n                ref="mediaGrid"\n                class="sw-media-library_media-grid"\n                :presentation="gridPresentation"\n                @media-grid-selection-clear="clearSelection"\n            >\n\n                \n                {% block sw_media_library_back_to_parent_item %}\n                <sw-media-folder-item\n                    v-if="parentFolder && (!isLoading || selectableItems.length > 0)"\n                    :allow-edit="acl.can(\'media.editor\')"\n                    :allow-delete="acl.can(\'media.deleter\')"\n                    class="sw-media-library__parent-folder"\n                    :item="parentFolder"\n                    :show-selection-indicator="false"\n                    :show-context-menu-button="false"\n                    :allow-multi-select="allowMultiSelect"\n                    :is-list="showItemsAsList"\n                    is-parent\n                    @media-item-click="goToParentFolder"\n                />\n                {% endblock %}\n\n                \n                {% block sw_media_library_media_item_list %}\n                <sw-media-entity-mapper\n                    v-for="(gridItem, index) in selectableItems"\n                    :key="gridItem.getEntityName() + \'_\' + gridItem.id"\n                    :class="`sw-media-grid-item__item--${index}`"\n                    :item="gridItem"\n                    :allow-edit="acl.can(\'media.editor\')"\n                    :allow-delete="acl.can(\'media.deleter\')"\n                    :selected="showItemSelected(gridItem)"\n                    :show-selection-indicator="isListSelect"\n                    :show-context-menu-button="editable"\n                    :is-list="showItemsAsList"\n                    :editable="editable"\n                    :allow-multi-select="allowMultiSelect"\n                    @media-item-replaced="refreshList"\n                    @media-item-delete="refreshList"\n                    @media-folder-delete="refreshList"\n                    @media-folder-remove="removeNewFolder"\n                    @media-folder-dissolve="refreshList"\n                    @media-folder-move="refreshList"\n                    @media-folder-changed="refreshList"\n                    v-on="mediaItemSelectionHandler"\n                />\n                {% endblock %}\n\n                <template v-if="isLoading">\n                    <sw-skeleton variant="media" />\n                    <sw-skeleton variant="media" />\n                    <sw-skeleton variant="media" />\n                    <sw-skeleton variant="media" />\n                    <sw-skeleton variant="media" />\n                    <sw-skeleton variant="media" />\n                    <sw-skeleton variant="media" />\n                    <sw-skeleton variant="media" />\n                </template>\n\n                \n                {% block sw_media_library_load_more_button %}\n                <sw-button\n                    v-if="showLoadMoreButton"\n                    class="sw-media-library__load-more-button"\n                    @click="loadNextItems"\n                >\n                    {{ $tc(\'sw-media.mediaLibrary.labelButtonLoadMore\') }}\n                </sw-button>\n                {% endblock %}\n            </sw-media-grid>\n            {% endblock %}\n        </div>\n    </div>\n    {% endblock %}\n\n    \n    {% block sw_media_library_empty_state %}\n    <sw-empty-state\n        v-if="shouldDisplayEmptyState"\n        :title="$tc(\'sw-empty-state.messageNoResultTitle\')"\n    >\n        <template #icon>\n            <img\n                :src="assetFilter(\'/administration/static/img/empty-states/media-empty-state.svg\')"\n                :alt="$tc(\'sw-empty-state.messageNoResultSubline\')"\n            >\n        </template>\n\n        <template #default>\n            {{ $tc(\'sw-empty-state.messageNoResultSublineBefore\') }}\n            <router-link\n                class="sw-empty-state__description-link"\n                :to="{ name: \'sw.profile.index.searchPreferences\' }"\n            >\n                {{ $tc(\'sw-empty-state.messageNoResultSublineLink\') }}\n            </router-link>\n            {{ $tc(\'sw-empty-state.messageNoResultSublineAfter\') }}\n        </template>\n    </sw-empty-state>\n    {% endblock %}\n</div>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory","acl","searchRankingService","feature"],emits:["update:selection","media-folder-change"],mixins:[s.getByName("media-grid-listener")],props:{selection:{type:Array,required:!0},folderId:{type:String,required:!1,default:null},pendingUploads:{type:Array,required:!1,default(){return[]}},limit:{type:Number,required:!1,default:25,validValues:[1,5,25,50,100,500],validator(e){return[1,5,25,50,100,500].includes(e)}},term:{type:String,required:!1,default:""},compact:{type:Boolean,required:!1,default:!1},editable:{type:Boolean,required:!1,default:!1},allowMultiSelect:{type:Boolean,required:!1,default:!0}},data(){return{isLoading:!1,selectedItems:this.selection,pageItem:1,pageFolder:1,itemLoaderDone:!1,folderLoaderDone:!1,items:[],subFolders:[],currentFolder:null,parentFolder:null,presentation:"medium-preview",sorting:{sortBy:"fileName",sortDirection:"asc"},folderSorting:{sortBy:"name",sortDirection:"asc"}}},computed:{shouldDisplayEmptyState(){return!this.isLoading&&(0===this.selectableItems.length||this.isValidTerm(this.term)&&0===this.selectableItems.length)},mediaRepository(){return this.repositoryFactory.create("media")},mediaFolderRepository(){return this.repositoryFactory.create("media_folder")},mediaFolderConfigurationRepository(){return this.repositoryFactory.create("media_folder_configuration")},selectableItems(){return[...this.subFolders,...this.pendingUploads,...this.items]},rootFolder(){let e=this.mediaFolderRepository.create(r.api);return e.id="",e.name=this.$tc("sw-media.index.rootFolderName"),e},gridPresentation(){return this.compact?"list-preview":this.presentation},showItemsAsList(){return"list-preview"===this.gridPresentation},showLoadMoreButton(){return!this.isLoading&&!this.shouldDisplayEmptyState&&!(this.itemLoaderDone&&this.folderLoaderDone)},nextMediaCriteria(){let e=new n(this.pageItem,this.limit);return e.addSorting(n.sort(this.sorting.sortBy,this.sorting.sortDirection)).setTerm(this.term),["tags","productMedia.product","categories","productManufacturers.products","mailTemplateMedia.mailTemplate","documentBaseConfigs","avatarUsers","paymentMethods","shippingMethods","cmsBlocks.section.page","cmsSections.page","cmsPages"].forEach(t=>{let i=t.split(".");e.addAssociation(t);let s=null;i.forEach(t=>{s=s?`${s}.${t}`:t,e.getAssociation(s).setLimit(25)})}),e},nextFoldersCriteria(){let e=new n(this.pageFolder,this.limit).addSorting(n.sort(this.folderSorting.sortBy,this.folderSorting.sortDirection)).setTerm(this.term);return this.term||e.addFilter(n.equals("parentId",this.folderId)),e},assetFilter(){return Shopware.Filter.getByName("asset")}},watch:{selection(){this.selectedItems=this.selection,null===this.listSelectionStartItem||this.selectedItems.includes(this.listSelectionStartItem)||(this.listSelectionStartItem=this.selectedItems[0]||null)},selectedItems(){this.$emit("update:selection",this.selectedItems)},sorting(){this.mapFolderSorting(),this.refreshList()},folderId(){this.refreshList()},term(){this.refreshList()}},created(){this.createdComponent()},methods:{createdComponent(){this.refreshList(),this.allowMultiSelect||(this.handleMediaItemClicked=({item:e})=>{this._singleSelect(e)},this.handleMediaGridItemSelected=()=>{})},async refreshList(){!0!==this.isLoading&&(this.subFolders=[],this.items=[],this.isLoading=!0,this.clearSelection(),await this.fetchAssociatedFolders(),this.pageItem=1,this.pageFolder=1,this.itemLoaderDone=!1,this.folderLoaderDone=!1,this.loadItems())},isValidTerm(e){return e?.trim()?.length>1},loadNextItems(){!0!==this.isLoading&&(this.isLoading=!0,this.loadItems())},mapFolderSorting(){switch(this.sorting.sortBy){case"createdAt":this.folderSorting.sortBy="createdAt",this.folderSorting.sortDirection=this.sorting.sortDirection;break;case"fileName":this.folderSorting.sortBy="name",this.folderSorting.sortDirection=this.sorting.sortDirection;break;default:this.folderSorting.sortBy="name",this.folderSorting.sortDirection="asc"}},isLoaderDone(e,t){return e.limit>=t.total||e.limit>t.length},async loadItems(){this.isLoading=!0;let[e,t]=await Promise.allSettled([this.nextFolders(),this.nextMedia()]);"fulfilled"===t.status?this.items.push(...t.value):this.itemLoaderDone=!1,"fulfilled"===e.status?this.subFolders.push(...e.value):this.folderLoaderDone=!1,this.isLoading=!1},async nextMedia(){if(this.itemLoaderDone)return[];let e=this.nextMediaCriteria;if(this.isValidTerm(this.term)){let t=await this.searchRankingService.getSearchFieldsByEntity("media");if(!t||Object.keys(t).length<1)return this.isLoading=!1,this.itemLoaderDone=!0,[];e=this.searchRankingService.buildSearchQueriesForEntity(t,this.term,e)}this.isValidTerm(this.term)||e.addFilter(n.equals("mediaFolderId",this.folderId)),null!=this.folderId&&this.isValidTerm(this.term)&&e.addFilter(n.multi("OR",[n.equals("mediaFolderId",this.folderId),n.contains("mediaFolder.path",this.folderId)]));let t=await this.mediaRepository.search(e,r.api);return this.itemLoaderDone=this.isLoaderDone(e,t),this.pageItem+=1,t},async nextFolders(){if(this.folderLoaderDone)return[];let e=await this.mediaFolderRepository.search(this.nextFoldersCriteria,r.api);return this.folderLoaderDone=this.isLoaderDone(this.nextFoldersCriteria,e),this.pageFolder+=1,e},async fetchAssociatedFolders(){if(null===this.folderId){this.currentFolder=null,this.parentFolder=null;return}this.currentFolder=await this.mediaFolderRepository.get(this.folderId,r.api),this.currentFolder&&this.currentFolder.parentId?this.parentFolder=await this.mediaFolderRepository.get(this.currentFolder.parentId,r.api):this.parentFolder=this.rootFolder},goToParentFolder(){this.$emit("media-folder-change",this.parentFolder.id||null)},clearSelection(){this.selectedItems=[],this.listSelectionStartItem=null},injectItem(e){if("media"===e.getEntityName()){this.injectMedia(e);return}throw Error("Injected entity has to be of 'type media'")},injectMedia(e){e.mediaFolderId===this.folderId&&(this.items.some(t=>t.id===e.id)||this.items.unshift(e))},async createFolder(){let e=this.mediaFolderRepository.create(r.api);if(e.parentId=this.folderId,e.name="",null!==this.folderId)e.configurationId=this.currentFolder.configurationId,e.useParentConfiguration=!0;else{let t=this.mediaFolderConfigurationRepository.create(r.api);t.createThumbnails=!0,t.keepProportions=!0,t.thumbnailQuality=80,await this.mediaFolderConfigurationRepository.save(t,r.api),e.configurationId=t.id,e.useParentConfiguration=!1}this.subFolders.unshift(e)},removeNewFolder(){this.subFolders.shift()}}}},973675:function(e,t,i){var s=i(367784);s.__esModule&&(s=s.default),"string"==typeof s&&(s=[[e.id,s,""]]),s.locals&&(e.exports=s.locals),i(745346).Z("d34eb8b6",s,!0,{})}}]);