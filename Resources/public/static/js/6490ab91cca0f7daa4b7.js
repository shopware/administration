(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[34347],{51147:function(){},34347:function(e,t,i){"use strict";i.r(t),i.d(t,{default:function(){return d}});var n=i(53239),o=i.n(n),s=i(82679);i(19516),i(63715);let r=Shopware.Utils;var d={template:'\n{% block sw_code_editor %}\n<div\n    class="sw-code-editor"\n    :class="classes"\n>\n\n    \n    {% block sw_text_editor_label %}\n    {% endblock %}\n\n    \n    {% block sw_code_editor_editor %}\n    \n    <sw-base-field\n        v-bind="$attrs"\n        :label="label"\n        :disabled="disabled"\n        :required="required"\n        :error="error"\n    >\n        <template #sw-field-input>\n            <div\n                :ref="`editor${editorId}`"\n                class="sw-code-editor__editor"\n                :content="value"\n                tabindex="0"\n            ></div>\n        </template>\n    </sw-base-field>\n    {% endblock %}\n    \n    {% block sw_code_editor_sanitize_info %}\n    <div\n        v-if="sanitizeInput"\n        class="sw-code-editor__sanitize-bar"\n    >\n        \n        {% block sw_code_editor_sanitize_info_content %}\n        <div\n            v-if="contentWasSanitized && enableHtmlSanitizer"\n            class="sw-code-editor__sanitized-hint"\n            :class="{\'sw-code-editor__sanitized-hint--visible\': contentWasSanitized}"\n        >\n            \n            {% block sw_code_editor_sanitize_info_content_sanitized %}\n            <sw-circle-icon\n                icon-name="regular-info-circle"\n                :size="30"\n                variant="warning"\n            />\n            <p class="sw-code-editor__sanitize-text">\n                {{ $tc(\'global.sw-code-editor.sanitizedHint\') }}\n            </p>\n            {% endblock %}\n        </div>\n        <div\n            v-if="enableHtmlSanitizer"\n            class="sw-code-editor__sanitize-info"\n            :class="{\'sw-code-editor__sanitize-info--visible\': !contentWasSanitized}"\n        >\n            \n            {% block sw_code_editor_sanitize_info_content_hint %}\n            <sw-circle-icon\n                icon-name="regular-info-circle"\n                :size="30"\n                variant="info"\n            />\n            <p class="sw-code-editor__sanitize-text">\n                {{ $tc(\'global.sw-code-editor.sanitizeInfo\') }}\n            </p>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n    </div>\n\n    <div\n        v-else-if="enableHtmlSanitizer && sanitizeInfoWarn"\n        class="sw-code-editor__sanitize-bar"\n    >\n        <div\n            class="sw-code-editor__sanitize-info"\n            :class="{\'sw-code-editor__sanitize-info--visible\': !contentWasSanitized}"\n        >\n            \n            {% block sw_code_editor_sanitize_info_content_hint %}\n            <sw-circle-icon\n                icon-name="regular-info-circle"\n                :size="30"\n                variant="info"\n            />\n            <p class="sw-code-editor__sanitize-text">\n                {{ $tc(\'global.sw-code-editor.sanitizeInfo\') }}\n            </p>\n            {% endblock %}\n        </div>\n    </div>\n    {% endblock %}\n</div>\n{% endblock %}\n',inject:["feature","userInputSanitizeService"],props:{value:{type:String,required:!1,default:""},label:{type:String,required:!1,default:""},completerFunction:{type:Function,required:!1,default:null},editorConfig:{type:Object,required:!1,default(){return{}}},completionMode:{type:String,required:!1,default:"text",validValues:["entity","text"],validator(e){return!e.length||["entity","text"].includes(e)}},mode:{type:String,required:!1,default:"twig",validValues:["twig","text"],validator(e){return!e.length||["twig","text"].includes(e)}},softWraps:{type:Boolean,required:!1,default:!0},setFocus:{type:Boolean,required:!1,default:!1},disabled:{type:Boolean,required:!1,default:!1},required:{type:Boolean,required:!1,default:!1},sanitizeInfoWarn:{type:Boolean,required:!1,default:!1},sanitizeInput:{type:Boolean,required:!1,default:!1},sanitizeFieldName:{type:String,required:!1,default:null},error:{type:Object,required:!1,default:null}},data(){return{editor:{},editorId:r.createId(),contentWasSanitized:!1}},computed:{aceConfig(){return{mode:`ace/mode/${this.mode}`,showPrintMargin:!1,wrap:this.softWraps,readOnly:this.disabled,...this.editorConfig}},classes(){return{"has--error":!!this.error}},enableHtmlSanitizer(){return Shopware.Context.app.config.settings.enableHtmlSanitizer}},watch:{value(e){null!==e&&e!==this.editor.getValue()&&this.editor.setValue(e,1)},softWraps(){this.editor.session.setOption("wrap",this.softWraps)}},mounted(){this.mountedComponent()},destroyed(){this.destroyedComponent()},methods:{mountedComponent(){this.editor=o().edit(this.$refs["editor".concat(this.editorId)],this.aceConfig),this.defineAutocompletion(this.completerFunction),this.editor.setValue(this.value||"",1),this.editor.on("input",this.onInput),this.editor.on("blur",this.onBlur),this.setFocus&&this.editor.focus(),this.$emit("mounted")},destroyedComponent(){delete this.editor},onInput(){let e=this.editor.getValue();this.value!==e&&this.$emit("update:value",e)},async onBlur(){let e=this.enableHtmlSanitizer?await this.sanitizeEditorInput(this.editor.getValue()):this.editor.getValue();this.$emit("blur",e)},async sanitizeEditorInput(e){if(this.sanitizeInput&&(this.contentWasSanitized=!1,this.value!==e))try{let t=await this.userInputSanitizeService.sanitizeInput({html:e,field:this.sanitizeFieldName});if(this.contentWasSanitized=t?.preview!==e,this.contentWasSanitized)return this.editor.setValue(t?.preview??e,1),this.editor.getValue()}catch(e){}return e},defineAutocompletion(e){if((0,s.setCompleters)([]),e){let t=JSON.parse(JSON.stringify(s.textCompleter)),i=JSON.parse(JSON.stringify(s.textCompleter));"entity"===this.completionMode?(i.identifierRegexps=[/[\[\]\.a-zA-Z_0-9\$\-\u00A2-\uFFFF]/],i.getCompletions=function(t,i,n,o,s){this.identifierRegexps=[/[\[\][a-zA-Z_0-9\$\-\u00A2-\uFFFF]/],s(null,e(o)),this.identifierRegexps=[/[\[\]\.a-zA-Z_0-9\$\-\u00A2-\uFFFF]/]},i.completerFunction=e,this.editor.completers=[i],this.editor.commands.on("afterExec",function(e){"insertstring"===e.command.name&&"\n"!==e.args&&" "!==e.args&&e.editor.execCommand("startAutocomplete",null)})):(t.identifierRegexps=null,t.getCompletions=function(t,i,n,o,s){s(null,e(o))},t.completerFunction=e,this.editor.completers=[t])}else this.editor.completers=[]}}}},63715:function(e,t,i){var n=i(51147);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),i(45346).Z("4c4e65ad",n,!0,{})}}]);