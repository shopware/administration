{"version":3,"sources":["webpack:///./src/module/sw-settings-search/component/sw-settings-search-searchable-content-general/sw-settings-search-searchable-content-general.html.twig","webpack:///./src/module/sw-settings-search/component/sw-settings-search-searchable-content-general/index.js"],"names":["Mixin","Shopware","template","inject","mixins","getByName","props","isEmpty","type","Boolean","required","columns","Array","repository","Object","searchConfigs","default","fieldConfigs","isLoading","computed","assetFilter","Filter","methods","getMatchingFields","fieldName","fieldItem","this","find","fieldConfig","value","label","onSelectField","currentField","defaultConfigs","option","field","forEach","configItem","_isNew","ranking","searchable","tokenize","onInlineEditSave","promise","_this","then","createNotificationSuccess","message","$tc","catch","createNotificationError","finally","$emit","onInlineEditCancel","onInlineEditItem","item","$refs","swSettingsSearchableContentGrid","onDbClickCell","onResetRanking","currentItem","getConfigRankingDefault","fieldConfigDefault"],"mappings":"4HAAe,ICKPA,EAAUC,SAAVD,MAGO,WACXE,SDTW,q3NCWXC,OAAQ,CACJ,OAGJC,OAAQ,CACJJ,EAAMK,UAAU,WAChBL,EAAMK,UAAU,iBAGpBC,MAAO,CACHC,QAAS,CACLC,KAAMC,QACNC,UAAU,GAGdC,QAAS,CACLH,KAAMI,MACNF,UAAU,GAGdG,WAAY,CACRL,KAAMM,OACNJ,UAAU,GAGdK,cAAe,CACXP,KAAMI,MACNF,UAAU,EACVM,QAAO,WACH,OAAO,OAIfC,aAAc,CACVT,KAAMI,MACNF,UAAU,GAGdQ,UAAW,CACPV,KAAMC,QACNC,UAAU,EACVM,SAAS,IAIjBG,SAAU,CACNC,YAAW,WACP,OAAOnB,SAASoB,OAAOhB,UAAU,WAIzCiB,QAAS,CAELC,kBAAiB,SAACC,GACd,IAAKA,EACD,MAAO,GAGX,IAAMC,EAAYC,KAAKT,aAAaU,MAAK,SAAAC,GAAW,OAAIA,EAAYC,QAAUL,KAE9E,OAAOC,EAAYA,EAAUK,MAAQ,IAGzCC,cAAa,SAACC,GACV,IAAQC,EAAmBP,KAAKT,aAAaU,MAAK,SAACO,GAAM,OAAKA,EAAOL,QAAUG,EAAaG,SAApFF,eACRP,KAAKX,cAAcqB,SAAQ,SAAAC,GAOvB,OANIA,EAAWC,SACXD,EAAWE,QAAUN,EAAeM,QACpCF,EAAWG,WAAaP,EAAeO,WACvCH,EAAWI,SAAWR,EAAeQ,UAGlCJ,MAIfK,iBAAgB,SAACC,GAAU,IAADC,EAAA,KACtBD,EACKE,MAAK,WACFD,EAAKE,0BAA0B,CAC3BC,QAASH,EAAKI,IAAI,oDAGzBC,OAAM,WACHL,EAAKM,wBAAwB,CACzBH,QAASH,EAAKI,IAAI,kDAGzBG,SAAQ,WACLP,EAAKQ,MAAM,iBAIvBC,mBAAkB,WACd3B,KAAK0B,MAAM,cAGfE,iBAAgB,SAACC,GACb7B,KAAK8B,MAAMC,gCAAgCC,cAAcH,IAG7DI,eAAc,SAAC3B,GACX,IAAKA,EAAaG,MAMd,OALAT,KAAKwB,wBAAwB,CACzBH,QAASrB,KAAKsB,IAAI,oDAGtBtB,KAAK0B,MAAM,aAIf,IAAMQ,EAAclC,KAAKX,cAAcY,MAAK,SAAC4B,GAAI,OAAKA,EAAKpB,QAAUH,EAAaG,SAC7EyB,GAOLA,EAAYrB,QAAUb,KAAKmC,wBAAwB7B,EAAaG,OAEhET,KAAK0B,MAAM,gBARP1B,KAAKwB,wBAAwB,CACzBH,QAASrB,KAAKsB,IAAI,gDAU9Ba,wBAAuB,SAACrC,GACpB,IAAKA,EACD,OAAO,EAGX,IAAMsC,EAAqBpC,KAAKT,aAAaU,MAAK,SAAAC,GAAW,OAAIA,EAAYC,QAAUL,KAEvF,OAAOsC,EAAqBA,EAAmB7B,eAAeM,QAAU","file":"static/js/92bdae91a0f33c99fd81.js","sourcesContent":["export default \"\\n{% block sw_settings_search_searchable_content_general %}\\n<div class=\\\"sw-settings-search__searchable-content-general\\\">\\n    \\n    {% block sw_settings_search_searchable_content_general_empty_state %}\\n    <sw-empty-state\\n        v-if=\\\"isEmpty\\\"\\n        :title=\\\"$tc('sw-settings-search.generalTab.textEmptyStateSearchableContent')\\\"\\n        :show-description=\\\"false\\\"\\n        :has-action-slot=\\\"true\\\"\\n        :absolute=\\\"false\\\"\\n    >\\n        <template #icon>\\n            \\n            {% block sw_settings_search_searchable_content_general_state_image %}\\n            <img\\n                :src=\\\"assetFilter('administration/static/img/empty-states/settings-empty-state.svg')\\\"\\n                :alt=\\\"$tc('sw-settings-search.generalTab.textEmptyStateSearchableContent')\\\"\\n            >\\n            {% endblock %}\\n        </template>\\n    </sw-empty-state>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_search_searchable_content_general_grid %}\\n    <sw-entity-listing\\n        v-if=\\\"!isEmpty\\\"\\n        ref=\\\"swSettingsSearchableContentGrid\\\"\\n        class=\\\"sw-settings-search__searchable-content-list\\\"\\n        :columns=\\\"columns\\\"\\n        :repository=\\\"repository\\\"\\n        :allow-column-edit=\\\"false\\\"\\n        :full-page=\\\"false\\\"\\n        :show-settings=\\\"false\\\"\\n        :show-selection=\\\"false\\\"\\n        :is-loading=\\\"isLoading\\\"\\n        :items=\\\"searchConfigs\\\"\\n        :skeleton-item-amount=\\\"searchConfigs && searchConfigs.length\\\"\\n        :allow-inline-edit=\\\"acl.can('product_search_config.editor')\\\"\\n        @inline-edit-save=\\\"onInlineEditSave\\\"\\n        @inline-edit-cancel=\\\"onInlineEditCancel\\\"\\n    >\\n        \\n        {% block sw_settings_search_searchable_content_general_field %}\\n        <template #column-field=\\\"{ item, isInlineEdit }\\\">\\n            <template v-if=\\\"item._isNew && isInlineEdit\\\">\\n                \\n                {% block sw_settings_search_searchable_content_general_field_editor %}\\n                <sw-single-select\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"item.field\\\"\\n                    {% else %}\\n                    v-model=\\\"item.field\\\"\\n                    {% endif %}\\n                    class=\\\"sw-settings-search-field-select\\\"\\n                    size=\\\"small\\\"\\n                    show-clearable-button\\n                    :options=\\\"fieldConfigs\\\"\\n                    {% if VUE3 %}\\n                    @update:value=\\\"onSelectField(item)\\\"\\n                    {% else %}\\n                    @change=\\\"onSelectField(item)\\\"\\n                    {% endif %}\\n                />\\n                {% endblock %}\\n            </template>\\n            <template v-else>\\n                \\n                {% block sw_settings_search_searchable_content_general_field_label %}\\n                {{ getMatchingFields(item.field) }}\\n                {% endblock %}\\n            </template>\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_search_searchable_content_general_ranking %}\\n        <template #column-ranking=\\\"{ item, isInlineEdit }\\\">\\n            <template v-if=\\\"isInlineEdit\\\">\\n                \\n                {% block sw_settings_search_searchable_content_general_ranking_editor %}\\n                <sw-number-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"item.ranking\\\"\\n                    {% else %}\\n                    v-model=\\\"item.ranking\\\"\\n                    {% endif %}\\n                    number-type=\\\"int\\\"\\n                    size=\\\"small\\\"\\n                />\\n                {% endblock %}\\n            </template>\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_search_searchable_content_general_searchable %}\\n        <template #column-searchable=\\\"{ item, isInlineEdit }\\\">\\n            <template v-if=\\\"isInlineEdit\\\">\\n                \\n                {% block sw_settings_search_searchable_content_general_searchable_editor %}\\n                <sw-checkbox-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"item.searchable\\\"\\n                    {% else %}\\n                    v-model=\\\"item.searchable\\\"\\n                    {% endif %}\\n                />\\n                {% endblock %}\\n            </template>\\n\\n            <template v-else>\\n                \\n                {% block sw_settings_search_searchable_content_general_searchable_label %}\\n                <sw-data-grid-column-boolean v-model=\\\"item.searchable\\\" />\\n                {% endblock %}\\n            </template>\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_search_searchable_content_general_tokenize %}\\n        <template #column-tokenize=\\\"{ item, isInlineEdit }\\\">\\n            <template v-if=\\\"isInlineEdit\\\">\\n                \\n                {% block sw_settings_search_searchable_content_general_tokenize_editor %}\\n                <sw-checkbox-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"item.tokenize\\\"\\n                    {% else %}\\n                    v-model=\\\"item.tokenize\\\"\\n                    {% endif %}\\n                />\\n                {% endblock %}\\n            </template>\\n\\n            <template v-else>\\n                \\n                {% block sw_settings_search_searchable_content_general_tokenize_label %}\\n                <sw-data-grid-column-boolean v-model=\\\"item.tokenize\\\" />\\n                {% endblock %}\\n            </template>\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_search_searchable_content_general_columns_actions %}\\n        <template #actions=\\\"{ item }\\\">\\n            <sw-context-menu-item\\n                class=\\\"sw-settings-search__searchable-content-list-action sw-settings-search__searchable-content-list-edit\\\"\\n                :disabled=\\\"!acl.can('product_search_config.editor')\\\"\\n                @click=\\\"onInlineEditItem(item)\\\"\\n            >\\n                {{ $tc('global.default.edit') }}\\n            </sw-context-menu-item>\\n\\n            \\n            {% block sw_settings_search_searchable_content_general_columns_actions_edit %}\\n            <sw-context-menu-item\\n                class=\\\"sw-settings-search__searchable-content-list-action sw-settings-search__searchable-content-list-reset\\\"\\n                :disabled=\\\"!acl.can('product_search_config.editor')\\\"\\n                @click=\\\"onResetRanking(item)\\\"\\n            >\\n                {{ $tc('sw-settings-search.generalTab.list.textResetRanking') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_search_searchable_content_general_pagination %}\\n        <template #pagination>\\n            <sw-pagination\\n                :page=\\\"page\\\"\\n                :limit=\\\"limit\\\"\\n                :total=\\\"total\\\"\\n                auto-hide\\n            />\\n        </template>\\n        {% endblock %}\\n    </sw-entity-listing>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","/**\n * @package buyers-experience\n */\nimport template from './sw-settings-search-searchable-content-general.html.twig';\n\nconst { Mixin } = Shopware;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        isEmpty: {\n            type: Boolean,\n            required: true,\n        },\n\n        columns: {\n            type: Array,\n            required: true,\n        },\n\n        repository: {\n            type: Object,\n            required: true,\n        },\n\n        searchConfigs: {\n            type: Array,\n            required: false,\n            default() {\n                return null;\n            },\n        },\n\n        fieldConfigs: {\n            type: Array,\n            required: true,\n        },\n\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    methods: {\n\n        getMatchingFields(fieldName) {\n            if (!fieldName) {\n                return '';\n            }\n\n            const fieldItem = this.fieldConfigs.find(fieldConfig => fieldConfig.value === fieldName);\n\n            return fieldItem ? fieldItem.label : '';\n        },\n\n        onSelectField(currentField) {\n            const { defaultConfigs } = this.fieldConfigs.find((option) => option.value === currentField.field);\n            this.searchConfigs.forEach(configItem => {\n                if (configItem._isNew) {\n                    configItem.ranking = defaultConfigs.ranking;\n                    configItem.searchable = defaultConfigs.searchable;\n                    configItem.tokenize = defaultConfigs.tokenize;\n                }\n\n                return configItem;\n            });\n        },\n\n        onInlineEditSave(promise) {\n            promise\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-settings-search.notification.saveSuccess'),\n                    });\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-search.notification.saveError'),\n                    });\n                })\n                .finally(() => {\n                    this.$emit('data-load');\n                });\n        },\n\n        onInlineEditCancel() {\n            this.$emit('data-load');\n        },\n\n        onInlineEditItem(item) {\n            this.$refs.swSettingsSearchableContentGrid.onDbClickCell(item);\n        },\n\n        onResetRanking(currentField) {\n            if (!currentField.field) {\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-search.notification.saveError'),\n                });\n\n                this.$emit('data-load');\n                return;\n            }\n\n            const currentItem = this.searchConfigs.find((item) => item.field === currentField.field);\n            if (!currentItem) {\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-search.notification.saveError'),\n                });\n\n                return;\n            }\n            currentItem.ranking = this.getConfigRankingDefault(currentField.field);\n\n            this.$emit('config-save');\n        },\n\n        getConfigRankingDefault(fieldName) {\n            if (!fieldName) {\n                return 0;\n            }\n\n            const fieldConfigDefault = this.fieldConfigs.find(fieldConfig => fieldConfig.value === fieldName);\n\n            return fieldConfigDefault ? fieldConfigDefault.defaultConfigs.ranking : 0;\n        },\n    },\n};\n"],"sourceRoot":""}