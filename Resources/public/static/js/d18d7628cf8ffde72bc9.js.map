{"version":3,"sources":["webpack:///./src/module/sw-settings-basic-information/component/sw-settings-captcha-select-v2/sw-settings-captcha-select-v2.scss","webpack:///./src/module/sw-settings-basic-information/component/sw-settings-captcha-select-v2/index.js","webpack:///./src/module/sw-settings-basic-information/component/sw-settings-captcha-select-v2/sw-settings-captcha-select-v2.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","template","inject","mixins","getByName","props","value","type","Object","required","data","availableCaptchas","computed","attributes","_objectSpread","this","$attrs","getTranslations","currentValue","get","set","val","$emit","activeCaptchaSelect","_this","captchaSelected","keys","forEach","key","isActive","push","_this2","includes","watch","deep","handler","created","createdComponent","methods","captchaService","list","setCaptchaOptions","_this3","map","technicalName","renderCaptchaOption","label","$tc","concat","_this4","filter","name","reduce","translations","_defineProperty","getInlineSnippet"],"mappings":"0GAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,+oBCN5C,IAAQQ,EAAUC,SAAVD,MAGO,WACXE,SCPW,+xKDSXC,OAAQ,CAAC,UAAW,kBAEpBC,OAAQ,CACJJ,EAAMK,UAAU,sBAGpBC,MAAO,CACHC,MAAO,CACHC,KAAMC,OACNC,UAAU,EACVhB,QAAS,OAIjBiB,KAAI,WACA,MAAO,CACHC,kBAAmB,KAI3BC,SAAU,CACNC,WAAU,WACN,OAAAC,IAAA,GACOC,KAAKC,QACLD,KAAKE,oBAIhBC,aAAc,CACVC,IAAG,WACC,OAAOJ,KAAKT,OAGhBc,IAAG,SAACC,GACAN,KAAKO,MAAM,QAASD,KAI5BE,oBAAqB,CACjBJ,IAAG,WAAI,IAADK,EAAA,KACIC,EAAkB,GAOxB,OANAjB,OAAOkB,KAAKX,KAAKG,cAAcS,SAAQ,SAAAC,GAC/BJ,EAAKN,aAAaU,GAAKC,UACvBJ,EAAgBK,KAAKF,MAItBH,GAGXL,IAAG,SAACC,GAAM,IAADU,EAAA,KACDV,IAAQN,KAAKQ,qBACbf,OAAOkB,KAAKX,KAAKG,cAAcS,SAAQ,SAAAC,GACnCG,EAAKb,aAAaU,GAAKC,SAAWR,EAAIW,SAASJ,SAOnEK,MAAO,CACHf,aAAc,CACVgB,MAAM,EACNC,QAAO,SAACd,GACJN,KAAKO,MAAM,QAASD,MAKhCe,QAAO,WACHrB,KAAKsB,oBAGTC,QAAS,CACLD,iBAAgB,WACZtB,KAAKwB,eAAeC,KAAKzB,KAAK0B,oBAGlCA,kBAAiB,SAACD,GAAO,IAADE,EAAA,KACpB3B,KAAKJ,kBAAoB6B,EAAKG,KAAI,SAAAC,GAAa,OAAIF,EAAKG,oBAAoBD,OAGhFC,oBAAmB,SAACD,GAChB,MAAO,CACHE,MAAO/B,KAAKgC,IAAI,+CAADC,OAAgDJ,IAC/DtC,MAAOsC,IAIf3B,gBAAe,WAAI,IAADgC,EAAA,KACd,MAAO,CAAC,QAAS,cAAe,YAC3BC,QAAO,SAAAC,GAAI,QAAMF,EAAKjC,OAAOmC,MAC7BC,QAAO,SAACC,EAAcF,GAAI,OAAArC,IAAA,GACpBuC,GAAY,GAAAC,IAAA,GACdH,EAAOF,EAAKM,iBAAiBN,EAAKjC,OAAOmC,QAC1C,Q","file":"static/js/d18d7628cf8ffde72bc9.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-captcha-select-v2.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5602f601\", content, true, {});","import template from './sw-settings-captcha-select-v2.html.twig';\nimport './sw-settings-captcha-select-v2.scss';\n\nconst { Mixin } = Shopware;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['feature', 'captchaService'],\n\n    mixins: [\n        Mixin.getByName('sw-inline-snippet'),\n    ],\n\n    props: {\n        value: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            availableCaptchas: [],\n        };\n    },\n\n    computed: {\n        attributes() {\n            return {\n                ...this.$attrs,\n                ...this.getTranslations(),\n            };\n        },\n\n        currentValue: {\n            get() {\n                return this.value;\n            },\n\n            set(val) {\n                this.$emit('input', val);\n            },\n        },\n\n        activeCaptchaSelect: {\n            get() {\n                const captchaSelected = [];\n                Object.keys(this.currentValue).forEach(key => {\n                    if (this.currentValue[key].isActive) {\n                        captchaSelected.push(key);\n                    }\n                });\n\n                return captchaSelected;\n            },\n\n            set(val) {\n                if (val !== this.activeCaptchaSelect) {\n                    Object.keys(this.currentValue).forEach(key => {\n                        this.currentValue[key].isActive = val.includes(key);\n                    });\n                }\n            },\n        },\n    },\n\n    watch: {\n        currentValue: {\n            deep: true,\n            handler(val) {\n                this.$emit('input', val);\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.captchaService.list(this.setCaptchaOptions);\n        },\n\n        setCaptchaOptions(list) {\n            this.availableCaptchas = list.map(technicalName => this.renderCaptchaOption(technicalName));\n        },\n\n        renderCaptchaOption(technicalName) {\n            return {\n                label: this.$tc(`sw-settings-basic-information.captcha.label.${technicalName}`),\n                value: technicalName,\n            };\n        },\n\n        getTranslations() {\n            return ['label', 'placeholder', 'helpText']\n                .filter(name => !!this.$attrs[name])\n                .reduce((translations, name) => ({\n                    ...translations,\n                    [name]: this.getInlineSnippet(this.$attrs[name]),\n                }), {});\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_captcha_select_v2 %}\\n<sw-container class=\\\"sw-settings-captcha-select-v2\\\">\\n\\n    \\n    {% block sw_settings_captcha_select_v2_multi_select %}\\n    <sw-multi-select\\n        {% if VUE3 %}\\n        v-model:value=\\\"activeCaptchaSelect\\\"\\n        {% else %}\\n        v-model=\\\"activeCaptchaSelect\\\"\\n        {% endif %}\\n        v-bind=\\\"attributes\\\"\\n        :options=\\\"availableCaptchas\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_captcha_select_v2_google_recaptcha_v2 %}\\n    <sw-container\\n        v-if=\\\"currentValue.googleReCaptchaV2.isActive\\\"\\n        class=\\\"sw-settings-captcha-select-v2__google-recaptcha-v2\\\"\\n    >\\n\\n        \\n        {% block sw_settings_captcha_select_v2_google_recaptcha_v2_description %}\\n        <p class=\\\"sw-settings-captcha-select-v2__description sw-settings-captcha-select-v2__google-recaptcha-v2-description\\\">\\n            {{ $tc('sw-settings-basic-information.captcha.label.googleReCaptchaV2CheckboxDescription') }}\\n        </p>\\n\\n        <p class=\\\"sw-settings-captcha-select-v2__description sw-settings-captcha-select-v2__google-recaptcha-v2-description\\\">\\n            {{ $tc('sw-settings-basic-information.captcha.label.googleReCaptchaV2InvisibleDescription') }}\\n        </p>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_captcha_select_v2_google_recaptcha_v2_site_key %}\\n        <sw-text-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"currentValue.googleReCaptchaV2.config.siteKey\\\"\\n            {% else %}\\n            v-model=\\\"currentValue.googleReCaptchaV2.config.siteKey\\\"\\n            {% endif %}\\n            name=\\\"googleReCaptchaV2SiteKey\\\"\\n            :label=\\\"$tc('sw-settings-basic-information.captcha.label.googleReCaptchaV2SiteKey')\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_captcha_select_v2_google_recaptcha_v2_secret_key %}\\n        <sw-text-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"currentValue.googleReCaptchaV2.config.secretKey\\\"\\n            {% else %}\\n            v-model=\\\"currentValue.googleReCaptchaV2.config.secretKey\\\"\\n            {% endif %}\\n            name=\\\"googleReCaptchaV2SecretKey\\\"\\n            :label=\\\"$tc('sw-settings-basic-information.captcha.label.googleReCaptchaV2SecretKey')\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_captcha_select_v2_google_recaptcha_v2_invisible %}\\n        <sw-switch-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"currentValue.googleReCaptchaV2.config.invisible\\\"\\n            {% else %}\\n            v-model=\\\"currentValue.googleReCaptchaV2.config.invisible\\\"\\n            {% endif %}\\n            bordered\\n            name=\\\"googleReCaptchaV2Invisible\\\"\\n            :label=\\\"$tc('sw-settings-basic-information.captcha.label.googleReCaptchaV2Invisible')\\\"\\n        />\\n        {% endblock %}\\n\\n    </sw-container>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_captcha_select_v2_google_recaptcha_v3 %}\\n    <sw-container\\n        v-if=\\\"currentValue.googleReCaptchaV3.isActive\\\"\\n        class=\\\"sw-settings-captcha-select-v2__google-recaptcha-v3\\\"\\n    >\\n\\n        \\n        {% block sw_settings_captcha_select_v2_google_recaptcha_v3_description %}\\n        <p class=\\\"sw-settings-captcha-select-v2__description sw-settings-captcha-select-v2__google-recaptcha-v3-description\\\">\\n            {{ $tc('sw-settings-basic-information.captcha.label.googleReCaptchaV3Description') }}\\n        </p>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_captcha_select_v2_google_recaptcha_v3_site_key %}\\n\\n        <sw-text-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"currentValue.googleReCaptchaV3.config.siteKey\\\"\\n            {% else %}\\n            v-model=\\\"currentValue.googleReCaptchaV3.config.siteKey\\\"\\n            {% endif %}\\n            name=\\\"googleReCaptchaV3SiteKey\\\"\\n            :label=\\\"$tc('sw-settings-basic-information.captcha.label.googleReCaptchaV3SiteKey')\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_captcha_select_v2_google_recaptcha_v3_secret_key %}\\n        <sw-text-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"currentValue.googleReCaptchaV3.config.secretKey\\\"\\n            {% else %}\\n            v-model=\\\"currentValue.googleReCaptchaV3.config.secretKey\\\"\\n            {% endif %}\\n            name=\\\"googleReCaptchaV3SecretKey\\\"\\n            :label=\\\"$tc('sw-settings-basic-information.captcha.label.googleReCaptchaV3SecretKey')\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_captcha_select_v2_google_recaptcha_v3_threshold_score %}\\n        <sw-number-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"currentValue.googleReCaptchaV3.config.thresholdScore\\\"\\n            {% else %}\\n            v-model=\\\"currentValue.googleReCaptchaV3.config.thresholdScore\\\"\\n            {% endif %}\\n            name=\\\"googleReCaptchaV3ThresholdScore\\\"\\n            number-type=\\\"float\\\"\\n            :min=\\\"0\\\"\\n            :max=\\\"1\\\"\\n            :step=\\\"0.1\\\"\\n            :label=\\\"$tc('sw-settings-basic-information.captcha.label.googleReCaptchaV3ThresholdScore')\\\"\\n            :help-text=\\\"$tc('sw-settings-basic-information.captcha.label.googleReCaptchaV3DescriptionThresholdScore')\\\"\\n        />\\n        {% endblock %}\\n\\n    </sw-container>\\n    {% endblock %}\\n\\n</sw-container>\\n{% endblock %}\\n\";"],"sourceRoot":""}