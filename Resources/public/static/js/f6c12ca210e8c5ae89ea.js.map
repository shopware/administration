{"version":3,"sources":["webpack:///./src/module/sw-settings-shipping/component/sw-settings-shipping-price-matrix/index.js","webpack:///./src/module/sw-settings-shipping/component/sw-settings-shipping-price-matrix/sw-settings-shipping-price-matrix.html.twig","webpack:///./src/module/sw-settings-shipping/component/sw-settings-shipping-price-matrix/sw-settings-shipping-price-matrix.scss"],"names":["_Shopware","Shopware","Mixin","Context","Criteria","Data","cloneDeep","Utils","object","_Shopware$Component$g","Component","getComponentHelper","mapState","mapGetters","template","inject","mixins","getByName","props","priceGroup","type","Object","required","disabled","Boolean","default","data","calculationTypes","label","this","$tc","value","showDeleteModal","isLoading","computed","_objectSpread","ruleRepository","repositoryFactory","create","shippingPriceRepository","labelQuantityStart","1","2","3","4","calculation","labelQuantityEnd","numberFieldType","confirmDeleteText","name","rule","Number","ruleColumns","columns","isRuleMatrix","push","property","allowResize","primary","rawData","width","apply","_toConsumableArray","currencyColumns","_this","currencies","map","currency","translated","concat","isoCode","visible","isSystemDefault","showDataGrid","prices","some","shippingPrice","calculationRuleId","disableDeleteButton","length","ruleFilterCriteria","criteria","addFilter","multi","contains","equals","addAssociation","addSorting","sort","shippingRuleFilterCriteria","usedCalculationRules","rules","forEach","includes","mainRulePlaceholder","isNew","cardTitle","methods","onAddNewShippingPrice","refPrice","newShippingPrice","api","shippingMethodId","shippingMethod","id","ruleId","currencyPrice","_inNewMatrix","quantityEnd","quantityStart","onSaveMainRule","_this2","unrestrictedPriceMatrixExists","get","then","createNotificationError","message","onSaveCustomShippingRule","_this3","$nextTick","calculationRule","onCalculationChange","_this4","onDeletePriceMatrix","onConfirmDeleteShippingPrice","_this5","$emit","onCloseDeleteModal","onDeleteShippingPrice","createNotificationInfo","actualShippingPriceIndex","indexOf","remove","convertDefaultPriceToCurrencyPrice","item","_this6","initCurrencyPrice","defaultPrice","find","price","currencyId","defaultCurrency","convertPrice","gross","linked","net","getPrice","getPriceOfCurrency","setPrice","filter","priceArray","factor","onQuantityEndChange","content","__esModule","module","i","locals","exports","add"],"mappings":"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","file":"static/js/f6c12ca210e8c5ae89ea.js","sourcesContent":["import template from './sw-settings-shipping-price-matrix.html.twig';\nimport './sw-settings-shipping-price-matrix.scss';\n\nconst { Mixin, Context, Data: { Criteria } } = Shopware;\nconst { cloneDeep } = Shopware.Utils.object;\nconst { mapState, mapGetters } = Shopware.Component.getComponentHelper();\n\n/**\n * @package checkout\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'feature'],\n\n    mixins: [\n        Mixin.getByName('placeholder'),\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        priceGroup: {\n            type: Object,\n            required: true,\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            calculationTypes: [\n                { label: this.$tc('sw-settings-shipping.priceMatrix.calculationLineItemCount'), value: 1 },\n                { label: this.$tc('sw-settings-shipping.priceMatrix.calculationPrice'), value: 2 },\n                { label: this.$tc('sw-settings-shipping.priceMatrix.calculationWeight'), value: 3 },\n                { label: this.$tc('sw-settings-shipping.priceMatrix.calculationVolume'), value: 4 },\n            ],\n            showDeleteModal: false,\n            isLoading: false,\n        };\n    },\n\n    computed: {\n        ...mapState('swShippingDetail', [\n            'shippingMethod',\n            'currencies',\n        ]),\n\n        ...mapGetters('swShippingDetail', [\n            'defaultCurrency',\n            'usedRules',\n            'unrestrictedPriceMatrixExists',\n            'newPriceMatrixExists',\n        ]),\n\n        ruleRepository() {\n            return this.repositoryFactory.create('rule');\n        },\n\n        shippingPriceRepository() {\n            return this.repositoryFactory.create('shipping_method_price');\n        },\n\n        labelQuantityStart() {\n            const calculationType = {\n                1: 'sw-settings-shipping.priceMatrix.columnQuantityStart',\n                2: 'sw-settings-shipping.priceMatrix.columnPriceStart',\n                3: 'sw-settings-shipping.priceMatrix.columnWeightStart',\n                4: 'sw-settings-shipping.priceMatrix.columnVolumeStart',\n            };\n\n            return calculationType[this.priceGroup.calculation]\n                || 'sw-settings-shipping.priceMatrix.columnQuantityStart';\n        },\n\n        labelQuantityEnd() {\n            const calculationType = {\n                1: 'sw-settings-shipping.priceMatrix.columnQuantityEnd',\n                2: 'sw-settings-shipping.priceMatrix.columnPriceEnd',\n                3: 'sw-settings-shipping.priceMatrix.columnWeightEnd',\n                4: 'sw-settings-shipping.priceMatrix.columnVolumeEnd',\n            };\n\n            return calculationType[this.priceGroup.calculation]\n                || 'sw-settings-shipping.priceMatrix.columnQuantityEnd';\n        },\n\n        numberFieldType() {\n            const calculationType = {\n                1: 'int',\n                2: 'float',\n                3: 'float',\n                4: 'float',\n            };\n\n            return calculationType[this.priceGroup.calculation]\n                || 'float';\n        },\n\n        confirmDeleteText() {\n            const name = this.priceGroup.rule ? this.priceGroup.rule.name : '';\n            return this.$tc(\n                'sw-settings-shipping.priceMatrix.textDeleteConfirm',\n                Number(!!this.priceGroup.rule),\n                { name: name },\n            );\n        },\n\n        ruleColumns() {\n            const columns = [];\n\n            if (this.isRuleMatrix) {\n                columns.push({\n                    property: 'calculationRule',\n                    label: 'sw-settings-shipping.priceMatrix.columnCalculationRule',\n                    allowResize: true,\n                    primary: true,\n                    rawData: true,\n                    width: '250px',\n                });\n            } else {\n                columns.push({\n                    property: 'quantityStart',\n                    label: this.labelQuantityStart,\n                    allowResize: true,\n                    primary: true,\n                    rawData: true,\n                });\n                columns.push({\n                    property: 'quantityEnd',\n                    label: this.labelQuantityEnd,\n                    allowResize: true,\n                    rawData: true,\n                    primary: true,\n                    width: '130px',\n                });\n            }\n\n            columns.push(...this.currencyColumns);\n\n            return columns;\n        },\n\n        currencyColumns() {\n            return this.currencies.map((currency) => {\n                let label = currency.translated.name || currency.name;\n                label = `${label} ${this.$tc('sw-settings-shipping.priceMatrix.labelGrossNet')}`;\n                return {\n                    property: `price-${currency.isoCode}`,\n                    label: label,\n                    visible: true,\n                    allowResize: true,\n                    primary: !!currency.isSystemDefault,\n                    rawData: false,\n                    width: '200px',\n                };\n            });\n        },\n\n        showDataGrid() {\n            return !!this.priceGroup.calculation ||\n                this.priceGroup.prices.some(shippingPrice => shippingPrice.calculationRuleId);\n        },\n\n        disableDeleteButton() {\n            return this.priceGroup.prices.length <= 1;\n        },\n\n        ruleFilterCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(Criteria.multi(\n                'OR',\n                [\n                    Criteria.contains('rule.moduleTypes.types', 'price'),\n                    Criteria.equals('rule.moduleTypes', null),\n                ],\n            ));\n\n            criteria.addAssociation('conditions')\n                .addSorting(Criteria.sort('name', 'ASC', false));\n\n            return criteria;\n        },\n\n        shippingRuleFilterCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(Criteria.multi(\n                'OR',\n                [\n                    Criteria.contains('rule.moduleTypes.types', 'shipping'),\n                    Criteria.equals('rule.moduleTypes', null),\n                ],\n            ));\n\n            criteria.addAssociation('conditions');\n\n            return criteria;\n        },\n\n        isRuleMatrix() {\n            return !this.priceGroup.calculation;\n        },\n\n        usedCalculationRules() {\n            const rules = [];\n            if (!this.isRuleMatrix) {\n                return rules;\n            }\n\n            this.priceGroup.prices.forEach(shippingPrice => {\n                if (!rules.includes(shippingPrice.calculationRuleId)) {\n                    rules.push(shippingPrice.calculationRuleId);\n                }\n            });\n\n            return rules;\n        },\n\n        mainRulePlaceholder() {\n            if (this.priceGroup.isNew) {\n                return this.$tc('sw-settings-shipping.priceMatrix.chooseOrCreateRule');\n            }\n\n            return this.$tc('sw-settings-shipping.priceMatrix.noRestriction');\n        },\n\n        cardTitle() {\n            if (!this.priceGroup.rule && !this.priceGroup.isNew) {\n                return this.$tc('sw-settings-shipping.priceMatrix.noRestriction');\n            }\n\n            return this.priceGroup.rule ? this.priceGroup.rule.name : this.$tc('sw-settings-shipping.priceMatrix.titleCard');\n        },\n    },\n\n    methods: {\n        onAddNewShippingPrice() {\n            const refPrice = this.priceGroup.prices[this.priceGroup.prices.length - 1];\n\n            const newShippingPrice = this.shippingPriceRepository.create(Context.api);\n            newShippingPrice.shippingMethodId = this.shippingMethod.id;\n            newShippingPrice.ruleId = this.priceGroup.ruleId;\n            newShippingPrice.currencyPrice = cloneDeep(refPrice.currencyPrice);\n\n            if (refPrice._inNewMatrix) {\n                newShippingPrice._inNewMatrix = true;\n            }\n\n            if (this.isRuleMatrix) {\n                this.shippingMethod.prices.push(newShippingPrice);\n                return;\n            }\n\n            if (!refPrice.quantityEnd) {\n                refPrice.quantityEnd = refPrice.quantityStart;\n            }\n            newShippingPrice.calculation = refPrice.calculation;\n\n            // If the calculation type is \"quantity\" always increase by one, otherwise use end as start\n            if (this.priceGroup.calculation === 1) {\n                newShippingPrice.quantityStart = refPrice.quantityEnd + 1 > 1 ? refPrice.quantityEnd + 1 : 2;\n            } else {\n                newShippingPrice.quantityStart = refPrice.quantityEnd;\n            }\n\n            newShippingPrice.quantityEnd = null;\n\n            this.shippingMethod.prices.push(newShippingPrice);\n        },\n\n        onSaveMainRule(ruleId) {\n            // RuleId can not set to null if there is already an unrestricted rule\n            if (!ruleId && this.unrestrictedPriceMatrixExists && this.priceGroup.ruleId !== ruleId) {\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-shipping.priceMatrix.unrestrictedRuleAlreadyExistsMessage'),\n                });\n                return;\n            }\n\n            this.ruleRepository.get(ruleId, Context.api).then(rule => {\n                this.priceGroup.prices.forEach((shippingPrice) => {\n                    shippingPrice.ruleId = ruleId;\n                    shippingPrice.rule = rule;\n                    // Remove \"_inNewMatrix\" flag, since a rule is now assigned.\n                    if (shippingPrice._inNewMatrix) {\n                        delete shippingPrice._inNewMatrix;\n                    }\n                });\n            });\n        },\n\n        onSaveCustomShippingRule(ruleId, shippingPrice) {\n            // If shippingPrice is empty, the first(and only) price of this priceGroup is used - occurs\n            // when the priceGroup is new and the user has chosen a custom rule for this group.\n            if (!shippingPrice) {\n                shippingPrice = this.priceGroup.prices[0];\n            }\n\n            // Next tick is necessary because otherwise the modal can not be removed from the dom, since it is moved\n            // to the body and Vue can't keep track of it if the parent component is removed (by isLoading)\n            this.$nextTick(() => { this.isLoading = true; });\n            this.ruleRepository.get(ruleId, Context.api).then(rule => {\n                shippingPrice.calculationRuleId = ruleId;\n                shippingPrice.calculationRule = rule;\n                this.isLoading = false;\n            });\n        },\n\n        onCalculationChange(calculation) {\n            this.priceGroup.prices.forEach(shippingPrice => {\n                shippingPrice.calculation = Number(calculation);\n                shippingPrice.ruleId = this.priceGroup.ruleId;\n            });\n        },\n\n        onDeletePriceMatrix() {\n            this.showDeleteModal = true;\n        },\n\n        onConfirmDeleteShippingPrice() {\n            this.showDeleteModal = false;\n            this.$nextTick(() => {\n                this.$emit('delete-price-matrix', this.priceGroup);\n            });\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onDeleteShippingPrice(shippingPrice) {\n            // if it is the only item in the priceGroup\n            if (this.priceGroup.prices.length <= 1) {\n                this.createNotificationInfo({\n                    message: this.$tc('sw-settings-shipping.priceMatrix.deletionNotPossibleMessage'),\n                });\n\n                return;\n            }\n\n            // get actual rule index\n            const actualShippingPriceIndex = this.priceGroup.prices.indexOf(shippingPrice);\n\n            // if it is the last item\n            if (typeof shippingPrice.quantityEnd === 'undefined' || shippingPrice.quantityEnd === null) {\n                // get previous rule\n                const previousRule = this.priceGroup.prices[actualShippingPriceIndex - 1];\n\n                // set the quantityEnd from the previous rule to null\n                previousRule.quantityEnd = null;\n            } else {\n                // get next rule\n                const nextRule = this.priceGroup.prices[actualShippingPriceIndex + 1];\n\n                // set the quantityStart from the next rule to the quantityStart from the actual rule\n                nextRule.quantityStart = shippingPrice.quantityStart;\n            }\n\n            // delete rule\n            this.shippingMethod.prices.remove(shippingPrice.id);\n        },\n\n        convertDefaultPriceToCurrencyPrice(item, currency) {\n            if (!item.currencyPrice) {\n                this.initCurrencyPrice(item);\n            }\n\n            const defaultPrice = item.currencyPrice.find(price => {\n                return price.currencyId === this.defaultCurrency.id;\n            });\n\n            return this.convertPrice(defaultPrice, currency);\n        },\n\n        /**\n         * Initialises the currencyPrice field with the default currency\n         */\n        initCurrencyPrice(shippingPrice) {\n            shippingPrice.currencyPrice = [{\n                currencyId: this.defaultCurrency.id,\n                gross: 0,\n                linked: false,\n                net: 0,\n            }];\n        },\n\n        getPrice(shippingPrice, currency) {\n            const currencyPrice = this.getPriceOfCurrency(shippingPrice, currency);\n            if (currencyPrice) {\n                return currencyPrice;\n            }\n\n            return null;\n        },\n\n        setPrice(shippingPrice, currency, value) {\n            if (!value) {\n                shippingPrice.currencyPrice = shippingPrice.currencyPrice.filter(price => {\n                    return price.currencyId !== currency.id;\n                });\n                return;\n            }\n\n            const price = {\n                currencyId: currency.id,\n                gross: value.gross,\n                linked: false,\n                net: value.net,\n            };\n            shippingPrice.currencyPrice.push(price);\n        },\n\n        getPriceOfCurrency(priceArray, currency) {\n            if (!priceArray.currencyPrice) {\n                this.initCurrencyPrice(priceArray);\n            }\n\n            return priceArray.currencyPrice.find(price => {\n                return price.currencyId === currency.id;\n            });\n        },\n\n        convertPrice(value, currency) {\n            return {\n                net: value.net * currency.factor,\n                gross: value.gross * currency.factor,\n                currencyId: currency.id,\n                linked: false,\n            };\n        },\n\n        onQuantityEndChange(price) {\n            // when not last price\n            if (this.priceGroup.prices.indexOf(price) + 1 !== this.priceGroup.prices.length) {\n                return;\n            }\n\n            this.onAddNewShippingPrice();\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_shipping_price_matrix %}\\n<sw-card\\n    :title=\\\"cardTitle\\\"\\n    :is-loading=\\\"isLoading\\\"\\n    class=\\\"sw-settings-shipping-price-matrix\\\"\\n    position-identifier=\\\"sw-settings-shipping-price-matrix\\\"\\n>\\n    \\n    {% block sw_settings_shipping_price_matrix_topbar_alert %}\\n    <sw-alert\\n        v-if=\\\"priceGroup.isNew\\\"\\n        class=\\\"sw-settings-shipping-price-matrix__new-matrix-alert\\\"\\n        variant=\\\"warning\\\"\\n        :title=\\\"$tc('global.default.warning')\\\"\\n        :closable=\\\"false\\\"\\n    >\\n        {{ $tc('sw-settings-shipping.priceMatrix.newMatrixAlertMessage') }}\\n    </sw-alert>\\n    {% endblock %}\\n    \\n    {% block sw_settings_shipping_price_matrix_topbar %}\\n    <sw-container\\n        columns=\\\"1fr 160px 35px\\\"\\n        gap=\\\"0px 24px\\\"\\n        class=\\\"sw-settings-shipping-price-matrix__top-container\\\"\\n    >\\n        \\n        {% block sw_settings_shipping_price_matrix_topbar_rule_select %}\\n        <sw-select-rule-create\\n            class=\\\"sw-settings-shipping-price-matrix__top-container-rule-select\\\"\\n            :rule-id=\\\"priceGroup.ruleId\\\"\\n            :rule-filter=\\\"ruleFilterCriteria\\\"\\n            size=\\\"small\\\"\\n            :disabled=\\\"disabled\\\"\\n            :placeholder=\\\"mainRulePlaceholder\\\"\\n            rule-aware-group-key=\\\"shippingMethodPrices\\\"\\n            :restricted-rule-ids=\\\"usedRules\\\"\\n            :restricted-rule-ids-tooltip-label=\\\"$tc('sw-settings-shipping.priceMatrix.ruleAlreadyUsed')\\\"\\n            @save-rule=\\\"onSaveMainRule\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_shipping_price_matrix_topbar_new_price %}\\n        <sw-button\\n            size=\\\"x-small\\\"\\n            class=\\\"sw-settings-shipping-price-matrix__top-container-add-new-rule\\\"\\n            :variant=\\\"!showDataGrid ? '': 'ghost'\\\"\\n            :disabled=\\\"!showDataGrid || disabled\\\"\\n            @click=\\\"onAddNewShippingPrice\\\"\\n        >\\n            <template v-if=\\\"isRuleMatrix\\\">\\n                {{ $tc('sw-settings-shipping.priceMatrix.addNewRule') }}\\n            </template>\\n            <template v-else>\\n                {{ $tc('sw-settings-shipping.priceMatrix.addNewShippingPrice') }}\\n            </template>\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_shipping_price_matrix_topbar_context_button %}\\n        <sw-context-button\\n            :disabled=\\\"!showDataGrid || disabled\\\"\\n            class=\\\"sw-settings-shipping-price-matrix__price-group-context\\\"\\n        >\\n            \\n            {% block sw_settings_shipping_price_matrix_topbar_context_button_duplicate %}\\n            <sw-context-menu-item\\n                v-tooltip=\\\"{\\n                    showDelay: 300,\\n                    showOnDisabledElements: true,\\n                    message: $tc('sw-settings-shipping.priceMatrix.newMatrixAlreadyExists'),\\n                    disabled: !newPriceMatrixExists\\n                }\\\"\\n                :disabled=\\\"newPriceMatrixExists\\\"\\n                class=\\\"sw-settings-shipping-price-matrix__action-duplicate\\\"\\n                @click=\\\"$emit('duplicate-price-matrix', priceGroup)\\\"\\n            >\\n                {{ $tc('sw-settings-shipping.priceMatrix.duplicateMatrixContextLabel') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n            \\n            {% block sw_settings_shipping_price_matrix_topbar_context_button_delete %}\\n            <sw-context-menu-item\\n                class=\\\"sw-settings-shipping-price-matrix__action-delete\\\"\\n                variant=\\\"danger\\\"\\n                @click=\\\"onDeletePriceMatrix\\\"\\n            >\\n                {{ $tc('sw-settings-shipping.priceMatrix.deleteMatrixContextLabel') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n        </sw-context-button>\\n        {% endblock %}\\n    </sw-container>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_shipping_price_matrix_price_grid %}\\n    <sw-data-grid\\n        v-if=\\\"showDataGrid\\\"\\n        :data-source=\\\"priceGroup.prices\\\"\\n        :columns=\\\"ruleColumns\\\"\\n        :show-selection=\\\"false\\\"\\n        :show-settings=\\\"true\\\"\\n        :compact-mode=\\\"true\\\"\\n    >\\n        \\n        {% block sw_settings_shipping_price_matrix_price_grid_column_calculcation_rule %}\\n        <template\\n            #column-calculationRule=\\\"{ item, itemIndex, compact }\\\"\\n        >\\n            <sw-select-rule-create\\n                class=\\\"sw-settings-shipping-price-matrix__column-calculation-rule-select\\\"\\n                size=\\\"small\\\"\\n                :disabled=\\\"disabled\\\"\\n                :rule-id=\\\"item.calculationRuleId\\\"\\n                :rule-filter=\\\"shippingRuleFilterCriteria\\\"\\n                :placeholder=\\\"$tc('sw-settings-shipping.priceMatrix.chooseCustomRule')\\\"\\n                rule-aware-group-key=\\\"shippingMethodPriceCalculations\\\"\\n                :restricted-rule-ids=\\\"usedCalculationRules\\\"\\n                :restricted-rule-ids-tooltip-label=\\\"$tc('sw-settings-shipping.priceMatrix.ruleAlreadyUsedInMatrix')\\\"\\n                @save-rule=\\\"(ruleId) => onSaveCustomShippingRule(ruleId, item)\\\"\\n            >\\n                <template #rule-modal=\\\"{ showRuleModal, onSaveRule, onCloseRuleModal }\\\">\\n                    <sw-price-rule-modal\\n                        v-if=\\\"showRuleModal\\\"\\n                        rule-aware-group-key=\\\"shippingMethodPriceCalculations\\\"\\n                        @save=\\\"onSaveRule\\\"\\n                        @modal-close=\\\"onCloseRuleModal\\\"\\n                    />\\n                </template>\\n            </sw-select-rule-create>\\n        </template>\\n        {% endblock %}\\n        \\n        {% block sw_settings_shipping_price_matrix_price_grid_column_quantity_start %}\\n        <template\\n            #column-quantityStart=\\\"{ item, itemIndex, compact }\\\"\\n        >\\n            <sw-number-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"item.quantityStart\\\"\\n                {% else %}\\n                v-model=\\\"item.quantityStart\\\"\\n                {% endif %}\\n                :disabled=\\\"disabled\\\"\\n                :name=\\\"`sw-field--${item.id}-quantity-start`\\\"\\n                :number-type=\\\"numberFieldType\\\"\\n                :size=\\\"compact ? 'small' : 'default'\\\"\\n                :min=\\\"priceGroup.prices[itemIndex - 1] ? priceGroup.prices[itemIndex - 1].quantityEnd : 0\\\"\\n                :max=\\\"item.quantityEnd ? item.quantityEnd : null\\\"\\n                :digits=\\\"3\\\"\\n            />\\n        </template>\\n        {% endblock %}\\n        \\n        {% block sw_settings_shipping_price_matrix_price_grid_column_quantity_end %}\\n        <template\\n            #column-quantityEnd=\\\"{ item, itemIndex, compact }\\\"\\n        >\\n            <sw-number-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"item.quantityEnd\\\"\\n                {% else %}\\n                v-model=\\\"item.quantityEnd\\\"\\n                {% endif %}\\n                :disabled=\\\"disabled\\\"\\n                :name=\\\"`sw-field--${item.id}-quantity-end`\\\"\\n                :number-type=\\\"numberFieldType\\\"\\n                :size=\\\"compact ? 'small' : 'default'\\\"\\n                :placeholder=\\\"$tc('sw-settings-shipping.priceMatrix.any')\\\"\\n                :validation=\\\"item.quantityEnd === null || item.quantityEnd > item.quantityStart\\\"\\n                :min=\\\"item.quantityStart\\\"\\n                :digits=\\\"3\\\"\\n                {% if VUE3 %}\\n                @update:value=\\\"onQuantityEndChange(item)\\\"\\n                {% else %}\\n                @change=\\\"onQuantityEndChange(item)\\\"\\n                {% endif %}\\n            />\\n        </template>\\n        {% endblock %}\\n        \\n        {% block sw_settings_shipping_price_matrix_price_grid_currencies_list %}\\n        <template\\n            v-for=\\\"currency in currencies\\\"\\n            {% if VUE3 %}\\n            :key=\\\"currency.isoCode\\\"\\n            {% endif %}\\n            #[`column-price-${currency.isoCode}`]=\\\"{ item, column, compact }\\\"\\n        >\\n            <sw-inherit-wrapper\\n                {% if VUE2 %}\\n                :key=\\\"currency.isoCode\\\"\\n                {% endif %}\\n                class=\\\"sw-settings-shipping-price-matrix__price\\\"\\n                :value=\\\"getPrice(item, currency)\\\"\\n                :has-parent=\\\"!currency.isSystemDefault\\\"\\n                :inherited-value=\\\"currency.isSystemDefault ? null : convertDefaultPriceToCurrencyPrice(item, currency)\\\"\\n                @input=\\\"setPrice(item, currency, $event)\\\"\\n            >\\n                <template #content=\\\"props\\\">\\n\\n                    <sw-inheritance-switch\\n                        v-if=\\\"!currency.isSystemDefault\\\"\\n                        class=\\\"sw-settings-shipping-price-matrix__price-inherit-icon\\\"\\n                        :is-inherited=\\\"props.isInherited\\\"\\n                        :disabled=\\\"disabled\\\"\\n                        @inheritance-restore=\\\"props.restoreInheritance\\\"\\n                        @inheritance-remove=\\\"props.removeInheritance\\\"\\n                    />\\n\\n                    <sw-number-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"props.currentValue.gross\\\"\\n                        {% else %}\\n                        v-model=\\\"props.currentValue.gross\\\"\\n                        {% endif %}\\n                        :name=\\\"`sw-field--${item.id}-${currency.id}-gross`\\\"\\n                        :size=\\\"compact ? 'small' : 'default'\\\"\\n                        class=\\\"sw-settings-shipping-price-matrix__price-input\\\"\\n                        :digits=\\\"50\\\"\\n                        :disabled=\\\"props.isInherited || disabled\\\"\\n                    />\\n                    <sw-number-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"props.currentValue.net\\\"\\n                        {% else %}\\n                        v-model=\\\"props.currentValue.net\\\"\\n                        {% endif %}\\n                        :name=\\\"`sw-field--${item.id}-${currency.id}-net`\\\"\\n                        :size=\\\"compact ? 'small' : 'default'\\\"\\n                        class=\\\"sw-settings-shipping-price-matrix__price-input\\\"\\n                        :digits=\\\"50\\\"\\n                        :disabled=\\\"props.isInherited || disabled\\\"\\n                    />\\n                </template>\\n            </sw-inherit-wrapper>\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_shipping_price_matrix_price_grid_actions %}\\n        <template #actions=\\\"{ item }\\\">\\n            \\n            {% block sw_settings_shipping_price_matrix_price_grid_actions_delete %}\\n            <sw-context-menu-item\\n                :disabled=\\\"disableDeleteButton || disabled\\\"\\n                variant=\\\"danger\\\"\\n                @click=\\\"onDeleteShippingPrice(item)\\\"\\n            >\\n                {{ $tc('sw-settings-shipping.priceMatrix.contextMenuDeletePrice') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n    </sw-data-grid>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_shipping_price_matrix_empty %}\\n    <div\\n        v-else\\n        class=\\\"sw-settings-shipping-price-matrix__empty\\\"\\n    >\\n        \\n        {% block sw_settings_shipping_price_matrix_empty_text %}\\n        <p class=\\\"sw-settings-shipping-price-matrix__empty-text\\\">\\n            {{ $tc('sw-settings-shipping.priceMatrix.emptyText') }}\\n        </p>\\n        {% endblock %}\\n        <sw-container\\n            columns=\\\"1fr 10px 1fr\\\"\\n            gap=\\\"0px 24px\\\"\\n        >\\n            \\n            {% block sw_settings_shipping_price_matrix_empty_property_store %}\\n            <sw-single-select\\n                class=\\\"sw-settings-shipping-price-matrix__empty--select-property\\\"\\n                :options=\\\"calculationTypes\\\"\\n                :value=\\\"priceGroup.calculation\\\"\\n                :disabled=\\\"disabled\\\"\\n                size=\\\"small\\\"\\n                show-clearable-button\\n                :placeholder=\\\"$tc('sw-settings-shipping.priceMatrix.selectProperty')\\\"\\n                {% if VUE3 %}\\n                @update:value=\\\"onCalculationChange\\\"\\n                {% else %}\\n                @change=\\\"onCalculationChange\\\"\\n                {% endif %}\\n            />\\n            {% endblock %}\\n\\n            <p class=\\\"sw-settings-shipping-price-matrix__empty-text-or\\\">\\n                {{ $tc('sw-settings-shipping.priceMatrix.textOr') }}\\n            </p>\\n\\n            \\n            {% block sw_settings_shipping_price_matrix_empty_rule_select %}\\n            <sw-select-rule-create\\n                size=\\\"small\\\"\\n                :disabled=\\\"disabled\\\"\\n                :placeholder=\\\"$tc('sw-settings-shipping.priceMatrix.chooseCustomRule')\\\"\\n                rule-aware-group-key=\\\"shippingMethodPriceCalculations\\\"\\n                :restricted-rule-ids=\\\"usedCalculationRules\\\"\\n                :restricted-rule-ids-tooltip-label=\\\"$tc('sw-settings-shipping.priceMatrix.ruleAlreadyUsedInMatrix')\\\"\\n                @save-rule=\\\"(ruleId) => { onSaveCustomShippingRule(ruleId) }\\\"\\n            >\\n                <template #rule-modal=\\\"{ showRuleModal, onSaveRule, onCloseRuleModal }\\\">\\n                    <sw-price-rule-modal\\n                        v-if=\\\"showRuleModal\\\"\\n                        rule-aware-group-key=\\\"shippingMethodPriceCalculations\\\"\\n                        @save=\\\"onSaveRule\\\"\\n                        @modal-close=\\\"onCloseRuleModal\\\"\\n                    />\\n                </template>\\n            </sw-select-rule-create>\\n            {% endblock %}\\n        </sw-container>\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_shipping_price_matrix_delete_modal %}\\n    <sw-modal\\n        v-if=\\\"showDeleteModal\\\"\\n        :title=\\\"$tc('global.default.warning')\\\"\\n        variant=\\\"small\\\"\\n        @modal-close=\\\"onCloseDeleteModal\\\"\\n    >\\n        \\n        {% block sw_settings_shipping_price_matrix_delete_modal_confirm_delete_text %}\\n        <p class=\\\"sw-settings-shipping-price-matrix__confirm-delete-text\\\">\\n            {{ confirmDeleteText }}\\n        </p>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_shipping_price_matrix_delete_modal_footer %}\\n        <template #modal-footer>\\n            \\n            {% block sw_settings_shipping_price_matrix_delete_modal_cancel %}\\n            <sw-button\\n                size=\\\"small\\\"\\n                @click=\\\"onCloseDeleteModal\\\"\\n            >\\n                {{ $tc('sw-settings-shipping.priceMatrix.buttonCancel') }}\\n            </sw-button>\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_shipping_price_matrix_delete_modal_confirm %}\\n            <sw-button\\n                variant=\\\"danger\\\"\\n                size=\\\"small\\\"\\n                @click=\\\"onConfirmDeleteShippingPrice\\\"\\n            >\\n                {{ $tc('sw-settings-shipping.priceMatrix.buttonDelete') }}\\n            </sw-button>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n    </sw-modal>\\n    {% endblock %}\\n</sw-card>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-shipping-price-matrix.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4785c832\", content, true, {});"],"sourceRoot":""}