"use strict";(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[90046],{90046:function(t,e,a){a.r(e),a.d(e,{default:function(){return r}});let{Context:i}=Shopware,{Criteria:s,EntityCollection:n}=Shopware.Data;var r={template:'\n{% block sw_settings_tax_rule_type_individual_states %}\n<sw-entity-multi-select\n    v-if="individualStates && taxRule.countryId"\n    :label="$tc(\'sw-settings-tax.taxRuleCard.labelStates\')"\n    :placeholder="$tc(\'sw-settings-tax.taxRuleCard.placeholderStates\')"\n    :criteria="exclusionCriteria"\n    :entity-collection="individualStates"\n    @update:entity-collection="onChange"\n/>\n{% endblock %}\n',inject:["repositoryFactory"],props:{taxRule:{type:Object,required:!0}},data(){return{individualStates:null}},computed:{exclusionCriteria(){let t=new s(1,25);return t.addFilter(s.equals("countryId",this.taxRule.countryId)),t},stateRepository(){return this.repositoryFactory.create("country_state")}},created(){this.createdComponent()},methods:{createdComponent(){if(this.taxRule.data&&this.taxRule.data.states&&this.taxRule.data.states.length){let t=new s(1,25);t.setIds(this.taxRule.data.states),this.stateRepository.search(t,i.api).then(t=>{this.individualStates=t})}else this.taxRule.data={states:[]},this.individualStates=new n(this.stateRepository.route,this.stateRepository.entityName,i.api)},onChange(t){this.individualStates=t,this.taxRule.data.states=t.getIds()}}}}}]);