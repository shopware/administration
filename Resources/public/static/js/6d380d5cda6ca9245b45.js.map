{"version":3,"sources":["webpack:///./src/module/sw-users-permissions/page/sw-users-permissions-user-detail/index.js","webpack:///./src/module/sw-users-permissions/page/sw-users-permissions-user-detail/sw-users-permissions-user-detail.html.twig","webpack:///./src/module/sw-users-permissions/page/sw-users-permissions-user-detail/sw-users-permissions-user-detail.scss"],"names":["_Shopware","Shopware","Component","Mixin","Criteria","Data","mapPropertyErrors","getComponentHelper","warn","Utils","debug","template","inject","mixins","getByName","shortcuts","ESCAPE","data","isLoading","userId","user","currentUser","languages","integrations","currentIntegration","mediaItem","newPassword","newPasswordConfirm","isEmailUsed","isUsernameUsed","isIntegrationsLoading","isSaveSuccessful","isModalLoading","showSecretAccessKey","showDeleteModal","skeletonItemAmount","confirmPasswordModal","timezoneOptions","metaInfo","title","this","$createTitle","identifier","computed","_objectSpread","fullName","salutation","$tc","userRepository","repositoryFactory","create","userCriteria","criteria","addAssociation","aclRoleCriteria","addFilter","equals","languageRepository","languageCriteria","addSorting","sort","localeRepository","avatarMedia","isError","hasLanguage","localeId","disableConfirm","isCurrentUser","id","mediaRepository","integrationColumns","property","label","secretAccessKeyFieldType","languageId","State","get","tooltipSave","systemKey","$device","getSystemKey","message","concat","appearance","tooltipCancel","watch","createdComponent","created","methods","_this","ExtensionAPI","publishData","path","scope","Service","getTimezoneOptions","promises","Promise","resolve","commit","loadLanguages","loadUser","loadCurrentUser","all","then","loadTimezones","_this2","search","result","forEach","lang","customLabel","locale","translated","name","territory","push","_this3","$route","params","Context","api","avatarId","keyRepository","accessKeys","entity","source","loadKeys","_this4","userService","getUser","response","addAccessKey","_this5","newKey","quantityStart","integrationService","generateKey","accessKey","secretAccessKey","checkEmail","_this6","email","userValidationService","checkUserEmail","_ref","emailIsUnique","createNotificationError","reject","checkUsername","_this7","checkUserUsername","username","_ref2","usernameIsUnique","setMediaItem","_ref3","_this8","targetId","media","onUnlinkLogo","onSearch","value","term","clearSelection","saveFinish","onSave","saveUser","context","_this9","setLocaleWithId","titleSaveError","messageSaveError","save","updateCurrentUser","catch","exception","_name","finally","password","onCancel","$router","setPassword","length","$delete","$set","onShowDetailModal","onCloseDetailModal","onSaveIntegration","has","add","onCloseDeleteModal","onConfirmDelete","remove","onCloseConfirmPasswordModal","content","__esModule","default","module","i","locals","exports"],"mappings":"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","file":"static/js/6d380d5cda6ca9245b45.js","sourcesContent":["/**\n * @package services-settings\n */\nimport { email } from 'src/core/service/validation.service';\nimport template from './sw-users-permissions-user-detail.html.twig';\nimport './sw-users-permissions-user-detail.scss';\n\nconst { Component, Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { mapPropertyErrors } = Component.getComponentHelper();\nconst { warn } = Shopware.Utils.debug;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'userService',\n        'loginService',\n        'userValidationService',\n        'integrationService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('salutation'),\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': 'onSave',\n        ESCAPE: 'onCancel',\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            userId: '',\n            user: null,\n            currentUser: null,\n            languages: [],\n            integrations: [],\n            currentIntegration: null,\n            mediaItem: null,\n            newPassword: '',\n            newPasswordConfirm: '',\n            isEmailUsed: false,\n            isUsernameUsed: false,\n            isIntegrationsLoading: false,\n            isSaveSuccessful: false,\n            isModalLoading: false,\n            showSecretAccessKey: false,\n            showDeleteModal: null,\n            skeletonItemAmount: 3,\n            confirmPasswordModal: false,\n            timezoneOptions: [],\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        ...mapPropertyErrors('user', [\n            'firstName',\n            'lastName',\n            'email',\n            'username',\n            'localeId',\n            'password',\n        ]),\n\n        identifier() {\n            return this.fullName;\n        },\n\n        fullName() {\n            return this.salutation(this.user, this.$tc('sw-users-permissions.users.user-detail.labelNewUser'));\n        },\n\n        userRepository() {\n            return this.repositoryFactory.create('user');\n        },\n\n        userCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addAssociation('accessKeys');\n            criteria.addAssociation('locale');\n            criteria.addAssociation('aclRoles');\n\n            return criteria;\n        },\n\n        aclRoleCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            // Roles created by apps should not be assignable in the admin\n            criteria.addFilter(Criteria.equals('app.id', null));\n            criteria.addFilter(Criteria.equals('deletedAt', null));\n\n            return criteria;\n        },\n\n        languageRepository() {\n            return this.repositoryFactory.create('language');\n        },\n\n        languageCriteria() {\n            const criteria = new Criteria(1, 500);\n\n            criteria.addAssociation('locale');\n            criteria.addSorting(Criteria.sort('locale.name', 'ASC'));\n            criteria.addSorting(Criteria.sort('locale.territory', 'ASC'));\n\n            return criteria;\n        },\n\n        localeRepository() {\n            return this.repositoryFactory.create('locale');\n        },\n\n        avatarMedia() {\n            return this.mediaItem;\n        },\n\n        isError() {\n            return this.isEmailUsed || this.isUsernameUsed || !this.hasLanguage;\n        },\n\n        hasLanguage() {\n            return this.user && this.user.localeId;\n        },\n\n        disableConfirm() {\n            return this.newPassword !== this.newPasswordConfirm || this.newPassword === '' || this.newPassword === null;\n        },\n\n        isCurrentUser() {\n            if (!this.user || !this.currentUser) {\n                return false;\n            }\n\n            return this.userId === this.currentUser.id;\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        integrationColumns() {\n            return [{\n                property: 'accessKey',\n                label: this.$tc('sw-users-permissions.users.user-detail.labelAccessKey'),\n            }];\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - Will be removed.\n         */\n        secretAccessKeyFieldType() {\n            return this.showSecretAccessKey ? 'text' : 'password';\n        },\n\n        languageId() {\n            return Shopware.State.get('session').languageId;\n        },\n\n        tooltipSave() {\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        tooltipCancel() {\n            return {\n                message: 'ESC',\n                appearance: 'light',\n            };\n        },\n    },\n\n    watch: {\n        languageId() {\n            this.createdComponent();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-users-permissions-user-detail__currentUser',\n                path: 'currentUser',\n                scope: this,\n            });\n            this.isLoading = true;\n\n            if (!this.languageId) {\n                this.isLoading = false;\n                return;\n            }\n\n            this.timezoneOptions = Shopware.Service('timezoneService').getTimezoneOptions();\n            const languagePromise = new Promise((resolve) => {\n                Shopware.State.commit('context/setApiLanguageId', this.languageId);\n                resolve(this.languageId);\n            });\n\n            const promises = [\n                languagePromise,\n                this.loadLanguages(),\n                this.loadUser(),\n                this.loadCurrentUser(),\n            ];\n\n            Promise.all(promises).then(() => {\n                this.isLoading = false;\n            });\n        },\n\n        // @deprecated tag:v6.6.0 - Unused\n        loadTimezones() {\n        },\n\n        loadLanguages() {\n            return this.languageRepository.search(this.languageCriteria).then((result) => {\n                this.languages = [];\n                result.forEach((lang) => {\n                    lang.customLabel = `${lang.locale.translated.name} (${lang.locale.translated.territory})`;\n                    this.languages.push(lang);\n                });\n\n                return this.languages;\n            });\n        },\n\n        loadUser() {\n            this.userId = this.$route.params.id;\n\n            return this.userRepository.get(this.userId, Shopware.Context.api, this.userCriteria).then((user) => {\n                this.user = user;\n\n                if (this.user.avatarId) {\n                    this.mediaItem = this.user.avatarMedia;\n                }\n\n                this.keyRepository = this.repositoryFactory.create(user.accessKeys.entity, this.user.accessKeys.source);\n                this.loadKeys();\n            });\n        },\n\n        loadCurrentUser() {\n            return this.userService.getUser().then((response) => {\n                this.currentUser = response.data;\n            });\n        },\n\n        loadKeys() {\n            this.integrations = this.user.accessKeys;\n        },\n\n        addAccessKey() {\n            const newKey = this.keyRepository.create();\n\n            this.isModalLoading = true;\n            newKey.quantityStart = 1;\n            this.integrationService.generateKey({}, {}, true).then((response) => {\n                newKey.accessKey = response.accessKey;\n                newKey.secretAccessKey = response.secretAccessKey;\n                this.currentIntegration = newKey;\n                this.isModalLoading = false;\n                this.showSecretAccessKey = true;\n            });\n        },\n\n        checkEmail() {\n            if (!this.user.email) {\n                return Promise.resolve();\n            }\n\n            if (!email(this.user.email)) {\n                this.createNotificationError({\n                    title: this.$tc('global.default.error'),\n                    message: this.$tc(\n                        'sw-users-permissions.users.user-detail.notification.invalidEmailErrorMessage',\n                    ),\n                });\n                return Promise.reject();\n            }\n\n            return this.userValidationService.checkUserEmail({\n                email: this.user.email,\n                id: this.user.id,\n            }).then(({ emailIsUnique }) => {\n                this.isEmailUsed = !emailIsUnique;\n            });\n        },\n\n        checkUsername() {\n            return this.userValidationService.checkUserUsername({\n                username: this.user.username,\n                id: this.user.id,\n            }).then(({ usernameIsUnique }) => {\n                this.isUsernameUsed = !usernameIsUnique;\n            });\n        },\n\n        setMediaItem({ targetId }) {\n            this.mediaRepository.get(targetId).then((media) => {\n                this.mediaItem = media;\n                this.user.avatarMedia = media;\n                this.user.avatarId = targetId;\n            });\n        },\n\n        onUnlinkLogo() {\n            this.mediaItem = null;\n            this.user.avatarMedia = null;\n            this.user.avatarId = null;\n        },\n\n        onSearch(value) {\n            this.term = value;\n            this.clearSelection();\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onSave() {\n            this.confirmPasswordModal = true;\n        },\n\n        saveUser(context) {\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n            let promises = [];\n\n            if (this.currentUser.id === this.user.id) {\n                promises = [Shopware.Service('localeHelper').setLocaleWithId(this.user.localeId)];\n            }\n\n            return Promise.all(promises).then(\n                this.checkEmail()\n                    .then(() => {\n                        if (!this.isEmailUsed) {\n                            this.isLoading = true;\n                            const titleSaveError = this.$tc('global.default.error');\n                            const messageSaveError = this.$tc(\n                                'sw-users-permissions.users.user-detail.notification.saveError.message',\n                                0,\n                                { name: this.fullName },\n                            );\n\n                            return this.userRepository.save(this.user, context).then(() => {\n                                return this.updateCurrentUser();\n                            }).then(() => {\n                                this.createdComponent();\n\n                                this.confirmPasswordModal = false;\n                                this.isSaveSuccessful = true;\n                            }).catch((exception) => {\n                                this.createNotificationError({\n                                    title: titleSaveError,\n                                    message: messageSaveError,\n                                });\n                                warn(this._name, exception.message, exception.response);\n                                this.isLoading = false;\n                                throw exception;\n                            })\n                                .finally(() => {\n                                    this.isLoading = false;\n                                });\n                        }\n\n                        this.createNotificationError({\n                            message: this.$tc(\n                                'sw-users-permissions.users.user-detail.notification.duplicateEmailErrorMessage',\n                            ),\n                        });\n\n                        return Promise.resolve();\n                    })\n                    .catch(() => Promise.reject())\n                    .finally(() => {\n                        this.isLoading = false;\n                    }),\n            );\n        },\n\n        updateCurrentUser() {\n            return this.userService.getUser().then((response) => {\n                const data = response.data;\n                delete data.password;\n\n                return Shopware.State.commit('setCurrentUser', data);\n            });\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'sw.users.permissions.index' });\n        },\n\n        setPassword(password) {\n            if (typeof password === 'string' && password.length <= 0) {\n                this.$delete(this.user, 'password');\n                return;\n            }\n\n            this.$set(this.user, 'password', password);\n        },\n\n        onShowDetailModal(id) {\n            if (!id) {\n                this.addAccessKey();\n                return;\n            }\n\n            this.currentIntegration = this.user.accessKeys.get(id);\n        },\n\n        onCloseDetailModal() {\n            this.currentIntegration = null;\n            this.showSecretAccessKey = false;\n            this.isModalLoading = false;\n        },\n\n        onSaveIntegration() {\n            if (!this.currentIntegration) {\n                return;\n            }\n\n            if (!this.user.accessKeys.has(this.currentIntegration.id)) {\n                this.user.accessKeys.add(this.currentIntegration);\n            }\n\n            this.onCloseDetailModal();\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = null;\n        },\n\n        onConfirmDelete(id) {\n            if (!id) {\n                return;\n            }\n\n            this.onCloseDeleteModal();\n            this.user.accessKeys.remove(id);\n        },\n\n        onCloseConfirmPasswordModal() {\n            this.confirmPasswordModal = false;\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_user_detail %}\\n<sw-page class=\\\"sw-settings-user-detail\\\">\\n    \\n    {% block sw_settings_user_detail_header %}\\n    <template #smart-bar-header>\\n        <h2 v-if=\\\"!isLoading\\\">\\n            {{ fullName }}\\n        </h2>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_user_detail_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_settings_user_detail_actions_cancel %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"tooltipCancel\\\"\\n            @click=\\\"onCancel\\\"\\n        >\\n            {{ $tc('sw-users-permissions.users.user-detail.labelButtonCancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_user_detail_actions_save %}\\n        <sw-button-process\\n            v-tooltip.bottom=\\\"tooltipSave\\\"\\n            class=\\\"sw-settings-user-detail__save-action\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :process-success=\\\"isSaveSuccessful\\\"\\n            :disabled=\\\"isLoading || !acl.can('users_and_permissions.editor')\\\"\\n            variant=\\\"primary\\\"\\n            {% if VUE3 %}\\n            @update:process-success=\\\"saveFinish\\\"\\n            {% else %}\\n            @process-finish=\\\"saveFinish\\\"\\n            {% endif %}\\n            @click.prevent=\\\"onSave\\\"\\n        >\\n            {{ $tc('sw-users-permissions.users.user-detail.labelButtonSave') }}\\n        </sw-button-process>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_user_detail_content %}\\n    <template #content>\\n        <sw-card-view>\\n            \\n            {% block sw_settings_user_detail_content_inner %}\\n            <template v-if=\\\"isLoading\\\">\\n                <sw-skeleton />\\n                <sw-skeleton />\\n            </template>\\n\\n            {# v-show is used here as underlying components influence the loading state and v-if would destroy this behaviour #}\\n            <div v-show=\\\"!isLoading\\\">\\n                {%  block sw_setting_user_detail_card_basic_information %}\\n                <sw-card\\n                    position-identifier=\\\"sw-users-permissions-user-detail\\\"\\n                    :title=\\\"$tc('sw-users-permissions.users.user-detail.labelCard')\\\"\\n                    :is-loading=\\\"isLoading\\\"\\n                >\\n                    \\n                    {% block sw_settings_user_detail_content_grid %}\\n                    <div\\n                        v-if=\\\"user\\\"\\n                        class=\\\"sw-settings-user-detail__grid\\\"\\n                    >\\n                        \\n                        {% block sw_settings_user_detail_content_first_name %}\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"user.firstName\\\"\\n                            {% else %}\\n                            v-model=\\\"user.firstName\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--user-firstName\\\"\\n                            class=\\\"sw-settings-user-detail__grid-firstName\\\"\\n                            :disabled=\\\"!acl.can('users_and_permissions.editor')\\\"\\n                            :error=\\\"userFirstNameError\\\"\\n                            required\\n                            :label=\\\"$tc('sw-users-permissions.users.user-detail.labelFirstName')\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_user_detail_content_last_name %}\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"user.lastName\\\"\\n                            {% else %}\\n                            v-model=\\\"user.lastName\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--user-lastName\\\"\\n                            class=\\\"sw-settings-user-detail__grid-lastName\\\"\\n                            :disabled=\\\"!acl.can('users_and_permissions.editor')\\\"\\n                            :error=\\\"userLastNameError\\\"\\n                            required\\n                            :label=\\\"$tc('sw-users-permissions.users.user-detail.labelLastName')\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_user_detail_content_email %}\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value.trim=\\\"user.email\\\"\\n                            {% else %}\\n                            v-model.trim=\\\"user.email\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--user-email\\\"\\n                            class=\\\"sw-settings-user-detail__grid-eMail\\\"\\n                            :error-message=\\\"isEmailUsed ? $tc('sw-users-permissions.users.user-detail.errorEmailUsed') : ''\\\"\\n                            :error=\\\"userEmailError\\\"\\n                            :disabled=\\\"!acl.can('users_and_permissions.editor')\\\"\\n                            required\\n                            :label=\\\"$tc('sw-users-permissions.users.user-detail.labelEmail')\\\"\\n                            @change=\\\"checkEmail()\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_user_detail_content_username %}\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"user.username\\\"\\n                            {% else %}\\n                            v-model=\\\"user.username\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--user-username\\\"\\n                            class=\\\"sw-settings-user-detail__grid-username\\\"\\n                            :error-message=\\\"isUsernameUsed ? $tc('sw-users-permissions.users.user-detail.errorUsernameUsed') : ''\\\"\\n                            :error=\\\"userUsernameError\\\"\\n                            :disabled=\\\"!acl.can('users_and_permissions.editor')\\\"\\n                            required\\n                            :label=\\\"$tc('sw-users-permissions.users.user-detail.labelUsername')\\\"\\n                            @change=\\\"checkUsername\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_user_detail_content_media_upload %}\\n                        <sw-upload-listener\\n                            :upload-tag=\\\"user.id\\\"\\n                            auto-upload\\n                            @media-upload-finish=\\\"setMediaItem\\\"\\n                        />\\n                        <sw-media-upload-v2\\n                            class=\\\"sw-settings-user-detail__grid-profile-picture\\\"\\n                            :source=\\\"avatarMedia\\\"\\n                            :label=\\\"$tc('sw-users-permissions.users.user-detail.labelProfilePicture')\\\"\\n                            :upload-tag=\\\"user.id\\\"\\n                            :allow-multi-select=\\\"false\\\"\\n                            :source-context=\\\"user\\\"\\n                            :disabled=\\\"!acl.can('users_and_permissions.editor')\\\"\\n                            variant=\\\"regular\\\"\\n                            default-folder=\\\"user\\\"\\n                            @media-upload-remove-image=\\\"onUnlinkLogo\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_user_detail_content_password %}\\n                        <sw-password-field\\n                            class=\\\"sw-settings-user-detail__grid-password\\\"\\n                            :value=\\\"user.password\\\"\\n                            name=\\\"sw-field--user-password\\\"\\n                            :disabled=\\\"!acl.can('users_and_permissions.editor')\\\"\\n                            :label=\\\"$tc('sw-users-permissions.users.user-detail.labelPassword')\\\"\\n                            :copy-able=\\\"false\\\"\\n                            :error=\\\"userPasswordError\\\"\\n                            {% if VUE3 %}\\n                            @update:value=\\\"setPassword\\\"\\n                            {% else %}\\n                            @change=\\\"setPassword\\\"\\n                            {% endif %}\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_user_detail_grid_content_language %}\\n                        <sw-select-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"user.localeId\\\"\\n                            {% else %}\\n                            v-model=\\\"user.localeId\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--user-localeId\\\"\\n                            class=\\\"sw-settings-user-detail__grid-language\\\"\\n                            :label=\\\"$tc('sw-users-permissions.users.user-detail.labelLanguage')\\\"\\n                            :disabled=\\\"!acl.can('users_and_permissions.editor')\\\"\\n                            :error=\\\"userLocaleIdError\\\"\\n                            required\\n                            :placeholder=\\\"$tc('sw-users-permissions.users.user-detail.labelLanguagePlaceholder')\\\"\\n                        >\\n                            <option\\n                                v-for=\\\"language in languages\\\"\\n                                :key=\\\"language.locale.id\\\"\\n                                :value=\\\"language.locale.id\\\"\\n                                :selected=\\\"language.locale.id === user.localeId\\\"\\n                            >\\n                                {{ language.customLabel }}\\n                            </option>\\n                        </sw-select-field>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_user_detail_grid_content_timezone %}\\n                        <sw-single-select\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"user.timeZone\\\"\\n                            {% else %}\\n                            v-model=\\\"user.timeZone\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--user-timeZone\\\"\\n                            class=\\\"sw-settings-user-detail__grid-timezone\\\"\\n                            :options=\\\"timezoneOptions\\\"\\n                            required\\n                            :label=\\\"$tc('sw-users-permissions.users.user-detail.labelTimezone')\\\"\\n                            :is-loading=\\\"timezoneOptions.length <= 0\\\"\\n                            :disabled=\\\"!acl.can('user.update_profile')\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_user_detail_grid_content_acl_is_admin %}\\n                        <sw-switch-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"user.admin\\\"\\n                            {% else %}\\n                            v-model=\\\"user.admin\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--user-admin\\\"\\n                            class=\\\"sw-settings-user-detail__grid-is-admin\\\"\\n                            :label=\\\"$tc('sw-users-permissions.users.user-detail.labelAdministrator')\\\"\\n                            :disabled=\\\"isCurrentUser || !acl.can('users_and_permissions.editor')\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_user_detail_grid_content_job_title %}\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"user.title\\\"\\n                            {% else %}\\n                            v-model=\\\"user.title\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--user-title\\\"\\n                            class=\\\"sw-settings-user-detail__grid-jobTitle\\\"\\n                            :disabled=\\\"!acl.can('users_and_permissions.editor')\\\"\\n                            :label=\\\"$tc('sw-users-permissions.users.user-detail.labelJobTitle')\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_user_detail_grid_content_acl_roles %}\\n                        <sw-entity-multi-select\\n                            {% if VUE3 %}\\n                            v-model:entityCollection=\\\"user.aclRoles\\\"\\n                            {% else %}\\n                            v-model=\\\"user.aclRoles\\\"\\n                            {% endif %}\\n                            v-tooltip=\\\"{\\n                                showDelay: 300,\\n                                message: $tc('sw-users-permissions.users.user-detail.disabledRoleSelectWarning'),\\n                                disabled: !user.admin || !acl.can('users_and_permissions.editor')\\n                            }\\\"\\n                            name=\\\"sw-field--user-aclRoles\\\"\\n                            class=\\\"sw-settings-user-detail__grid-aclRoles\\\"\\n                            :label=\\\"$tc('sw-users-permissions.users.user-detail.labelRoles')\\\"\\n                            :disabled=\\\"user.admin || !acl.can('users_and_permissions.editor')\\\"\\n                            :criteria=\\\"aclRoleCriteria\\\"\\n                            label-property=\\\"name\\\"\\n                        />\\n                        {% endblock %}\\n                    </div>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_settings_user_detail_content_confirm_password_modal %}\\n                    <sw-verify-user-modal\\n                        v-if=\\\"confirmPasswordModal\\\"\\n                        @verified=\\\"saveUser\\\"\\n                        @close=\\\"onCloseConfirmPasswordModal\\\"\\n                    />\\n                    {% endblock %}\\n                </sw-card>\\n                {% endblock %}\\n\\n                {%  block sw_setting_user_detail_card_integrations %}\\n                <sw-card\\n                    :title=\\\"$tc('sw-users-permissions.users.user-detail.labelIntegrationsCard')\\\"\\n                    position-identifier=\\\"sw-users-permissions-user-detail\\\"\\n                >\\n                    \\n                    {% block sw_settings_user_detail_grid_toolbar %}\\n                    <template #toolbar>\\n                        \\n                        {% block sw_settings_user_detail_grid_add_key %}\\n                        <sw-button\\n                            variant=\\\"primary\\\"\\n                            size=\\\"small\\\"\\n                            :disabled=\\\"!$route.params.id || !acl.can('users_and_permissions.editor')\\\"\\n                            @click=\\\"addAccessKey\\\"\\n                        >\\n                            {{ $tc('sw-users-permissions.users.user-detail.addAccessKey') }}\\n                        </sw-button>\\n                        {% endblock %}\\n                    </template>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_settings_user_detail_key_grid %}\\n                    <template #grid>\\n                        \\n                        {% block sw_settings_user_detail_key_grid_content %}\\n                        <sw-data-grid\\n                            :is-loading=\\\"isLoading\\\"\\n                            :data-source=\\\"integrations\\\"\\n                            :columns=\\\"integrationColumns\\\"\\n                            identifier=\\\"user-grid\\\"\\n                            :show-settings=\\\"true\\\"\\n                            :skeleton-item-amount=\\\"skeletonItemAmount\\\"\\n                        >\\n\\n                            \\n                            {% block sw_settings_user_detail_grid_columns_actions %}\\n                            <template #actions=\\\"{ item }\\\">\\n                                \\n                                {% block sw_settings_user_detail_grid_columns_actions_edit %}\\n                                <sw-context-menu-item\\n                                    class=\\\"sw-settings-user-detail__grid-context-menu-edit sw-product-list__edit-action\\\"\\n                                    :disabled=\\\"!acl.can('users_and_permissions.editor')\\\"\\n                                    @click=\\\"onShowDetailModal(item.id)\\\"\\n                                >\\n                                    {{ $tc('sw-users-permissions.users.user-detail.contextMenuEdit') }}\\n                                </sw-context-menu-item>\\n                                {% endblock %}\\n\\n                                \\n                                {% block sw_settings_user_detail_grid_columns_actions_delete %}\\n                                <sw-context-menu-item\\n                                    class=\\\"sw-settings-user-detail__grid-context-menu-delete\\\"\\n                                    :disabled=\\\"!acl.can('users_and_permissions.editor')\\\"\\n                                    variant=\\\"danger\\\"\\n                                    @click=\\\"showDeleteModal = item.id\\\"\\n                                >\\n                                    {{ $tc('sw-users-permissions.users.user-detail.contextMenuDelete') }}\\n                                </sw-context-menu-item>\\n                                {% endblock %}\\n                            </template>\\n                            {% endblock %}\\n                        </sw-data-grid>\\n                        <sw-empty-state\\n                            v-if=\\\"integrations.length === 0\\\"\\n                            :absolute=\\\"false\\\"\\n                            :title=\\\"$tc('sw-users-permissions.users.user-detail.noAccessKeysTitle')\\\"\\n                            :subline=\\\"$tc('sw-users-permissions.users.user-detail.noAccessKeysSubline')\\\"\\n                            auto-height\\n                        />\\n                        {% endblock %}\\n                    </template>\\n                    {% endblock %}\\n                </sw-card>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </sw-card-view>\\n\\n        \\n        {% block sw_settings_user_detail_grid_inner_slot_delete_modal %}\\n        <sw-modal\\n            v-if=\\\"showDeleteModal\\\"\\n            :title=\\\"$tc('global.default.warning')\\\"\\n            @modal-close=\\\"onCloseDeleteModal\\\"\\n        >\\n            \\n            {% block sw_settings_user_detail_grid_inner_slot_delete_modal_confirm_text %}\\n            <p>\\n                {{ $tc('sw-users-permissions.users.user-detail.modal.confirmDelete') }}\\n            </p>\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_user_detail_grid_inner_slot_delete_modal_footer %}\\n            <template #modal-footer>\\n                <sw-button\\n                    size=\\\"small\\\"\\n                    @click=\\\"onCloseDeleteModal\\\"\\n                >\\n                    {{ $tc('sw-users-permissions.users.user-detail.modal.buttonCancel') }}\\n                </sw-button>\\n                <sw-button\\n                    size=\\\"small\\\"\\n                    variant=\\\"danger\\\"\\n                    @click=\\\"onConfirmDelete(showDeleteModal)\\\"\\n                >\\n                    {{ $tc('sw-users-permissions.users.user-detail.modal.buttonDelete') }}\\n                </sw-button>\\n            </template>\\n            {% endblock %}\\n        </sw-modal>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_user_detail_detail_modal %}\\n        <sw-modal\\n            v-if=\\\"currentIntegration\\\"\\n            size=\\\"550px\\\"\\n            class=\\\"sw-settings-user-detail__detail\\\"\\n            :is-loading=\\\"isModalLoading\\\"\\n            :title=\\\"showSecretAccessKey ? $tc('global.default.warning') : $tc('sw-users-permissions.users.user-detail.modal.detailModalTitleEdit')\\\"\\n            @modal-close=\\\"onCloseDetailModal\\\"\\n        >\\n            \\n            {% block sw_settings_user_detail_detail_modal_inner %}\\n\\n            \\n            {% block sw_settings_user_detail_detail_modal_inner_field_access_key %}\\n            <sw-text-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"currentIntegration.accessKey\\\"\\n                {% else %}\\n                v-model=\\\"currentIntegration.accessKey\\\"\\n                {% endif %}\\n                :label=\\\"$tc('sw-users-permissions.users.user-detail.modal.idFieldLabel')\\\"\\n                :disabled=\\\"true\\\"\\n                :copy-able=\\\"true\\\"\\n                :copy-able-tooltip=\\\"true\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_user_detail_detail_modal_inner_field_secret_access_key %}\\n            \\n            {% block sw_settings_user_detail_detail_modal_inner_field_secret_access_key_field %}\\n            <sw-text-field\\n                v-if=\\\"showSecretAccessKey\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"currentIntegration.secretAccessKey\\\"\\n                {% else %}\\n                v-model=\\\"currentIntegration.secretAccessKey\\\"\\n                {% endif %}\\n                :label=\\\"$tc('sw-users-permissions.users.user-detail.modal.secretFieldLabel')\\\"\\n                :disabled=\\\"true\\\"\\n                :password-toggle-able=\\\"false\\\"\\n                :copy-able=\\\"showSecretAccessKey\\\"\\n                :copy-able-tooltip=\\\"true\\\"\\n            />\\n\\n            <sw-password-field\\n                v-else\\n                {% if VUE3 %}\\n                v-model:value=\\\"currentIntegration.secretAccessKey\\\"\\n                {% else %}\\n                v-model=\\\"currentIntegration.secretAccessKey\\\"\\n                {% endif %}\\n                :label=\\\"$tc('sw-users-permissions.users.user-detail.modal.secretFieldLabel')\\\"\\n                :disabled=\\\"true\\\"\\n                :password-toggle-able=\\\"false\\\"\\n                :copy-able=\\\"showSecretAccessKey\\\"\\n                :copy-able-tooltip=\\\"true\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_user_detail_detail_modal_inner_field_secret_access_key_button %}\\n            <sw-button\\n                v-if=\\\"!showSecretAccessKey\\\"\\n                class=\\\"sw-settings-user-detail__secret-help-text-button sw-field\\\"\\n                variant=\\\"danger\\\"\\n                :block=\\\"true\\\"\\n                @click=\\\"addAccessKey\\\"\\n            >\\n                {{ $tc('sw-users-permissions.users.user-detail.modal.buttonCreateNewApiKeys') }}\\n            </sw-button>\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_user_detail_detail_modal_inner_field_help_text %}\\n            <sw-alert\\n                v-if=\\\"!showSecretAccessKey\\\"\\n                variant=\\\"warning\\\"\\n                class=\\\"sw-settings-user-detail__secret-help-text-alert\\\"\\n            >\\n                {{ $tc('sw-users-permissions.users.user-detail.modal.hintCreateNewApiKeys') }}\\n            </sw-alert>\\n            {% endblock %}\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_user_detail_detail_modal_inner_help_text %}\\n            <sw-alert\\n                v-else\\n                variant=\\\"warning\\\"\\n                class=\\\"sw-settings-user-detail__secret-help-text-alert\\\"\\n            >\\n                {{ $tc('sw-users-permissions.users.user-detail.modal.secretHelpText') }}\\n            </sw-alert>\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_user_detail_detail_modal_inner_footer %}\\n            <template #modal-footer>\\n                \\n                {% block sw_settings_user_detail_detail_modal_inner_footer_cancel %}\\n                <sw-button\\n                    size=\\\"small\\\"\\n                    :disabled=\\\"isModalLoading\\\"\\n                    @click=\\\"onCloseDetailModal\\\"\\n                >\\n                    {{ $tc('sw-users-permissions.users.user-detail.modal.buttonCancel') }}\\n                </sw-button>\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_user_detail_detail_modal_inner_footer_apply %}\\n                <sw-button\\n                    size=\\\"small\\\"\\n                    class=\\\"sw-settings-user-detail__save-action\\\"\\n                    :disabled=\\\"isModalLoading && !!currentIntegration.label\\\"\\n                    variant=\\\"primary\\\"\\n                    @click=\\\"onSaveIntegration\\\"\\n                >\\n                    {{ showSecretAccessKey ? $tc('sw-users-permissions.users.user-detail.modal.buttonApply') : $tc('sw-users-permissions.users.user-detail.modal.buttonApplyEdit') }}\\n                </sw-button>\\n                {% endblock %}\\n            </template>\\n            {% endblock %}\\n            {% endblock %}\\n        </sw-modal>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-users-permissions-user-detail.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7190ef38\", content, true, {});"],"sourceRoot":""}