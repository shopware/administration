{"version":3,"sources":["webpack:///./src/module/sw-settings-payment/component/sw-plugin-box/sw-plugin-box.scss","webpack:///./src/module/sw-settings-payment/component/sw-plugin-box/index.js","webpack:///./src/module/sw-settings-payment/component/sw-plugin-box/sw-plugin-box.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","template","inject","props","pluginId","type","String","required","data","plugin","hasPluginConfig","computed","pluginRepository","this","repositoryFactory","create","watch","handler","name","checkPluginConfig","created","createdComponent","methods","_this","get","then","_this2","systemConfigApiService","checkConfig","concat","response","catch"],"mappings":"wGAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,4ECF7B,WACXQ,SCRW,43DDUXC,OAAQ,CAAC,yBAA0B,qBAEnCC,MAAO,CACHC,SAAU,CACNC,KAAMC,OACNC,UAAU,IAKlBC,KAAI,WACA,MAAO,CACHC,OAAQ,GACRC,iBAAiB,IAIzBC,SAAU,CACNC,iBAAgB,WACZ,OAAOC,KAAKC,kBAAkBC,OAAO,YAI7CC,MAAO,CACH,cAAe,CACXC,QAAO,WACEJ,KAAKJ,OAAOS,OAAQL,KAAKH,iBAI9BG,KAAKM,uBAKjBC,QAAO,WACHP,KAAKQ,oBAGTC,QAAS,CACLD,iBAAgB,WAAI,IAADE,EAAA,KACfV,KAAKD,iBAAiBY,IAAIX,KAAKT,UAC1BqB,MAAK,SAAChB,GACHc,EAAKd,OAASA,MAI1BU,kBAAiB,WAAI,IAADO,EAAA,KAChBb,KAAKc,uBAAuBC,YAAY,GAADC,OAAIhB,KAAKJ,OAAOS,KAAI,YAAWO,MAAK,SAACK,GACxEJ,EAAKhB,gBAAkBoB,KACxBC,OAAM,WACLL,EAAKhB,iBAAkB","file":"static/js/bfe527545e1bb1af7010.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-plugin-box.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"48218c85\", content, true, {});","import template from './sw-plugin-box.html.twig';\nimport './sw-plugin-box.scss';\n\n/**\n * @package checkout\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['systemConfigApiService', 'repositoryFactory'],\n\n    props: {\n        pluginId: {\n            type: String,\n            required: true,\n        },\n    },\n\n\n    data() {\n        return {\n            plugin: {},\n            hasPluginConfig: false,\n        };\n    },\n\n    computed: {\n        pluginRepository() {\n            return this.repositoryFactory.create('plugin');\n        },\n    },\n\n    watch: {\n        'plugin.name': {\n            handler() {\n                if (!this.plugin.name || this.hasPluginConfig) {\n                    return;\n                }\n\n                this.checkPluginConfig();\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.pluginRepository.get(this.pluginId)\n                .then((plugin) => {\n                    this.plugin = plugin;\n                });\n        },\n\n        checkPluginConfig() {\n            this.systemConfigApiService.checkConfig(`${this.plugin.name}.config`).then((response) => {\n                this.hasPluginConfig = response;\n            }).catch(() => {\n                this.hasPluginConfig = false;\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_plugin_box %}\\n<div class=\\\"sw-plugin-box\\\">\\n    \\n    {% block sw_plugin_box_container %}\\n    <sw-container\\n        columns=\\\"3fr 1fr\\\"\\n        gap=\\\"0px 30px\\\"\\n        class=\\\"sw-plugin-box__container\\\"\\n    >\\n        \\n        {% block sw_plugin_box_container_plugin_data %}\\n        <sw-container :class=\\\"{ 'has--no-icon' : !plugin.icon }\\\">\\n            \\n            {% block sw_plugin_box_container_plugin_data_icon %}\\n            <img\\n                v-if=\\\"!!plugin.icon\\\"\\n                class=\\\"sw-plugin-box__icon\\\"\\n                :src=\\\"`data:image/png;base64, ${plugin.icon}`\\\"\\n                alt=\\\"\\\"\\n            >\\n            {% endblock %}\\n            \\n            {% block sw_plugin_box_container_plugin_data_description %}\\n            <div class=\\\"sw-plugin-box__description\\\">\\n                \\n                {% block sw_plugin_box_container_plugin_data_description_label %}\\n                <p class=\\\"sw-plugin-box__label\\\">\\n                    {{ plugin.translated.label }}\\n                </p>\\n                {% endblock %}\\n                \\n                {% block sw_plugin_box_container_plugin_data_description_author %}\\n                <p class=\\\"sw-plugin-box__author\\\">\\n                    {{ plugin.author }}\\n                </p>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </sw-container>\\n        {% endblock %}\\n        \\n        {% block sw_plugin_box_container_button %}\\n        <sw-button\\n            v-if=\\\"hasPluginConfig\\\"\\n            variant=\\\"ghost\\\"\\n            size=\\\"small\\\"\\n            class=\\\"sw-plugin-box__button\\\"\\n            :router-link=\\\"{ name: 'sw.extension.config', params: { namespace: plugin.name } }\\\"\\n        >\\n            {{ $tc('sw-plugin-box.buttonPluginSettings') }}\\n        </sw-button>\\n        {% endblock %}\\n    </sw-container>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}