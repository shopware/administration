{"version":3,"sources":["webpack:///./src/module/sw-order/page/sw-order-create/sw-order-create.scss","webpack:///./src/module/sw-order/state/order.store.ts","webpack:///./src/module/sw-order/page/sw-order-create/index.ts","webpack:///./src/module/sw-order/page/sw-order-create/sw-order-create.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Service","Shopware","SwOrderStore","namespaced","state","customer","defaultSalesChannel","cart","token","lineItems","price","totalPrice","deliveries","context","paymentMethod","translated","distinguishableName","shippingMethod","name","currency","shortName","symbol","totalRounding","decimals","salesChannel","id","currencyId","languageIdChain","promotionCodes","disabledAutoPromotion","mutations","setCustomer","setDefaultSalesChannel","setCartToken","setCart","emptyLineItems","filter","item","label","slice","reverse","concat","_toConsumableArray","mergeEmptyAndExistingLineItems","setCartLineItems","setCurrency","setContext","setPromotionCodes","removeEmptyLineItem","emptyLineItemKey","removeInvalidPromotionCodes","isInvalid","setDisabledAutoPromotion","getters","isCustomerActive","_state$context$custom","active","isCartTokenAvailable","_state$cart","_state$context$contex","invalidPromotionCodes","cartErrors","_state$cart$errors","_state$cart2","errors","actions","selectExistingCustomer","_ref","_ref2","_customer$salesChanne","commit","_objectSpread","createCart","_ref3","_ref4","salesChannelId","then","response","data","contextToken","getSalesChannelContext","getCart","_ref5","_ref6","length","Error","Promise","all","cancelCart","_","_ref7","updateCustomerContext","_ref8","customerId","updateOrderContext","_ref9","updateContext","getContext","_ref10","saveOrder","_ref11","checkout","removeLineItems","_ref12","_ref13","lineItemKeys","saveLineItem","_ref14","_ref15","saveMultipleLineItems","_ref16","_ref17","items","addMultipleLineItems","addPromotionCode","_ref18","_ref19","code","modifyShippingCosts","_ref20","_ref21","shippingCosts","remindPayment","_ref22","orderTransactionId","transitionOrderTransactionState","_Shopware","Context","State","Mixin","Criteria","Data","Component","wrapComponentConfig","template","inject","mixins","getByName","isLoading","isSaveSuccessful","showInvalidCodeModal","showRemindPaymentModal","remindPaymentModalLoading","orderId","orderTransaction","paymentMethodName","computed","get","isSaveOrderValid","this","paymentMethodRepository","repositoryFactory","create","showInitialModal","$route","beforeCreate","registerModule","swOrderState","created","createdComponent","beforeDestroy","unregisterModule","methods","redirectToOrderList","$router","push","saveFinish","params","onSaveOrder","_this$customer","_this","dispatch","_response$data","_response$data2","_response$data2$trans","transactions","paymentMethodId","api","_paymentMethod$transl","_paymentMethod$transl2","catch","error","showError","finally","openInvalidCodeModal","resolve","onCancelOrder","_this2","_error$response","_error$response$data","_error$response$data$","_error$response$data$2","arguments","undefined","errorMessage","detail","createNotificationError","message","$tc","closeInvalidCodeModal","removeInvalidCode","onRemindPaymentModalClose","onRemindCustomer","_this$orderTransactio","_this3"],"mappings":"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","file":"static/js/08e1a761ac8538e4b93e.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-order-create.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f5f5203e\", content, true, {});","import type { Entity } from '@shopware-ag/admin-extension-sdk/es/data/_internals/Entity';\nimport type { Module } from 'vuex';\nimport type { AxiosResponse } from 'axios';\nimport type {\n    CalculatedPrice,\n    Cart,\n    CartError,\n    ContextSwitchParameters,\n    LineItem,\n    PromotionCodeTag,\n    SalesChannelContext,\n} from '../order.types';\n\n/**\n * @package checkout\n */\n\nconst { Service } = Shopware;\n\nfunction filterEmptyLineItems(items: LineItem[]) {\n    return items.filter(item => item.label === '');\n}\n\nfunction reverseLineItems(items: LineItem[]) {\n    return items.slice().reverse();\n}\n\nfunction mergeEmptyAndExistingLineItems(emptyLineItems: LineItem[], lineItems: LineItem[]) {\n    // Reverse the lineItems so the newly added are at the top for better UX\n    reverseLineItems(lineItems);\n\n    return [...emptyLineItems, ...lineItems];\n}\n\ninterface SwOrderState {\n    cart: Cart;\n    disabledAutoPromotion: boolean,\n    promotionCodes: PromotionCodeTag[],\n    defaultSalesChannel: Entity<'sales_channel'> | null,\n    context: SalesChannelContext,\n    customer: Entity<'customer'> | null,\n}\n\nconst SwOrderStore: Module<SwOrderState, VuexRootState> = {\n    namespaced: true,\n\n    state: (): SwOrderState => ({\n        customer: null,\n        defaultSalesChannel: null,\n        cart: {\n            token: null,\n            lineItems: [],\n            price: {\n                totalPrice: null,\n            },\n            deliveries: [],\n        } as unknown as Cart,\n        context: {\n            token: '',\n            customer: null,\n            paymentMethod: {\n                translated: {\n                    distinguishableName: '',\n                },\n            } as Entity<'payment_method'>,\n            shippingMethod: {\n                translated: {\n                    name: '',\n                },\n            } as Entity<'shipping_method'>,\n            currency: {\n                shortName: 'EUR',\n                symbol: '€',\n                totalRounding: {\n                    decimals: 2,\n                },\n            } as Entity<'currency'>,\n            salesChannel: {\n                id: '',\n            } as Entity<'sales_channel'>,\n            context: {\n                currencyId: '',\n                languageIdChain: [],\n            },\n        },\n        promotionCodes: [],\n        disabledAutoPromotion: false,\n    }),\n\n    mutations: {\n        setCustomer(state: SwOrderState, customer: Entity<'customer'>) {\n            state.context.customer = customer;\n            state.customer = customer;\n        },\n\n        setDefaultSalesChannel(state: SwOrderState, salesChannel: Entity<'sales_channel'>) {\n            state.defaultSalesChannel = salesChannel;\n        },\n\n        setCartToken(state: SwOrderState, token: string) {\n            state.cart.token = token;\n        },\n\n        setCart(state: SwOrderState, cart: Cart) {\n            const emptyLineItems = filterEmptyLineItems(state.cart.lineItems);\n            state.cart = cart;\n            state.cart.lineItems = mergeEmptyAndExistingLineItems(emptyLineItems, state.cart.lineItems);\n        },\n\n        setCartLineItems(state: SwOrderState, lineItems: LineItem[]) {\n            state.cart.lineItems = lineItems;\n        },\n\n        setCurrency(state: SwOrderState, currency: Entity<'currency'>) {\n            state.context.currency = currency;\n        },\n\n        setContext(state: SwOrderState, context: SalesChannelContext) {\n            state.context = context;\n        },\n\n        setPromotionCodes(state: SwOrderState, promotionCodes: PromotionCodeTag[]) {\n            state.promotionCodes = promotionCodes;\n        },\n\n        removeEmptyLineItem(state: SwOrderState, emptyLineItemKey: string) {\n            state.cart.lineItems = state.cart.lineItems.filter(item => item.id !== emptyLineItemKey);\n        },\n\n        removeInvalidPromotionCodes(state: SwOrderState) {\n            state.promotionCodes = state.promotionCodes.filter(item => !item.isInvalid);\n        },\n\n        setDisabledAutoPromotion(state: SwOrderState, disabledAutoPromotion: boolean) {\n            state.disabledAutoPromotion = disabledAutoPromotion;\n        },\n    },\n\n    getters: {\n        isCustomerActive(state: SwOrderState): boolean {\n            return !!state?.context.customer?.active;\n        },\n\n        isCartTokenAvailable(state: SwOrderState): boolean {\n            return !!state?.cart?.token;\n        },\n\n        currencyId(state: SwOrderState): string {\n            return state?.context.context.currencyId ?? '';\n        },\n\n        invalidPromotionCodes(state: SwOrderState): PromotionCodeTag[] {\n            return state.promotionCodes.filter(item => item.isInvalid);\n        },\n\n        cartErrors(state: SwOrderState): CartError[] {\n            return state?.cart?.errors ?? null;\n        },\n    },\n\n    actions: {\n        selectExistingCustomer({ commit }, { customer }: { customer: Entity<'customer'> }) {\n            commit('setCustomer', customer);\n            commit('setDefaultSalesChannel', { ...(customer?.salesChannel ?? null) });\n        },\n\n        createCart({ commit }, { salesChannelId }: { salesChannelId: string }) {\n            return Service('cartStoreService')\n                .createCart(salesChannelId)\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                .then((response: AxiosResponse): string => {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                    const token = response.data.token as string;\n                    commit('setCartToken', token);\n                    return token;\n                })\n                .then((contextToken) => {\n                    return Service('contextStoreService')\n                        .getSalesChannelContext(salesChannelId, contextToken)\n                        .then((response: AxiosResponse) => commit('setContext', response.data));\n                });\n        },\n\n        getCart({ commit }, { salesChannelId, contextToken }: { salesChannelId: string, contextToken: string }) {\n            if ((`${contextToken}`).length !== 32) {\n                throw new Error('Invalid context token');\n            }\n\n            return Promise.all([\n                Service('cartStoreService')\n                    .getCart(salesChannelId, contextToken)\n                    .then((response: AxiosResponse) => commit('setCart', response.data)),\n                Service('contextStoreService')\n                    .getSalesChannelContext(salesChannelId, contextToken)\n                    .then((response: AxiosResponse) => commit('setContext', response.data)),\n            ]);\n        },\n\n        cancelCart(_, { salesChannelId, contextToken }: { salesChannelId: string, contextToken: string }) {\n            if ((`${contextToken}`).length !== 32) {\n                throw new Error('Invalid context token');\n            }\n\n            return Service('cartStoreService').cancelCart(salesChannelId, contextToken);\n        },\n\n        updateCustomerContext(_, { customerId, salesChannelId, contextToken }:\n            { customerId: string, salesChannelId: string, contextToken: string }) {\n            return Service('contextStoreService')\n                .updateCustomerContext(customerId, salesChannelId, contextToken);\n        },\n\n        updateOrderContext(_, { context, salesChannelId, contextToken }:\n            { context: ContextSwitchParameters, salesChannelId: string, contextToken: string }) {\n            return Service('contextStoreService')\n                .updateContext(context, salesChannelId, contextToken);\n        },\n\n        getContext(_, { salesChannelId, contextToken }: { salesChannelId: string, contextToken: string }) {\n            return Service('contextStoreService')\n                .getSalesChannelContext(salesChannelId, contextToken);\n        },\n\n        saveOrder(_, { salesChannelId, contextToken }: { salesChannelId: string, contextToken: string }) {\n            return Service('checkoutStoreService')\n                .checkout(salesChannelId, contextToken);\n        },\n\n        removeLineItems(\n            { commit },\n            { salesChannelId, contextToken, lineItemKeys }:\n                { salesChannelId: string, contextToken: string, lineItemKeys: string[] },\n        ) {\n            return Service('cartStoreService')\n                .removeLineItems(salesChannelId, contextToken, lineItemKeys)\n                .then((response: AxiosResponse) => commit('setCart', response.data));\n        },\n\n        saveLineItem(\n            { commit },\n            { salesChannelId, contextToken, item }: { salesChannelId: string, contextToken: string, item: LineItem },\n        ) {\n            return Service('cartStoreService')\n                .saveLineItem(salesChannelId, contextToken, item)\n                .then((response: AxiosResponse) => commit('setCart', response.data));\n        },\n\n        saveMultipleLineItems(\n            { commit },\n            { salesChannelId, contextToken, items }: { salesChannelId: string, contextToken: string, items: LineItem[] },\n        ) {\n            return Service('cartStoreService')\n                .addMultipleLineItems(salesChannelId, contextToken, items)\n                .then((response: AxiosResponse) => commit('setCart', response.data));\n        },\n\n        addPromotionCode(\n            { commit },\n            { salesChannelId, contextToken, code }: { salesChannelId: string, contextToken: string, code: string },\n        ): Promise<void> {\n            return Service('cartStoreService')\n                .addPromotionCode(salesChannelId, contextToken, code)\n                .then(response => commit('setCart', response.data));\n        },\n\n        modifyShippingCosts(\n            { commit },\n            { salesChannelId, contextToken, shippingCosts }:\n                { salesChannelId: string, contextToken: string, shippingCosts: CalculatedPrice },\n        ) {\n            return Service('cartStoreService')\n                .modifyShippingCosts(salesChannelId, contextToken, shippingCosts)\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                .then((response: AxiosResponse) => commit('setCart', response.data.data));\n        },\n\n        remindPayment(_, { orderTransactionId }: { orderTransactionId: string }) {\n            return Service('orderStateMachineService')\n                .transitionOrderTransactionState(orderTransactionId, 'remind');\n        },\n    },\n};\n\n/**\n * @private\n */\nexport default SwOrderStore;\n\n/**\n * @private\n */\nexport type {\n    SwOrderState,\n};\n\n","import type { Entity } from '@shopware-ag/admin-extension-sdk/es/data/_internals/Entity';\nimport type Repository from 'src/core/data/repository.data';\nimport type { Cart, PromotionCodeTag } from '../../order.types';\nimport swOrderState from '../../state/order.store';\nimport template from './sw-order-create.html.twig';\nimport './sw-order-create.scss';\n\n/**\n * @package checkout\n */\n\nconst { Context, State, Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default Shopware.Component.wrapComponentConfig({\n    template,\n\n    inject: ['repositoryFactory', 'feature'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data(): {\n        isLoading: boolean,\n        isSaveSuccessful: boolean,\n        showInvalidCodeModal: boolean,\n        showRemindPaymentModal: boolean,\n        remindPaymentModalLoading: boolean,\n        orderId: string | null,\n        orderTransaction: { id: string, paymentMethodId: string } | null,\n        paymentMethodName: string,\n        } {\n        return {\n            isLoading: false,\n            isSaveSuccessful: false,\n            showInvalidCodeModal: false,\n            showRemindPaymentModal: false,\n            remindPaymentModalLoading: false,\n            orderId: null,\n            orderTransaction: null,\n            paymentMethodName: '',\n        };\n    },\n\n    computed: {\n        customer(): Entity<'customer'> | null {\n            return State.get('swOrder').customer;\n        },\n\n        cart(): Cart {\n            return State.get('swOrder').cart;\n        },\n\n        invalidPromotionCodes(): PromotionCodeTag[] {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            return State.getters['swOrder/invalidPromotionCodes'] as PromotionCodeTag[];\n        },\n\n        isSaveOrderValid(): boolean {\n            return (this.customer &&\n                this.cart.token &&\n                this.cart.lineItems.length &&\n                !this.invalidPromotionCodes.length) as boolean;\n        },\n\n        paymentMethodRepository(): Repository<'payment_method'> {\n            return this.repositoryFactory.create('payment_method');\n        },\n\n        showInitialModal(): boolean {\n            return this.$route.name === 'sw.order.create.initial';\n        },\n    },\n\n    beforeCreate(): void {\n        State.registerModule('swOrder', swOrderState);\n    },\n\n    created(): void {\n        this.createdComponent();\n    },\n\n    beforeDestroy(): void {\n        this.unregisterModule();\n    },\n\n    methods: {\n        createdComponent(): void {\n            // set language to system language\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (!State.getters['context/isSystemDefaultLanguage']) {\n                State.commit('context/resetLanguageToDefault');\n            }\n        },\n\n        unregisterModule(): void {\n            State.unregisterModule('swOrder');\n        },\n\n        redirectToOrderList(): void {\n            void this.$router.push({ name: 'sw.order.index' });\n        },\n\n        saveFinish(): void {\n            if (!this.orderId) {\n                return;\n            }\n\n            this.isSaveSuccessful = false;\n            void this.$router.push({ name: 'sw.order.detail', params: { id: this.orderId } });\n        },\n\n        onSaveOrder(): Promise<void> {\n            if (this.isSaveOrderValid) {\n                this.isLoading = true;\n                this.isSaveSuccessful = false;\n\n                return State\n                    .dispatch('swOrder/saveOrder', {\n                        salesChannelId: this.customer?.salesChannelId,\n                        contextToken: this.cart.token,\n                    })\n                    .then((response) => {\n                        // eslint-disable-next-line max-len\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n                        this.orderId = response?.data?.id;\n                        // eslint-disable-next-line max-len\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n                        this.orderTransaction = response?.data?.transactions?.[0];\n\n                        if (!this.orderTransaction) {\n                            return;\n                        }\n\n                        void this.paymentMethodRepository.get(\n                            this.orderTransaction.paymentMethodId,\n                            Context.api,\n                            new Criteria(1, 1),\n                        ).then((paymentMethod) => {\n                            this.paymentMethodName = paymentMethod?.translated?.distinguishableName ?? '';\n                        });\n\n                        this.showRemindPaymentModal = true;\n                    })\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    .catch((error) => this.showError(error))\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            }\n\n            if (this.invalidPromotionCodes.length > 0) {\n                this.openInvalidCodeModal();\n            } else {\n                this.showError();\n            }\n\n            return Promise.resolve();\n        },\n\n        onCancelOrder() {\n            if (this.customer === null || this.cart === null) {\n                this.redirectToOrderList();\n                return;\n            }\n\n            void State\n                .dispatch('swOrder/cancelCart', {\n                    salesChannelId: this.customer.salesChannelId,\n                    contextToken: this.cart.token,\n                })\n                .then(() => this.redirectToOrderList());\n        },\n\n        showError(error: unknown = null) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n            const errorMessage = error?.response?.data?.errors?.[0]?.detail || null;\n\n            this.createNotificationError({\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                message: errorMessage || this.$tc('sw-order.create.messageSaveError'),\n            });\n        },\n\n        openInvalidCodeModal() {\n            this.showInvalidCodeModal = true;\n        },\n\n        closeInvalidCodeModal() {\n            this.showInvalidCodeModal = false;\n        },\n\n        removeInvalidCode() {\n            State.commit('swOrder/removeInvalidPromotionCodes');\n            this.closeInvalidCodeModal();\n        },\n\n        onRemindPaymentModalClose() {\n            this.isSaveSuccessful = true;\n\n            this.showRemindPaymentModal = false;\n        },\n\n        onRemindCustomer() {\n            this.remindPaymentModalLoading = true;\n\n            void State.dispatch('swOrder/remindPayment', {\n                orderTransactionId: this.orderTransaction?.id,\n            }).then(() => {\n                this.remindPaymentModalLoading = false;\n\n                this.onRemindPaymentModalClose();\n            });\n        },\n    },\n});\n","export default \"\\n{% block sw_order_create %}\\n<sw-page class=\\\"sw-order-create\\\">\\n    \\n    {% block sw_order_create_smart_bar_header %}\\n    <template #smart-bar-header>\\n        \\n        {% block sw_order_create_smart_bar_header_title %}\\n        <h2 v-if=\\\"!showInitialModal\\\">\\n            \\n            {% block sw_order_create_smart_bar_header_title_text %}\\n            {{ $tc('sw-order.create.textNewOrder') }}\\n            {% endblock %}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_create_smart_bar_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_order_create_smart_bar_actions_slot %}\\n        <template v-if=\\\"!showInitialModal\\\">\\n            \\n            {% block sw_order_create_smart_bar_actions_cancel %}\\n            <sw-button @click=\\\"onCancelOrder\\\">\\n                {{ $tc('sw-order.create.buttonCancelOrder') }}\\n            </sw-button>\\n            {% endblock %}\\n            \\n            {% block sw_order_create_smart_bar_actions_add %}\\n            <sw-button-process\\n                variant=\\\"primary\\\"\\n                :disabled=\\\"isLoading\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :process-success=\\\"isSaveSuccessful\\\"\\n                {% if VUE3 %}\\n                @update:process-success=\\\"saveFinish\\\"\\n                {% else %}\\n                @process-finish=\\\"saveFinish\\\"\\n                {% endif %}\\n                @click.prevent=\\\"onSaveOrder\\\"\\n            >\\n                {{ $tc('sw-order.create.buttonSaveOrder') }}\\n            </sw-button-process>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_create_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch\\n            disabled\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_create_content %}\\n    <template #content>\\n        \\n        {% block sw_order_create_content_view %}\\n        <sw-card-view>\\n            \\n            {% block sw_order_create_content_tabs %}\\n            <sw-tabs\\n                v-if=\\\"!showInitialModal\\\"\\n                class=\\\"sw-order-create__tabs\\\"\\n                position-identifier=\\\"sw-order-create\\\"\\n            >\\n                \\n                {% block sw_order_create_content_tabs_general %}\\n                <sw-tabs-item\\n                    class=\\\"sw-order-create__tab-general\\\"\\n                    :route=\\\"{ name: 'sw.order.create.general' }\\\"\\n                    :title=\\\"$tc('sw-order.detail.tabGeneral')\\\"\\n                >\\n                    {{ $tc('sw-order.detail.tabGeneral') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_create_content_tabs_details %}\\n                <sw-tabs-item\\n                    class=\\\"sw-order-create__tab-details\\\"\\n                    :route=\\\"{ name: 'sw.order.create.details' }\\\"\\n                    :title=\\\"$tc('sw-order.detail.tabDetails')\\\"\\n                >\\n                    {{ $tc('sw-order.detail.tabDetails') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n            </sw-tabs>\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_create_content_view %}\\n            {% if VUE3 %}\\n            <router-view\\n                v-slot=\\\"{ Component }\\\"\\n            >\\n                <component\\n                    :is=\\\"Component\\\"\\n                    @error=\\\"showError\\\"\\n                />\\n            </router-view>\\n            {% else %}\\n            <router-view\\n                @error=\\\"showError\\\"\\n            />\\n            {% endif %}\\n            {% endblock %}\\n        </sw-card-view>\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_create_invalid_promotion_modal %}\\n        <sw-order-create-invalid-promotion-modal\\n            v-if=\\\"showInvalidCodeModal\\\"\\n            @confirm=\\\"removeInvalidCode\\\"\\n            @close=\\\"closeInvalidCodeModal\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_create_remind_payment_modal %}\\n        <sw-modal\\n            v-if=\\\"showRemindPaymentModal\\\"\\n            class=\\\"sw-order-create__remind-payment-modal\\\"\\n            :title=\\\"$tc('sw-order.create.remindPaymentModal.title')\\\"\\n            :is-loading=\\\"remindPaymentModalLoading\\\"\\n            @modal-close=\\\"onRemindPaymentModalClose\\\"\\n        >\\n            \\n            {% block sw_order_create_remind_payment_modal_content %}\\n            <p>{{ $tc('sw-order.create.remindPaymentModal.text', 0, {paymentMethodName: paymentMethodName }) }}</p>\\n            {% endblock %}\\n\\n            <template #modal-footer>\\n                \\n                {% block sw_order_create_remind_payment_modal_footer %}\\n                <sw-button\\n                    class=\\\"sw-order-create__remind-payment-modal-decline\\\"\\n                    size=\\\"small\\\"\\n                    @click=\\\"onRemindPaymentModalClose\\\"\\n                >\\n                    {{ $tc('global.default.no') }}\\n                </sw-button>\\n\\n                <sw-button\\n                    class=\\\"sw-order-create__remind-payment-modal-remind\\\"\\n                    variant=\\\"primary\\\"\\n                    size=\\\"small\\\"\\n                    @click=\\\"onRemindCustomer\\\"\\n                >\\n                    {{ $tc('sw-order.create.remindPaymentModal.primaryAction') }}\\n                </sw-button>\\n                {% endblock %}\\n\\n            </template>\\n        </sw-modal>\\n        {% endblock %}\\n\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}