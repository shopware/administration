{"version":3,"sources":["webpack:///./src/module/sw-cms/page/sw-cms-list/sw-cms-list.scss","webpack:///./src/module/sw-cms/page/sw-cms-list/index.js","webpack:///./src/module/sw-cms/page/sw-cms-list/sw-cms-list.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","Criteria","Data","template","inject","mixins","getByName","data","pages","linkedLayouts","isLoading","cardViewIdentifier","sortBy","sortDirection","limit","limitDefaults","gridView","cardView","term","currentPageType","showMediaModal","currentPage","showRenameModal","newName","showDeleteModal","defaultMediaFolderId","listMode","assignablePageTypes","searchConfigEntity","showLayoutSetAsDefaultModal","defaultCategoryId","defaultProductId","newDefaultLayout","undefined","metaInfo","title","this","$createTitle","computed","pageRepository","repositoryFactory","create","defaultFolderRepository","columnConfig","getColumnConfig","sortOptions","value","name","$tc","sortPageTypes","_this","sortByAllPagesOption","active","cmsPageTypeService","getTypes","reduce","accumulator","pageType","push","listCriteria","criteria","page","addAssociation","addSorting","sort","setTerm","addFilter","equals","addLinkedLayoutsAggregation","addPageAggregations","associatedCategoryBuckets","_this$pages$aggregati","_this$pages$aggregati2","aggregations","categories","buckets","associatedProductBuckets","_this$pages$aggregati3","_this$pages$aggregati4","products","isLinkedCriteria","type","operator","queries","map","not","concat","dateFilter","Filter","created","createdComponent","methods","State","commit","loadGridUserSettings","acl","can","getDefaultLayouts","setPageContext","resetList","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","settings","wrap","_context","prev","next","getUserSettings","sent","abrupt","updateLimit","stop","saveGridUserSettings","saveUserSettings","_this3","getDefaultFolderId","then","folderId","getList","_this4","_callee2","_context2","addQueryScores","entitySearchable","total","search","searchResult","_searchResult$aggrega","entities","catch","linkedLayoutsFilter","filter","definition","field","addAggregation","terms","count","_this5","_callee3","response","_context3","systemConfigApiService","getValues","onOpenLayoutSetAsDefault","id","onCloseLayoutSetAsDefault","onConfirmLayoutSetAsDefault","_this6","_callee4","configKey","_this6$newDefaultLayo","_context4","saveValues","_defineProperty","layoutIsLinked","pageId","some","updateRoute","_defaultFolder$folder","defaultFolder","first","folder","onChangeLanguage","languageId","onListItemClick","$router","params","onSortingChanged","_value$split","split","_value$split2","_slicedToArray","onSearch","arguments","length","onSortPageType","onPageChange","_ref","onCreateNewLayout","onListModeChange","onPreviewChange","onPreviewImageRemove","previewMediaId","previewMedia","saveCmsPage","onModalClose","onPreviewImageChange","_ref2","image","onRenameCmsPage","onCloseRenameModal","onConfirmPageRename","onDeleteCmsPage","onDuplicateCmsPage","_this7","behavior","overwrites","clone","Context","api","createNotificationError","message","onCloseDeleteModal","onConfirmPageDelete","deleteCmsPage","_this8","context","save","_this9","messageDeleteError","delete","property","label","inlineEdit","primary","sortable","visible","deleteDisabledToolTip","showDelay","disabled","getPageType","_this$cmsPageTypeServ","isDefault","includes","defaultText","typeLabel","getType","getPageCategoryCount","_Object$values$find","_Object$values$find$c","Object","values","find","bucket","key","categoryCount","getPageProductCount","_Object$values$find2","_Object$values$find2$","productCount","getPageCount","pageCount","optionContextDeleteDisabled"],"mappings":"0GAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,iICHpCQ,G,UAAUC,SAAVD,OACAE,EAAaD,SAASE,KAAtBD,SAGO,WACXE,SCXW,ij4BDaXC,OAAQ,CACJ,oBACA,MACA,UACA,yBACA,sBAGJC,OAAQ,CACJN,EAAMO,UAAU,WAChBP,EAAMO,UAAU,gBAChBP,EAAMO,UAAU,kBAGpBC,KAAI,WACA,MAAO,CACHC,MAAO,GACPC,cAAe,GACfC,WAAW,EACXC,mBAAoB,4BACpBC,OAAQ,YACRC,cAAe,OACfC,MAAO,EACPC,cAAe,CACXC,SAAU,GACVC,SAAU,GAEdC,KAAM,GACNC,gBAAiB,KACjBC,gBAAgB,EAChBC,YAAa,KACbC,iBAAiB,EACjBC,QAAS,KACTC,iBAAiB,EACjBC,qBAAsB,KACtBC,SAAU,OACVC,oBAAqB,CAAC,aAAc,YACpCC,mBAAoB,WACpBC,6BAA6B,EAC7BC,kBAAmB,GACnBC,iBAAkB,GAClBC,sBAAkBC,IAI1BC,SAAQ,WACJ,MAAO,CACHC,MAAOC,KAAKC,iBAIpBC,SAAU,CACNC,eAAc,WACV,OAAOH,KAAKI,kBAAkBC,OAAO,aAGzCC,wBAAuB,WACnB,OAAON,KAAKI,kBAAkBC,OAAO,yBAGzCE,aAAY,WACR,OAAOP,KAAKQ,mBAMhBC,YAAW,WACP,MAAO,CACH,CAAEC,MAAO,iBAAkBC,KAAMX,KAAKY,IAAI,yCAC1C,CAAEF,MAAO,gBAAiBC,KAAMX,KAAKY,IAAI,yCACzC,CAAEF,MAAO,iBAAkBC,KAAMX,KAAKY,IAAI,yCAC1C,CAAEF,MAAO,gBAAiBC,KAAMX,KAAKY,IAAI,2CAIjDC,cAAa,WAAI,IAADC,EAAA,KACNC,EAAuB,CACzBL,MAAO,GACPC,KAAMX,KAAKY,IAAI,sCACfI,QAAQ,GAGZ,OAAOhB,KAAKiB,mBAAmBC,WAAWC,QAAO,SAACC,EAAaC,GAM3D,OALAD,EAAYE,KAAK,CACbZ,MAAOW,EAASV,KAChBA,KAAMG,EAAKF,IAAIS,EAAStB,SAGrBqB,IACR,CAACL,KAGRQ,aAAY,WACR,IAAMC,EAAW,IAAI3D,EAASmC,KAAKyB,KAAMzB,KAAKtB,OAe9C,OAdA8C,EAASE,eAAe,gBACnBC,WAAW9D,EAAS+D,KAAK5B,KAAKxB,OAAQwB,KAAKvB,gBAE9B,OAAduB,KAAKlB,MACL0C,EAASK,QAAQ7B,KAAKlB,MAGG,OAAzBkB,KAAKjB,iBACLyC,EAASM,UAAUjE,EAASkE,OAAO,gBAAiB/B,KAAKjB,kBAG7DiB,KAAKgC,4BAA4BR,GACjCxB,KAAKiC,oBAAoBT,GAElBA,GAGXU,0BAAyB,WAAI,IAADC,EAAAC,EACxB,OAA8B,QAAvBD,EAAAnC,KAAK5B,MAAMiE,oBAAY,IAAAF,GAAY,QAAZC,EAAvBD,EAAyBG,kBAAU,IAAAF,OAAZ,EAAvBA,EAAqCG,UAAW,IAG3DC,yBAAwB,WAAI,IAADC,EAAAC,EACvB,OAA8B,QAAvBD,EAAAzC,KAAK5B,MAAMiE,oBAAY,IAAAI,GAAU,QAAVC,EAAvBD,EAAyBE,gBAAQ,IAAAD,OAAV,EAAvBA,EAAmCH,UAAW,IAQzDK,iBAAgB,WACZ,MAAO,CACH,CACIC,KAAM,QACNC,SAAU,KACVC,QAAS/C,KAAKT,oBAAoByD,KAC9B,SAAArC,GAAI,OAAI9C,EAASoF,IAAI,KAAM,CAACpF,EAASkE,OAAO,GAADmB,OAAIvC,EAAI,OAAO,cAM1EwC,WAAU,WACN,OAAOvF,SAASwF,OAAOlF,UAAU,UAIzCmF,QAAO,WACHrD,KAAKsD,oBAGTC,QAAS,CACLD,iBAAgB,WACZ1F,SAAS4F,MAAMC,OAAO,6BAEtBzD,KAAK0D,uBAED1D,KAAK2D,IAAIC,IAAI,uBACb5D,KAAK6D,oBAGT7D,KAAK8D,iBACL9D,KAAK+D,aAGHL,qBAAoB,WAAI,IAADM,EAAA,YAAAC,IAAAC,IAAAC,MAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACFT,EAAKU,gBAAgBV,EAAKzF,oBAAoB,KAAD,EAAtD,GAAR8F,EAAQE,EAAAI,KACA,CAADJ,EAAAE,KAAA,eAAAF,EAAAK,OAAA,iBAIbZ,EAAK1E,SAAW+E,EAAS/E,SACzB0E,EAAKxF,OAAS6F,EAAS7F,OACvBwF,EAAKvF,cAAgB4F,EAAS5F,cAE9BuF,EAAKa,cAAc,wBAAAN,EAAAO,UAAAV,MAVMH,IAa7BY,YAAW,WACP7E,KAAKtB,MAA2B,SAAlBsB,KAAKV,SAAuBU,KAAKrB,cAAcE,SAAWmB,KAAKrB,cAAcC,UAG/FmG,qBAAoB,WAChB/E,KAAKgF,iBAAiBhF,KAAKzB,mBAAoB,CAC3Ce,SAAUU,KAAKV,SACfd,OAAQwB,KAAKxB,OACbC,cAAeuB,KAAKvB,iBAI5BqF,eAAc,WAAI,IAADmB,EAAA,KACbjF,KAAKkF,qBAAqBC,MAAK,SAACC,GAC5BH,EAAK5F,qBAAuB+F,MAI9BC,QAAO,WAAI,IAADC,EAAA,YAAArB,IAAAC,IAAAC,MAAA,SAAAoB,IAAA,IAAA/D,EAAA,OAAA0C,IAAAI,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACU,OAAtBa,EAAKhH,WAAY,EAAKkH,EAAAf,KAAA,EAECa,EAAKG,eAAeH,EAAKxG,KAAMwG,EAAK/D,cAAc,KAAD,EAA1D,GAARC,EAAQgE,EAAAb,KACTW,EAAKI,iBAAiB,CAADF,EAAAf,KAAA,QAEP,OADfa,EAAKhH,WAAY,EACjBgH,EAAKK,MAAQ,EAAEH,EAAAZ,OAAA,UAER,GAAK,cAAAY,EAAAZ,OAAA,SAGTU,EAAKnF,eAAeyF,OAAOpE,GAAU2D,MAAK,SAACU,GAAkB,IAADC,EAU/D,OATAR,EAAKK,MAAQE,EAAaF,MAC1BL,EAAKlH,MAAQyH,EAEgB,QAA7BC,EAAID,EAAaxD,oBAAY,IAAAyD,GAAzBA,EAA2BzH,gBAC3BiH,EAAKjH,cAAgBwH,EAAaxD,aAAahE,cAAc0H,UAGjET,EAAKhH,WAAY,EAEVgH,EAAKlH,SACb4H,OAAM,WACLV,EAAKhH,WAAY,MACnB,wBAAAkH,EAAAV,UAAAS,MAxBUtB,IA8BhBjC,4BAA2B,SAACR,GACxB,IAAMyE,EAAsBpI,EAASqI,OAAO,sBAAuBlG,KAAK4C,iBAAkB,CACtFjC,KAAM,gBACNkC,KAAM,SACNsD,WAAY,WACZC,MAAO,OAGX5E,EAAS6E,eAAeJ,IAG5BhE,oBAAmB,SAACT,GAChB,OAAOA,EAAS6E,eAAexI,EAASyI,MACpC,WACA,KACA,KACA,KACAzI,EAAS0I,MAAM,eAAgB,iBAChCF,eAAexI,EAASyI,MACvB,aACA,KACA,KACA,KACAzI,EAAS0I,MAAM,gBAAiB,oBAIlC1C,kBAAiB,WAAI,IAAD2C,EAAA,YAAAvC,IAAAC,IAAAC,MAAA,SAAAsC,IAAA,IAAAC,EAAA,OAAAxC,IAAAI,MAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAlC,KAAA,EACC+B,EAAKI,uBAAuBC,UAAU,YAAY,KAAD,EAAlEH,EAAQC,EAAAhC,KAEd6B,EAAK9G,kBAAoBgH,EAAS,sCAClCF,EAAK7G,iBAAmB+G,EAAS,qCAAqC,wBAAAC,EAAA7B,UAAA2B,MAJhDxC,IAO1B6C,yBAAwB,SAACrF,GACrBzB,KAAKJ,iBAAmB,CAAEmH,GAAItF,EAAKsF,GAAIlE,KAAMpB,EAAKoB,MAClD7C,KAAKP,6BAA8B,GAGvCuH,0BAAyB,WACrBhH,KAAKJ,sBAAmBC,EACxBG,KAAKP,6BAA8B,GAGjCwH,4BAA2B,WAAI,IAADC,EAAA,YAAAjD,IAAAC,IAAAC,MAAA,SAAAgD,IAAA,IAAAC,EAAAC,EAAAN,EAAA,OAAA7C,IAAAI,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,OAS/B,OARG2C,EAAY,oBAAmBC,EAEdH,EAAKtH,iBAAlBmH,EAAEM,EAAFN,GACK,mBADGM,EAAJxE,MAERqE,EAAKvH,iBAAmBoH,EACxBK,EAAY,oBAEZF,EAAKxH,kBAAoBqH,EAC5BO,EAAA7C,KAAA,EAEKyC,EAAKN,uBAAuBW,WAAUC,IAAC,GAAD,oBAAAtE,OACnBkE,GAAcL,IACpC,KAAD,EAEFG,EAAKzH,6BAA8B,EAAM,wBAAA6H,EAAAxC,UAAAqC,MAfTlD,IAkBpCwD,eAAc,SAACC,GACX,OAAO1H,KAAK3B,cAAcsJ,MAAK,SAAAlG,GAAI,OAAIA,EAAKsF,KAAOW,MAGvD3D,UAAS,WACL/D,KAAKyB,KAAO,EACZzB,KAAK5B,MAAQ,GACb4B,KAAK4H,YAAY,CACbnG,KAAMzB,KAAKyB,KACX/C,MAAOsB,KAAKtB,MACZI,KAAMkB,KAAKlB,KACXN,OAAQwB,KAAKxB,OACbC,cAAeuB,KAAKvB,gBAExBuB,KAAKqF,WAGTH,mBAAkB,WACd,IAAM1D,EAAW,IAAI3D,EAAS,EAAG,GAIjC,OAHA2D,EAASE,eAAe,UACxBF,EAASM,UAAUjE,EAASkE,OAAO,SAAU,aAEtC/B,KAAKM,wBAAwBsF,OAAOpE,GAAU2D,MAAK,SAACU,GAAkB,IAADgC,EAClEC,EAAgBjC,EAAakC,QACnC,OAAwB,QAAxBF,EAAIC,EAAcE,cAAM,IAAAH,GAApBA,EAAsBd,GACfe,EAAcE,OAAOjB,GAGzB,SAIfkB,iBAAgB,SAACC,GACbtK,SAAS4F,MAAMC,OAAO,2BAA4ByE,GAClDlI,KAAK+D,aAGToE,gBAAe,SAAC1G,GACZzB,KAAKoI,QAAQ9G,KAAK,CAAEX,KAAM,gBAAiB0H,OAAQ,CAAEtB,GAAItF,EAAKsF,OAGlEuB,iBAAgB,SAAC5H,GAAQ,IAAD6H,EACgB7H,EAAM8H,MAAM,KAAIC,EAAAC,IAAAH,EAAA,GAAnDvI,KAAKxB,OAAMiK,EAAA,GAAEzI,KAAKvB,cAAagK,EAAA,GAChCzI,KAAK+D,YACL/D,KAAK+E,wBAGT4D,SAAQ,WAAgB,IAAfjI,EAAKkI,UAAAC,OAAA,QAAAhJ,IAAA+I,UAAA,GAAAA,UAAA,GAAG,MACRlI,EAAMmI,QAAUnI,EAAMmI,QAAU,EACjC7I,KAAKlB,KAAO,KAEZkB,KAAKlB,KAAO4B,EAGhBV,KAAK+D,aAGT+E,eAAc,WAAgB,IAAfpI,EAAKkI,UAAAC,OAAA,QAAAhJ,IAAA+I,UAAA,GAAAA,UAAA,GAAG,MACdlI,EAAMmI,QAAUnI,EAAMmI,QAAU,EACjC7I,KAAKjB,gBAAkB,KAEvBiB,KAAKjB,gBAAkB2B,EAG3BV,KAAK+D,aAGTgF,aAAY,SAAAC,GAAmB,IAAhBvH,EAAIuH,EAAJvH,KAAM/C,EAAKsK,EAALtK,MACjBsB,KAAKyB,KAAOA,EACZzB,KAAKtB,MAAQA,EAEbsB,KAAKqF,UACLrF,KAAK4H,YAAY,CACbnG,KAAMzB,KAAKyB,KACX/C,MAAOsB,KAAKtB,SAIpBuK,kBAAiB,WACbjJ,KAAKoI,QAAQ9G,KAAK,CAAEX,KAAM,mBAG9BuI,iBAAgB,WACZlJ,KAAKV,SAA8B,SAAlBU,KAAKV,SAAuB,OAAS,OAEtDU,KAAK6E,cACL7E,KAAK+D,YACL/D,KAAK+E,wBAGToE,gBAAe,SAAC1H,GACZzB,KAAKhB,gBAAiB,EACtBgB,KAAKf,YAAcwC,GAGvB2H,qBAAoB,SAAC3H,GACjBA,EAAK4H,eAAiB,KACtB5H,EAAK6H,aAAe,KACpBtJ,KAAKuJ,YAAY9H,IAGrB+H,aAAY,WACRxJ,KAAKhB,gBAAiB,EACtBgB,KAAKf,YAAc,MAGvBwK,qBAAoB,SAAAC,GAAW,IAATC,EAAQjB,IAAAgB,EAAA,GAAH,GACvB1J,KAAKf,YAAYoK,eAAiBM,EAAM5C,GACxC/G,KAAKuJ,YAAYvJ,KAAKf,aACtBe,KAAKf,YAAYqK,aAAeK,GAGpCC,gBAAe,SAACnI,GACZzB,KAAKf,YAAcwC,EACnBzB,KAAKd,iBAAkB,GAG3B2K,mBAAkB,WACd7J,KAAKf,YAAc,KACnBe,KAAKd,iBAAkB,GAG3B4K,oBAAmB,WACX9J,KAAKb,UACLa,KAAKf,YAAY0B,KAAOX,KAAKb,QAC7Ba,KAAKuJ,YAAYvJ,KAAKf,aACtBe,KAAKqF,WAETrF,KAAKb,QAAU,KACfa,KAAKf,YAAc,KACnBe,KAAKd,iBAAkB,GAG3B6K,gBAAe,SAACtI,GACZzB,KAAKf,YAAcwC,EACnBzB,KAAKZ,iBAAkB,GAG3B4K,mBAAkB,SAACvI,GAAsC,IAADwI,EAAA,KAA/BC,EAAQtB,UAAAC,OAAA,QAAAhJ,IAAA+I,UAAA,GAAAA,UAAA,GAAG,CAAEuB,WAAY,IACzCD,EAASC,aACVD,EAASC,WAAa,IAGrBD,EAASC,WAAWxJ,OACrBuJ,EAASC,WAAWxJ,KAAI,GAAAuC,OAAMzB,EAAKd,KAAI,OAAAuC,OAAMlD,KAAKY,IAAI,yBAG1DZ,KAAK1B,WAAY,EACjB0B,KAAKG,eAAeiK,MAAM3I,EAAKsF,GAAInJ,SAASyM,QAAQC,IAAKJ,GAAU/E,MAAK,WACpE8E,EAAKlG,YACLkG,EAAK3L,WAAY,KAClB0H,OAAM,WACLiE,EAAK3L,WAAY,EACjB2L,EAAKM,wBAAwB,CACzBC,QAASP,EAAKrJ,IAAI,yDAK9B6J,mBAAkB,WACdzK,KAAKf,YAAc,KACnBe,KAAKZ,iBAAkB,GAG3BsL,oBAAmB,WACf1K,KAAK2K,cAAc3K,KAAKf,aAExBe,KAAKf,YAAc,KACnBe,KAAKZ,iBAAkB,GAG3BmK,YAAW,SAAC9H,GAAuC,IAADmJ,EAAA,KAAhCC,EAAOjC,UAAAC,OAAA,QAAAhJ,IAAA+I,UAAA,GAAAA,UAAA,GAAGhL,SAASyM,QAAQC,IAEzC,OADAtK,KAAK1B,WAAY,EACV0B,KAAKG,eAAe2K,KAAKrJ,EAAMoJ,GAAS1F,MAAK,WAChDyF,EAAKtM,WAAY,KAClB0H,OAAM,WACL4E,EAAKtM,WAAY,MAIzBqM,cAAa,SAAClJ,GAAO,IAADsJ,EAAA,KACVC,EAAqBhL,KAAKY,IAAI,gEAGpC,OADAZ,KAAK1B,WAAY,EACV0B,KAAKG,eAAe8K,OAAOxJ,EAAKsF,IAAI5B,MAAK,WAC5C4F,EAAKhH,eACNiC,OAAM,WACL+E,EAAKzM,WAAY,EACjByM,EAAKR,wBAAwB,CACzBC,QAASQ,QAKrBxK,gBAAe,WACX,MAAO,CAAC,CACJ0K,SAAU,OACVC,MAAOnL,KAAKY,IAAI,8BAChBwK,WAAY,SACZC,SAAS,EACTC,UAAU,GACX,CACCJ,SAAU,OACVC,MAAOnL,KAAKY,IAAI,8BAChB0K,UAAU,GACX,CACCJ,SAAU,cACVC,MAAOnL,KAAKY,IAAI,qCAChB0K,UAAU,GACX,CACCJ,SAAU,YACVC,MAAOnL,KAAKY,IAAI,iCAChB0K,UAAU,GACX,CACCJ,SAAU,YACVC,MAAOnL,KAAKY,IAAI,iCAChB0K,UAAU,EACVC,SAAS,KAIjBC,sBAAqB,SAAC/J,GAClB,MAAkB,mBAAdA,EAAKoB,KACE,CACH4I,UAAW,IACXjB,QAASxK,KAAKY,IAAI,+CAClB8K,UAAW1L,KAAKyH,eAAehG,EAAKsF,KAIrC,CACH0E,UAAW,IACXjB,QAASxK,KAAKY,IAAI,wCAClB8K,UAAW1L,KAAKyH,eAAehG,EAAKsF,MAI5C4E,YAAW,SAAClK,GAAO,IAADmK,EACRC,EAAY,CAAC7L,KAAKL,iBAAkBK,KAAKN,mBAAmBoM,SAASrK,EAAKsF,IAC1EgF,EAAc/L,KAAKY,IAAI,+CACvBoL,EAAYhM,KAAKY,IAA8C,QAA3CgL,EAAC5L,KAAKiB,mBAAmBgL,QAAQxK,EAAKoB,aAAK,IAAA+I,OAAA,EAA1CA,EAA4C7L,OAEvE,OAAO8L,EAAS,GAAA3I,OAAM6I,EAAW,OAAA7I,OAAM8I,GAAcA,GAGzDE,qBAAoB,SAACzK,GAAO,IAAD0K,EAAAC,EACvB,OAEE,QAFKD,EAAAE,OAAOC,OAAOtM,KAAKkC,2BAA2BqK,MAAK,SAACC,GACvD,OAAOA,EAAOC,MAAQhL,EAAKsF,aAC7B,IAAAoF,GAAe,QAAfC,EAFKD,EAEHO,qBAAa,IAAAN,OAAf,EAFKA,EAEY7F,QAAS,GAGhCoG,oBAAmB,SAAClL,GAAO,IAADmL,EAAAC,EACtB,OAEE,QAFKD,EAAAP,OAAOC,OAAOtM,KAAKwC,0BAA0B+J,MAAK,SAACC,GACtD,OAAOA,EAAOC,MAAQhL,EAAKsF,aAC7B,IAAA6F,GAAc,QAAdC,EAFKD,EAEHE,oBAAY,IAAAD,OAAd,EAFKA,EAEWtG,QAAS,GAG/BwG,aAAY,SAACtL,GACT,IAAMuL,EAAYhN,KAAKkM,qBAAqBzK,GAAQzB,KAAK2M,oBAAoBlL,GAC7E,OAAOuL,EAAY,EAAIA,EAAY,KAGvCC,4BAA2B,SAACxL,GACxB,OAAOzB,KAAKkM,qBAAqBzK,GAAQ,GACrCzB,KAAK2M,oBAAoBlL,GAAQ,IAChCzB,KAAK2D,IAAIC,IAAI,mB","file":"static/js/9c80af5cc97d9022eb99.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-cms-list.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"61c4e8e7\", content, true, {});","/**\n * @package buyers-experience\n */\nimport template from './sw-cms-list.html.twig';\nimport './sw-cms-list.scss';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'feature',\n        'systemConfigApiService',\n        'cmsPageTypeService',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n        Mixin.getByName('user-settings'),\n    ],\n\n    data() {\n        return {\n            pages: [],\n            linkedLayouts: [],\n            isLoading: false,\n            cardViewIdentifier: 'grid.cms.sw-cms-list-grid',\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            limit: 9,\n            limitDefaults: {\n                gridView: 10,\n                cardView: 9,\n            },\n            term: '',\n            currentPageType: null,\n            showMediaModal: false,\n            currentPage: null,\n            showRenameModal: false,\n            newName: null,\n            showDeleteModal: false,\n            defaultMediaFolderId: null,\n            listMode: 'grid',\n            assignablePageTypes: ['categories', 'products'],\n            searchConfigEntity: 'cms_page',\n            showLayoutSetAsDefaultModal: false,\n            defaultCategoryId: '',\n            defaultProductId: '',\n            newDefaultLayout: undefined,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        pageRepository() {\n            return this.repositoryFactory.create('cms_page');\n        },\n\n        defaultFolderRepository() {\n            return this.repositoryFactory.create('media_default_folder');\n        },\n\n        columnConfig() {\n            return this.getColumnConfig();\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - Will be removed\n         */\n        sortOptions() {\n            return [\n                { value: 'createdAt:DESC', name: this.$tc('sw-cms.sorting.labelSortByCreatedDsc') },\n                { value: 'createdAt:ASC', name: this.$tc('sw-cms.sorting.labelSortByCreatedAsc') },\n                { value: 'updatedAt:DESC', name: this.$tc('sw-cms.sorting.labelSortByUpdatedDsc') },\n                { value: 'updatedAt:ASC', name: this.$tc('sw-cms.sorting.labelSortByUpdatedAsc') },\n            ];\n        },\n\n        sortPageTypes() {\n            const sortByAllPagesOption = {\n                value: '',\n                name: this.$tc('sw-cms.sorting.labelSortByAllPages'),\n                active: true,\n            };\n\n            return this.cmsPageTypeService.getTypes().reduce((accumulator, pageType) => {\n                accumulator.push({\n                    value: pageType.name,\n                    name: this.$tc(pageType.title),\n                });\n\n                return accumulator;\n            }, [sortByAllPagesOption]);\n        },\n\n        listCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n            criteria.addAssociation('previewMedia')\n                .addSorting(Criteria.sort(this.sortBy, this.sortDirection));\n\n            if (this.term !== null) {\n                criteria.setTerm(this.term);\n            }\n\n            if (this.currentPageType !== null) {\n                criteria.addFilter(Criteria.equals('cms_page.type', this.currentPageType));\n            }\n\n            this.addLinkedLayoutsAggregation(criteria);\n            this.addPageAggregations(criteria);\n\n            return criteria;\n        },\n\n        associatedCategoryBuckets() {\n            return this.pages.aggregations?.categories?.buckets || [];\n        },\n\n        associatedProductBuckets() {\n            return this.pages.aggregations?.products?.buckets || [];\n        },\n\n        /**\n         * Returns a set of criteria/query objects which designate linked layouts.\n         *\n         * @internal\n         */\n        isLinkedCriteria() {\n            return [\n                {\n                    type: 'multi',\n                    operator: 'OR',\n                    queries: this.assignablePageTypes.map(\n                        name => Criteria.not('OR', [Criteria.equals(`${name}.id`, null)]),\n                    ),\n                },\n            ];\n        },\n\n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Shopware.State.commit('adminMenu/collapseSidebar');\n\n            this.loadGridUserSettings();\n\n            if (this.acl.can('system_config.read')) {\n                this.getDefaultLayouts();\n            }\n\n            this.setPageContext();\n            this.resetList();\n        },\n\n        async loadGridUserSettings() {\n            const settings = await this.getUserSettings(this.cardViewIdentifier);\n            if (!settings) {\n                return;\n            }\n\n            this.listMode = settings.listMode;\n            this.sortBy = settings.sortBy;\n            this.sortDirection = settings.sortDirection;\n\n            this.updateLimit();\n        },\n\n        updateLimit() {\n            this.limit = (this.listMode === 'grid') ? this.limitDefaults.cardView : this.limitDefaults.gridView;\n        },\n\n        saveGridUserSettings() {\n            this.saveUserSettings(this.cardViewIdentifier, {\n                listMode: this.listMode,\n                sortBy: this.sortBy,\n                sortDirection: this.sortDirection,\n            });\n        },\n\n        setPageContext() {\n            this.getDefaultFolderId().then((folderId) => {\n                this.defaultMediaFolderId = folderId;\n            });\n        },\n\n        async getList() {\n            this.isLoading = true;\n\n            const criteria = await this.addQueryScores(this.term, this.listCriteria);\n            if (!this.entitySearchable) {\n                this.isLoading = false;\n                this.total = 0;\n\n                return false;\n            }\n\n            return this.pageRepository.search(criteria).then((searchResult) => {\n                this.total = searchResult.total;\n                this.pages = searchResult;\n\n                if (searchResult.aggregations?.linkedLayouts) {\n                    this.linkedLayouts = searchResult.aggregations.linkedLayouts.entities;\n                }\n\n                this.isLoading = false;\n\n                return this.pages;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        /**\n         * @internal\n         */\n        addLinkedLayoutsAggregation(criteria) {\n            const linkedLayoutsFilter = Criteria.filter('linkedLayoutsFilter', this.isLinkedCriteria, {\n                name: 'linkedLayouts',\n                type: 'entity',\n                definition: 'cms_page',\n                field: 'id',\n            });\n\n            criteria.addAggregation(linkedLayoutsFilter);\n        },\n\n        addPageAggregations(criteria) {\n            return criteria.addAggregation(Criteria.terms(\n                'products',\n                'id',\n                null,\n                null,\n                Criteria.count('productCount', 'products.id'),\n            )).addAggregation(Criteria.terms(\n                'categories',\n                'id',\n                null,\n                null,\n                Criteria.count('categoryCount', 'categories.id'),\n            ));\n        },\n\n        async getDefaultLayouts() {\n            const response = await this.systemConfigApiService.getValues('core.cms');\n\n            this.defaultCategoryId = response['core.cms.default_category_cms_page'];\n            this.defaultProductId = response['core.cms.default_product_cms_page'];\n        },\n\n        onOpenLayoutSetAsDefault(page) {\n            this.newDefaultLayout = { id: page.id, type: page.type };\n            this.showLayoutSetAsDefaultModal = true;\n        },\n\n        onCloseLayoutSetAsDefault() {\n            this.newDefaultLayout = undefined;\n            this.showLayoutSetAsDefaultModal = false;\n        },\n\n        async onConfirmLayoutSetAsDefault() {\n            let configKey = 'category_cms_page';\n\n            const { id, type } = this.newDefaultLayout;\n            if (type === 'product_detail') {\n                this.defaultProductId = id;\n                configKey = 'product_cms_page';\n            } else {\n                this.defaultCategoryId = id;\n            }\n\n            await this.systemConfigApiService.saveValues({\n                [`core.cms.default_${configKey}`]: id,\n            });\n\n            this.showLayoutSetAsDefaultModal = false;\n        },\n\n        layoutIsLinked(pageId) {\n            return this.linkedLayouts.some(page => page.id === pageId);\n        },\n\n        resetList() {\n            this.page = 1;\n            this.pages = [];\n            this.updateRoute({\n                page: this.page,\n                limit: this.limit,\n                term: this.term,\n                sortBy: this.sortBy,\n                sortDirection: this.sortDirection,\n            });\n            this.getList();\n        },\n\n        getDefaultFolderId() {\n            const criteria = new Criteria(1, 1);\n            criteria.addAssociation('folder');\n            criteria.addFilter(Criteria.equals('entity', 'cms_page'));\n\n            return this.defaultFolderRepository.search(criteria).then((searchResult) => {\n                const defaultFolder = searchResult.first();\n                if (defaultFolder.folder?.id) {\n                    return defaultFolder.folder.id;\n                }\n\n                return null;\n            });\n        },\n\n        onChangeLanguage(languageId) {\n            Shopware.State.commit('context/setApiLanguageId', languageId);\n            this.resetList();\n        },\n\n        onListItemClick(page) {\n            this.$router.push({ name: 'sw.cms.detail', params: { id: page.id } });\n        },\n\n        onSortingChanged(value) {\n            [this.sortBy, this.sortDirection] = value.split(':');\n            this.resetList();\n            this.saveGridUserSettings();\n        },\n\n        onSearch(value = null) {\n            if (!value.length || value.length <= 0) {\n                this.term = null;\n            } else {\n                this.term = value;\n            }\n\n            this.resetList();\n        },\n\n        onSortPageType(value = null) {\n            if (!value.length || value.length <= 0) {\n                this.currentPageType = null;\n            } else {\n                this.currentPageType = value;\n            }\n\n            this.resetList();\n        },\n\n        onPageChange({ page, limit }) {\n            this.page = page;\n            this.limit = limit;\n\n            this.getList();\n            this.updateRoute({\n                page: this.page,\n                limit: this.limit,\n            });\n        },\n\n        onCreateNewLayout() {\n            this.$router.push({ name: 'sw.cms.create' });\n        },\n\n        onListModeChange() {\n            this.listMode = (this.listMode === 'grid') ? 'list' : 'grid';\n\n            this.updateLimit();\n            this.resetList();\n            this.saveGridUserSettings();\n        },\n\n        onPreviewChange(page) {\n            this.showMediaModal = true;\n            this.currentPage = page;\n        },\n\n        onPreviewImageRemove(page) {\n            page.previewMediaId = null;\n            page.previewMedia = null;\n            this.saveCmsPage(page);\n        },\n\n        onModalClose() {\n            this.showMediaModal = false;\n            this.currentPage = null;\n        },\n\n        onPreviewImageChange([image]) {\n            this.currentPage.previewMediaId = image.id;\n            this.saveCmsPage(this.currentPage);\n            this.currentPage.previewMedia = image;\n        },\n\n        onRenameCmsPage(page) {\n            this.currentPage = page;\n            this.showRenameModal = true;\n        },\n\n        onCloseRenameModal() {\n            this.currentPage = null;\n            this.showRenameModal = false;\n        },\n\n        onConfirmPageRename() {\n            if (this.newName) {\n                this.currentPage.name = this.newName;\n                this.saveCmsPage(this.currentPage);\n                this.getList();\n            }\n            this.newName = null;\n            this.currentPage = null;\n            this.showRenameModal = false;\n        },\n\n        onDeleteCmsPage(page) {\n            this.currentPage = page;\n            this.showDeleteModal = true;\n        },\n\n        onDuplicateCmsPage(page, behavior = { overwrites: {} }) {\n            if (!behavior.overwrites) {\n                behavior.overwrites = {};\n            }\n\n            if (!behavior.overwrites.name) {\n                behavior.overwrites.name = `${page.name} - ${this.$tc('global.default.copy')}`;\n            }\n\n            this.isLoading = true;\n            this.pageRepository.clone(page.id, Shopware.Context.api, behavior).then(() => {\n                this.resetList();\n                this.isLoading = false;\n            }).catch(() => {\n                this.isLoading = false;\n                this.createNotificationError({\n                    message: this.$tc('global.notification.unspecifiedSaveErrorMessage'),\n                });\n            });\n        },\n\n        onCloseDeleteModal() {\n            this.currentPage = null;\n            this.showDeleteModal = false;\n        },\n\n        onConfirmPageDelete() {\n            this.deleteCmsPage(this.currentPage);\n\n            this.currentPage = null;\n            this.showDeleteModal = false;\n        },\n\n        saveCmsPage(page, context = Shopware.Context.api) {\n            this.isLoading = true;\n            return this.pageRepository.save(page, context).then(() => {\n                this.isLoading = false;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        deleteCmsPage(page) {\n            const messageDeleteError = this.$tc('sw-cms.components.cmsListItem.notificationDeleteErrorMessage');\n\n            this.isLoading = true;\n            return this.pageRepository.delete(page.id).then(() => {\n                this.resetList();\n            }).catch(() => {\n                this.isLoading = false;\n                this.createNotificationError({\n                    message: messageDeleteError,\n                });\n            });\n        },\n\n        getColumnConfig() {\n            return [{\n                property: 'name',\n                label: this.$tc('sw-cms.list.gridHeaderName'),\n                inlineEdit: 'string',\n                primary: true,\n                sortable: false,\n            }, {\n                property: 'type',\n                label: this.$tc('sw-cms.list.gridHeaderType'),\n                sortable: false,\n            }, {\n                property: 'assignments',\n                label: this.$tc('sw-cms.list.gridHeaderAssignments'),\n                sortable: false,\n            }, {\n                property: 'createdAt',\n                label: this.$tc('sw-cms.list.gridHeaderCreated'),\n                sortable: false,\n            }, {\n                property: 'updatedAt',\n                label: this.$tc('sw-cms.list.gridHeaderUpdated'),\n                sortable: false,\n                visible: false,\n            }];\n        },\n\n        deleteDisabledToolTip(page) {\n            if (page.type === 'product_detail') {\n                return {\n                    showDelay: 300,\n                    message: this.$tc('sw-cms.general.deleteDisabledProductToolTip'),\n                    disabled: !this.layoutIsLinked(page.id),\n                };\n            }\n\n            return {\n                showDelay: 300,\n                message: this.$tc('sw-cms.general.deleteDisabledToolTip'),\n                disabled: !this.layoutIsLinked(page.id),\n            };\n        },\n\n        getPageType(page) {\n            const isDefault = [this.defaultProductId, this.defaultCategoryId].includes(page.id);\n            const defaultText = this.$tc('sw-cms.components.cmsListItem.defaultLayout');\n            const typeLabel = this.$tc(this.cmsPageTypeService.getType(page.type)?.title);\n\n            return isDefault ? `${defaultText} - ${typeLabel}` : typeLabel;\n        },\n\n        getPageCategoryCount(page) {\n            return Object.values(this.associatedCategoryBuckets).find((bucket) => {\n                return bucket.key === page.id;\n            })?.categoryCount?.count || 0;\n        },\n\n        getPageProductCount(page) {\n            return Object.values(this.associatedProductBuckets).find((bucket) => {\n                return bucket.key === page.id;\n            })?.productCount?.count || 0;\n        },\n\n        getPageCount(page) {\n            const pageCount = this.getPageCategoryCount(page) + this.getPageProductCount(page);\n            return pageCount > 0 ? pageCount : '-';\n        },\n\n        optionContextDeleteDisabled(page) {\n            return this.getPageCategoryCount(page) > 0 ||\n                this.getPageProductCount(page) > 0 ||\n                !this.acl.can('cms.deleter');\n        },\n    },\n};\n","export default \"\\n{% block sw_cms_list %}\\n<sw-page class=\\\"sw-cms-list\\\">\\n    \\n    {% block sw_cms_list_search_bar %}\\n    <template #search-bar>\\n        <sw-search-bar\\n            initial-search-type=\\\"cms_page\\\"\\n            :initial-search=\\\"term\\\"\\n            @search=\\\"onSearch\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_list_toolbar %}\\n    <template #smart-bar-header>\\n        <h2>{{ $tc('sw-cms.general.moduleTitle') }}</h2>\\n    </template>\\n\\n    <template #language-switch>\\n        <sw-language-switch @on-change=\\\"onChangeLanguage\\\" />\\n    </template>\\n\\n    <template #smart-bar-actions>\\n        <sw-button\\n            v-tooltip=\\\"{\\n                message: $tc('sw-privileges.tooltip.warning'),\\n                disabled: acl.can('cms.creator'),\\n                showOnDisabledElements: true\\n            }\\\"\\n            variant=\\\"primary\\\"\\n            :disabled=\\\"!acl.can('cms.creator')\\\"\\n            @click=\\\"onCreateNewLayout\\\"\\n        >\\n            {{ $tc('sw-cms.general.createNewLayout') }}\\n        </sw-button>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_list_card_view %}\\n    <template #content>\\n        <sw-card-view>\\n\\n            \\n            {% block sw_cms_list_content %}\\n            <div class=\\\"sw-cms-list__content\\\">\\n                \\n                {% block sw_cms_list_sidebar %}\\n                <div class=\\\"sw-cms-list__sidebar\\\">\\n                    \\n                    {% block sw_cms_list_sidebar_tabs %}\\n                    <sw-tabs\\n                        is-vertical\\n                        small\\n                        position-identifier=\\\"sw-cms-list-sidebar\\\"\\n                        class=\\\"sw-cms-list__type-nav\\\"\\n                    >\\n                        <sw-tabs-item\\n                            v-for=\\\"pageType in sortPageTypes\\\"\\n                            :key=\\\"pageType.name\\\"\\n                            :disabled=\\\"pageType.disabled\\\"\\n                            :active=\\\"pageType.active\\\"\\n                            @click=\\\"onSortPageType(pageType.value)\\\"\\n                        >\\n                            {{ pageType.name }}\\n                        </sw-tabs-item>\\n                    </sw-tabs>\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n\\n                \\n                {% block sw_cms_list_listing %}\\n                <div class=\\\"sw-cms-list__listing\\\">\\n\\n                    \\n                    {% block sw_cms_list_listing_actions %}\\n                    <div class=\\\"sw-cms-list__actions\\\">\\n                        \\n                        {% block sw_cms_list_listing_title %}\\n                        <h3>{{ $tc('sw-cms.general.greeting') }}</h3>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_cms_list_listing_actions_sorting %}\\n                        <div class=\\\"sw-cms-list__actions-sorting\\\">\\n\\n                            \\n                            {% block sw_cms_list_listing_actions_sorting_select %}\\n                            <sw-sorting-select\\n                                :sort-by=\\\"sortBy\\\"\\n                                :sort-direction=\\\"sortDirection\\\"\\n                                @sorting-changed=\\\"onSort\\\"\\n                            />\\n                            {% endblock %}\\n\\n                        </div>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_cms_list_listing_actions_mode %}\\n                        <div\\n                            class=\\\"sw-cms-list__actions-mode\\\"\\n                            role=\\\"button\\\"\\n                            tabindex=\\\"0\\\"\\n                            @click=\\\"onListModeChange\\\"\\n                            @keydown.enter=\\\"onListModeChange\\\"\\n                        >\\n                            <sw-icon\\n                                v-if=\\\"listMode === 'grid'\\\"\\n                                name=\\\"regular-view-normal\\\"\\n                                size=\\\"16\\\"\\n                            />\\n                            <sw-icon\\n                                v-if=\\\"listMode === 'list'\\\"\\n                                name=\\\"regular-view-grid\\\"\\n                                size=\\\"16\\\"\\n                            />\\n                        </div>\\n                        {% endblock %}\\n                    </div>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_list_listing_list %}\\n                    <div class=\\\"sw-cms-list__list\\\">\\n\\n                        \\n                        {% block sw_cms_list_listing_list_grid %}\\n                        <div\\n                            v-if=\\\"listMode === 'grid'\\\"\\n                            class=\\\"sw-cms-list__list-grid\\\"\\n                        >\\n\\n                            \\n                            {% block sw_cms_list_listing_list_grid_content %}\\n                            <div class=\\\"sw-cms-list__list-grid-content\\\">\\n                                <template v-if=\\\"!isLoading\\\">\\n                                    \\n                                    {% block sw_cms_list_listing_list_item %}\\n                                    <sw-cms-list-item\\n                                        v-for=\\\"(cmsPage, index) in pages\\\"\\n                                        :key=\\\"cmsPage.id\\\"\\n                                        :class=\\\"'sw-cms-list-item--' + index\\\"\\n                                        :page=\\\"cmsPage\\\"\\n                                        :active=\\\"layoutIsLinked(cmsPage.id)\\\"\\n                                        :is-default=\\\"[defaultProductId, defaultCategoryId].includes(cmsPage.id)\\\"\\n                                        @item-click=\\\"onListItemClick\\\"\\n                                        @preview-image-change=\\\"onPreviewChange\\\"\\n                                        @cms-page-delete=\\\"onDeleteCmsPage\\\"\\n                                    >\\n                                        <template #contextMenu>\\n                                            <sw-context-button class=\\\"sw-cms-list-item__options\\\">\\n                                                \\n                                                {% block sw_cms_list_listing_list_item_option_add_preview %}\\n                                                <sw-context-menu-item\\n                                                    class=\\\"sw-cms-list-item__option-preview\\\"\\n                                                    :disabled=\\\"!acl.can('cms.editor')\\\"\\n                                                    @click=\\\"onPreviewChange(cmsPage)\\\"\\n                                                >\\n                                                    {{ $tc('sw-cms.components.cmsListItem.addPreviewImage') }}\\n                                                </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                <sw-context-menu-item\\n                                                    v-if=\\\"cmsPage.type === 'product_list' && !(defaultCategoryId === cmsPage.id)\\\"\\n                                                    class=\\\"sw-cms-list-item__option-set-as-default\\\"\\n                                                    :disabled=\\\"!acl.can('system_config.editor')\\\"\\n                                                    @click=\\\"onOpenLayoutSetAsDefault(cmsPage)\\\"\\n                                                >\\n                                                    {{ $tc('sw-cms.components.cmsListItem.setAsDefaultProductList') }}\\n                                                </sw-context-menu-item>\\n\\n                                                \\n                                                <sw-context-menu-item\\n                                                    v-else-if=\\\"feature.isActive('v6.6.0.0') && cmsPage.type === 'product_detail' && !(defaultProductId === cmsPage.id)\\\"\\n                                                    class=\\\"sw-cms-list-item__option-set-as-default\\\"\\n                                                    :disabled=\\\"!acl.can('cms.editor')\\\"\\n                                                    @click=\\\"onOpenLayoutSetAsDefault(cmsPage)\\\"\\n                                                >\\n                                                    {{ $tc('sw-cms.components.cmsListItem.setAsDefaultProductDetail') }}\\n                                                </sw-context-menu-item>\\n\\n                                                \\n                                                {% block sw_cms_list_listing_list_item_option_duplicate %}\\n                                                <sw-context-menu-item\\n                                                    :disabled=\\\"!acl.can('cms.creator')\\\"\\n                                                    class=\\\"sw-cms-list-item__option-duplicate\\\"\\n                                                    @click=\\\"onDuplicateCmsPage(cmsPage)\\\"\\n                                                >\\n                                                    {{ $tc('sw-cms.components.cmsListItem.duplicate') }}\\n                                                </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                \\n                                                {% block sw_cms_list_listing_list_item_option_remove_preview %}\\n                                                <sw-context-menu-item\\n                                                    v-if=\\\"cmsPage.previewMediaId\\\"\\n                                                    class=\\\"sw-cms-list-item__option-preview\\\"\\n                                                    variant=\\\"danger\\\"\\n                                                    :disabled=\\\"!acl.can('cms.editor')\\\"\\n                                                    @click=\\\"onPreviewImageRemove(cmsPage)\\\"\\n                                                >\\n                                                    {{ $tc('sw-cms.components.cmsListItem.removePreviewImage') }}\\n                                                </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                \\n                                                {% block sw_cms_list_listing_list_item_option_delete %}\\n                                                <sw-context-menu-item\\n                                                    v-if=\\\"!cmsPage.locked && !(defaultProductId === cmsPage.id || defaultCategoryId === cmsPage.id)\\\"\\n                                                    v-tooltip=\\\"deleteDisabledToolTip(cmsPage)\\\"\\n                                                    class=\\\"sw-cms-list-item__option-delete\\\"\\n                                                    variant=\\\"danger\\\"\\n                                                    :disabled=\\\"optionContextDeleteDisabled(cmsPage)\\\"\\n                                                    @click=\\\"onDeleteCmsPage(cmsPage)\\\"\\n                                                >\\n                                                    {{ $tc('sw-cms.components.cmsListItem.delete') }}\\n                                                </sw-context-menu-item>\\n                                            {% endblock %}\\n\\n                                            </sw-context-button>\\n                                        </template>\\n                                    </sw-cms-list-item>\\n                                    {% endblock %}\\n                                </template>\\n\\n                                <template v-else>\\n                                    <sw-skeleton\\n                                        v-for=\\\"index in 9\\\"\\n                                        :key=\\\"`cms-list-skeleton-${index}`\\\"\\n                                        variant=\\\"gallery\\\"\\n                                    />\\n                                </template>\\n                            </div>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_cms_list_listing_pagination %}\\n                            <sw-pagination\\n                                v-if=\\\"!isLoading\\\"\\n                                class=\\\"sw-cms-list__list-pagination\\\"\\n                                :page=\\\"page\\\"\\n                                :limit=\\\"limit\\\"\\n                                :total=\\\"total\\\"\\n                                :steps=\\\"[9]\\\"\\n                                @page-change=\\\"onPageChange\\\"\\n                            />\\n                            {% endblock %}\\n                        </div>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_cms_list_listing_list_card %}\\n                        <sw-card\\n                            v-else-if=\\\"listMode === 'list'\\\"\\n                            position-identifier=\\\"sw-cms-list-list-mode\\\"\\n                            class=\\\"sw-cms-list__list-card\\\"\\n                        >\\n                            <template #grid>\\n                                \\n                                {% block sw_cms_list_listing_list_data_grid %}\\n                                <sw-data-grid\\n                                    class=\\\"sw-cms-list__list-data-grid\\\"\\n                                    identifier=\\\"sw-cms-list\\\"\\n                                    :is-loading=\\\"isLoading\\\"\\n                                    :data-source=\\\"pages\\\"\\n                                    :columns=\\\"columnConfig\\\"\\n                                    :skeleton-item-amount=\\\"limit\\\"\\n                                    :sort-by=\\\"sortBy\\\"\\n                                    :sort-direction=\\\"sortDirection\\\"\\n                                    :allow-inline-edit=\\\"false\\\"\\n                                    :allow-column-edit=\\\"false\\\"\\n                                    show-settings\\n                                    :show-selection=\\\"false\\\"\\n                                >\\n\\n                                    \\n                                    {% block sw_cms_list_listing_list_data_grid_column_name %}\\n                                    <template #column-name=\\\"{ item }\\\">\\n                                        <sw-icon\\n                                            v-if=\\\"item.locked\\\"\\n                                            name=\\\"regular-lock\\\"\\n                                            class=\\\"sw-cms-list__icon-lock\\\"\\n                                            size=\\\"14\\\"\\n                                        />\\n                                        <router-link :to=\\\"{ name: 'sw.cms.detail', params: { id: item.id } }\\\">\\n                                            {{ item.translated.name }}\\n                                        </router-link>\\n                                    </template>\\n                                    {% endblock %}\\n\\n                                    \\n                                    {% block sw_cms_list_listing_list_data_grid_column_type %}\\n                                    <template #column-type=\\\"{ item }\\\">\\n                                        {{ getPageType(item) }}\\n                                    </template>\\n                                    {% endblock %}\\n\\n                                    \\n                                    {% block sw_cms_list_listing_list_data_grid_column_assignments %}\\n                                    <template #column-assignments=\\\"{ item }\\\">\\n                                        {{ getPageCount(item) }}\\n                                    </template>\\n                                    {% endblock %}\\n\\n                                    \\n                                    {% block sw_cms_list_listing_list_data_grid_column_created %}\\n                                    <template #column-createdAt=\\\"{ item }\\\">\\n                                        {{ dateFilter(item.createdAt, { hour: '2-digit', minute: '2-digit' }) }}\\n                                    </template>\\n                                    {% endblock %}\\n\\n                                    \\n                                    {% block sw_cms_list_listing_list_data_grid_column_updated %}\\n                                    <template #column-updatedAt=\\\"{ item }\\\">\\n                                        {{ dateFilter(item.updatedAt, { hour: '2-digit', minute: '2-digit' }) }}\\n                                    </template>\\n                                    {% endblock %}\\n\\n                                    \\n                                    {% block sw_cms_list_listing_list_data_grid_actions %}\\n                                    <template #actions=\\\"{ item }\\\">\\n                                        \\n                                        {% block sw_cms_list_listing_list_data_grid_actions_edit %}\\n                                        <sw-context-menu-item\\n                                            :router-link=\\\"{ name: 'sw.cms.detail', params: { id: item.id } }\\\"\\n                                            class=\\\"sw-cms-list__context-menu-item-edit\\\"\\n                                            :disabled=\\\"!acl.can('cms.editor')\\\"\\n                                        >\\n                                            {{ $tc('sw-cms.components.cmsListItem.edit') }}\\n                                        </sw-context-menu-item>\\n                                        {% endblock %}\\n\\n                                        <sw-context-menu-item\\n                                            v-if=\\\"item.type === 'product_list' && !(defaultCategoryId === item.id)\\\"\\n                                            class=\\\"sw-cms-list-item__option-set-as-default\\\"\\n                                            :disabled=\\\"!acl.can('system_config.editor')\\\"\\n                                            @click=\\\"onOpenLayoutSetAsDefault(item)\\\"\\n                                        >\\n                                            {{ $tc('sw-cms.components.cmsListItem.setAsDefaultProductList') }}\\n                                        </sw-context-menu-item>\\n\\n                                        <sw-context-menu-item\\n                                            v-else-if=\\\"item.type === 'product_detail' && !(defaultProductId === item.id)\\\"\\n                                            class=\\\"sw-cms-list-item__option-set-as-default\\\"\\n                                            :disabled=\\\"!acl.can('cms.editor')\\\"\\n                                            @click=\\\"onOpenLayoutSetAsDefault(item)\\\"\\n                                        >\\n                                            {{ $tc('sw-cms.components.cmsListItem.setAsDefaultProductDetail') }}\\n                                        </sw-context-menu-item>\\n\\n                                        \\n                                        {% block sw_cms_list_listing_list_data_grid_actions_edit_duplicate %}\\n                                        <sw-context-menu-item\\n                                            :disabled=\\\"!acl.can('cms.creator')\\\"\\n                                            class=\\\"sw-cms-list__context-menu-item-duplicate\\\"\\n                                            @click=\\\"onDuplicateCmsPage(item)\\\"\\n                                        >\\n                                            {{ $tc('sw-cms.components.cmsListItem.duplicate') }}\\n                                        </sw-context-menu-item>\\n                                        {% endblock %}\\n\\n                                        \\n                                        {% block sw_cms_list_listing_list_item_option_rename %}\\n                                        <sw-context-menu-item\\n                                            v-if=\\\"!item.locked\\\"\\n                                            :disabled=\\\"!acl.can('cms.editor')\\\"\\n                                            class=\\\"sw-cms-list__context-menu-item-rename\\\"\\n                                            @click=\\\"onRenameCmsPage(item)\\\"\\n                                        >\\n                                            {{ $tc('sw-cms.components.cmsListItem.rename') }}\\n                                        </sw-context-menu-item>\\n                                        {% endblock %}\\n\\n                                        \\n                                        {% block sw_cms_list_listing_list_data_grid_actions_edit_delete %}\\n                                        <sw-context-menu-item\\n                                            v-if=\\\"!item.locked && !(defaultProductId === item.id || defaultCategoryId === item.id)\\\"\\n                                            v-tooltip=\\\"deleteDisabledToolTip(item)\\\"\\n                                            variant=\\\"danger\\\"\\n                                            class=\\\"sw-cms-list__context-menu-item-delete\\\"\\n                                            :disabled=\\\"optionContextDeleteDisabled(item)\\\"\\n                                            @click=\\\"onDeleteCmsPage(item)\\\"\\n                                        >\\n                                            {{ $tc('sw-cms.components.cmsListItem.delete') }}\\n\\n                                        </sw-context-menu-item>\\n                                        {% endblock %}\\n\\n                                    </template>\\n                                    {% endblock %}\\n\\n                                    \\n                                    {% block sw_cms_list_listing_list_data_grid_pagination %}\\n                                    <template #pagination>\\n                                        <sw-pagination\\n                                            :page=\\\"page\\\"\\n                                            :limit=\\\"limit\\\"\\n                                            :total=\\\"total\\\"\\n                                            :steps=\\\"[5, 10, 25, 50]\\\"\\n                                            @page-change=\\\"onPageChange\\\"\\n                                        />\\n                                    </template>\\n                                    {% endblock %}\\n                                </sw-data-grid>\\n                                {% endblock %}\\n                            </template>\\n                        </sw-card>\\n                        {% endblock %}\\n                    </div>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_list_listing_list_empty_state %}\\n                    <sw-empty-state\\n                        v-if=\\\"isValidTerm(term) && !isLoading && !total\\\"\\n                        :title=\\\"$tc('sw-empty-state.messageNoResultTitle')\\\"\\n                        :style=\\\"{ minHeight: '200px' }\\\"\\n                    >\\n                        <template #default>\\n                            {{ $tc('sw-empty-state.messageNoResultSublineBefore') }}\\n                            <router-link\\n                                class=\\\"sw-empty-state__description-link\\\"\\n                                :to=\\\"{ name: 'sw.profile.index.searchPreferences' }\\\"\\n                            >\\n                                {{ $tc('sw-empty-state.messageNoResultSublineLink') }}\\n                            </router-link>\\n                            {{ $tc('sw-empty-state.messageNoResultSublineAfter') }}\\n                        </template>\\n                    </sw-empty-state>\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n\\n            \\n            {% block sw_cms_list_media_modal %}\\n            <sw-media-modal-v2\\n                v-if=\\\"showMediaModal\\\"\\n                :caption=\\\"$tc('sw-cms.components.cmsListItem.modal.captionMediaUpload')\\\"\\n                :entity-context=\\\"'cms_page'\\\"\\n                :allow-multi-select=\\\"false\\\"\\n                @media-modal-selection-change=\\\"onPreviewImageChange\\\"\\n                @modal-close=\\\"onModalClose\\\"\\n            />\\n            {% endblock %}\\n\\n            <sw-confirm-modal\\n                v-if=\\\"showLayoutSetAsDefaultModal\\\"\\n                class=\\\"sw-cms-list__confirm-set-as-default-modal\\\"\\n                :title=\\\"$tc('sw-cms.components.setDefaultLayoutModal.title')\\\"\\n                :text=\\\"$tc('sw-cms.components.setDefaultLayoutModal.infoText')\\\"\\n                @confirm=\\\"onConfirmLayoutSetAsDefault\\\"\\n                @cancel=\\\"onCloseLayoutSetAsDefault\\\"\\n                @close=\\\"onCloseLayoutSetAsDefault\\\"\\n            />\\n\\n            \\n            {% block sw_cms_list_rename_modal %}\\n            <sw-modal\\n                v-if=\\\"showRenameModal\\\"\\n                :title=\\\"$tc('sw-cms.components.cmsListItem.modal.renameModalTitle')\\\"\\n                variant=\\\"small\\\"\\n                @modal-close=\\\"onCloseRenameModal\\\"\\n            >\\n\\n                \\n                {% block sw_cms_list_rename_modal_confirm_rename_input %}\\n                <div class=\\\"sw_tree__confirm-rename-text\\\">\\n                    {{ $tc('sw-cms.components.cmsListItem.modal.textRenameConfirm', 0, { pageName: currentPage.translated.name || currentPage.name }) }}\\n                </div>\\n                <sw-text-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"newName\\\"\\n                    {% else %}\\n                    v-model=\\\"newName\\\"\\n                    {% endif %}\\n                    class=\\\"sw_tree__confirm-rename-text-field\\\"\\n                    size=\\\"medium\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_cms_list_rename_modal_footer %}\\n                <template #modal-footer>\\n                    \\n                    {% block sw_cms_list_rename_modal_cancel %}\\n                    <sw-button\\n                        size=\\\"small\\\"\\n                        @click=\\\"onCloseRenameModal\\\"\\n                    >\\n                        {{ $tc('sw-cms.components.cmsListItem.modal.buttonCancel') }}\\n                    </sw-button>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_list_rename_modal_confirm %}\\n                    <sw-button\\n                        size=\\\"small\\\"\\n                        variant=\\\"primary\\\"\\n                        @click=\\\"onConfirmPageRename\\\"\\n                    >\\n                        {{ $tc('sw-cms.components.cmsListItem.modal.buttonRename') }}\\n                    </sw-button>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n            </sw-modal>\\n            {% endblock %}\\n\\n            \\n            {% block sw_cms_list_delete_modal %}\\n            <sw-modal\\n                v-if=\\\"showDeleteModal\\\"\\n                :title=\\\"$tc('global.default.warning')\\\"\\n                variant=\\\"small\\\"\\n                @modal-close=\\\"onCloseDeleteModal\\\"\\n            >\\n\\n                \\n                {% block sw_cms_list_delete_modal_confirm_delete_text %}\\n                <div class=\\\"sw_tree__confirm-delete-text\\\">\\n                    {{ $tc('sw-cms.components.cmsListItem.modal.textDeleteConfirm', 0, { pageName: currentPage.translated.name || currentPage.name }) }}\\n                </div>\\n                {% endblock %}\\n\\n                \\n                {% block sw_cms_list_delete_modal_footer %}\\n                <template #modal-footer>\\n                    \\n                    {% block sw_cms_list_delete_modal_cancel %}\\n                    <sw-button\\n                        size=\\\"small\\\"\\n                        @click=\\\"onCloseDeleteModal\\\"\\n                    >\\n                        {{ $tc('sw-cms.components.cmsListItem.modal.buttonCancel') }}\\n                    </sw-button>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_list_delete_modal_confirm %}\\n                    <sw-button\\n                        variant=\\\"danger\\\"\\n                        size=\\\"small\\\"\\n                        @click=\\\"onConfirmPageDelete\\\"\\n                    >\\n                        {{ $tc('sw-cms.components.cmsListItem.modal.buttonDelete') }}\\n                    </sw-button>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n            </sw-modal>\\n            {% endblock %}\\n\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}