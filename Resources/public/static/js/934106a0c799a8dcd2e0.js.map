{"version":3,"sources":["webpack:///./src/module/sw-product/page/sw-product-detail/index.js","webpack:///./src/module/sw-product/page/sw-product-detail/sw-product-detail.html.twig","webpack:///./src/module/sw-product/page/sw-product-detail/state.js","webpack:///./src/module/sw-product/page/sw-product-detail/sw-product-detail.scss"],"names":["_Shopware","Shopware","Context","Mixin","_Shopware$Data","Data","Criteria","ChangesetGenerator","cloneDeep","Utils","object","_Shopware$Component$g","Component","getComponentHelper","mapPageErrors","mapState","mapGetters","type","types","template","inject","mixins","getByName","shortcuts","active","this","acl","can","method","ESCAPE","props","productId","String","required","default","creationStates","Array","data","productNumberPreview","isSaveSuccessful","cloning","defaultSalesChannelVisibility","metaInfo","title","$createTitle","identifier","computed","_objectSpread","errorConfiguration","productTitle","isChild","product","getInheritTitle","$i18n","placeholder","$tc","productRepository","repositoryFactory","create","syncRepository","useSync","currencyRepository","taxRepository","customFieldSetRepository","salesChannelRepository","productVisibilityRepository","mediaRepository","media","entity","source","featureSetRepository","currentUser","State","get","userModeSettingsRepository","userModeSettingsCriteria","criteria","addFilter","equals","id","productCriteria","getAssociation","addSorting","sort","addAssociation","customFieldSetCriteria","defaultFeatureSetCriteria","equalsAny","taxCriteria","tooltipSave","systemKey","$device","getSystemKey","message","concat","appearance","tooltipCancel","getModeSettingGeneralTab","key","label","enabled","name","getModeSettingSpecificationsTab","showAdvanceModeSetting","includes","$route","watch","destroyedComponent","createdComponent","beforeCreate","registerModule","swProductDetailState","created","beforeUnmount","unregisterModule","destroyed","methods","_this","ExtensionAPI","publishData","path","scope","dispatch","getters","commit","initState","$root","$on","mediaId","removeMediaItem","loadAll","initAdvancedModeSettings","$off","_this2","api","loadState","createState","then","numberRangeService","reserve","response","number","productNumber","getAdvancedModeDefaultSetting","getAdvancedModeSetting","createUserModeSetting","newModeSettings","userId","defaultSettings","value","advancedMode","settings","_toConsumableArray","_this3","search","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","items","modeSettings","wrap","_context","prev","next","total","abrupt","first","reduce","accumulator","defaultEntry","foundEntry","find","dbEntry","push","changeModeSettings","$nextTick","stop","_x","apply","arguments","saveAdvancedMode","_this4","save","advancedModeSetting","catch","createNotificationError","onChangeSetting","enabledModeItems","filter","item","length","map","onChangeSettingItem","Promise","all","loadProduct","loadCurrencies","loadTaxes","loadAttributeSet","_this5","taxId","metaTitle","additionalText","variantListingConfig","adjustProductAccordingToType","loadDefaultFeatureSet","price","currencyId","defaultCurrency","net","linked","gross","purchasePrices","getDefaultPurchasePrices","isNew","getDefaultTaxRate","result","getDefaultSalesChannels","isEmpty","defaultActive","defaultSalesChannelIds","fetchSalesChannelByIds","salesChannels","forEach","salesChannel","visibilities","createProductVisibilityEntity","defaultVisibilities","defaultFeatureSet","featureSetId","maxPurchase","_this6","_product$purchasePric","parentId","loadParentProduct","res","systemConfigApiService","getValues","_response$coreTaxDe","finally","ids","visibility","Object","assign","salesChannelId","abortOnLanguageChange","hasChanges","saveOnLanguageChange","onSave","onChangeLanguage","languageId","saveFinish","$router","params","_this7","validateProductPurchase","resolve","validateProductPrices","pageOverrides","getCmsPageOverrides","isPlainObject","slotConfig","entityValidationService","validate","customValidate","titleSaveError","messageSaveError","saveProduct","onSaveFinished","errors","productStates","undefined","downloads","EntityValidationService","createRequiredError","_this8","prices","advancedPrice","validatePrices","priceLabel","_this9","updatePromises","list","seoUrls","defaultSeoUrl","seoUrl","seoPathInfo","isModified","seoUrlService","updateCanonicalUrl","$emit","_response","_response$response","_response$response$da","_response$response$da2","_response$response$da3","_response2","_response2$response","_response2$response$d","_response2$response$d2","_response2$response$d3","code","$t","productNo","meta","parameters","errorDetail","detail","onCancel","_this10","medium","index","position","state","mediaItem","coverId","remove","onCoverChange","hasOwnProperty","translated","parentProduct","pProduct","onDuplicate","onDuplicateFinish","duplicate","minPurchase","currentPage","deleteSpecifcKeys","sections","changes","generate","slotOverrides","isArray","section","blocks","block","slots","slot","config","values","configField","namespaced","currencies","apiContext","taxes","variants","customFieldSets","loading","init","manufacturers","rules","localMode","isLoading","some","currency","isSystemDefault","defaultPrice","productPrice","productTaxRate","tax","_state$product","showModeSetting","_state$product2","_state$advancedModeSe","showProductCard","_state$product3","advanceModeEnabled","_state$advancedModeSe2","states","mutations","setApiContext","setCustomFields","fieldSet","set","setLocalMode","setLoading","setAssignedProductsFromCrossSelling","collection","crossSellings","assignedProducts","setProductId","setProduct","newProduct","setVariants","newVariants","setParentProduct","setCurrencies","newCurrencies","setTaxes","newTaxes","setAttributeSet","newAttributeSets","setDefaultFeatureSet","newDefaultFeatureSet","setAdvancedModeSetting","newAdvancedModeSetting","setModeSettings","setCreationStates","content","__esModule","module","i","locals","exports","add"],"mappings":"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","file":"static/js/934106a0c799a8dcd2e0.js","sourcesContent":["/*\n * @package inventory\n */\n\nimport EntityValidationService from 'src/app/service/entity-validation.service';\nimport template from './sw-product-detail.html.twig';\nimport swProductDetailState from './state';\nimport errorConfiguration from './error.cfg.json';\nimport './sw-product-detail.scss';\n\nconst { Context, Mixin } = Shopware;\nconst { Criteria, ChangesetGenerator } = Shopware.Data;\nconst { cloneDeep } = Shopware.Utils.object;\nconst { mapPageErrors, mapState, mapGetters } = Shopware.Component.getComponentHelper();\nconst type = Shopware.Utils.types;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'mediaService',\n        'repositoryFactory',\n        'numberRangeService',\n        'seoUrlService',\n        'acl',\n        'systemConfigApiService',\n        'entityValidationService',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('placeholder'),\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': {\n            active() {\n                return this.acl.can('product.editor');\n            },\n            method: 'onSave',\n        },\n        ESCAPE: 'onCancel',\n    },\n\n    props: {\n        productId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        /* Product \"types\" provided by the split button for creating a new product through a router parameter */\n        creationStates: {\n            type: Array,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            productNumberPreview: '',\n            isSaveSuccessful: false,\n            cloning: false,\n            defaultSalesChannelVisibility: 30,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        ...mapState('swProductDetail', [\n            'product',\n            'parentProduct',\n            'localMode',\n            'advancedModeSetting',\n            'modeSettings',\n        ]),\n\n        ...mapGetters('swProductDetail', [\n            'productRepository',\n            'isLoading',\n            'isChild',\n            'defaultCurrency',\n            'defaultFeatureSet',\n            'showModeSetting',\n            'advanceModeEnabled',\n            'productStates',\n        ]),\n\n        ...mapPageErrors(errorConfiguration),\n\n        ...mapState('cmsPageState', [\n            'currentPage',\n        ]),\n\n        identifier() {\n            return this.productTitle;\n        },\n\n        productTitle() {\n            // when product is variant\n            if (this.isChild && this.product) {\n                return this.getInheritTitle();\n            }\n\n            if (!this.$i18n) {\n                return '';\n            }\n\n            // return name\n            return this.placeholder(this.product, 'name', this.$tc('sw-product.detail.textHeadline'));\n        },\n\n        productRepository() {\n            return this.repositoryFactory.create('product');\n        },\n\n        syncRepository() {\n            return this.repositoryFactory.create('product', null, { useSync: true });\n        },\n\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n\n        taxRepository() {\n            return this.repositoryFactory.create('tax');\n        },\n\n        customFieldSetRepository() {\n            return this.repositoryFactory.create('custom_field_set');\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        productVisibilityRepository() {\n            return this.repositoryFactory.create('product_visibility');\n        },\n\n        mediaRepository() {\n            if (this.product && this.product.media) {\n                return this.repositoryFactory.create(\n                    this.product.media.entity,\n                    this.product.media.source,\n                );\n            }\n            return null;\n        },\n\n        featureSetRepository() {\n            return this.repositoryFactory.create('product_feature_set');\n        },\n\n        currentUser() {\n            return Shopware.State.get('session').currentUser;\n        },\n\n        userModeSettingsRepository() {\n            return this.repositoryFactory.create('user_config');\n        },\n\n        userModeSettingsCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(Criteria.equals('key', 'mode.setting.advancedModeSettings'));\n            criteria.addFilter(Criteria.equals('userId', this.currentUser && this.currentUser.id));\n\n            return criteria;\n        },\n\n        productCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.getAssociation('media')\n                .addSorting(Criteria.sort('position', 'ASC'));\n\n            criteria.getAssociation('properties')\n                .addSorting(Criteria.sort('name', 'ASC', true));\n\n            criteria.getAssociation('prices')\n                .addSorting(Criteria.sort('quantityStart', 'ASC', true));\n\n            criteria.getAssociation('tags')\n                .addSorting(Criteria.sort('name', 'ASC'));\n\n            criteria.getAssociation('seoUrls')\n                .addFilter(Criteria.equals('isCanonical', true));\n\n            criteria.getAssociation('crossSellings')\n                .addSorting(Criteria.sort('position', 'ASC'))\n                .getAssociation('assignedProducts')\n                .addSorting(Criteria.sort('position', 'ASC'))\n                .addAssociation('product')\n                .getAssociation('product')\n                .addAssociation('options.group');\n\n            criteria\n                .addAssociation('cover')\n                .addAssociation('categories')\n                .addAssociation('visibilities.salesChannel')\n                .addAssociation('options')\n                .addAssociation('configuratorSettings.option')\n                .addAssociation('unit')\n                .addAssociation('productReviews')\n                .addAssociation('seoUrls')\n                .addAssociation('mainCategories')\n                .addAssociation('options.group')\n                .addAssociation('customFieldSets')\n                .addAssociation('featureSet')\n                .addAssociation('cmsPage')\n                .addAssociation('featureSet')\n                .addAssociation('downloads.media');\n\n            criteria.getAssociation('manufacturer')\n                .addAssociation('media');\n\n            return criteria;\n        },\n\n        customFieldSetCriteria() {\n            const criteria = new Criteria(1, null);\n\n            criteria.addFilter(Criteria.equals('relations.entityName', 'product'));\n            criteria\n                .addSorting(Criteria.sort('config.customFieldPosition', 'ASC', true));\n\n            return criteria;\n        },\n\n        defaultFeatureSetCriteria() {\n            const criteria = new Criteria(1, 1);\n\n            criteria\n                .addSorting(Criteria.sort('createdAt', 'ASC'))\n                .addFilter(Criteria.equalsAny('name', ['Default', 'Standard']));\n\n            return criteria;\n        },\n\n        taxCriteria() {\n            const criteria = new Criteria(1, 500);\n            criteria.addSorting(Criteria.sort('position'));\n\n            return criteria;\n        },\n\n        tooltipSave() {\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        tooltipCancel() {\n            return {\n                message: 'ESC',\n                appearance: 'light',\n            };\n        },\n\n        getModeSettingGeneralTab() {\n            return [\n                {\n                    key: 'general_information',\n                    label: 'sw-product.detailBase.cardTitleProductInfo',\n                    enabled: true,\n                    name: 'general',\n                },\n                {\n                    key: 'prices',\n                    label: 'sw-product.detailBase.cardTitlePrices',\n                    enabled: true,\n                    name: 'general',\n                },\n                {\n                    key: 'deliverability',\n                    label: 'sw-product.detailBase.cardTitleDeliverabilityInfo',\n                    enabled: true,\n                    name: 'general',\n                },\n                {\n                    key: 'visibility_structure',\n                    label: 'sw-product.detailBase.cardTitleAssignment',\n                    enabled: true,\n                    name: 'general',\n                },\n                {\n                    key: 'media',\n                    label: 'sw-product.detailBase.cardTitleMedia',\n                    enabled: true,\n                    name: 'general',\n                },\n                {\n                    key: 'labelling',\n                    label: 'sw-product.detailBase.cardTitleSettings',\n                    enabled: true,\n                    name: 'general',\n                },\n            ];\n        },\n\n        getModeSettingSpecificationsTab() {\n            return [\n                {\n                    key: 'measures_packaging',\n                    label: 'sw-product.specifications.cardTitleMeasuresPackaging',\n                    enabled: true,\n                    name: 'specifications',\n                },\n                {\n                    key: 'properties',\n                    label: 'sw-product.specifications.cardTitleProperties',\n                    enabled: true,\n                    name: 'specifications',\n                },\n                {\n                    key: 'essential_characteristics',\n                    label: 'sw-product.specifications.cardTitleEssentialCharacteristics',\n                    enabled: true,\n                    name: 'specifications',\n                },\n                {\n                    key: 'custom_fields',\n                    label: 'sw-product.specifications.cardTitleCustomFields',\n                    enabled: true,\n                    name: 'specifications',\n                },\n            ];\n        },\n\n        showAdvanceModeSetting() {\n            if (this.isChild) {\n                return false;\n            }\n\n            const routes = [\n                'sw.product.detail.base',\n                'sw.product.detail.specifications',\n            ];\n\n            return routes.includes(this.$route.name);\n        },\n    },\n\n    watch: {\n        productId() {\n            this.destroyedComponent();\n            this.createdComponent();\n        },\n    },\n\n    beforeCreate() {\n        Shopware.State.registerModule('swProductDetail', swProductDetailState);\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    beforeUnmount() {\n        Shopware.State.unregisterModule('swProductDetail');\n    },\n\n    destroyed() {\n        this.destroyedComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-product-detail__product',\n                path: 'product',\n                scope: this,\n            });\n\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-product-detail__cmsPage',\n                path: 'currentPage',\n                scope: this,\n            });\n\n            Shopware.State.dispatch('cmsPageState/resetCmsPageState');\n\n            // when create\n            if (!this.productId) {\n                // set language to system language\n                if (!Shopware.State.getters['context/isSystemDefaultLanguage']) {\n                    Shopware.State.commit('context/resetLanguageToDefault');\n                }\n            }\n\n            // initialize default state\n            this.initState();\n\n            this.$root.$on('media-remove', (mediaId) => {\n                this.removeMediaItem(mediaId);\n            });\n            this.$root.$on('product-reload', () => {\n                this.loadAll();\n            });\n\n            this.initAdvancedModeSettings();\n        },\n\n        destroyedComponent() {\n            this.$root.$off('media-remove');\n            this.$root.$off('product-reload');\n        },\n\n        initState() {\n            Shopware.State.commit('swProductDetail/setApiContext', Shopware.Context.api);\n\n            // when product exists\n            if (this.productId) {\n                return this.loadState();\n            }\n\n            // When no product id exists init state and new product with the repositoryFactory\n            return this.createState().then(() => {\n                // create new product number\n                this.numberRangeService.reserve('product', '', true).then((response) => {\n                    this.productNumberPreview = response.number;\n                    this.product.productNumber = response.number;\n                });\n            });\n        },\n\n        initAdvancedModeSettings() {\n            Shopware.State.commit('swProductDetail/setAdvancedModeSetting', this.getAdvancedModeDefaultSetting());\n\n            this.getAdvancedModeSetting();\n        },\n\n        createUserModeSetting() {\n            const newModeSettings = this.userModeSettingsRepository.create();\n            newModeSettings.key = 'mode.setting.advancedModeSettings';\n            newModeSettings.userId = this.currentUser && this.currentUser.id;\n            return newModeSettings;\n        },\n\n        getAdvancedModeDefaultSetting() {\n            const defaultSettings = this.createUserModeSetting();\n            defaultSettings.value = {\n                advancedMode: {\n                    label: 'sw-product.general.textAdvancedMode',\n                    enabled: true,\n                },\n                settings: [\n                    ...this.getModeSettingGeneralTab,\n                    ...this.getModeSettingSpecificationsTab,\n                ],\n            };\n            return defaultSettings;\n        },\n\n        getAdvancedModeSetting() {\n            return this.userModeSettingsRepository.search(this.userModeSettingsCriteria).then(async (items) => {\n                if (!items.total) {\n                    return;\n                }\n\n                const modeSettings = items.first();\n                const defaultSettings = this.getAdvancedModeDefaultSetting().value.settings;\n\n                modeSettings.value.settings = defaultSettings.reduce((accumulator, defaultEntry) => {\n                    const foundEntry = modeSettings.value.settings.find(dbEntry => dbEntry.key === defaultEntry.key);\n                    accumulator.push(foundEntry || defaultEntry);\n\n                    return accumulator;\n                }, []);\n\n                Shopware.State.commit('swProductDetail/setAdvancedModeSetting', modeSettings);\n                Shopware.State.commit('swProductDetail/setModeSettings', this.changeModeSettings());\n\n                await this.$nextTick();\n            });\n        },\n\n        saveAdvancedMode() {\n            Shopware.State.commit('swProductDetail/setLoading', ['advancedMode', true]);\n            this.userModeSettingsRepository.save(this.advancedModeSetting)\n                .then(() => {\n                    this.getAdvancedModeSetting().then(() => {\n                        Shopware.State.commit('swProductDetail/setLoading', ['advancedMode', false]);\n                    });\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('global.notification.unspecifiedSaveErrorMessage'),\n                    });\n                });\n        },\n\n        onChangeSetting() {\n            Shopware.State.commit('swProductDetail/setAdvancedModeSetting', this.advancedModeSetting);\n            this.saveAdvancedMode();\n        },\n\n        changeModeSettings() {\n            const enabledModeItems = this.advancedModeSetting.value.settings.filter((item) => item.enabled);\n            if (!enabledModeItems.length) {\n                return [];\n            }\n\n            return enabledModeItems.map(item => item.key);\n        },\n\n        onChangeSettingItem() {\n            Shopware.State.commit('swProductDetail/setModeSettings', this.changeModeSettings());\n            this.saveAdvancedMode();\n        },\n\n        loadState() {\n            Shopware.State.commit('swProductDetail/setLocalMode', false);\n            Shopware.State.commit('swProductDetail/setProductId', this.productId);\n            Shopware.State.commit('shopwareApps/setSelectedIds', [this.productId]);\n\n            return this.loadAll();\n        },\n\n        loadAll() {\n            return Promise.all([\n                this.loadProduct(),\n                this.loadCurrencies(),\n                this.loadTaxes(),\n                this.loadAttributeSet(),\n            ]);\n        },\n\n        createState() {\n            // set local mode\n            Shopware.State.commit('swProductDetail/setLocalMode', true);\n            Shopware.State.commit('shopwareApps/setSelectedIds', []);\n\n            Shopware.State.commit('swProductDetail/setLoading', ['product', true]);\n\n            // set product \"type\"\n            Shopware.State.commit('swProductDetail/setCreationStates', this.creationStates);\n\n            // create empty product\n            Shopware.State.commit('swProductDetail/setProduct', this.productRepository.create());\n            Shopware.State.commit('swProductDetail/setProductId', this.product.id);\n\n            // fill empty data\n            this.product.active = true;\n            this.product.taxId = null;\n\n            this.product.metaTitle = '';\n            this.product.additionalText = '';\n            this.product.variantListingConfig = {};\n\n            if (this.creationStates) {\n                this.adjustProductAccordingToType();\n            }\n\n            return Promise.all([\n                this.loadCurrencies(),\n                this.loadTaxes(),\n                this.loadAttributeSet(),\n                this.loadDefaultFeatureSet(),\n            ]).then(() => {\n                // set default product price and empty purchase price\n                this.product.price = [{\n                    currencyId: this.defaultCurrency.id,\n                    net: null,\n                    linked: true,\n                    gross: null,\n                }];\n\n                this.product.purchasePrices = this.getDefaultPurchasePrices();\n\n                // Set default tax rate / sales channels on creation\n                if (this.product.isNew) {\n                    this.getDefaultTaxRate().then((result) => {\n                        this.product.taxId = result;\n                    });\n\n                    this.getDefaultSalesChannels().then((result) => {\n                        if (type.isEmpty(result)) {\n                            return;\n                        }\n\n                        this.product.active = result.defaultActive;\n\n                        if (!result.defaultSalesChannelIds || result.defaultSalesChannelIds.length <= 0) {\n                            return;\n                        }\n\n                        this.fetchSalesChannelByIds(result.defaultSalesChannelIds).then(salesChannels => {\n                            if (!salesChannels.length) {\n                                return;\n                            }\n\n                            salesChannels.forEach((salesChannel) => {\n                                const visibilities = this.createProductVisibilityEntity(\n                                    result.defaultVisibilities,\n                                    salesChannel,\n                                );\n                                this.product.visibilities.push(visibilities);\n                            });\n                        });\n                    });\n                }\n\n                if (this.defaultFeatureSet && this.defaultFeatureSet.length > 0) {\n                    this.product.featureSetId = this.defaultFeatureSet[0].id;\n                }\n\n                Shopware.State.commit('swProductDetail/setLoading', ['product', false]);\n            });\n        },\n\n        adjustProductAccordingToType() {\n            if (this.creationStates.includes('is-download')) {\n                this.product.maxPurchase = 1;\n            }\n        },\n\n        loadProduct() {\n            Shopware.State.commit('swProductDetail/setLoading', ['product', true]);\n\n            return this.productRepository.get(\n                this.productId || this.product.id,\n                Shopware.Context.api,\n                this.productCriteria,\n            ).then((product) => {\n                if (!product.purchasePrices?.length > 0 && !product.parentId) {\n                    product.purchasePrices = this.getDefaultPurchasePrices();\n                }\n\n                Shopware.State.commit('swProductDetail/setProduct', product);\n\n                if (this.product.parentId) {\n                    this.loadParentProduct();\n                } else {\n                    Shopware.State.commit('swProductDetail/setParentProduct', {});\n                }\n\n                Shopware.State.commit('swProductDetail/setLoading', ['product', false]);\n            });\n        },\n\n        getDefaultPurchasePrices() {\n            return [{\n                currencyId: this.defaultCurrency.id,\n                net: 0,\n                linked: true,\n                gross: 0,\n            }];\n        },\n\n        loadParentProduct() {\n            Shopware.State.commit('swProductDetail/setLoading', ['parentProduct', true]);\n\n            return this.productRepository.get(this.product.parentId, Shopware.Context.api, this.productCriteria)\n                .then((res) => {\n                    Shopware.State.commit('swProductDetail/setParentProduct', res);\n                }).then(() => {\n                    Shopware.State.commit('swProductDetail/setLoading', ['parentProduct', false]);\n                });\n        },\n\n        loadCurrencies() {\n            Shopware.State.commit('swProductDetail/setLoading', ['currencies', true]);\n\n            return this.currencyRepository.search(new Criteria(1, 500)).then((res) => {\n                Shopware.State.commit('swProductDetail/setCurrencies', res);\n            }).then(() => {\n                Shopware.State.commit('swProductDetail/setLoading', ['currencies', false]);\n            });\n        },\n\n        loadTaxes() {\n            Shopware.State.commit('swProductDetail/setLoading', ['taxes', true]);\n\n            return this.taxRepository.search(this.taxCriteria).then((res) => {\n                Shopware.State.commit('swProductDetail/setTaxes', res);\n            }).then(() => {\n                Shopware.State.commit('swProductDetail/setLoading', ['taxes', false]);\n            });\n        },\n\n        getDefaultTaxRate() {\n            return this.systemConfigApiService\n                .getValues('core.tax')\n                .then(response => {\n                    return response['core.tax.defaultTaxRate'] ?? null;\n                });\n        },\n\n        loadAttributeSet() {\n            Shopware.State.commit('swProductDetail/setLoading', ['customFieldSets', true]);\n\n            return this.customFieldSetRepository.search(this.customFieldSetCriteria).then((res) => {\n                Shopware.State.commit('swProductDetail/setAttributeSet', res);\n            }).finally(() => {\n                Shopware.State.commit('swProductDetail/setLoading', ['customFieldSets', false]);\n            });\n        },\n\n        loadDefaultFeatureSet() {\n            Shopware.State.commit('swProductDetail/setLoading', ['defaultFeatureSet', true]);\n\n            return this.featureSetRepository.search(this.defaultFeatureSetCriteria).then((res) => {\n                Shopware.State.commit('swProductDetail/setDefaultFeatureSet', res);\n            }).then(() => {\n                Shopware.State.commit('swProductDetail/setLoading', ['defaultFeatureSet', false]);\n            });\n        },\n\n        getDefaultSalesChannels() {\n            return this.systemConfigApiService\n                .getValues('core.defaultSalesChannel')\n                .then(response => {\n                    if (type.isEmpty(response)) {\n                        return {};\n                    }\n\n                    return {\n                        defaultSalesChannelIds: response?.['core.defaultSalesChannel.salesChannel'],\n                        defaultVisibilities: response?.['core.defaultSalesChannel.visibility'],\n                        defaultActive: !!response?.['core.defaultSalesChannel.active'],\n                    };\n                });\n        },\n\n        fetchSalesChannelByIds(ids) {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(Criteria.equalsAny('id', ids));\n\n            return this.salesChannelRepository.search(criteria);\n        },\n\n        createProductVisibilityEntity(visibility, salesChannel) {\n            const visibilities = this.productVisibilityRepository.create(Context.api);\n\n            Object.assign(visibilities, {\n                visibility: visibility[salesChannel.id] || this.defaultSalesChannelVisibility,\n                productId: this.product.id,\n                salesChannelId: salesChannel.id,\n                salesChannel: salesChannel,\n            });\n\n            return visibilities;\n        },\n\n        abortOnLanguageChange() {\n            return this.productRepository.hasChanges(this.product);\n        },\n\n        saveOnLanguageChange() {\n            return this.onSave();\n        },\n\n        onChangeLanguage(languageId) {\n            Shopware.State.commit('context/setApiLanguageId', languageId);\n            this.initState();\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n\n            if (!this.productId) {\n                this.$router.push({ name: 'sw.product.detail', params: { id: this.product.id } });\n            }\n        },\n\n        onSave() {\n            if (!this.validateProductPurchase()) {\n                this.createNotificationError({\n                    message: this.$tc('sw-product.detail.errorMinMaxPurchase'),\n                });\n\n                return new Promise((resolve) => {\n                    resolve();\n                });\n            }\n\n            this.validateProductPrices();\n\n            if (!this.productId) {\n                if (this.productNumberPreview === this.product.productNumber) {\n                    this.numberRangeService.reserve('product').then((response) => {\n                        this.productNumberPreview = 'reserved';\n                        this.product.productNumber = response.number;\n                    });\n                }\n            }\n\n            this.isSaveSuccessful = false;\n\n            const pageOverrides = this.getCmsPageOverrides();\n\n            if (type.isPlainObject(pageOverrides)) {\n                this.product.slotConfig = cloneDeep(pageOverrides);\n            }\n\n            if (!this.entityValidationService.validate(this.product, this.customValidate)) {\n                const titleSaveError = this.$tc('global.default.error');\n                const messageSaveError = this.$tc(\n                    'global.notification.notificationSaveErrorMessageRequiredFieldsInvalid',\n                );\n\n                this.createNotificationError({\n                    title: titleSaveError,\n                    message: messageSaveError,\n                });\n                return Promise.resolve();\n            }\n\n            return this.saveProduct().then(this.onSaveFinished);\n        },\n\n        customValidate(errors, product) {\n            if (this.productStates.includes('is-download')) {\n                // custom download product validation\n                if (product.downloads === undefined || product.downloads.length < 1) {\n                    errors.push(EntityValidationService.createRequiredError('/0/downloads'));\n                }\n            }\n\n            return errors;\n        },\n\n        validateProductPrices() {\n            this.product.prices.forEach(advancedPrice => {\n                this.validatePrices('listPrice', advancedPrice.price);\n            });\n            this.validatePrices('listPrice', this.product.price);\n\n            this.product.prices.forEach(advancedPrice => {\n                this.validatePrices('regulationPrice', advancedPrice.price);\n            });\n            this.validatePrices('regulationPrice', this.product.price);\n        },\n\n        validatePrices(priceLabel, prices) {\n            if (!prices) {\n                return;\n            }\n\n            prices.forEach(price => {\n                if (!price[priceLabel]) {\n                    return;\n                }\n\n                if (!price[priceLabel].gross && !price[priceLabel].net) {\n                    price[priceLabel] = null;\n                    return;\n                }\n\n                if (!price[priceLabel].gross) {\n                    price[priceLabel].gross = 0;\n                    return;\n                }\n\n                if (!price[priceLabel].net) {\n                    price[priceLabel].net = 0;\n                }\n            });\n        },\n\n        onSaveFinished(response) {\n            const updatePromises = [];\n\n            if (Shopware.State.list().includes('swSeoUrl')) {\n                const seoUrls = Shopware.State.getters['swSeoUrl/getNewOrModifiedUrls']();\n                const defaultSeoUrl = Shopware.State.get('swSeoUrl').defaultSeoUrl;\n\n                if (seoUrls) {\n                    seoUrls.forEach(seoUrl => {\n                        if (!seoUrl.seoPathInfo) {\n                            seoUrl.seoPathInfo = defaultSeoUrl.seoPathInfo;\n                            seoUrl.isModified = false;\n                        } else {\n                            seoUrl.isModified = true;\n                        }\n\n                        updatePromises.push(this.seoUrlService.updateCanonicalUrl(seoUrl, seoUrl.languageId));\n                    });\n                }\n\n                if (response === 'empty' && seoUrls.length > 0) {\n                    response = 'success';\n                }\n            }\n\n            Promise.all(updatePromises).then(() => {\n                this.$root.$emit('seo-url-save-finish');\n            }).then(() => {\n                switch (response) {\n                    case 'empty': {\n                        this.isSaveSuccessful = true;\n                        Shopware.State.commit('error/resetApiErrors');\n                        break;\n                    }\n\n                    case 'success': {\n                        this.isSaveSuccessful = true;\n\n                        break;\n                    }\n\n                    default: {\n                        const errorCode = response?.response?.data?.errors?.[0]?.code;\n\n                        if (errorCode === 'CONTENT__DUPLICATE_PRODUCT_NUMBER') {\n                            const titleSaveError = this.$tc('global.default.error');\n                            const messageSaveError = this.$t(\n                                'sw-product.notification.notificationSaveErrorProductNoAlreadyExists',\n                                {\n                                    productNo: response.response.data.errors[0].meta.parameters.number,\n                                },\n                            );\n\n                            this.createNotificationError({\n                                title: titleSaveError,\n                                message: messageSaveError,\n                            });\n                            break;\n                        }\n\n                        const errorDetail = response?.response?.data?.errors?.[0]?.detail;\n                        const titleSaveError = this.$tc('global.default.error');\n                        const messageSaveError = errorDetail ?? this.$tc(\n                            'global.notification.notificationSaveErrorMessageRequiredFieldsInvalid',\n                        );\n\n                        this.createNotificationError({\n                            title: titleSaveError,\n                            message: messageSaveError,\n                        });\n                        break;\n                    }\n                }\n            });\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'sw.product.index' });\n        },\n\n        saveProduct() {\n            Shopware.State.commit('swProductDetail/setLoading', ['product', true]);\n\n            if (this.product.media) {\n                this.product.media.forEach((medium, index) => {\n                    medium.position = index;\n                });\n            }\n\n            return new Promise((resolve) => {\n                // check if product exists\n                if (!this.productRepository.hasChanges(this.product)) {\n                    Shopware.State.commit('swProductDetail/setLoading', ['product', false]);\n                    resolve('empty');\n                    Shopware.State.commit('swProductDetail/setLoading', ['product', false]);\n                    return;\n                }\n\n                // save product\n                this.syncRepository.save(this.product).then(() => {\n                    this.loadAll().then(() => {\n                        Shopware.State.commit('swProductDetail/setLoading', ['product', false]);\n\n                        resolve('success');\n                    });\n                }).catch((response) => {\n                    Shopware.State.commit('swProductDetail/setLoading', ['product', false]);\n                    resolve(response);\n                });\n            });\n        },\n\n        removeMediaItem(state, mediaId) {\n            const media = this.product.media.find((mediaItem) => mediaItem.mediaId === mediaId);\n\n            // remove cover id if mediaId matches\n            if (this.product.coverId === media.id) {\n                this.product.coverId = null;\n            }\n\n            this.product.media.remove(mediaId);\n        },\n\n        onCoverChange(mediaId) {\n            if (!mediaId || mediaId.length < 0) {\n                return;\n            }\n\n            const media = this.product.media.find((mediaItem) => mediaItem.mediaId === mediaId);\n\n            if (media) {\n                this.product.coverId = media.id;\n            }\n        },\n\n        getInheritTitle() {\n            if (\n                this.product.hasOwnProperty('translated') &&\n                this.product.translated.hasOwnProperty('name') &&\n                this.product.translated.name !== null\n            ) {\n                return this.product.translated.name;\n            }\n            if (this.product.name !== null) {\n                return this.product.name;\n            }\n            if (this.parentProduct && this.parentProduct.hasOwnProperty('translated')) {\n                const pProduct = this.parentProduct;\n                return pProduct.translated.hasOwnProperty('name') ? pProduct.translated.name : pProduct.name;\n            }\n            return '';\n        },\n\n        onDuplicate() {\n            this.cloning = true;\n        },\n\n        onDuplicateFinish(duplicate) {\n            this.cloning = false;\n            this.$router.push({ name: 'sw.product.detail', params: { id: duplicate.id } });\n        },\n\n        validateProductPurchase() {\n            if (this.product.maxPurchase && this.product.minPurchase > this.product.maxPurchase) {\n                return false;\n            }\n\n            return true;\n        },\n\n        getCmsPageOverrides() {\n            if (this.currentPage === null) {\n                return null;\n            }\n\n            this.deleteSpecifcKeys(this.currentPage.sections);\n\n            const changesetGenerator = new ChangesetGenerator();\n            const { changes } = changesetGenerator.generate(this.currentPage);\n\n            const slotOverrides = {};\n            if (changes === null) {\n                return slotOverrides;\n            }\n\n            if (type.isArray(changes.sections)) {\n                changes.sections.forEach((section) => {\n                    if (type.isArray(section.blocks)) {\n                        section.blocks.forEach((block) => {\n                            if (type.isArray(block.slots)) {\n                                block.slots.forEach((slot) => {\n                                    slotOverrides[slot.id] = slot.config;\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n\n            return slotOverrides;\n        },\n\n        deleteSpecifcKeys(sections) {\n            if (!sections) {\n                return;\n            }\n\n            sections.forEach((section) => {\n                if (!section.blocks) {\n                    return;\n                }\n\n                section.blocks.forEach((block) => {\n                    if (!block.slots) {\n                        return;\n                    }\n\n                    block.slots.forEach((slot) => {\n                        if (!slot.config) {\n                            return;\n                        }\n\n                        Object.values(slot.config).forEach((configField) => {\n                            if (configField.entity) {\n                                delete configField.entity;\n                            }\n                            if (configField.hasOwnProperty('required')) {\n                                delete configField.required;\n                            }\n                            if (configField.type) {\n                                delete configField.type;\n                            }\n                        });\n                    });\n                });\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_product_detail %}\\n<sw-page class=\\\"sw-product-detail\\\">\\n\\n    \\n    {% block sw_product_detail_header %}\\n    <template #smart-bar-header>\\n        <h2>\\n            <sw-product-variant-info\\n                :variations=\\\"product.variation\\\"\\n                :title-term=\\\"productTitle\\\"\\n            >\\n                {{ productTitle }}\\n            </sw-product-variant-info>\\n        </h2>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_detail_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_product_detail_actions_abort %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"tooltipCancel\\\"\\n            :disabled=\\\"isLoading\\\"\\n            @click=\\\"onCancel\\\"\\n        >\\n            {{ $tc('sw-product.detail.buttonCancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        <sw-button-group\\n            v-tooltip.bottom=\\\"{\\n                message: $tc('sw-privileges.tooltip.warning'),\\n                disabled: acl.can('product.editor'),\\n                showOnDisabledElements: true\\n            }\\\"\\n            class=\\\"sw-product-detail__save-button-group\\\"\\n            :split-button=\\\"true\\\"\\n        >\\n            \\n            {% block sw_product_detail_actions_save %}\\n            <sw-button-process\\n                v-tooltip.bottom=\\\"tooltipSave\\\"\\n                class=\\\"sw-product-detail__save-action\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :process-success=\\\"isSaveSuccessful\\\"\\n                variant=\\\"primary\\\"\\n                :disabled=\\\"isLoading || !acl.can('product.editor')\\\"\\n                {% if VUE3 %}\\n                @update:process-success=\\\"saveFinish\\\"\\n                {% else %}\\n                @process-finish=\\\"saveFinish\\\"\\n                {% endif %}\\n                @click.prevent=\\\"onSave\\\"\\n            >\\n                {{ $tc('sw-product.detail.buttonSave') }}\\n            </sw-button-process>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_detail_actions_save_context_menu %}\\n            <sw-context-button>\\n                <template #button>\\n                    <sw-button\\n                        class=\\\"sw-product-detail__button-context-menu\\\"\\n                        square\\n                        variant=\\\"primary\\\"\\n                        :disabled=\\\"isLoading || !acl.can('product.editor')\\\"\\n                    >\\n                        <sw-icon\\n                            name=\\\"regular-chevron-down-xs\\\"\\n                            size=\\\"16\\\"\\n                        />\\n                    </sw-button>\\n                </template>\\n\\n                \\n                {% block sw_product_detail_actions_save_context_menu_actions %}\\n                \\n                {% block sw_product_detail_actions_duplicate %}\\n                <sw-context-menu-item\\n                    class=\\\"sw-product-detail__save-duplicate-action\\\"\\n                    :disabled=\\\"!acl.can('product.creator') || !acl.can('product.editor') || product.parentId != null\\\"\\n                    @click=\\\"onDuplicate\\\"\\n                >\\n                    {{ $tc('sw-product.detail.buttonSaveDuplicate') }}\\n                </sw-context-menu-item>\\n                {% endblock %}\\n                {% endblock %}\\n            </sw-context-button>\\n            {% endblock %}\\n        </sw-button-group>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_detail_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch\\n            :save-changes-function=\\\"saveOnLanguageChange\\\"\\n            :abort-change-function=\\\"abortOnLanguageChange\\\"\\n            :disabled=\\\"!productId\\\"\\n            @on-change=\\\"onChangeLanguage\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_detail_content %}\\n    <template #content>\\n        <sw-card-view>\\n\\n            \\n            {% block sw_product_detail_content_top %}\\n            <template v-if=\\\"!isLoading && isChild\\\">\\n                <router-link\\n                    v-if=\\\"advanceModeEnabled\\\"\\n                    class=\\\"sw-card__back-link\\\"\\n                    :to=\\\"{ name: 'sw.product.detail.variants', params: { id: product.parentId } }\\\"\\n                >\\n                    <sw-icon\\n                        name=\\\"regular-long-arrow-left\\\"\\n                        small\\n                    />\\n                    {{ $tc('sw-product.general.backToParent') }}\\n                </router-link>\\n\\n                <router-link\\n                    v-else\\n                    class=\\\"sw-card__back-link\\\"\\n                    :to=\\\"{ name: 'sw.product.detail.base', params: { id: product.parentId } }\\\"\\n                >\\n                    <sw-icon\\n                        name=\\\"regular-long-arrow-left\\\"\\n                        small\\n                    />\\n                    {{ $tc('sw-product.general.backToGeneralOverview') }}\\n                </router-link>\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_detail_content_language_info %}\\n            <sw-language-info\\n                :entity-description=\\\"placeholder(product, 'name', $tc('sw-product.detail.textHeadline'))\\\"\\n                :is-new-entity=\\\"!productId\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_detail_inheritance_warning %}\\n            <sw-inheritance-warning\\n                v-if=\\\"isChild\\\"\\n                :name=\\\"$tc('sw-product.general.inheritanceModuleName')\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_detail_content_tabs %}\\n            <sw-tabs\\n                v-if=\\\"productId\\\"\\n                class=\\\"sw-product-detail-page__tabs\\\"\\n                position-identifier=\\\"sw-product-detail\\\"\\n            >\\n                \\n                {% block sw_product_detail_content_tabs_general %}\\n                <sw-tabs-item\\n                    class=\\\"sw-product-detail__tab-general\\\"\\n                    :route=\\\"{ name: 'sw.product.detail.base', params: { id: $route.params.id } }\\\"\\n                    :has-error=\\\"swProductDetailBaseError\\\"\\n                    :title=\\\"$tc('sw-product.detail.tabGeneral')\\\"\\n                >\\n                    {{ $tc('sw-product.detail.tabGeneral') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_detail_content_tabs_specifications %}\\n                <sw-tabs-item\\n                    class=\\\"sw-product-detail__tab-specifications\\\"\\n                    :route=\\\"{ name: 'sw.product.detail.specifications', params: { id: $route.params.id } }\\\"\\n                    :title=\\\"$tc('sw-product.detail.tabSpecifications')\\\"\\n                >\\n                    {{ $tc('sw-product.detail.tabSpecifications') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_detail_content_tabs_advanced_prices %}\\n                <sw-tabs-item\\n                    v-show=\\\"showModeSetting\\\"\\n                    class=\\\"sw-product-detail__tab-advanced-prices\\\"\\n                    :route=\\\"{ name: 'sw.product.detail.prices', params: { id: $route.params.id } }\\\"\\n                    :title=\\\"$tc('sw-product.detail.tabAdvancedPrices')\\\"\\n                >\\n                    {{ $tc('sw-product.detail.tabAdvancedPrices') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_detail_content_tabs_advanced_variants %}\\n                <sw-tabs-item\\n                    v-show=\\\"!isChild && showModeSetting\\\"\\n                    class=\\\"sw-product-detail__tab-variants\\\"\\n                    :route=\\\"{ name: 'sw.product.detail.variants', params: { id: $route.params.id } }\\\"\\n                    :title=\\\"$tc('sw-product.detail.tabVariation')\\\"\\n                >\\n                    {{ $tc('sw-product.detail.tabVariation') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_detail_content_tabs_layout %}\\n                <sw-tabs-item\\n                    v-show=\\\"!isChild && showModeSetting\\\"\\n                    class=\\\"sw-product-detail__tab-layout\\\"\\n                    :route=\\\"{ name: 'sw.product.detail.layout', params: { id: $route.params.id } }\\\"\\n                    :title=\\\"$tc('sw-product.detail.tabLayout')\\\"\\n                >\\n                    {{ $tc('sw-product.detail.tabLayout') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_detail_content_tabs_seo %}\\n                <sw-tabs-item\\n                    v-show=\\\"showModeSetting\\\"\\n                    class=\\\"sw-product-detail__tab-seo\\\"\\n                    :route=\\\"{ name: 'sw.product.detail.seo', params: { id: $route.params.id } }\\\"\\n                    :title=\\\"$tc('sw-product.detail.tabSeo')\\\"\\n                >\\n                    {{ $tc('sw-product.detail.tabSeo') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_detail_content_tabs_cross_selling %}\\n                <sw-tabs-item\\n                    v-show=\\\"!isChild && showModeSetting\\\"\\n                    class=\\\"sw-product-detail__tab-cross-selling\\\"\\n                    :route=\\\"{ name: 'sw.product.detail.crossSelling', params: { id: $route.params.id } }\\\"\\n                    :has-error=\\\"swProductDetailCrossSellingError\\\"\\n                    :title=\\\"$tc('sw-product.detail.tabCrossSelling')\\\"\\n                >\\n                    {{ $tc('sw-product.detail.tabCrossSelling') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_detail_content_tabs_reviews %}\\n                <sw-tabs-item\\n                    v-show=\\\"showModeSetting\\\"\\n                    class=\\\"sw-product-detail__tab-reviews\\\"\\n                    :route=\\\"{ name: 'sw.product.detail.reviews', params: { id: $route.params.id } }\\\"\\n                    :title=\\\"$tc('sw-product.detail.tabReviews')\\\"\\n                >\\n                    {{ $tc('sw-product.detail.tabReviews') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_detail_content_tabs_additional %}\\n                {% endblock %}\\n\\n            </sw-tabs>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_detail_content_view %}\\n            {% if VUE3 %}\\n            <router-view\\n                v-slot=\\\"{ Component }\\\"\\n            >\\n                <component\\n                    :is=\\\"Component\\\"\\n                    @cover-change=\\\"onCoverChange\\\"\\n                />\\n            </router-view>\\n            {% else %}\\n            <router-view\\n                @cover-change=\\\"onCoverChange\\\"\\n            />\\n            {% endif %}\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_detail_content_clone_modal %}\\n            <sw-product-clone-modal\\n                v-if=\\\"cloning\\\"\\n                :product=\\\"product\\\"\\n                @clone-finish=\\\"onDuplicateFinish\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_settings_mode %}\\n            <sw-product-settings-mode\\n                v-if=\\\"showAdvanceModeSetting\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :mode-settings=\\\"advancedModeSetting\\\"\\n                @settings-item-change=\\\"onChangeSettingItem\\\"\\n                @settings-change=\\\"onChangeSetting\\\"\\n            />\\n            {% endblock %}\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n\\n    <template #sidebar>\\n        \\n        {% block sw_product_detail_sidebar %}\\n        {% endblock %}\\n    </template>\\n</sw-page>\\n{% endblock %}\\n\";","/*\n * @package inventory\n */\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    namespaced: true,\n\n    state() {\n        return {\n            product: {},\n            parentProduct: {},\n            currencies: [],\n            apiContext: {},\n            taxes: [],\n            variants: [],\n            customFieldSets: [],\n            defaultFeatureSet: {},\n            loading: {\n                init: false,\n                product: false,\n                parentProduct: false,\n                manufacturers: false,\n                currencies: false,\n                taxes: false,\n                customFieldSets: false,\n                media: false,\n                rules: false,\n                variants: false,\n                defaultFeatureSet: false,\n                advancedMode: false,\n            },\n            localMode: false,\n            advancedModeSetting: {},\n            modeSettings: [\n                'general_information',\n                'prices',\n                'deliverability',\n                'visibility_structure',\n                'media',\n                'labelling',\n                'measures_packaging',\n                'properties',\n                'essential_characteristics',\n                'custom_fields',\n            ],\n            /* Product \"types\" provided by the split button for creating a new product through a router parameter */\n            creationStates: [],\n        };\n    },\n\n    getters: {\n        isLoading: (state) => {\n            return Object.values(state.loading).some((loadState) => loadState);\n        },\n\n        defaultCurrency(state) {\n            if (!state.currencies) {\n                return {};\n            }\n\n            const defaultCurrency = state.currencies.find((currency) => currency.isSystemDefault);\n\n            return defaultCurrency || {};\n        },\n\n        defaultPrice(state, getters) {\n            let productPrice = state.product.price;\n\n            // check if price exists\n            if (!productPrice) {\n                // if parent price does not exists\n                if (!state.parentProduct.price) {\n                    return {};\n                }\n\n                productPrice = state.parentProduct.price;\n            }\n\n            // get default price bases on currency\n            return productPrice.find((price) => {\n                return price.currencyId === getters.defaultCurrency.id;\n            });\n        },\n\n        defaultFeatureSet(state) {\n            if (!state.defaultFeatureSet) {\n                return {};\n            }\n\n            return state.defaultFeatureSet;\n        },\n\n        productTaxRate(state) {\n            if (!state.taxes) {\n                return {};\n            }\n\n            return state.taxes.find((tax) => {\n                if (!state.product.taxId) {\n                    if (!state.parentProduct.taxId) {\n                        return {};\n                    }\n\n                    return tax.id === state.parentProduct.taxId;\n                }\n\n                return tax.id === state.product.taxId;\n            });\n        },\n\n        isChild(state) {\n            if (state.product?.parentId) {\n                return !!state.product.parentId;\n            }\n            return false;\n        },\n\n        showModeSetting(state) {\n            if (state.product?.parentId) {\n                return true;\n            }\n\n            return state.advancedModeSetting.value?.advancedMode.enabled;\n        },\n\n        showProductCard(state, getters) {\n            return (key) => {\n                if (state.product?.parentId) {\n                    return true;\n                }\n\n                const cardKeys = ['essential_characteristics', 'custom_fields', 'labelling'];\n\n                if (cardKeys.includes(key) && !getters.showModeSetting) {\n                    return false;\n                }\n\n                return state.modeSettings.includes(key);\n            };\n        },\n\n        advanceModeEnabled(state) {\n            return state.advancedModeSetting.value?.advancedMode.enabled;\n        },\n\n        productStates(state) {\n            if (state.product.isNew() && state.creationStates) {\n                return state.creationStates;\n            }\n\n            if (state.product.states) {\n                return state.product.states;\n            }\n\n            return [];\n        },\n    },\n\n    mutations: {\n        setApiContext(state, apiContext) {\n            state.apiContext = apiContext;\n        },\n\n        setCustomFields(state, fieldSet) {\n            state.customFieldSets = state.customFieldSets.map(set => {\n                if (set.id === fieldSet.id) {\n                    return fieldSet;\n                }\n                return set;\n            });\n        },\n\n        setLocalMode(state, value) {\n            state.localMode = value;\n        },\n\n        setLoading(state, value) {\n            const name = value[0];\n            const data = value[1];\n\n            if (typeof data !== 'boolean') {\n                return false;\n            }\n\n            if (state.loading[name] !== undefined) {\n                state.loading[name] = data;\n                return true;\n            }\n            return false;\n        },\n\n        setAssignedProductsFromCrossSelling(state, { id, collection }) {\n            const entity = state.product.crossSellings.get(id);\n            entity.assignedProducts = collection;\n        },\n\n        setProductId(state, productId) {\n            state.productId = productId;\n        },\n\n        setProduct(state, newProduct) {\n            state.product = newProduct;\n        },\n\n        setVariants(state, newVariants) {\n            state.variants = newVariants;\n        },\n\n        setParentProduct(state, newProduct) {\n            state.parentProduct = newProduct;\n        },\n\n        setCurrencies(state, newCurrencies) {\n            state.currencies = newCurrencies;\n        },\n\n        setTaxes(state, newTaxes) {\n            state.taxes = newTaxes;\n\n            if (\n                state.product &&\n                state.product.taxId === null &&\n                !state.parentProduct &&\n                !state.parentProduct.id\n            ) {\n                state.product.taxId = state.taxes[0].id;\n            }\n        },\n\n        setAttributeSet(state, newAttributeSets) {\n            state.customFieldSets = newAttributeSets;\n        },\n\n        setDefaultFeatureSet(state, newDefaultFeatureSet) {\n            state.defaultFeatureSet = newDefaultFeatureSet;\n        },\n\n        setAdvancedModeSetting(state, newAdvancedModeSetting) {\n            state.advancedModeSetting = newAdvancedModeSetting;\n        },\n\n        setModeSettings(state, newModeSettings) {\n            state.modeSettings = newModeSettings;\n        },\n\n        setCreationStates(state, states) {\n            state.creationStates = states;\n        },\n    },\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-detail.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7aa0e4c6\", content, true, {});"],"sourceRoot":""}