(this.webpackJsonpAdministration=this.webpackJsonpAdministration||[]).push([[276],{JTn5:function(e,t,r){},g18o:function(e,t,r){"use strict";r.r(t);var l=r("CsSd"),i=r.n(l),o=r("dM0I");r("uvH9");function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,l)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i()(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var s={IMPORT:"import",EXPORT:"export",IMPORT_EXPORT:"import-export"};t.default={template:'\n{% block sw_import_export_edit_profile_general %}\n<div class="sw-import-export-edit-profile-general">\n    \n    {% block sw_import_export_edit_profile_general_text %}\n    <p class="sw-import-export-edit-profile-general__text">\n        {{ $tc(\'sw-import-export.profile.descriptionBlock\') }}\n    </p>\n    {% endblock %}\n\n    \n    {% block sw_import_export_edit_profile_general_container %}\n    <sw-container\n        columns="1fr 1fr"\n        gap="0 32px"\n    >\n        \n        {% block sw_import_export_edit_profile_general_container_name %}\n        <sw-text-field\n            {% if VUE3 %}\n            v-model:value="profile.label"\n            {% else %}\n            v-model="profile.label"\n            {% endif %}\n            :label="$tc(\'sw-import-export.profile.profileNameFieldLabel\')"\n            required\n            :disabled="profile.systemDefault"\n            :error="profileNameError"\n            :placeholder="profile.translated.label"\n        />\n        {% endblock %}\n\n        \n        {% block sw_import_export_edit_profile_general_container_object_type %}\n        <span\n            v-tooltip="{\n                message: $tc(\'sw-import-export.profile.objectTypeFieldTooltipText\'),\n                disabled: mappingLength <= 0,\n                showOnDisabledElements: false\n            }"\n            class="sw-import-export-edit-profile-general__object-type-field"\n        >\n            \n            {% block sw_import_export_edit_profile_general_container_object_type_select %}\n            <sw-single-select\n                ref="objectTypeSelect"\n                {% if VUE3 %}\n                v-model:value="profile.sourceEntity"\n                {% else %}\n                v-model="profile.sourceEntity"\n                {% endif %}\n                class="sw-import-export-edit-profile-general__object-type-select"\n                :label="$tc(\'sw-import-export.profile.objectTypeFieldLabel\')"\n                required\n                :options="supportedEntities"\n                :disabled="profile.systemDefault || mappingLength > 0"\n                :error="profileSourceEntityError"\n                :show-clearable-button="!(profile.systemDefault || mappingLength > 0)"\n            >\n                <template\n                    #result-item="{ item, index, labelProperty, searchTerm, highlightSearchTerm, isSelected, setValue, getKey }"\n                >\n                    \n                    {% block sw_import_export_edit_profile_general_container_object_type_select_result %}\n                    <sw-select-result\n                        v-tooltip="{\n                            showDelay: 300,\n                            message: $tc(\'sw-import-export.profile.objectTypeDisabledText\'),\n                            disabled: !shouldDisableObjectType(item)\n                        }"\n                        :disabled="item.disabled || shouldDisableObjectType(item)"\n                        :class="\'sw-select-option--\' + item.value"\n                        :selected="isSelected(item)"\n                        v-bind="{ item, index }"\n                        @item-select="setValue"\n                    >\n                        \n                        {% block sw_import_export_edit_profile_general_container_object_type_select_result_highlight %}\n                        <sw-highlight-text\n                            v-if="highlightSearchTerm && !isSelected(item)"\n                            :text="getKey(item, labelProperty)"\n                            :search-term="searchTerm"\n                        />\n                        {% endblock %}\n\n                        \n                        {% block sw_import_export_edit_profile_general_container_object_type_select_result_text %}\n                        <template v-else>\n                            {{ getKey(item, labelProperty) }}\n                        </template>\n                        {% endblock %}\n                    </sw-select-result>\n                    {% endblock %}\n                </template>\n            </sw-single-select>\n            {% endblock %}\n        </span>\n        {% endblock %}\n\n        \n        {% block sw_import_export_edit_profile_general_container_type %}\n        <sw-single-select\n            {% if VUE3 %}\n            v-model:value="profile.type"\n            {% else %}\n            v-model="profile.type"\n            {% endif %}\n            class="sw-import-export-edit-profile-general__type-select"\n            :label="$tc(\'sw-import-export.profile.typeFieldLabel\')"\n            required\n            :options="supportedProfileTypes"\n            :disabled="profile.systemDefault"\n            :error="profileTypeError"\n            :show-clearable-button="!profile.systemDefault"\n        >\n            <template\n                #result-item="{ item, index, labelProperty, searchTerm, highlightSearchTerm, isSelected, setValue, getKey }"\n            >\n                \n                {% block sw_import_export_edit_profile_general_container_type_result %}\n                <sw-select-result\n                    v-tooltip="{\n                        showDelay: 300,\n                        message: $tc(\'sw-import-export.profile.profileTypeDisabledText\'),\n                        disabled: !shouldDisableProfileType(item)\n                    }"\n                    :disabled="item.disabled || shouldDisableProfileType(item)"\n                    :class="\'sw-select-option--\' + item.value"\n                    :selected="isSelected(item)"\n                    v-bind="{ item, index }"\n                    @item-select="setValue"\n                >\n                    \n                    {% block sw_import_export_edit_profile_general_container_type_result_highlight %}\n                    <sw-highlight-text\n                        v-if="highlightSearchTerm && !isSelected(item)"\n                        :text="getKey(item, labelProperty)"\n                        :search-term="searchTerm"\n                    />\n                    {% endblock %}\n\n                    \n                    {% block sw_import_export_edit_profile_general_container_type_result_text %}\n                    <template v-else>\n                        {{ getKey(item, labelProperty) }}\n                    </template>\n                    {% endblock %}\n                </sw-select-result>\n                {% endblock %}\n            </template>\n        </sw-single-select>\n        {% endblock %}\n    </sw-container>\n    {% endblock %}\n</div>\n{% endblock %}\n\n',inject:["feature"],props:{profile:{type:Object,required:!0}},computed:p(p({},Object(o.mapPropertyErrors)("profile",["name","sourceEntity","type"])),{},{supportedProfileTypes:function(){return[{value:s.IMPORT_EXPORT,label:this.$tc("sw-import-export.profile.types.importExportLabel")},{value:s.IMPORT,label:this.$tc("sw-import-export.profile.types.importLabel")},{value:s.EXPORT,label:this.$tc("sw-import-export.profile.types.exportLabel")}]},supportedEntities:function(){return[{value:"product",label:this.$tc("sw-import-export.profile.productLabel"),type:s.IMPORT_EXPORT},{value:"customer",label:this.$tc("sw-import-export.profile.customerLabel"),type:s.IMPORT_EXPORT},{value:"category",label:this.$tc("sw-import-export.profile.categoriesLabel"),type:s.IMPORT_EXPORT},{value:"order",label:this.$tc("sw-import-export.profile.orderLabel"),type:s.EXPORT},{value:"media",label:this.$tc("sw-import-export.profile.mediaLabel"),type:s.IMPORT_EXPORT},{value:"newsletter_recipient",label:this.$tc("sw-import-export.profile.newsletterRecipientLabel"),type:s.IMPORT_EXPORT},{value:"property_group_option",label:this.$tc("sw-import-export.profile.propertyLabel"),type:s.IMPORT_EXPORT},{value:"product_configurator_setting",label:this.$tc("sw-import-export.profile.configuratorSettingLabel"),type:s.IMPORT_EXPORT},{value:"product_cross_selling",label:this.$tc("sw-import-export.profile.productCrossSellingLabel"),type:s.IMPORT_EXPORT},{value:"promotion_discount",label:this.$tc("sw-import-export.profile.promotionDiscountLabel"),type:s.IMPORT_EXPORT},{value:"promotion_individual_code",label:this.$tc("sw-import-export.profile.promotionIndividualCodesLabel"),type:s.IMPORT_EXPORT},{value:"product_price",label:this.$tc("sw-import-export.profile.productPriceLabel"),type:s.IMPORT_EXPORT}]},mappingLength:function(){return this.profile.mapping?this.profile.mapping.length:0}}),methods:{shouldDisableProfileType:function(e){var t=this;if(!this.profile.sourceEntity)return!1;var r=this.supportedEntities.find((function(e){return e.value===t.profile.sourceEntity}));return r.type!==s.IMPORT_EXPORT&&(r.type===s.IMPORT?e.value!==s.IMPORT:r.type!==s.EXPORT||e.value!==s.EXPORT)},shouldDisableObjectType:function(e){return!!this.profile.type&&(this.profile.type===s.IMPORT_EXPORT?e.type!==s.IMPORT_EXPORT:this.profile.type===s.IMPORT?![s.IMPORT,s.IMPORT_EXPORT].includes(e.type):this.profile.type!==s.EXPORT||![s.EXPORT,s.IMPORT_EXPORT].includes(e.type))}}}},uvH9:function(e,t,r){var l=r("JTn5");l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.i,l,""]]),l.locals&&(e.exports=l.locals);(0,r("P8hj").default)("7e31ff76",l,!0,{})}}]);
//# sourceMappingURL=690e9ecc53cfc5c33555.js.map