(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[35568],{62492:function(){},35568:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return i}}),t(49023);let{Mixin:l}=Shopware;var i={template:'\n{% block sw_cms_el_config_form %}\n<sw-tabs\n    position-identifier="sw-cms-element-config-form"\n    class="sw-cms-el-config-form__tabs"\n    default-item="content"\n>\n\n    <template #default="{ active }">\n        \n        {% block sw_cms_el_config_form_tab_content %}\n        <sw-tabs-item\n            :title="$tc(\'sw-cms.elements.general.config.tab.content\')"\n            name="content"\n            :active-tab="active"\n        >\n            {{ $tc(\'sw-cms.elements.general.config.tab.content\') }}\n        </sw-tabs-item>\n        {% endblock %}\n\n        \n        {% block sw_cms_el_form_config_tab_options %}\n        <sw-tabs-item\n            v-if="element.config.type.value === \'contact\'"\n            :title="$tc(\'sw-cms.elements.general.config.tab.settings\')"\n            name="options"\n            :active-tab="active"\n        >\n            {{ $tc(\'sw-cms.elements.general.config.tab.settings\') }}\n        </sw-tabs-item>\n        {% endblock %}\n    </template>\n\n    <template\n        #content="{ active }"\n    >\n        \n        {% block sw_cms_el_form_config_content %}\n        <sw-container\n            v-if="active === \'content\'"\n            class="sw-cms-el-config-form__tab-content"\n        >\n\n            \n            {% block sw_cms_el_form_config_content_form_type %}\n            <sw-select-field\n                v-model:value="element.config.type.value"\n                :label="$tc(\'sw-cms.elements.form.config.label.type\')"\n            >\n                \n                {% block sw_cms_el_form_config_content_form_type_options %}\n                <option\n                    value=""\n                    disabled\n                >\n                    {{ $tc(\'sw-cms.elements.form.config.label.type\') }}\n                </option>\n                <option value="contact">\n                    {{ $tc(\'sw-cms.elements.form.config.label.typeContact\') }}\n                </option>\n                <option value="newsletter">\n                    {{ $tc(\'sw-cms.elements.form.config.label.typeNewsletter\') }}\n                </option>\n                {% endblock %}\n            </sw-select-field>\n            {% endblock %}\n\n            \n            {% block sw_cms_el_form_config_content_form_title %}\n            <sw-text-field\n                v-model:value="element.config.title.value"\n                :label="$tc(\'sw-cms.elements.form.config.label.title\')"\n            />\n            {% endblock %}\n\n            \n            {% block sw_cms_el_form_config_content_form_confirmation_text %}\n            <sw-textarea-field\n                v-if="element.config.type.value === \'contact\'"\n                v-model:value="element.config.confirmationText.value"\n                :label="$tc(\'sw-cms.elements.form.config.label.confirmationText\')"\n            />\n            {% endblock %}\n        </sw-container>\n        {% endblock %}\n\n        \n        {% block sw_cms_el_form_config_options %}\n        <sw-container\n            v-else-if="active === \'options\' && element.config.type.value === \'contact\'"\n            class="sw-cms-el-config-form__tab-options"\n        >\n            <sw-tagged-field\n                v-model:value="element.config.mailReceiver.value"\n                :class="getLastMailClass"\n                :label="$tc(\'sw-cms.elements.form.config.label.receiverEmail\')"\n                name="mailReceiver"\n                placeholder="john@doe.com"\n                @update:value="updateMailReceiver"\n            />\n        </sw-container>\n        {% endblock %}\n    </template>\n</sw-tabs>\n{% endblock %}\n',inject:["systemConfigApiService"],mixins:[l.getByName("cms-element")],computed:{getLastMailClass(){return 1===this.element.config.mailReceiver.value.length?"is--last":""}},created(){this.createdComponent(),this.setShopMail()},methods:{createdComponent(){this.initElementConfig("form")},getShopMail(){return new Promise(e=>{this.systemConfigApiService.getValues("core.basicInformation").then(n=>{e(n["core.basicInformation.email"])})})},setShopMail(){this.getShopMail().then(e=>{this.element.config.defaultMailReceiver.value&&!this.element.config.mailReceiver.value.includes(e)&&this.element.config.mailReceiver.value.push(e)})},updateMailReceiver(){this.validateMail()&&this.getShopMail().then(e=>{this.element.config.mailReceiver.value.includes(e)?this.element.config.defaultMailReceiver.value=!0:this.element.config.defaultMailReceiver.value=!1})},validateMail(){let e=this.element.config.mailReceiver.value[this.element.config.mailReceiver.value.length-1];return!e||null!=e.match(/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/)||(this.element.config.mailReceiver.value.pop(),!1)}}}},49023:function(e,n,t){var l=t(62492);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),t(45346).Z("4f296c70",l,!0,{})}}]);