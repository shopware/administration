{"version":3,"sources":["webpack:///./src/module/sw-promotion-v2/component/sw-promotion-v2-cart-condition-form/index.js","webpack:///./src/module/sw-promotion-v2/component/sw-promotion-v2-cart-condition-form/sw-promotion-v2-cart-condition-form.html.twig","webpack:///./src/module/sw-promotion-v2/component/sw-promotion-v2-cart-condition-form/sw-promotion-v2-cart-condition-form.scss"],"names":["Criteria","Shopware","Data","template","inject","props","promotion","type","Object","required","default","restrictedRules","Array","data","packagerKeys","sorterKeys","computed","promotionGroupRepository","this","repositoryFactory","create","ruleFilter","criteria","addAssociation","addSorting","sort","packagers","_this","result","forEach","keyValue","push","key","name","$tc","concat","sorters","_this2","isEditingDisabled","acl","can","watch","loadSetGroups","created","createdComponent","methods","_this3","promotionSyncService","loadPackagers","then","keys","loadSorters","_this4","addFilter","equals","id","search","groups","setgroups","addSetGroup","newGroup","promotionId","value","packagerKey","sorterKey","duplicateSetGroup","group","deleteSetGroup","deleteIds","State","get","setGroupIdsDelete","commit","filter","setGroup","content","__esModule","module","i","locals","exports","add"],"mappings":"0IAMQA,EAAaC,SAASC,KAAtBF,SAGO,WACXG,SCVW,+xPDYXC,OAAQ,CACJ,oBACA,MACA,uBACA,WAGJC,MAAO,CACHC,UAAW,CACPC,KAAMC,OACNC,UAAU,EACVC,QAAS,MAGbC,gBAAiB,CACbJ,KAAMK,MACNH,UAAU,EACVC,QAAO,WACH,MAAO,MAInBG,KAAI,WACA,MAAO,CACHC,aAAc,GACdC,WAAY,KAGpBC,SAAU,CACNC,yBAAwB,WACpB,OAAOC,KAAKC,kBAAkBC,OAAO,uBAGzCC,WAAU,WACN,IAAMC,EAAW,IAAItB,EAAS,EAAG,IAKjC,OAHAsB,EAASC,eAAe,cACnBC,WAAWxB,EAASyB,KAAK,OAAQ,OAAO,IAEtCH,GAGXI,UAAS,WAAI,IAADC,EAAA,KACFC,EAAS,GAUf,OARAV,KAAKJ,aAAae,SAAQ,SAACC,GACvBF,EAAOG,KACH,CACIC,IAAKF,EACLG,KAAMN,EAAKO,IAAI,wDAADC,OAAyDL,SAI5EF,GAGXQ,QAAO,WAAI,IAADC,EAAA,KACAT,EAAS,GAWf,OATAV,KAAKH,WAAWc,SAAQ,SAACC,GACrBF,EAAOG,KACH,CACIC,IAAKF,EACLG,KAAMI,EAAKH,IAAI,sDAADC,OAAuDL,SAK1EF,GAGXU,kBAAiB,WACb,OAA2B,OAAnBpB,KAAKZ,YAAuBY,KAAKqB,IAAIC,IAAI,sBAIzDC,MAAO,CACHnC,UAAS,WACLY,KAAKwB,kBAIbC,QAAO,WACHzB,KAAK0B,oBAGTC,QAAS,CACLD,iBAAgB,WAAI,IAADE,EAAA,KACX5B,KAAKZ,WACLY,KAAKwB,gBAGTxB,KAAK6B,qBAAqBC,gBAAgBC,MAAK,SAACC,GAC5CJ,EAAKhC,aAAeoC,KAGxBhC,KAAK6B,qBAAqBI,cAAcF,MAAK,SAACC,GAC1CJ,EAAK/B,WAAamC,MAI1BR,cAAa,WAAI,IAADU,EAAA,KACN9B,EAAW,IAAItB,EAAS,EAAG,IACjCsB,EAAS+B,UACLrD,EAASsD,OAAO,cAAepC,KAAKZ,UAAUiD,KAGlDrC,KAAKD,yBAAyBuC,OAAOlC,GAAU2B,MAAK,SAACQ,GACjDL,EAAK9C,UAAUoD,UAAYD,MAInCE,YAAW,WACP,IAAMC,EAAW1C,KAAKD,yBAAyBG,SAC/CwC,EAASC,YAAc3C,KAAKZ,UAAUiD,GACtCK,EAASE,MAAQ,EACjBF,EAASG,YAAc,QACvBH,EAASI,UAAY,YAErB9C,KAAKZ,UAAUoD,UAAU3B,KAAK6B,IAGlCK,kBAAiB,SAACC,GACd,IAAMN,EAAW1C,KAAKD,yBAAyBG,SAC/CwC,EAASC,YAAcK,EAAML,YAC7BD,EAASE,MAAQI,EAAMJ,MACvBF,EAASG,YAAcG,EAAMH,YAC7BH,EAASI,UAAYE,EAAMF,UAE3B9C,KAAKZ,UAAUoD,UAAU3B,KAAK6B,IAGlCO,eAAc,SAACD,GAEX,IAAME,EAAYnE,SAASoE,MAAMC,IAAI,qBAAqBC,kBAC1DH,EAAUrC,KAAKmC,EAAMX,IACrBtD,SAASoE,MAAMG,OAAO,yCAA0CJ,GAGhElD,KAAKZ,UAAUoD,UAAYxC,KAAKZ,UAAUoD,UAAUe,QAAO,SAACC,GACxD,OAAOA,EAASnB,KAAOW,EAAMX,U,8CErJ7C,IAAIoB,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQjE,SACnB,iBAAZiE,IAAsBA,EAAU,CAAC,CAACE,EAAOC,EAAIH,EAAS,MAC7DA,EAAQI,SAAQF,EAAOG,QAAUL,EAAQI,SAG/BE,EADH,EAAQ,QAAwEvE,SACzE,WAAYiE,GAAS,EAAM","file":"static/js/5be9120e55202c0d16dc.js","sourcesContent":["/**\n * @package buyers-experience\n */\nimport './sw-promotion-v2-cart-condition-form.scss';\nimport template from './sw-promotion-v2-cart-condition-form.html.twig';\n\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'promotionSyncService',\n        'feature',\n    ],\n\n    props: {\n        promotion: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n\n        restrictedRules: {\n            type: Array,\n            required: false,\n            default() {\n                return [];\n            },\n        },\n    },\n    data() {\n        return {\n            packagerKeys: [],\n            sorterKeys: [],\n        };\n    },\n    computed: {\n        promotionGroupRepository() {\n            return this.repositoryFactory.create('promotion_setgroup');\n        },\n\n        ruleFilter() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addAssociation('conditions')\n                .addSorting(Criteria.sort('name', 'ASC', false));\n\n            return criteria;\n        },\n\n        packagers() {\n            const result = [];\n\n            this.packagerKeys.forEach((keyValue) => {\n                result.push(\n                    {\n                        key: keyValue,\n                        name: this.$tc(`sw-promotion-v2.detail.conditions.setgroups.packager.${keyValue}`),\n                    },\n                );\n            });\n            return result;\n        },\n\n        sorters() {\n            const result = [];\n\n            this.sorterKeys.forEach((keyValue) => {\n                result.push(\n                    {\n                        key: keyValue,\n                        name: this.$tc(`sw-promotion-v2.detail.conditions.setgroups.sorter.${keyValue}`),\n                    },\n                );\n            });\n\n            return result;\n        },\n\n        isEditingDisabled() {\n            return (this.promotion === null || !this.acl.can('promotion.editor'));\n        },\n    },\n\n    watch: {\n        promotion() {\n            this.loadSetGroups();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.promotion) {\n                this.loadSetGroups();\n            }\n\n            this.promotionSyncService.loadPackagers().then((keys) => {\n                this.packagerKeys = keys;\n            });\n\n            this.promotionSyncService.loadSorters().then((keys) => {\n                this.sorterKeys = keys;\n            });\n        },\n\n        loadSetGroups() {\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(\n                Criteria.equals('promotionId', this.promotion.id),\n            );\n\n            this.promotionGroupRepository.search(criteria).then((groups) => {\n                this.promotion.setgroups = groups;\n            });\n        },\n\n        addSetGroup() {\n            const newGroup = this.promotionGroupRepository.create();\n            newGroup.promotionId = this.promotion.id;\n            newGroup.value = 2;\n            newGroup.packagerKey = 'COUNT';\n            newGroup.sorterKey = 'PRICE_ASC';\n\n            this.promotion.setgroups.push(newGroup);\n        },\n\n        duplicateSetGroup(group) {\n            const newGroup = this.promotionGroupRepository.create();\n            newGroup.promotionId = group.promotionId;\n            newGroup.value = group.value;\n            newGroup.packagerKey = group.packagerKey;\n            newGroup.sorterKey = group.sorterKey;\n\n            this.promotion.setgroups.push(newGroup);\n        },\n\n        deleteSetGroup(group) {\n            // add to delete list for the save process\n            const deleteIds = Shopware.State.get('swPromotionDetail').setGroupIdsDelete;\n            deleteIds.push(group.id);\n            Shopware.State.commit('swPromotionDetail/setSetGroupIdsDelete', deleteIds);\n\n            // remove also from entity for the view rendering\n            this.promotion.setgroups = this.promotion.setgroups.filter((setGroup) => {\n                return setGroup.id !== group.id;\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_promotion_v2_cart_condition_form %}\\n<div class=\\\"sw-promotion-v2-cart-condition-form\\\">\\n\\n    \\n    {% block sw_promotion_v2_cart_condition_form_rules_field %}\\n    <sw-promotion-v2-rule-select\\n        v-if=\\\"promotion\\\"\\n        {% if VUE3 %}\\n        v-model:collection=\\\"promotion.cartRules\\\"\\n        {% else %}\\n        v-model=\\\"promotion.cartRules\\\"\\n        {% endif %}\\n        class=\\\"sw-promotion-v2-cart-condition-form__rule-select-cart\\\"\\n        :local-mode=\\\"promotion.isNew()\\\"\\n        :criteria=\\\"ruleFilter\\\"\\n        :label=\\\"$tc('sw-promotion-v2.detail.conditions.preConditions.labelCartConditionSelect')\\\"\\n        :placeholder=\\\"$tc('sw-promotion-v2.detail.conditions.preConditions.placeholderCartConditionSelect')\\\"\\n        :rule-scope=\\\"['checkout', 'global', 'lineItem']\\\"\\n        rule-aware-group-key=\\\"cartPromotions\\\"\\n        :disabled=\\\"isEditingDisabled\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_promotion_v2_cart_condition_form_use_setgroups_field %}\\n    <sw-switch-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"promotion.useSetGroups\\\"\\n        {% else %}\\n        v-model=\\\"promotion.useSetGroups\\\"\\n        {% endif %}\\n        class=\\\"sw-promotion-v2-cart-condition-form__use-setgroups\\\"\\n        :disabled=\\\"!acl.can('promotion.editor')\\\"\\n        :label=\\\"$tc('sw-promotion-v2.detail.conditions.setgroups.switchGroupsEnabled')\\\"\\n    />\\n    {% endblock %}\\n\\n    <template v-if=\\\"promotion.useSetGroups\\\">\\n\\n        \\n        {% block sw_promotion_v2_cart_condition_setgroup_card %}\\n        <sw-card\\n            v-for=\\\"(group, index) in promotion.setgroups\\\"\\n            :id=\\\"`sw-promotion-v2-cart-condition-form__setgroup-card-${index + 1}`\\\"\\n            :key=\\\"group.id\\\"\\n            position-identifier=\\\"sw-promotion-cart-condition-setgroup\\\"\\n            class=\\\"sw-promotion-v2-cart-condition-form__setgroup-card\\\"\\n        >\\n\\n            \\n            {% block sw_promotion_v2_cart_condition_setgroup_card_context_action %}\\n            <template #context-actions>\\n\\n                \\n                {% block sw_promotion_v2_cart_condition_setgroup_card_context_action_duplicate %}\\n                <sw-context-menu-item\\n                    :disabled=\\\"isEditingDisabled\\\"\\n                    @click=\\\"duplicateSetGroup(group)\\\"\\n                >\\n                    {{ $tc('global.default.duplicate') }}\\n                </sw-context-menu-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_promotion_v2_cart_condition_setgroup_card_context_action_delete %}\\n                <sw-context-menu-item\\n                    v-tooltip=\\\"{\\n                        message: $tc('sw-privileges.tooltip.warning'),\\n                        disabled: acl.can('promotion.editor'),\\n                        showOnDisabledElements: true\\n                    }\\\"\\n                    variant=\\\"danger\\\"\\n                    :disabled=\\\"isEditingDisabled\\\"\\n                    @click=\\\"deleteSetGroup(group)\\\"\\n                >\\n                    {{ $tc('global.default.delete') }}\\n                </sw-context-menu-item>\\n                {% endblock %}\\n\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_promotion_v2_cart_condition_setgroup_card_title %}\\n            <div class=\\\"sw-promotion-v2-cart-condition-form__setgroup-card-title\\\">\\n                {{ $tc('sw-promotion-v2.detail.conditions.setgroups.titleName') }} {{ index + 1 }}\\n            </div>\\n            {% endblock %}\\n\\n            <sw-container\\n                columns=\\\"1fr 1fr\\\"\\n                gap=\\\"0px 30px\\\"\\n            >\\n                \\n                {% block sw_promotion_v2_cart_condition_setgroup_mode_field %}\\n                <sw-select-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"group.packagerKey\\\"\\n                    {% else %}\\n                    v-model=\\\"group.packagerKey\\\"\\n                    {% endif %}\\n                    class=\\\"sw-promotion-v2-cart-condition-form__setgroup-mode\\\"\\n                    :label=\\\"$tc('sw-promotion-v2.detail.conditions.setgroups.labelMode')\\\"\\n                    :disabled=\\\"isEditingDisabled\\\"\\n                >\\n                    <option\\n                        v-for=\\\"packager in packagers\\\"\\n                        :key=\\\"packager.key\\\"\\n                        :value=\\\"packager.key\\\"\\n                    >\\n                        {{ packager.name }}\\n                    </option>\\n                </sw-select-field>\\n                {% endblock %}\\n\\n                \\n                {% block sw_promotion_v2_cart_condition_setgroup_value_field %}\\n                <sw-number-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"group.value\\\"\\n                    {% else %}\\n                    v-model=\\\"group.value\\\"\\n                    {% endif %}\\n                    class=\\\"sw-promotion-v2-cart-condition-form__setgroup-value\\\"\\n                    :label=\\\"$tc('sw-promotion-v2.detail.conditions.setgroups.labelValue')\\\"\\n                    :disabled=\\\"isEditingDisabled\\\"\\n                />\\n                {% endblock %}\\n\\n            </sw-container>\\n\\n            <sw-container\\n                columns=\\\"1fr 1fr\\\"\\n                gap=\\\"0px 30px\\\"\\n            >\\n                \\n                {% block sw_promotion_v2_cart_condition_setgroup_sorting_field %}\\n                <sw-select-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"group.sorterKey\\\"\\n                    {% else %}\\n                    v-model=\\\"group.sorterKey\\\"\\n                    {% endif %}\\n                    class=\\\"sw-promotion-v2-cart-condition-form__setgroup-sorting\\\"\\n                    :label=\\\"$tc('sw-promotion-v2.detail.conditions.setgroups.labelSorting')\\\"\\n                    :disabled=\\\"isEditingDisabled\\\"\\n                >\\n                    <option\\n                        v-for=\\\"sorter in sorters\\\"\\n                        :key=\\\"sorter.key\\\"\\n                        :value=\\\"sorter.key\\\"\\n                    >\\n                        {{ sorter.name }}\\n                    </option>\\n                </sw-select-field>\\n                {% endblock %}\\n\\n            </sw-container>\\n\\n            <sw-container\\n                columns=\\\"1fr\\\"\\n                gap=\\\"0px 30px\\\"\\n            >\\n\\n                \\n                {% block sw_promotion_v2_cart_condition_setgroup_rules_field %}\\n                <sw-promotion-v2-rule-select\\n                    {% if VUE3 %}\\n                    v-model:collection=\\\"group.setGroupRules\\\"\\n                    {% else %}\\n                    v-model=\\\"group.setGroupRules\\\"\\n                    {% endif %}\\n                    class=\\\"sw-promotion-v2-cart-condition-form__setgroup-rules\\\"\\n                    :label=\\\"$tc('sw-promotion-v2.detail.conditions.setgroups.labelRules')\\\"\\n                    :placeholder=\\\"$tc('sw-promotion-v2.detail.conditions.setgroups.placeholder')\\\"\\n                    :criteria=\\\"ruleFilter\\\"\\n                    :rule-scope=\\\"['checkout', 'global', 'lineItem']\\\"\\n                    :disabled=\\\"isEditingDisabled\\\"\\n                    rule-aware-group-key=\\\"promotionSetGroups\\\"\\n                />\\n                {% endblock %}\\n\\n            </sw-container>\\n        </sw-card>\\n        {% endblock %}\\n\\n        \\n        {% block sw_promotion_v2_cart_condition_add_group_button %}\\n        <div class=\\\"sw-promotion-v2-cart-condition-form__add-group-button-container\\\">\\n            <sw-button\\n                variant=\\\"ghost\\\"\\n                class=\\\"sw-promotion-v2-cart-condition-form__add-group-button\\\"\\n                :disabled=\\\"isEditingDisabled\\\"\\n                @click=\\\"addSetGroup\\\"\\n            >\\n                {{ $tc('sw-promotion-v2.detail.conditions.setgroups.buttonAddGroup') }}\\n            </sw-button>\\n        </div>\\n        {% endblock %}\\n\\n    </template>\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-promotion-v2-cart-condition-form.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"c0c0e6cc\", content, true, {});"],"sourceRoot":""}