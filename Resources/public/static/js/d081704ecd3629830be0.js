"use strict";(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[83013],{83013:function(i,t,e){e.r(t),e.d(t,{default:function(){return l}});let{Context:n}=Shopware,{mapState:s}=Shopware.Component.getComponentHelper();var l={template:'\n{% block sw_bulk_edit_product_visibility %}\n<div class="sw-bulk-edit-product-visibility">\n    \n    {% block sw_bulk_edit_product_visibility_select %}\n    <sw-inherit-wrapper\n        ref="productVisibilitiesInheritance"\n        v-model:value="product.visibilities"\n        :inherited-value="product.visibilities"\n        class="sw-product-category-form__visibility_field"\n        :custom-remove-inheritance-function="visibilitiesRemoveInheritanceFunction"\n        is-association\n    >\n        <template #content="{ currentValue, isInherited, updateCurrentValue }">\n            <sw-product-visibility-select\n                ref="productVisibility"\n                :key="isInherited"\n                class="sw-product-detail__select-visibility"\n                :entity-collection="currentValue"\n                :placeholder="$tc(\'sw-product.visibility.placeholderVisibility\')"\n                :disabled="disabled"\n                @update:entity-collection="updateCurrentValue"\n            />\n        </template>\n    </sw-inherit-wrapper>\n    {% endblock %}\n\n    \n    {% block sw_bulk_edit_product_visibility_advanced %}\n    <sw-container\n        v-if="product.visibilities.length > 0"\n        columns="1fr"\n        justify="end"\n    >\n        <a\n            class="sw-card__quick-link advanced-visibility"\n            :class="{ \'is--disabled\': disabled }"\n            role="button"\n            tabindex="0"\n            @click="openModal"\n            @keydown.enter="openModal"\n        >\n            {{ $tc(\'sw-product.visibility.linkAdvancedVisibility\') }} <sw-icon\n                name="regular-long-arrow-right"\n                small\n            />\n        </a>\n    </sw-container>\n    {% endblock %}\n\n    \n    {% block sw_bulk_edit_product_visibility_advanced_modal %}\n    <sw-modal\n        v-if="displayVisibilityDetail"\n        :title="$tc(\'sw-product.visibility.textHeadline\')"\n        class="sw-product-category-form__visibility_modal"\n        variant="large"\n        @modal-close="closeModal"\n    >\n        <p>{{ $tc(\'sw-product.visibility.visibilityModalDescription\') }}</p>\n\n        <sw-product-visibility-detail />\n\n        <template #modal-footer>\n            <sw-button\n                variant="primary"\n                size="small"\n                @click="closeModal"\n            >\n                {{ $tc(\'sw-product.visibility.closeModal\') }}\n            </sw-button>\n        </template>\n    </sw-modal>\n    {% endblock %}\n</div>\n{% endblock %}\n',inject:["repositoryFactory"],props:{bulkEditProduct:{type:Object,required:!0},disabled:{type:Boolean,required:!1,default:!1}},data(){return{displayVisibilityDetail:!1}},computed:{...s("swProductDetail",["product"]),productVisibilityRepository(){return this.repositoryFactory.create(this.product.visibilities.entity)}},methods:{visibilitiesRemoveInheritanceFunction(i){return i.forEach(({productVersionId:i,salesChannelId:t,salesChannel:e,visibility:s})=>{let l=this.productVisibilityRepository.create(n.api);Object.assign(l,{productId:this.product.id,productVersionId:i,salesChannelId:t,salesChannel:e,visibility:s}),this.product.visibilities.push(l)}),this.$refs.productVisibilitiesInheritance.forceInheritanceRemove=!0,this.product.visibilities},openModal(){this.displayVisibilityDetail=!0},closeModal(){this.displayVisibilityDetail=!1}}}}}]);