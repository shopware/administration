{"version":3,"sources":["webpack:///./src/app/asyncComponent/media/sw-media-base-item/sw-media-base-item.scss","webpack:///./src/app/asyncComponent/media/sw-media-base-item/index.js","webpack:///./src/app/asyncComponent/media/sw-media-base-item/sw-media-base-item.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","template","props","item","type","Object","required","isList","Boolean","showSelectionIndicator","showContextMenuButton","selected","editable","allowMultiSelect","truncateRight","allowEdit","allowDelete","data","isInlineEdit","computed","mediaItemClasses","this","mediaNameContainerClasses","listSelected","selectionIndicatorClasses","isLoading","methods","handleItemClick","originalDomEvent","isSelectionIndicatorClicked","composedPath","$emit","path","some","parent","classList","contains","onClickedItem","removeFromSelection","selectItem","startInlineEdit","endInlineEdit"],"mappings":"gIAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,mDCM7B,WACXQ,SChBW,s/GDkBXC,MAAO,CACHC,KAAM,CACFC,KAAMC,OACNC,UAAU,GAGdC,OAAQ,CACJH,KAAMI,QACNF,UAAU,EACVX,SAAS,GAGbc,uBAAwB,CACpBH,UAAU,EACVF,KAAMI,QACNb,SAAS,GAGbe,sBAAuB,CACnBN,KAAMI,QACNF,UAAU,EAGVX,SAAS,GAGbgB,SAAU,CACNP,KAAMI,QACNF,UAAU,EACVX,SAAS,GAGbiB,SAAU,CACNR,KAAMI,QACNF,UAAU,EAGVX,SAAS,GAGbkB,iBAAkB,CACdT,KAAMI,QACNF,UAAU,EAGVX,SAAS,GAGbmB,cAAe,CACXV,KAAMI,QACNF,UAAU,EACVX,SAAS,GAGboB,UAAW,CACPX,KAAMI,QACNF,UAAU,EAGVX,SAAS,GAGbqB,YAAa,CACTZ,KAAMI,QACNF,UAAU,EAGVX,SAAS,IAIjBsB,KAAI,WACA,MAAO,CACHC,cAAc,IAItBC,SAAU,CACNC,iBAAgB,WACZ,MAAO,CACH,WAAYC,KAAKd,OACjB,eAAgBc,KAAKV,UAAYU,KAAKH,eAI9CI,0BAAyB,WACrB,MAAO,CACH,qBAAsBD,KAAKP,gBAInCS,aAAY,WACR,OAAOF,KAAKV,UAAYU,KAAKZ,wBAGjCe,0BAAyB,WACrB,MAAO,CACH,8BAA+BH,KAAKZ,uBACpC,2BAA4BY,KAAKd,OACjC,8BAA+Bc,KAAKE,aACpC,iCAAkCF,KAAKR,mBAI/CY,UAAS,WACL,OAAOJ,KAAKlB,KAAKsB,YAIzBC,QAAS,CACLC,gBAAe,SAACC,GACRP,KAAKQ,4BAA4BD,EAAiBE,iBAGtDT,KAAKU,MAAM,mBAAoB,CAC3BH,mBACAzB,KAAMkB,KAAKlB,QAInB0B,4BAA2B,SAACG,GACxB,OAAOA,EAAKC,MAAK,SAACC,GACd,OAAOA,EAAOC,YACVD,EAAOC,UAAUC,SAAS,2CAC1BF,EAAOC,UAAUC,SAAS,0BAKtCC,cAAa,SAACT,GACLP,KAAKE,cAAiBF,KAAKR,iBAIhCQ,KAAKiB,oBAAoBV,GAHrBP,KAAKkB,WAAWX,IAMxBW,WAAU,SAACX,GACPP,KAAKU,MAAM,2BAA4B,CACnCH,mBACAzB,KAAMkB,KAAKlB,QAInBmC,oBAAmB,SAACV,GAChBP,KAAKU,MAAM,8BAA+B,CACtCH,mBACAzB,KAAMkB,KAAKlB,QAInBqC,gBAAe,WACPnB,KAAKT,UAAYS,KAAKN,YACtBM,KAAKH,cAAe,IAI5BuB,cAAa,WACTpB,KAAKH,cAAe","file":"static/js/5b369ff31f493c44f9c9.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-media-base-item.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6f63af18\", content, true, {});","import template from './sw-media-base-item.html.twig';\nimport './sw-media-base-item.scss';\n\n/**\n * @status ready\n * @description The <u>sw-media-base-item</u> component is the base for items in the media manager.\n * @package content\n * @example-type code-only\n * @component-example\n * <sw-media-base-item\n *     :item=\"myItem\"\n *     :is-list=\"true\">\n * </sw-media-base-item>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    props: {\n        item: {\n            type: Object,\n            required: true,\n        },\n\n        isList: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        showSelectionIndicator: {\n            required: false,\n            type: Boolean,\n            default: false,\n        },\n\n        showContextMenuButton: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        selected: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        editable: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        allowMultiSelect: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        truncateRight: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        allowEdit: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        allowDelete: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n    },\n\n    data() {\n        return {\n            isInlineEdit: false,\n        };\n    },\n\n    computed: {\n        mediaItemClasses() {\n            return {\n                'is--list': this.isList,\n                'is--selected': this.selected || this.isInlineEdit,\n            };\n        },\n\n        mediaNameContainerClasses() {\n            return {\n                'is--truncate-right': this.truncateRight,\n            };\n        },\n\n        listSelected() {\n            return this.selected && this.showSelectionIndicator;\n        },\n\n        selectionIndicatorClasses() {\n            return {\n                'selected-indicator--visible': this.showSelectionIndicator,\n                'selected-indicator--list': this.isList,\n                'selected-indicator--checked': this.listSelected,\n                'selected-indicator--is-allowed': this.allowMultiSelect,\n            };\n        },\n\n        isLoading() {\n            return this.item.isLoading;\n        },\n    },\n\n    methods: {\n        handleItemClick(originalDomEvent) {\n            if (this.isSelectionIndicatorClicked(originalDomEvent.composedPath())) {\n                return;\n            }\n            this.$emit('media-item-click', {\n                originalDomEvent,\n                item: this.item,\n            });\n        },\n\n        isSelectionIndicatorClicked(path) {\n            return path.some((parent) => {\n                return parent.classList && (\n                    parent.classList.contains('sw-media-base-item__selected-indicator') ||\n                    parent.classList.contains('sw-context-button')\n                );\n            });\n        },\n\n        onClickedItem(originalDomEvent) {\n            if (!this.listSelected || !this.allowMultiSelect) {\n                this.selectItem(originalDomEvent);\n                return;\n            }\n            this.removeFromSelection(originalDomEvent);\n        },\n\n        selectItem(originalDomEvent) {\n            this.$emit('media-item-selection-add', {\n                originalDomEvent,\n                item: this.item,\n            });\n        },\n\n        removeFromSelection(originalDomEvent) {\n            this.$emit('media-item-selection-remove', {\n                originalDomEvent,\n                item: this.item,\n            });\n        },\n\n        startInlineEdit() {\n            if (this.editable && this.allowEdit) {\n                this.isInlineEdit = true;\n            }\n        },\n\n        endInlineEdit() {\n            this.isInlineEdit = false;\n        },\n    },\n};\n","export default \"\\n{% block sw_media_base_item %}\\n<div\\n    class=\\\"sw-media-base-item\\\"\\n    :class=\\\"mediaItemClasses\\\"\\n    role=\\\"button\\\"\\n    tabindex=\\\"0\\\"\\n    @click=\\\"handleItemClick\\\"\\n    @keydown.enter=\\\"handleItemClick\\\"\\n>\\n\\n    \\n    {% block sw_media_base_item_selected_indicator %}\\n    <div\\n        v-if=\\\"!isList && allowEdit\\\"\\n        class=\\\"sw-media-base-item__selected-indicator\\\"\\n        :class=\\\"selectionIndicatorClasses\\\"\\n        role=\\\"button\\\"\\n        tabindex=\\\"0\\\"\\n        @click=\\\"onClickedItem\\\"\\n        @keydown.enter=\\\"onClickedItem\\\"\\n    >\\n\\n        \\n        {% block sw_media_base_item_selection_indicator_icon %}\\n        <sw-icon\\n            v-if=\\\"listSelected\\\"\\n            small\\n            size=\\\"10px\\\"\\n            name=\\\"regular-checkmark-xxs\\\"\\n        />\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_base_item_preview %}\\n    <div class=\\\"sw-media-base-item__preview-container\\\">\\n        <slot\\n            name=\\\"preview\\\"\\n            v-bind=\\\"{ item }\\\"\\n        >\\n            \\n            {% block sw_media_base_item_slot_media_preview %}{% endblock %}\\n        </slot>\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_base_item_name_container %}\\n    <div\\n        class=\\\"sw-media-base-item__name-container\\\"\\n        :class=\\\"mediaNameContainerClasses\\\"\\n    >\\n        <slot\\n            name=\\\"name\\\"\\n            v-bind=\\\"{ item, isInlineEdit, startInlineEdit, endInlineEdit }\\\"\\n        ></slot>\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_base_item_metadata_container %}\\n    <div\\n        v-if=\\\"isList && showContextMenuButton\\\"\\n        class=\\\"sw-media-base-item__metadata-container\\\"\\n    >\\n        \\n        {% block sw_media_base_item_metadata %}\\n        <slot\\n            name=\\\"metadata\\\"\\n            v-bind=\\\"{ item }\\\"\\n        >\\n            \\n            {% block sw_media_base_item_slot_media_item_metadata %}{% endblock %}\\n        </slot>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_base_item_context_menu %}\\n    <sw-context-button\\n        v-if=\\\"showContextMenuButton && !isLoading\\\"\\n        ref=\\\"swContextButton\\\"\\n    >\\n        \\n        {% block sw_media_base_item_context_items %}\\n        <slot\\n            name=\\\"context-menu\\\"\\n            v-bind=\\\"{ item, startInlineEdit, allowEdit, allowDelete }\\\"\\n        >\\n            \\n            {% block sw_media_base_item_slot_media_item_context_menu %}{% endblock %}\\n        </slot>\\n    {% endblock %}\\n    </sw-context-button>\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_base_item_list_selected_indicator %}\\n    <div\\n        v-if=\\\"isList && showSelectionIndicator && allowMultiSelect\\\"\\n        class=\\\"sw-media-base-item__selected-indicator\\\"\\n        :class=\\\"selectionIndicatorClasses\\\"\\n        role=\\\"button\\\"\\n        tabindex=\\\"0\\\"\\n        @click=\\\"onClickedItem\\\"\\n        @keydown.enter=\\\"onClickedItem\\\"\\n    >\\n\\n        \\n        {% block sw_media_base_item_list_selection_indicator_icon %}\\n        <sw-icon\\n            v-if=\\\"listSelected\\\"\\n            small\\n            name=\\\"regular-checkmark-xxs\\\"\\n            size=\\\"10px\\\"\\n        />\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_base_item_loading_indicator %}\\n    <sw-icon\\n        v-if=\\\"isLoading\\\"\\n        class=\\\"sw-media-base-item__loader\\\"\\n        name=\\\"regular-spinner-star\\\"\\n        size=\\\"16px\\\"\\n    />\\n    {% endblock %}\\n\\n    <slot\\n        name=\\\"modal-windows\\\"\\n        v-bind=\\\"{ item, allowEdit, allowDelete }\\\"\\n    ></slot>\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}