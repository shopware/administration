{"version":3,"sources":["webpack:///./src/module/sw-category/component/sw-landing-page-tree/index.js","webpack:///./src/module/sw-category/component/sw-landing-page-tree/sw-landing-page-tree.html.twig","webpack:///./src/module/sw-category/component/sw-landing-page-tree/sw-landing-page-tree.scss"],"names":["Criteria","Shopware","Data","mapState","Component","getComponentHelper","template","inject","mixins","props","landingPageId","type","String","required","default","currentLanguageId","allowEdit","Boolean","allowCreate","allowDelete","data","loadedLandingPages","translationContext","linkContext","isLoadingInitialData","computed","_objectSpread","cmsLandingPageCriteria","criteria","addSorting","sort","landingPage","State","get","landingPageRepository","this","repositoryFactory","create","landingPages","Object","values","disableContextMenu","Context","api","systemLanguageId","contextMenuTooltipText","$tc","watch","landingPagesToDelete","value","undefined","$refs","landingPageTree","onDeleteElements","commit","newVal","oldVal","_this","id","then","newLandingPage","$set","loadLandingPages","_this2","finally","created","createdComponent","methods","_this3","catch","createNotificationError","message","_this4","search","result","addLandingPages","checkedElementsCount","count","$emit","deleteCheckedItems","checkedItems","_this5","ids","keys","syncDeleted","forEach","removeFromStore","onDeleteLandingPage","_ref","_this6","isNew","$delete","Promise","resolve","delete","$router","push","name","changeLandingPage","route","params","hasChanges","duplicateElement","contextItem","_this7","behavior","cloneChildren","overwrites","concat","url","active","clone","setIds","element","childCount","parentId","createNewElement","arguments","length","createNewLandingPage","addLandingPage","syncLandingPages","sync","_this8","save","filter","_defineProperty","existingLandingPageEntries","entries","newLandingPageEntries","map","fromEntries","_toConsumableArray","_ref2","_slicedToArray","getLandingPageUrl","href","newLandingPageUrl","content","__esModule","module","i","locals","exports","add"],"mappings":"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","file":"static/js/2331362e554d6620c8ce.js","sourcesContent":["import template from './sw-landing-page-tree.html.twig';\nimport './sw-landing-page-tree.scss';\n\nconst { Criteria } = Shopware.Data;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package content\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'syncService', 'acl'],\n    mixins: [\n        'notification',\n    ],\n\n    props: {\n        landingPageId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        currentLanguageId: {\n            type: String,\n            required: true,\n        },\n\n        allowEdit: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        allowCreate: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        allowDelete: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n    },\n\n    data() {\n        return {\n            loadedLandingPages: {},\n            translationContext: 'sw-landing-page',\n            linkContext: 'sw.category.landingPageDetail',\n            isLoadingInitialData: true,\n        };\n    },\n\n    computed: {\n        ...mapState('swCategoryDetail', [\n            'landingPagesToDelete',\n        ]),\n\n        cmsLandingPageCriteria() {\n            const criteria = new Criteria(1, 500);\n            criteria.addSorting(Criteria.sort('name'));\n\n            return criteria;\n        },\n\n        landingPage() {\n            return Shopware.State.get('swCategoryDetail').landingPage;\n        },\n\n        landingPageRepository() {\n            return this.repositoryFactory.create('landing_page');\n        },\n\n        landingPages() {\n            return Object.values(this.loadedLandingPages);\n        },\n\n        disableContextMenu() {\n            if (!this.allowEdit) {\n                return true;\n            }\n\n            return this.currentLanguageId !== Shopware.Context.api.systemLanguageId;\n        },\n\n        contextMenuTooltipText() {\n            if (!this.allowEdit) {\n                return this.$tc('sw-privileges.tooltip.warning');\n            }\n\n            return null;\n        },\n    },\n\n    watch: {\n        landingPagesToDelete(value) {\n            if (value === undefined) {\n                return;\n            }\n\n            this.$refs.landingPageTree.onDeleteElements(value);\n\n            Shopware.State.commit('swCategoryDetail/setLandingPagesToDelete', {\n                landingPagesToDelete: undefined,\n            });\n        },\n\n        landingPage(newVal, oldVal) {\n            // load data when path is available\n            if (!oldVal && this.isLoadingInitialData) {\n                this.loadLandingPages();\n                return;\n            }\n\n            // back to index\n            if (newVal === null) {\n                return;\n            }\n\n            // reload after save\n            if (oldVal && this.landingPageId !== 'create' && newVal.id === oldVal.id) {\n                this.landingPageRepository.get(newVal.id).then((newLandingPage) => {\n                    this.$set(this.loadedLandingPages, newLandingPage.id, newLandingPage);\n                });\n            }\n        },\n\n        currentLanguageId() {\n            this.isLoadingInitialData = true;\n            this.loadedLandingPages = {};\n\n            this.loadLandingPages().finally(() => {\n                this.isLoadingInitialData = false;\n            });\n        },\n    },\n\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.loadLandingPages()\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('global.notification.unspecifiedSaveErrorMessage'),\n                    });\n                })\n                .finally(() => {\n                    this.isLoadingInitialData = false;\n                });\n        },\n\n        loadLandingPages() {\n            return this.landingPageRepository.search(this.cmsLandingPageCriteria).then((result) => {\n                this.addLandingPages(result);\n            });\n        },\n\n        /**\n         * @deprecated tag:v6.6.0 - will emit hypernated event only.\n         */\n        checkedElementsCount(count) {\n            this.$emit('landing-page-checked-elements-count', count);\n            this.$emit('landingPage-checked-elements-count', count);\n        },\n\n        deleteCheckedItems(checkedItems) {\n            const ids = Object.keys(checkedItems);\n            this.landingPageRepository.syncDeleted(ids).then(() => {\n                ids.forEach(id => this.removeFromStore(id));\n            });\n        },\n\n        onDeleteLandingPage({ data: landingPage }) {\n            if (landingPage.isNew()) {\n                this.$delete(this.loadedLandingPages, landingPage.id);\n                return Promise.resolve();\n            }\n\n            return this.landingPageRepository.delete(landingPage.id).then(() => {\n                this.removeFromStore(landingPage.id);\n\n                if (landingPage.id === this.landingPageId) {\n                    this.$router.push({ name: 'sw.category.index' });\n                }\n            });\n        },\n\n        changeLandingPage(landingPage) {\n            const route = { name: 'sw.category.landingPageDetail', params: { id: landingPage.id } };\n\n            if (this.landingPage && this.landingPageRepository.hasChanges(this.landingPage)) {\n                this.$emit('unsaved-changes', route);\n            } else {\n                this.$router.push(route);\n            }\n        },\n\n        duplicateElement(contextItem) {\n            const behavior = {\n                cloneChildren: false,\n                overwrites: {\n                    name: `${contextItem.data.name} ${this.$tc('global.default.copy')}`,\n                    url: `${contextItem.data.url}-${this.$tc('global.default.copy')}`,\n                    active: false,\n                },\n            };\n\n            this.landingPageRepository.clone(contextItem.id, Shopware.Context.api, behavior).then((clone) => {\n                const criteria = new Criteria(1, 25);\n                criteria.setIds([clone.id]);\n                this.landingPageRepository.search(criteria).then((landingPages) => {\n                    landingPages.forEach(element => {\n                        element.childCount = 0;\n                        element.parentId = null;\n                    });\n\n                    this.addLandingPages(landingPages);\n                });\n            }).catch(() => {\n                this.createNotificationError({\n                    message: this.$tc('global.notification.unspecifiedSaveErrorMessage'),\n                });\n            });\n        },\n\n        createNewElement(contextItem, parentId, name = '') {\n            const newLandingPage = this.createNewLandingPage(name);\n            this.addLandingPage(newLandingPage);\n            return newLandingPage;\n        },\n\n        syncLandingPages() {\n            return this.landingPageRepository.sync(this.landingPages);\n        },\n\n        createNewLandingPage(name) {\n            const newLandingPage = this.landingPageRepository.create();\n\n            newLandingPage.name = name;\n            newLandingPage.active = false;\n\n            newLandingPage.save = () => {\n                return this.landingPageRepository.save(newLandingPage).then(() => {\n                    const criteria = new Criteria(1, 25);\n                    criteria.setIds([newLandingPage.id].filter((id) => id !== null));\n                    this.landingPageRepository.search(criteria).then((landingPages) => {\n                        this.addLandingPages(landingPages);\n                    });\n                });\n            };\n\n            return newLandingPage;\n        },\n\n        addLandingPage(landingPage) {\n            if (!landingPage) {\n                return;\n            }\n\n            this.loadedLandingPages = {\n                ...this.loadedLandingPages,\n                [landingPage.id]: landingPage,\n            };\n        },\n\n        addLandingPages(landingPages) {\n            if (!landingPages) {\n                return;\n            }\n\n            const existingLandingPageEntries = Object.entries(this.loadedLandingPages || {});\n            const newLandingPageEntries = landingPages.map((landingPage) => {\n                return [landingPage.id, landingPage];\n            });\n\n            this.loadedLandingPages = Object.fromEntries([...existingLandingPageEntries, ...newLandingPageEntries]);\n        },\n\n        removeFromStore(id) {\n            this.loadedLandingPages = Object.fromEntries(Object.entries(this.loadedLandingPages || {}).filter(([key]) => {\n                return key !== id;\n            }));\n        },\n\n        getLandingPageUrl(landingPage) {\n            return this.$router.resolve({\n                name: this.linkContext,\n                params: { id: landingPage.id },\n            }).href;\n        },\n\n        newLandingPageUrl() {\n            return {\n                name: 'sw.category.landingPageDetail',\n                params: { id: 'create' },\n            };\n        },\n    },\n};\n","export default \"\\n{% block sw_landing_page_tree %}\\n<div class=\\\"sw-landing-page-tree\\\">\\n\\n    \\n    {% block sw_landing_page_tree_inner %}\\n    <sw-tree\\n        v-if=\\\"!isLoadingInitialData\\\"\\n        ref=\\\"landingPageTree\\\"\\n        class=\\\"sw-landing-page-tree__inner\\\"\\n        :items=\\\"landingPages\\\"\\n        :sortable=\\\"false\\\"\\n        :searchable=\\\"false\\\"\\n        :translation-context=\\\"translationContext\\\"\\n        :on-change-route=\\\"changeLandingPage\\\"\\n        :disable-context-menu=\\\"disableContextMenu\\\"\\n        :allow-delete-categories=\\\"allowDelete\\\"\\n        :allow-create-categories=\\\"false\\\"\\n        :active-tree-item-id=\\\"landingPageId\\\"\\n        @batch-delete=\\\"deleteCheckedItems\\\"\\n        @delete-element=\\\"onDeleteLandingPage\\\"\\n        @editing-end=\\\"syncLandingPages\\\"\\n        @checked-elements-count=\\\"checkedElementsCount\\\"\\n    >\\n\\n        <template #headline>\\n            <span></span>\\n        </template>\\n\\n        <template\\n            #items=\\\"{\\n                treeItems,\\n                sortable,\\n                draggedItem,\\n                newElementId,\\n                checkItem,\\n                translationContext,\\n                onChangeRoute,\\n                disableContextMenu\\n            }\\\"\\n        >\\n\\n            \\n            {% block sw_landing_page_tree_items %}\\n            <sw-tree-item\\n                v-for=\\\"item in treeItems\\\"\\n                :key=\\\"item.id\\\"\\n                :item=\\\"item\\\"\\n                :should-show-active-state=\\\"true\\\"\\n                :allow-duplicate=\\\"true\\\"\\n                :allow-new-categories=\\\"false\\\"\\n                :allow-delete-categories=\\\"allowDelete\\\"\\n                :active=\\\"item.active\\\"\\n                :translation-context=\\\"translationContext\\\"\\n                :on-change-route=\\\"onChangeRoute\\\"\\n                :sortable=\\\"sortable\\\"\\n                :dragged-item=\\\"draggedItem\\\"\\n                :disable-context-menu=\\\"disableContextMenu\\\"\\n                :display-checkbox=\\\"allowEdit\\\"\\n                :context-menu-tooltip-text=\\\"contextMenuTooltipText\\\"\\n                :new-element-id=\\\"newElementId\\\"\\n                :get-item-url=\\\"getLandingPageUrl\\\"\\n                @check-item=\\\"checkItem\\\"\\n            >\\n                <template #grip>\\n                    <span></span>\\n                </template>\\n\\n                <template\\n                    #actions=\\\"{\\n                        onDuplicate,\\n                        onChangeRoute,\\n                        deleteElement,\\n                        toolTip\\n                    }\\\"\\n                >\\n                    \\n                    {% block sw_landing_page_tree_items_actions %}\\n                    <sw-context-button\\n                        v-tooltip=\\\"toolTip\\\"\\n                        class=\\\"sw-tree-item__context_button\\\"\\n                        :disabled=\\\"disableContextMenu\\\"\\n                    >\\n\\n                        \\n                        {% block sw_landing_page_tree_items_actions_edit %}\\n                        <sw-context-menu-item @click=\\\"onChangeRoute(item)\\\">\\n                            {{ $tc('global.default.edit') }}\\n                        </sw-context-menu-item>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_landing_page_tree_items_actions_duplicate %}\\n                        <sw-context-menu-item\\n                            class=\\\"sw-context-menu__duplicate-action\\\"\\n                            @click=\\\"onDuplicate(item)\\\"\\n                        >\\n                            {{ $tc(`global.default.duplicate`) }}\\n                        </sw-context-menu-item>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_landing_page_tree_items_actions_delete %}\\n                        <sw-context-menu-item\\n                            class=\\\"sw-context-menu__group-button-delete\\\"\\n                            variant=\\\"danger\\\"\\n                            @click=\\\"deleteElement(item)\\\"\\n                        >\\n                            {{ $tc('global.default.delete') }}\\n                        </sw-context-menu-item>\\n                        {% endblock %}\\n\\n                    </sw-context-button>\\n                    {% endblock %}\\n\\n                </template>\\n            </sw-tree-item>\\n            {% endblock %}\\n\\n        </template>\\n    </sw-tree>\\n    {% endblock %}\\n\\n    <div v-else>\\n        <sw-skeleton variant=\\\"tree-item\\\" />\\n        <sw-skeleton variant=\\\"tree-item\\\" />\\n        <sw-skeleton variant=\\\"tree-item\\\" />\\n        <sw-skeleton variant=\\\"tree-item\\\" />\\n        <sw-skeleton variant=\\\"tree-item\\\" />\\n        <sw-skeleton variant=\\\"tree-item\\\" />\\n        <sw-skeleton variant=\\\"tree-item\\\" />\\n    </div>\\n\\n    \\n    {% block sw_landing_page_tree_action %}\\n    <div class=\\\"sw-landing-page-tree__add-button\\\">\\n        <sw-button\\n            class=\\\"sw-landing-page-tree__add-button-button\\\"\\n            :router-link=\\\"newLandingPageUrl()\\\"\\n            size=\\\"small\\\"\\n            variant=\\\"ghost\\\"\\n            :disabled=\\\"disableContextMenu || !acl.can('landing_page.creator')\\\"\\n        >\\n            {{ $tc('sw-landing-page.general.buttonCreate') }}\\n        </sw-button>\\n    </div>\\n    {% endblock %}\\n\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-landing-page-tree.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4f11a12a\", content, true, {});"],"sourceRoot":""}