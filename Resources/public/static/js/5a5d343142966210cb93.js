"use strict";(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[37602],{737602:function(e,o,s){s.r(o),s.d(o,{default:function(){return i}});let{Mixin:l}=Shopware;var i={template:'\n{% block sw_media_modal_folder_dissolve %}\n<sw-modal\n    variant="small"\n    class="sw-media-modal-folder-dissolve"\n    :title="$tc(\'global.default.warning\')"\n    @modal-close="closeDissolveModal"\n>\n\n    \n    {% block sw_media_modal_folder_dissolve_body %}\n    {{ $tc(\'global.sw-media-modal-folder-dissolve.dissolveMessage\', itemsToDissolve.length, { folderName: itemsToDissolve[0].name, count: itemsToDissolve.length }) }}\n    {% endblock %}\n\n    \n    {% block sw_media_modal_folder_dissolve_footer %}\n    <template #modal-footer>\n\n        \n        {% block sw_media_modal_folder_dissolve__cancel_button %}\n        <sw-button\n            size="small"\n            @click="closeDissolveModal"\n        >\n            {{ $tc(\'global.default.cancel\') }}\n        </sw-button>\n        {% endblock %}\n\n        \n        {% block sw_media_modal_folder_dissolve_confirm_button %}\n        <sw-button\n            class="sw-media-modal-folder-dissolve__confirm"\n            size="small"\n            variant="danger"\n            @click="dissolveSelection"\n        >\n            {{ $tc(\'global.sw-media-modal-folder-dissolve.buttonDissolve\') }}\n        </sw-button>\n        {% endblock %}\n\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["mediaFolderService"],emits:["media-folder-dissolve-modal-close","media-folder-dissolve-modal-dissolve"],mixins:[l.getByName("notification")],props:{itemsToDissolve:{required:!0,type:Array,validator(e){return 0!==e.length}}},methods:{closeDissolveModal(e){this.$emit("media-folder-dissolve-modal-close",{originalDomEvent:e})},async _dissolveSelection(e){e.isLoading=!0;try{return await this.mediaFolderService.dissolveFolder(e.id),this.createNotificationSuccess({title:this.$root.$tc("global.default.success"),message:this.$root.$tc("global.sw-media-modal-folder-dissolve.notification.successSingle.message",1,{folderName:e.name})}),e.id}catch{return this.createNotificationError({title:this.$root.$tc("global.default.error"),message:this.$root.$tc("global.sw-media-modal-folder-dissolve.notification.errorSingle.message",1,{folderName:e.name})}),null}finally{e.isLoading=!1}},async dissolveSelection(){let e=[];try{await Promise.all(this.itemsToDissolve.map(o=>(e.push(o.id),this._dissolveSelection(o)))),this.itemsToDissolve.length>1&&this.createNotificationSuccess({title:this.$root.$tc("global.default.success"),message:this.$root.$tc("global.sw-media-modal-folder-dissolve.notification.successOverall.message")}),this.$emit("media-folder-dissolve-modal-dissolve",e)}catch{this.itemsToDissolve.length>1&&this.createNotificationError({title:this.$root.$tc("global.default.error"),message:this.$root.$tc("global.sw-media-modal-folder-dissolve.notification.errorOverall.message")})}}}}}}]);