(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[53594],{48730:function(){},53594:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return i}}),n(42328);let{Criteria:r}=Shopware.Data;var i={template:'\n{% block sw_settings_rule_category_tree %}\n<sw-card\n    class="sw-settings-rule-category-tree"\n    position-identifier="sw-settings-rule-category-tree"\n>\n    <template #toolbar>\n        \n        {% block sw_settings_rule_category_tree_toolbar %}\n        <sw-card-filter @sw-card-filter-term-change="searchTreeItems" />\n        {% endblock %}\n    </template>\n\n    \n    {% block sw_settings_rule_category_tree_component %}\n    <sw-settings-rule-tree\n        ref="swTree"\n        :allow-create-categories="false"\n        :allow-delete-categories="false"\n        :items="categories"\n        after-id-property="afterCategoryId"\n        :sortable="false"\n        @get-tree-items="getTreeItems"\n        @search-tree-items="searchTreeItems"\n        @check-item="onCheckItem"\n    >\n        \n        {% block sw_settings_rule_category_tree_items %}\n        <template\n            #items="{\n                treeItems,\n                sortable,\n                draggedItem,\n                newElementId,\n                checkItem,\n                translationContext,\n                onChangeRoute,\n                disableContextMenu,\n            }"\n        >\n            \n            {% block sw_settings_rule_category_tree_item %}\n            <sw-settings-rule-tree-item\n                v-for="item in treeItems"\n                :key="item.id"\n                :association="association"\n                :item="item"\n                :sortable="false"\n                should-focus\n                :mark-inactive="true"\n                :hide-action="true"\n                @check-item="checkItem"\n            />\n            {% endblock %}\n        </template>\n        <template\n            v-if="hideHeadline"\n            #headline\n        >\n            <span></span>\n        </template>\n        <template\n            v-if="hideSearch"\n            #search\n        >\n            <span></span>\n        </template>\n        {% endblock %}\n    </sw-settings-rule-tree>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n',inject:["repositoryFactory"],props:{rule:{type:Object,required:!0},association:{type:String,required:!0},categoriesCollection:{type:Array,required:!0},hideHeadline:{type:Boolean,required:!1,default:!1},hideSearch:{type:Boolean,required:!1,default:!1}},data(){return{categories:[],isComponentReady:!1,isFetching:!1}},computed:{categoryRepository(){return this.repositoryFactory.create("category")},treeCriteria(){let e=new r(1,500);return e.getAssociation(this.association).addFilter(r.equals("id",this.rule.id)),e}},watch:{categoriesCollection:{handler(){!this.categoriesCollection.entity||this.isComponentReady||this.isFetching||Promise.all([this.getTreeItems()]).then(()=>{this.isComponentReady=!0})},immediate:!0}},methods:{searchTreeItems(e){this.getTreeItems(null,e,!0)},onCheckItem(e){this.$emit("on-selection",e)},getTreeItems(e=null,t=null,n=!1){this.isFetching=!0;let i=this.treeCriteria;return i.filters=i.filters.filter(e=>("equals"!==e.type||"parentId"!==e.field)&&!("contains"===e.type&&"name"===e.field)),t&&n&&i.addFilter(r.contains("name",t)),t||i.addFilter(r.equals("parentId",e)),this.categoryRepository.search(i,Shopware.Context.api).then(t=>(null===e?(this.categories=t,this.isFetching=!1):t.forEach(e=>{this.categories.add(e)}),Promise.resolve()))}}}},42328:function(e,t,n){var r=n(48730);r.__esModule&&(r=r.default),"string"==typeof r&&(r=[[e.id,r,""]]),r.locals&&(e.exports=r.locals),n(45346).Z("c7f05308",r,!0,{})}}]);