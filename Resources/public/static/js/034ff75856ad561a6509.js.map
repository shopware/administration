{"version":3,"sources":["webpack:///./src/module/sw-settings-listing/page/sw-settings-listing-option-base/sw-settings-listing-option-base.html.twig","webpack:///./src/module/sw-settings-listing/page/sw-settings-listing-option-base/index.js","webpack:///./src/module/sw-settings-listing/page/sw-settings-listing-option-base/sw-settings-listing-option-base.scss","webpack:///./src/module/sw-settings-listing/page/sw-settings-listing-option-create/index.js","webpack:///./src/module/sw-settings-listing/page/sw-settings-listing-option-create/sw-settings-listing-option-create.html.twig"],"names":["Mixin","Shopware","Criteria","Data","template","inject","mixins","getByName","data","productSortingEntity","toBeDeletedCriteria","customFieldOptions","customFields","defaultSortingKey","computed","productSortingRepository","this","repositoryFactory","create","customFieldRepository","smartBarHeading","label","$tc","isGeneralCardLoading","customFieldCriteria","productSortingEntityCriteria","isSaveButtonDisabled","fields","length","some","field","isDefaultSorting","key","created","createdComponent","methods","Promise","all","fetchProductSortingEntity","fetchCustomFields","fetchDefaultSorting","_this","productSortingEntityId","getProductSortingEntityId","get","Context","api","then","response","Array","isArray","_this2","search","_this3","systemConfigApiService","getValues","$route","params","id","saveProductSorting","save","onSave","_this4","transformCustomFieldCriterias","filter","sortingOptionName","createNotificationSuccess","message","$t","catch","createNotificationError","getCriteriaTemplate","fieldName","order","priority","naturalSorting","onDeleteCriteria","toBeRemovedItem","onConfirmDeleteCriteria","_this5","currentCriteria","onAddCriteria","newCriteria","push","onCancelEditCriteria","item","isCriteriaACustomField","technicalName","currentCustomField","name","_this6","map","currentField","concat","onChangeLanguage","content","__esModule","default","module","i","locals","exports","add","isNewProductSorting","_isNew","urlKeyCriteria","criteria","addFilter","equals","createProductSortingEntity","State","commit","active","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resolvedValue","wrap","_context","prev","next","kebabCase","sent","abrupt","resolve","encodedResponse","JSON","parse","config","$router","stop"],"mappings":"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","file":"static/js/034ff75856ad561a6509.js","sourcesContent":["export default \"\\n{% block sw_settings_listing_option_base %}\\n<sw-page class=\\\"sw-settings-listing-base\\\">\\n    \\n    {% block sw_settings_listing_option_base_smart_bar_heading %}\\n    <template #smart-bar-header>\\n        <h2>{{ smartBarHeading }}</h2>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_listing_option_base_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch @on-change=\\\"onChangeLanguage\\\" />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_listing_option_base_smart_bar_actions %}\\n    <template #smart-bar-actions>\\n\\n        \\n        {% block sw_settings_listing_option_base_smart_bar_actions_save %}\\n        <sw-button\\n            variant=\\\"primary\\\"\\n            :disabled=\\\"isSaveButtonDisabled\\\"\\n            @click=\\\"onSave\\\"\\n        >\\n            {{ $t('global.default.save') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_listing_option_base_smart_content %}\\n    <template #content>\\n\\n        \\n        {% block sw_settings_listing_option_base_smart_content_general_info %}\\n        <sw-settings-listing-option-general-info\\n            v-if=\\\"productSortingEntity\\\"\\n            :sorting-option=\\\"productSortingEntity\\\"\\n            :is-default-sorting=\\\"isDefaultSorting\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_listing_option_base_smart_bar_actions_grid %}\\n        <sw-settings-listing-option-criteria-grid\\n            v-if=\\\"productSortingEntity\\\"\\n            :product-sorting-entity=\\\"productSortingEntity\\\"\\n            @criteria-delete=\\\"onDeleteCriteria\\\"\\n            @criteria-add=\\\"onAddCriteria\\\"\\n            @inline-edit-save=\\\"onSave\\\"\\n            @inline-edit-cancel=\\\"onCancelEditCriteria\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_listing_option_base_smart_bar_actions_grid_delete_modal %}\\n        <sw-settings-listing-delete-modal\\n            v-if=\\\"toBeDeletedCriteria\\\"\\n            :title=\\\"$tc('sw-settings-listing.base.delete.modalTitle')\\\"\\n            :description=\\\"$tc('sw-settings-listing.base.delete.modalDescription')\\\"\\n            @cancel=\\\"toBeDeletedCriteria = null\\\"\\n            @delete=\\\"onConfirmDeleteCriteria\\\"\\n        />\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";","/**\n * @package inventory\n */\nimport template from './sw-settings-listing-option-base.html.twig';\nimport './sw-settings-listing-option-base.scss';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'systemConfigApiService'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            productSortingEntity: null,\n            toBeDeletedCriteria: null,\n            customFieldOptions: [],\n            customFields: [],\n            defaultSortingKey: null,\n        };\n    },\n\n    computed: {\n        productSortingRepository() {\n            return this.repositoryFactory.create('product_sorting');\n        },\n\n        customFieldRepository() {\n            return this.repositoryFactory.create('custom_field');\n        },\n\n        smartBarHeading() {\n            return this.productSortingEntity && this.productSortingEntity.label ?\n                this.productSortingEntity.label :\n                this.$tc('sw-settings-listing.base.smartBarTitle');\n        },\n\n        isGeneralCardLoading() {\n            return !this.productSortingEntity;\n        },\n\n        customFieldCriteria() {\n            return new Criteria(1, 25);\n        },\n\n        productSortingEntityCriteria() {\n            return new Criteria(1, 25);\n        },\n\n        isSaveButtonDisabled() {\n            return !this.productSortingEntity\n                || this.productSortingEntity.fields.length <= 0\n                || this.productSortingEntity.fields.some(field => !field.field || field.field === 'customField');\n        },\n\n        isDefaultSorting() {\n            return this.defaultSortingKey === this.productSortingEntity.key;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Promise.all([\n                this.fetchProductSortingEntity(),\n                this.fetchCustomFields(),\n                this.fetchDefaultSorting(),\n            ]);\n        },\n\n        fetchProductSortingEntity() {\n            const productSortingEntityId = this.getProductSortingEntityId();\n\n            this.productSortingRepository.get(\n                productSortingEntityId,\n                Shopware.Context.api,\n                this.productSortingEntityCriteria,\n            ).then(response => {\n                if (!Array.isArray(response.fields)) {\n                    response.fields = [];\n                }\n\n                this.productSortingEntity = response;\n            });\n        },\n\n        fetchCustomFields() {\n            return this.customFieldRepository.search(this.customFieldCriteria).then(response => {\n                this.customFields = response;\n            });\n        },\n\n        fetchDefaultSorting() {\n            this.systemConfigApiService.getValues('core.listing')\n                .then(response => {\n                    this.defaultSortingKey = response['core.listing.defaultSorting'];\n                });\n        },\n\n        getProductSortingEntityId() {\n            return this.$route.params.id;\n        },\n\n        saveProductSorting() {\n            return this.productSortingRepository.save(this.productSortingEntity);\n        },\n\n        onSave() {\n            this.transformCustomFieldCriterias();\n\n            this.productSortingEntity.fields = this.productSortingEntity.fields.filter(field => {\n                return field.field !== 'customField';\n            });\n\n            return this.saveProductSorting()\n                .then(() => {\n                    const sortingOptionName = this.productSortingEntity.label;\n\n                    this.createNotificationSuccess({\n                        message: this.$t('sw-settings-listing.base.notification.saveSuccess', { sortingOptionName }),\n                    });\n                })\n                .catch(() => {\n                    const sortingOptionName = this.productSortingEntity.label;\n\n                    this.createNotificationError({\n                        message: this.$t('sw-settings-listing.base.notification.saveError', { sortingOptionName }),\n                    });\n                });\n        },\n\n        getCriteriaTemplate(fieldName) {\n            return { field: fieldName, order: 'asc', priority: 1, naturalSorting: 0 };\n        },\n\n        onDeleteCriteria(toBeRemovedItem) {\n            this.toBeDeletedCriteria = toBeRemovedItem;\n        },\n\n        onConfirmDeleteCriteria() {\n            // filter out criteria\n            this.productSortingEntity.fields = this.productSortingEntity.fields.filter(currentCriteria => {\n                return currentCriteria.field !== this.toBeDeletedCriteria.field;\n            });\n\n            // save product sorting entity\n            this.saveProductSorting();\n\n            // close delete modal\n            this.toBeDeletedCriteria = null;\n        },\n\n        onAddCriteria(fieldName) {\n            if (!fieldName) {\n                return;\n            }\n\n            const newCriteria = this.getCriteriaTemplate(fieldName);\n\n            if (!this.productSortingEntity.fields) {\n                this.productSortingEntity.fields = [];\n            }\n\n            this.productSortingEntity.fields.push(newCriteria);\n        },\n\n        onCancelEditCriteria(item) {\n            if (this.getProductSortingEntityId()) {\n                this.fetchProductSortingEntity();\n\n                return;\n            }\n\n            this.productSortingEntity.fields = this.productSortingEntity.fields.filter(currentCriteria => {\n                return currentCriteria.field !== item.field;\n            });\n        },\n\n        isCriteriaACustomField(technicalName) {\n            return this.customFields.some(currentCustomField => {\n                return currentCustomField.name === technicalName;\n            });\n        },\n\n        transformCustomFieldCriterias() {\n            this.productSortingEntity.fields = this.productSortingEntity.fields.map(currentField => {\n                if (!this.isCriteriaACustomField(currentField.field)) {\n                    return currentField;\n                }\n\n                currentField.field = `customFields.${currentField.field}`;\n\n                return currentField;\n            });\n        },\n\n        onChangeLanguage() {\n            this.fetchProductSortingEntity();\n        },\n    },\n};\n\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-listing-option-base.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2f6b12f8\", content, true, {});","/**\n * @package inventory\n */\nimport { kebabCase } from 'lodash';\nimport '../sw-settings-listing-option-base';\nimport template from './sw-settings-listing-option-create.html.twig';\n\nconst { Criteria } = Shopware.Data;\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    computed: {\n        smartBarHeading() {\n            return this.productSortingEntity && this.productSortingEntity.label ?\n                this.productSortingEntity.label :\n                this.$tc('sw-settings-listing.create.smartBarTitle');\n        },\n\n        isNewProductSorting() {\n            return !this.productSortingEntity || this.productSortingEntity._isNew;\n        },\n\n        urlKeyCriteria() {\n            const criteria = new Criteria(1, 1);\n            criteria.addFilter(Criteria.equals('key', this.productSortingEntity.key));\n            return criteria;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.fetchCustomFields().then(() => {\n                this.productSortingEntity = this.createProductSortingEntity();\n                Shopware.State.commit('context/resetLanguageToDefault');\n            });\n        },\n\n        createProductSortingEntity() {\n            const productSortingEntity = this.productSortingRepository.create();\n            productSortingEntity.fields = [];\n            productSortingEntity.priority = 1;\n            productSortingEntity.active = false;\n\n            return productSortingEntity;\n        },\n\n        async onSave() {\n            this.transformCustomFieldCriterias();\n\n            this.productSortingEntity.fields = this.productSortingEntity.fields.filter(field => {\n                return field.field !== 'customField';\n            });\n\n            this.productSortingEntity.key = kebabCase(this.productSortingEntity.label);\n\n            const resolvedValue = await this.productSortingRepository.search(this.urlKeyCriteria);\n            if (resolvedValue?.length) {\n                const sortingOptionName = this.productSortingEntity.label;\n                this.createNotificationError({\n                    message: this.$t('sw-settings-listing.base.notification.saveErrorAlreadyExists', { sortingOptionName }),\n                });\n                return Promise.resolve();\n            }\n\n            return this.productSortingRepository.save(this.productSortingEntity)\n                .then(response => {\n                    const encodedResponse = JSON.parse(response.config.data);\n\n                    this.$router.push({ name: 'sw.settings.listing.edit', params: { id: encodedResponse.id } });\n                })\n                .catch(() => {\n                    const sortingOptionName = this.productSortingEntity.label;\n\n                    this.createNotificationError({\n                        message: this.$t('sw-settings-listing.base.notification.saveError', { sortingOptionName }),\n                    });\n                });\n        },\n\n        onAddCriteria(fieldName) {\n            if (!fieldName) {\n                return;\n            }\n\n            const newCriteria = this.getCriteriaTemplate(fieldName);\n\n            if (!this.productSortingEntity.fields) {\n                this.productSortingEntity.fields = [];\n            }\n\n            this.productSortingEntity.fields.push(newCriteria);\n        },\n\n        onConfirmDeleteCriteria() {\n            // filter out criteria\n            this.productSortingEntity.fields = this.productSortingEntity.fields.filter(currentCriteria => {\n                return currentCriteria.field !== this.toBeDeletedCriteria.field;\n            });\n\n            // close delete modal\n            this.toBeDeletedCriteria = null;\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_listing_option_edit_smart_bar_actions_grid %}\\n<sw-settings-listing-option-criteria-grid\\n    v-if=\\\"productSortingEntity\\\"\\n    :product-sorting-entity=\\\"productSortingEntity\\\"\\n    @criteria-delete=\\\"onDeleteCriteria\\\"\\n    @criteria-add=\\\"onAddCriteria\\\"\\n/>\\n{% endblock %}\\n\\n\\n{% block sw_settings_listing_option_base_language_switch %}\\n\\n<template #language-switch>\\n    <sw-language-switch\\n        :disabled=\\\"isNewProductSorting\\\"\\n        @on-change=\\\"onChangeLanguage\\\"\\n    />\\n</template>\\n{% endblock %}\\n\";"],"sourceRoot":""}