{"version":3,"sources":["webpack:///./src/module/sw-flow/view/listing/sw-flow-list-flow-templates/sw-flow-list-flow-templates.html.twig","webpack:///./src/module/sw-flow/view/listing/sw-flow-list-flow-templates/index.ts","webpack:///./src/module/sw-flow/view/listing/sw-flow-list-flow-templates/sw-flow-list-flow-templates.scss"],"names":["_Shopware","Shopware","Mixin","Criteria","Data","Component","wrapComponentConfig","template","inject","mixins","getByName","props","searchTerm","type","String","required","default","data","sortBy","sortDirection","total","isLoading","flowTemplates","metaInfo","title","this","$createTitle","computed","flowTemplateRepository","repositoryFactory","create","flowTemplateCriteria","criteria","setTerm","addSorting","sort","flowTemplateColumns","property","dataIndex","label","$tc","allowResize","align","sortable","assetFilter","Filter","watch","immediate","handler","value","onSearch","created","createComponent","methods","getList","_this","search","then","finally","onEditFlow","item","id","$router","push","name","params","query","content","__esModule","module","i","locals","exports","add"],"mappings":"+JAAe,ICiBfA,EAAsCC,SAA9BC,EAAKF,EAALE,MAAeC,EAAQH,EAAhBI,KAAQD,SAORF,mBAASI,UAAUC,oBAAoB,CAClDC,SDzBW,6tFC2BXC,OAAQ,CAAC,MAAO,qBAEhBC,OAAQ,CACJP,EAAMQ,UAAU,YAGpBC,MAAO,CACHC,WAAY,CACRC,KAAMC,OACNC,UAAU,EACVC,QAAS,KAIjBC,KAAI,WAOA,MAAO,CACHC,OAAQ,YACRC,cAAe,OACfC,MAAO,EACPC,WAAW,EACXC,cAAe,KAIvBC,SAAQ,WACJ,MAAO,CAEHC,MAAOC,KAAKC,iBAIpBC,SAAU,CACNC,uBAAsB,WAClB,OAAOH,KAAKI,kBAAkBC,OAAO,kBAGzCC,qBAAoB,WAChB,IAAMC,EAAW,IAAI7B,EAAS,EAAG,IAUjC,OARIsB,KAAKb,YACLoB,EAASC,QAAQR,KAAKb,YAI1BoB,EAASE,WAAW/B,EAASgC,KAAKV,KAAKP,OAAQO,KAAKN,gBAC/Ce,WAAW/B,EAASgC,KAAK,YAAa,SAEpCH,GAGXI,oBAAmB,WACf,MAAO,CACH,CACIC,SAAU,OACVC,UAAW,OACXC,MAAOd,KAAKe,IAAI,gCAChBC,aAAa,EACbC,MAAO,QAEX,CACIL,SAAU,qBACVE,MAAOd,KAAKe,IAAI,uCAChBC,aAAa,EACbE,UAAU,EACVD,MAAO,QAEX,CACIL,SAAU,aACVE,MAAO,GACPE,aAAa,EACbE,UAAU,EACVD,MAAO,WAKnBE,YAAW,WACP,OAAO3C,SAAS4C,OAAOnC,UAAU,WAIzCoC,MAAO,CACHlC,WAAY,CACRmC,WAAW,EACXC,QAAO,SAACC,GACJxB,KAAKyB,SAASD,MAK1BE,QAAO,WAEH1B,KAAK2B,mBAGTC,QAAS,CACLD,gBAAe,WAEX3B,KAAK6B,WAGTA,QAAO,WAAU,IAADC,EAAA,KACZ9B,KAAKJ,WAAY,EAGjBI,KAAKG,uBAAuB4B,OAAO/B,KAAKM,sBACnC0B,MAAK,SAACxC,GAEHsC,EAAKnC,MAAQH,EAAKG,MAElBmC,EAAKjC,cAAgBL,KAExByC,SAAQ,WACLH,EAAKlC,WAAY,MAI7BsC,WAAU,SAACC,GACFA,WAAMC,IAKXpC,KAAKqC,QAAQC,KAAK,CACdC,KAAM,iBAENC,OAAQ,CAAEJ,GAAID,EAAKC,IACnBK,MAAO,CAAErD,KAAM,mB,uBC7J/B,IAAIsD,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQnD,SACnB,iBAAZmD,IAAsBA,EAAU,CAAC,CAACE,EAAOC,EAAIH,EAAS,MAC7DA,EAAQI,SAAQF,EAAOG,QAAUL,EAAQI,SAG/BE,EADH,EAAQ,QAA2EzD,SAC5E,WAAYmD,GAAS,EAAM","file":"static/js/2416574b0a9b3d4fd0d5.js","sourcesContent":["export default \"<sw-card\\n    class=\\\"sw-flow-list-flow-templates-card\\\"\\n    position-identifier=\\\"sw-flow-list-flow-templates-card\\\"\\n>\\n    <div class=\\\"sw-flow-list-my-templates\\\">\\n        <div class=\\\"sw-flow-list-my-templates__content\\\">\\n            <sw-entity-listing\\n                v-if=\\\"total\\\"\\n                class=\\\"sw-flow-list-my-templates__grid\\\"\\n                :show-settings=\\\"false\\\"\\n                :allow-column-edit=\\\"false\\\"\\n                :allow-view=\\\"false\\\"\\n                :allow-edit=\\\"false\\\"\\n                :allow-delete=\\\"false\\\"\\n                :allow-bulk-edit=\\\"false\\\"\\n                :columns=\\\"flowTemplateColumns\\\"\\n                :sort-by=\\\"sortBy\\\"\\n                :sort-direction=\\\"sortDirection\\\"\\n                :repository=\\\"flowTemplateRepository\\\"\\n                :items=\\\"flowTemplates\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :full-page=\\\"false\\\"\\n                :show-selection=\\\"false\\\"\\n                :show-actions=\\\"false\\\"\\n                :plain-appearance=\\\"true\\\"\\n                @column-sort=\\\"onSortColumn\\\"\\n                @page-change=\\\"onPageChange\\\"\\n            >\\n                <template #column-name=\\\"{ item }\\\">\\n                    <a\\n                        class=\\\"sw-flow-list-my-flows__content__update-flow-template-link\\\"\\n                        role=\\\"link\\\"\\n                        tabindex=\\\"0\\\"\\n                        @click=\\\"onEditFlow(item)\\\"\\n                        @keydown.enter=\\\"onEditFlow(item)\\\"\\n                    >\\n                        {{ item.name }}\\n                    </a>\\n                </template>\\n\\n                <template #column-createFlow=\\\"{ item }\\\">\\n                    \\n                    <sw-internal-link\\n                        :router-link=\\\"{ name: 'sw.flow.create', params: { flowTemplateId: item.id }}\\\"\\n                        :disabled=\\\"!acl.can('flow.creator')\\\"\\n                        class=\\\"sw-flow-list-my-flows__content__create-flow-link\\\"\\n                    >\\n                        {{ $tc('sw-flow.template.create') }}\\n                    </sw-internal-link>\\n                </template>\\n            </sw-entity-listing>\\n\\n            <sw-empty-state\\n                v-else\\n                class=\\\"sw-flow-list-my_templates__empty-state\\\"\\n                :title=\\\"$tc('sw-flow.list.emptyStateTitle')\\\"\\n                :subline=\\\"$tc('sw-flow.list.emptyStateSubTitle')\\\"\\n            >\\n                <template #icon>\\n                    <img\\n                        :alt=\\\"$tc('sw-flow.list.emptyStateTitle')\\\"\\n                        :src=\\\"assetFilter('/administration/static/img/empty-states/settings-empty-state.svg')\\\"\\n                    >\\n                </template>\\n            </sw-empty-state>\\n        </div>\\n    </div>\\n</sw-card>\\n\";","import type EntityCollection from '@shopware-ag/admin-extension-sdk/es/data/_internals/EntityCollection';\nimport type { Entity } from '@shopware-ag/admin-extension-sdk/es/data/_internals/Entity';\nimport type { MetaInfo } from 'vue-meta';\nimport type Repository from '../../../../../core/data/repository.data';\nimport type CriteriaType from '../../../../../core/data/criteria.data';\nimport template from './sw-flow-list-flow-templates.html.twig';\nimport './sw-flow-list-flow-templates.scss';\n\ninterface GridColumn {\n    property: string,\n    dataIndex?: string,\n    label: string,\n    allowResize?: boolean,\n    sortable?: boolean,\n    align: string,\n}\n\nconst { Mixin, Data: { Criteria } } = Shopware;\n\n/**\n * @private\n * @package services-settings\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default Shopware.Component.wrapComponentConfig({\n    template,\n\n    inject: ['acl', 'repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        searchTerm: {\n            type: String,\n            required: false,\n            default: '',\n        },\n    },\n\n    data(): {\n        sortBy: string,\n        sortDirection: string,\n        total: number,\n        isLoading: boolean,\n        flowTemplates: EntityCollection<'flow_template'>|[],\n        } {\n        return {\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            total: 0,\n            isLoading: false,\n            flowTemplates: [],\n        };\n    },\n\n    metaInfo(): MetaInfo {\n        return {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        flowTemplateRepository(): Repository<'flow_template'> {\n            return this.repositoryFactory.create('flow_template');\n        },\n\n        flowTemplateCriteria(): CriteriaType {\n            const criteria = new Criteria(1, 25);\n\n            if (this.searchTerm) {\n                criteria.setTerm(this.searchTerm);\n            }\n\n            // @ts-expect-error - Mixin methods are not recognized\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection))\n                .addSorting(Criteria.sort('updatedAt', 'DESC'));\n\n            return criteria;\n        },\n\n        flowTemplateColumns(): GridColumn[] {\n            return [\n                {\n                    property: 'name',\n                    dataIndex: 'name',\n                    label: this.$tc('sw-flow.list.labelColumnName'),\n                    allowResize: false,\n                    align: 'left',\n                },\n                {\n                    property: 'config.description',\n                    label: this.$tc('sw-flow.list.labelColumnDescription'),\n                    allowResize: false,\n                    sortable: false,\n                    align: 'left',\n                },\n                {\n                    property: 'createFlow',\n                    label: '',\n                    allowResize: false,\n                    sortable: false,\n                    align: 'right',\n                },\n            ];\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        searchTerm: {\n            immediate: true,\n            handler(value: string): void {\n                this.onSearch(value);\n            },\n        },\n    },\n\n    created(): void {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        this.createComponent();\n    },\n\n    methods: {\n        createComponent(): void {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            this.getList();\n        },\n\n        getList(): void {\n            this.isLoading = true;\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            this.flowTemplateRepository.search(this.flowTemplateCriteria)\n                .then((data: EntityCollection<'flow_template'>) => {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                    this.total = data.total as number;\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    this.flowTemplates = data;\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        onEditFlow(item: Entity<'flow_template'>): void {\n            if (!item?.id) {\n                return;\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this.$router.push({\n                name: 'sw.flow.detail',\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params: { id: item.id },\n                query: { type: 'template' },\n            });\n        },\n    },\n});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-flow-list-flow-templates.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"9458f9ac\", content, true, {});"],"sourceRoot":""}