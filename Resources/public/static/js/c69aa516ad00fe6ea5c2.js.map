{"version":3,"sources":["webpack:///./src/module/sw-order/component/sw-order-user-card/sw-order-user-card.html.twig","webpack:///./src/module/sw-order/component/sw-order-user-card/index.js","webpack:///./src/module/sw-order/component/sw-order-user-card/sw-order-user-card.scss"],"names":["Mixin","Shopware","Criteria","Data","ApiService","Classes","format","Utils","template","inject","mixins","getByName","props","currentOrder","type","Object","required","versionContext","isLoading","Boolean","isEditing","data","addressBeingEdited","countries","formattingAddress","computed","countryRepository","this","repositoryFactory","create","orderAddressRepository","OrderTagRepository","tags","entity","source","billingAddress","_this","addresses","find","address","id","billingAddressId","delivery","deliveries","orderDate","date","orderDateTime","hasDeliveries","length","hasDeliveryTrackingCode","trackingCodes","hasDifferentBillingAndShippingAddress","shippingOrderAddressId","lastChangedDate","updatedAt","hasTags","fullName","name","salutation","orderCustomer","company","values","filter","item","join","trim","currencyFilter","Filter","created","createdComponent","methods","reload","renderFormattingAddress","_this$billingAddress$","_this2","customSnippetApiService","render","country","addressFormat","then","res","rendered","_this3","search","countryCriteria","response","criteria","addSorting","sort","onEditBillingAddress","onEditDeliveryAddress","shippingOrderAddress","onAddressModalSave","_this4","$nextTick","emitChange","onResetOrder","_this5","$emit","onAddressModalAddressSelected","_this6","oldAddressId","orderService","changeOrderAddress","getVersionHeader","versionId","catch","error","onAddNewDeliveryAddress","_this7","clone","onAddTag","_this8","assign","Context","api","onRemoveTag","_this9","delete","renderTrackingUrl","trackingCode","shippingMethod","urlTemplate","trackingUrl","replace","encodeURIComponent","content","__esModule","default","module","i","locals","exports","add"],"mappings":"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","file":"static/js/c69aa516ad00fe6ea5c2.js","sourcesContent":["export default \"\\n{% block sw_order_detail_base_order_overview %}\\n<sw-card\\n    class=\\\"sw-order-user-card\\\"\\n    position-identifier=\\\"sw-order-user-card\\\"\\n    :title=\\\"$tc('sw-order.detailBase.cardTitleDetails')\\\"\\n    :is-loading=\\\"isLoading\\\"\\n>\\n\\n    \\n    {% block sw_order_detail_base_address_modal %}\\n    <sw-order-address-modal\\n        v-if=\\\"addressBeingEdited\\\"\\n        :countries=\\\"countries\\\"\\n        :address=\\\"addressBeingEdited\\\"\\n        :order=\\\"currentOrder\\\"\\n        :version-context=\\\"versionContext\\\"\\n        @address-select=\\\"onAddressModalAddressSelected\\\"\\n        @reset=\\\"onResetOrder\\\"\\n        @save=\\\"onAddressModalSave\\\"\\n        @error=\\\"$emit('error')\\\"\\n    />\\n    {% endblock %}\\n\\n    <template #grid>\\n        <sw-container rows=\\\"auto auto\\\">\\n\\n            \\n            {% block sw_order_user_card_row_primary %}\\n            <sw-card-section divider=\\\"bottom\\\">\\n\\n                \\n                {% block sw_order_user_card_metadata_container %}\\n                <sw-container\\n                    columns=\\\"80px 1fr max-content\\\"\\n                    gap=\\\"0px 30px\\\"\\n                    align=\\\"center\\\"\\n                    class=\\\"sw-order-user-card__container\\\"\\n                >\\n\\n                    \\n                    {% block sw_order_user_card_avatar %}\\n                    <sw-avatar\\n                        size=\\\"80px\\\"\\n                        color=\\\"$route.meta.$module.color\\\"\\n                        :first-name=\\\"currentOrder.orderCustomer.firstName\\\"\\n                        :last-name=\\\"currentOrder.orderCustomer.lastName\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_order_user_card_metadata %}\\n                    <div class=\\\"sw-order-user-card__metadata\\\">\\n                        \\n                        {% block sw_order_user_card_metadata_user_name %}\\n                        <div\\n                            v-if=\\\"currentOrder.orderCustomer\\\"\\n                            class=\\\"sw-order-user-card__metadata-user-name\\\"\\n                        >\\n                            {{ fullName }}\\n                        </div>\\n                        {% endblock %}\\n                        \\n                        {% block sw_order_user_card_metadata_tags %}\\n\\n                        <sw-entity-tag-select\\n                            v-if=\\\"isEditing || hasTags\\\"\\n                            class=\\\"sw-order-user-card__tag-select\\\"\\n                            :placeholder=\\\"$tc('sw-order.detailBase.placeholderTagSelect')\\\"\\n                            :size=\\\"!isEditing ? 'default' : 'medium'\\\"\\n                            :disabled=\\\"!isEditing\\\"\\n                            :entity-collection=\\\"currentOrder.tags\\\"\\n                            @item-add=\\\"onAddTag\\\"\\n                            @item-remove=\\\"onRemoveTag\\\"\\n                        />\\n                        {% endblock %}\\n                    </div>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_order_detail_base_info_summary %}\\n                    <div class=\\\"sw-order-user-card__info-summary\\\">\\n                        \\n                        {% block  sw_order_detail_base_info_summary_entries %}\\n                        <div class=\\\"sw-order-user-card__metadata-price\\\">\\n                            {{ currencyFilter(currentOrder.amountTotal, currentOrder.currency.translated.shortName) }}\\n                        </div>\\n\\n                        <div class=\\\"sw-order-user-card__metadata-item\\\">\\n                            {{ orderDate }}\\n                        </div>\\n                        {% endblock %}\\n                    </div>\\n                    {% endblock %}\\n\\n                </sw-container>\\n                {% endblock %}\\n\\n                <slot name=\\\"additional-actions\\\">\\n                    \\n                    {% block sw_order_user_card_slot_additional_actions %}{% endblock %}\\n                </slot>\\n\\n                \\n                {% block sw_order_detail_base_order_overview_columns %}\\n                <sw-container\\n                    columns=\\\"repeat(auto-fit, minmax(250px, 1fr))\\\"\\n                    gap=\\\"30px 30px\\\"\\n                >\\n\\n                    \\n                    {% block sw_order_detail_base_order_overview_left_column %}\\n                    <sw-description-list\\n                        columns=\\\"1fr\\\"\\n                        grid=\\\"1fr\\\"\\n                        class=\\\"sw-order-user-card__summary-vertical\\\"\\n                    >\\n\\n                        \\n                        {% block sw_order_detail_base_order_overview_email %}\\n                        <dt>{{ $tc('sw-order.detailBase.labelCustomerEmail') }}*</dt>\\n                        <dd>\\n                            <sw-order-inline-field\\n                                v-model=\\\"currentOrder.orderCustomer.email\\\"\\n                                :display-value=\\\"currentOrder.orderCustomer.email ? currentOrder.orderCustomer.email : $tc('sw-order.detailBase.labelNoEmail')\\\"\\n                                required\\n                                :value=\\\"currentOrder.orderCustomer.email\\\"\\n                                :editable=\\\"isEditing\\\"\\n                                @input=\\\"$emit('order-change')\\\"\\n                            />\\n                        </dd>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_detail_base_order_overview_billing_address %}\\n                        <dt>\\n                            {{ $tc('sw-order.detailBase.headlineBillingAddress') }}\\n                            <sw-button\\n                                v-if=\\\"isEditing\\\"\\n                                class=\\\"sw-order-user-card__address-edit-button\\\"\\n                                size=\\\"small\\\"\\n                                @click=\\\"onEditBillingAddress\\\"\\n                            >\\n                                {{ $tc('sw-order.detailBase.buttonEditAddress') }}\\n                            </sw-button>\\n                        </dt>\\n                        <dd\\n                            role=\\\"button\\\"\\n                            tabindex=\\\"0\\\"\\n                            @click=\\\"onEditBillingAddress\\\"\\n                            @keydown.enter=\\\"onEditBillingAddress\\\">\\n                            <sw-address\\n                                :address=\\\"billingAddress\\\"\\n                                :formatting-address=\\\"formattingAddress\\\"\\n                            />\\n                        </dd>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_detail_base_order_overview_left_column_slot %}\\n                        {% endblock %}\\n\\n                    </sw-description-list>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_order_detail_base_order_overview_right_column %}\\n                    <sw-description-list\\n                        columns=\\\"1fr\\\"\\n                        grid=\\\"1fr\\\"\\n                        class=\\\"sw-order-user-card__summary-vertical\\\"\\n                    >\\n\\n                        \\n                        {% block sw_order_detail_base_order_overview_phone_number %}\\n                        <dt>\\n                            {{ $tc('sw-order.detailBase.labelCustomerPhoneNumber') }}\\n                            <sw-label\\n                                v-if=\\\"hasDifferentBillingAndShippingAddress\\\"\\n                                size=\\\"small\\\"\\n                                appearance=\\\"pill\\\"\\n                                class=\\\"sw-order-user-card__address-phone-label\\\"\\n                            >\\n                                {{ $tc('sw-order.detailBase.headlineBillingAddress') }}\\n                            </sw-label>\\n                        </dt>\\n                        <dd>\\n                            <sw-order-inline-field\\n                                v-model=\\\"billingAddress.phoneNumber\\\"\\n                                :display-value=\\\"billingAddress.phoneNumber? billingAddress.phoneNumber : $tc('sw-order.detailBase.labelNoPhoneNumber')\\\"\\n                                :value=\\\"billingAddress.phoneNumber\\\"\\n                                :editable=\\\"isEditing\\\"\\n                                class=\\\"sw-order-inline-field__truncateable\\\"\\n                                @input=\\\"$emit('order-change')\\\"\\n                            />\\n                        </dd>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_detail_base_order_overview_shipping_address %}\\n                        <dt>\\n                            {{ $tc('sw-order.detailBase.headlineDeliveryAddress') }}\\n                            <sw-button\\n                                v-show=\\\"hasDifferentBillingAndShippingAddress && isEditing\\\"\\n                                class=\\\"sw-order-user-card__address-edit-button\\\"\\n                                size=\\\"small\\\"\\n                                @click=\\\"onEditDeliveryAddress\\\"\\n                            >\\n                                {{ $tc('sw-order.detailBase.buttonEditAddress') }}\\n                            </sw-button>\\n                        </dt>\\n\\n                        <dd v-if=\\\"!hasDifferentBillingAndShippingAddress && hasDeliveries\\\">\\n                            <span>\\n                                {{ $tc('sw-order.detailBase.labelSameDeliveryAndBillingAddress') }}\\n                            </span>\\n                            <sw-button\\n                                v-show=\\\"!hasDifferentBillingAndShippingAddress && isEditing\\\"\\n                                class=\\\"sw-order-user-card__address-add-button\\\"\\n                                size=\\\"small\\\"\\n                                block\\n                                @click=\\\"onAddNewDeliveryAddress\\\"\\n                            >\\n                                {{ $tc('sw-order.detailBase.buttonAddDeliveryAddress') }}\\n                            </sw-button>\\n                        </dd>\\n\\n                        <dd\\n                            v-else-if=\\\"hasDeliveries\\\"\\n                            role=\\\"button\\\"\\n                            tabindex=\\\"0\\\"\\n                            @click=\\\"$emit('onEditDeliveryAddress',$event)\\\"\\n                            @keydown.enter=\\\"$emit('onEditDeliveryAddress',$event)\\\"\\n                        >\\n                            <sw-address\\n                                :address=\\\"delivery.shippingOrderAddress\\\"\\n                                :formatting-address=\\\"formattingAddress\\\"\\n                            />\\n                        </dd>\\n\\n                        <dd v-else>\\n                            {{ $tc('sw-order.detailBase.labelNoDeliveriesYet') }}\\n                        </dd>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_detail_base_order_overview_right_column_slot %}\\n                        {% endblock %}\\n\\n                    </sw-description-list>\\n                    {% endblock %}\\n\\n                </sw-container>\\n                {% endblock %}\\n\\n            </sw-card-section>\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_user_card_row_secondary %}\\n            <sw-card-section\\n                secondary\\n                slim\\n            >\\n\\n                \\n                {% block sw_order_detail_base_secondary_info_order_overview %}\\n                <sw-container\\n                    columns=\\\"repeat(auto-fit, minmax(250px, 1fr))\\\"\\n                    gap=\\\"30px 30px\\\"\\n                >\\n\\n                    \\n                    {% block sw_order_detail_base_secondary_info_order_overview_contents %}\\n                    <sw-description-list\\n                        columns=\\\"1fr\\\"\\n                        grid=\\\"1fr\\\"\\n                        class=\\\"sw-order-user-card__summary-vertical\\\"\\n                    >\\n\\n                        \\n                        {% block sw_order_detail_base_secondary_info_order_overview_left_column %}\\n\\n                        \\n                        {% block sw_order_detail_base_secondary_info_sales_channel %}\\n                        <dt>{{ $tc('sw-order.detailBase.labelSalesChannel') }}</dt>\\n                        <dd class=\\\"sw-order-base__label-sales-channel\\\">\\n                            {{ currentOrder.salesChannel.translated.name }}\\n                        </dd>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_detail_base_secondary_info_payment %}\\n                        <template v-if=\\\"currentOrder.transactions.length > 0\\\">\\n                            <dt>{{ $tc('sw-order.detailBase.labelPaymentMethod') }}</dt>\\n                            <dd>\\n                                {{ currentOrder.transactions.last().paymentMethod.translated.distinguishableName }}\\n                            </dd>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_detail_base_secondary_info_delivery %}\\n                        <dt>{{ $tc('sw-order.detailBase.labelShippingMethod') }}</dt>\\n                        <dd>{{ hasDeliveries ? delivery.shippingMethod.translated.name :$tc('sw-order.detailBase.labelNoDeliveriesYet') }}</dd>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_detail_base_secondary_info_affiliate %}\\n                        <dt>{{ $tc('sw-order.detailBase.labelAffiliateCode') }}</dt>\\n                        <dd>{{ currentOrder.affiliateCode || '-' }}</dd>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_detail_base_secondary_info_order_overview_left_column_slot %}\\n                        {% endblock %}\\n\\n                        {% endblock %}\\n                    </sw-description-list>\\n\\n                    <sw-description-list\\n                        columns=\\\"1fr\\\"\\n                        grid=\\\"1fr\\\"\\n                        class=\\\"sw-order-user-card__summary-vertical\\\"\\n                    >\\n                        {%  block sw_order_detail_base_secondary_info_order_overview_right_column %}\\n\\n                        \\n                        {% block sw_order_detail_base_secondary_info_order_language %}\\n                        <dt>{{ $tc('sw-order.detailBase.labelLanguage') }}</dt>\\n                        <dd>{{ currentOrder.language.name }}</dd>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_detail_base_secondary_info_last_change %}\\n                        <dt>{{ $tc('sw-order.detailBase.labelLastChange') }}</dt>\\n                        <dd>{{ lastChangedDate }}</dd>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_detail_base_secondary_info_tracking_codes %}\\n                        <template v-if=\\\"isEditing && delivery\\\">\\n                            \\n                            {% block sw_order_detail_base_secondary_info_tracking_codes_input %}\\n                            <dt>\\n                                \\n                                {% block sw_order_detail_base_secondary_info_tracking_codes_input_label %}\\n                                {{ $tc('sw-order.detailBase.labelTrackingCodes') }}\\n                                {% endblock %}\\n                            </dt>\\n                            <dd>\\n                                \\n                                {% block sw_order_detail_base_secondary_info_tracking_codes_input_content %}\\n                                <sw-multi-tag-select\\n                                    {% if VUE3 %}\\n                                    v-model:value=\\\"delivery.trackingCodes\\\"\\n                                    {% else %}\\n                                    v-model=\\\"delivery.trackingCodes\\\"\\n                                    {% endif %}\\n                                    class=\\\"sw-order-user-card__tracking-code-select\\\"\\n                                    :placeholder=\\\"$tc('sw-order.detailBase.placeholderTrackingCodeSelect')\\\"\\n                                    {% if VUE3 %}\\n                                    @update:value=\\\"emitChange\\\"\\n                                    {% else %}\\n                                    @change=\\\"emitChange\\\"\\n                                    {% endif %}\\n                                >\\n                                    <template #message-add-data>\\n                                        <span>{{ $tc('sw-order.detailBase.addTrackingCode') }}</span>\\n                                    </template>\\n                                    <template #message-enter-valid-data>\\n                                        <span>{{ $tc('sw-order.detailBase.enterValidTrackingCode') }}</span>\\n                                    </template>\\n                                </sw-multi-tag-select>\\n                                {% endblock %}\\n                            </dd>\\n                            {% endblock %}\\n                        </template>\\n                        <template v-else-if=\\\"delivery\\\">\\n                            \\n                            {% block sw_order_detail_base_secondary_info_tracking_codes_display %}\\n                            <dt>\\n                                \\n                                {% block sw_order_detail_base_secondary_info_tracking_codes_display_label %}\\n                                {{ $tc('sw-order.detailBase.labelTrackingCodes') }}\\n                                {% endblock %}\\n                            </dt>\\n                            <dd>\\n                                \\n                                {% block sw_order_detail_base_secondary_info_tracking_codes_display_content %}\\n                                <sw-button\\n                                    v-for=\\\"trackingCode in delivery.trackingCodes\\\"\\n                                    :key=\\\"trackingCode\\\"\\n                                    class=\\\"sw-order-user-card__tracking-code-link\\\"\\n                                    size=\\\"x-small\\\"\\n                                    :link=\\\"renderTrackingUrl(trackingCode, delivery.shippingMethod)\\\"\\n                                    :disabled=\\\"!renderTrackingUrl(trackingCode, delivery.shippingMethod)\\\"\\n                                >{{ trackingCode }}</sw-button>\\n                                {% endblock %}\\n                            </dd>\\n                            {% endblock %}\\n                        </template>\\n                        <template v-else>\\n                            \\n                            {% block sw_order_detail_base_secondary_info_tracking_codes_empty %}\\n                            <dt>\\n                                \\n                                {% block sw_order_detail_base_secondary_info_tracking_codes_empty_label %}\\n                                {{ $tc('sw-order.detailBase.labelTrackingCodes') }}\\n                                {% endblock %}\\n                            </dt>\\n                            <dd>\\n                                \\n                                {% block sw_order_detail_base_secondary_info_tracking_codes_empty_content %}\\n                                <span>-</span>\\n                                {% endblock %}\\n                            </dd>\\n                            {% endblock %}\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_detail_base_secondary_info_campaign %}\\n                        <template v-if=\\\"currentOrder.campaignCode\\\">\\n                            <dt>{{ $tc('sw-order.detailBase.labelCampaignCode') }}</dt>\\n                            <dd>{{ currentOrder.campaignCode || '-' }}</dd>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_detail_base_secondary_info_order_overview_right_column_slot %}\\n                        {% endblock %}\\n\\n                        {% endblock %}\\n\\n                    </sw-description-list>\\n                    {% endblock %}\\n\\n                </sw-container>\\n                {% endblock %}\\n\\n            </sw-card-section>\\n            {% endblock %}\\n\\n        </sw-container>\\n    </template>\\n</sw-card>\\n\\n{% endblock %}\\n\";","import template from './sw-order-user-card.html.twig';\nimport './sw-order-user-card.scss';\n\n/**\n * @package checkout\n */\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst ApiService = Shopware.Classes.ApiService;\nconst format = Shopware.Utils.format;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'customSnippetApiService',\n        'orderService',\n        'repositoryFactory',\n        'feature',\n    ],\n\n    mixins: [\n        Mixin.getByName('salutation'),\n    ],\n\n    props: {\n        currentOrder: {\n            type: Object,\n            required: true,\n        },\n        versionContext: {\n            type: Object,\n            required: true,\n        },\n        isLoading: {\n            type: Boolean,\n            required: true,\n        },\n        isEditing: {\n            type: Boolean,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            addressBeingEdited: null,\n            countries: null,\n            formattingAddress: '',\n        };\n    },\n\n    computed: {\n        countryRepository() {\n            return this.repositoryFactory.create('country');\n        },\n\n        orderAddressRepository() {\n            return this.repositoryFactory.create('order_address');\n        },\n\n        OrderTagRepository() {\n            return this.repositoryFactory.create(\n                this.currentOrder.tags.entity,\n                this.currentOrder.tags.source,\n            );\n        },\n\n        billingAddress() {\n            return this.currentOrder.addresses.find((address) => {\n                return address.id === this.currentOrder.billingAddressId;\n            });\n        },\n\n        delivery() {\n            return this.currentOrder.deliveries[0];\n        },\n\n        orderDate() {\n            if (this.currentOrder && !this.currentOrder.isLoading) {\n                return format.date(this.currentOrder.orderDateTime);\n            }\n            return '';\n        },\n\n        hasDeliveries() {\n            return this.currentOrder.deliveries.length > 0;\n        },\n\n        hasDeliveryTrackingCode() {\n            return this.hasDeliveries && this.delivery.trackingCodes.length;\n        },\n\n        hasDifferentBillingAndShippingAddress() {\n            return this.hasDeliveries &&\n                this.billingAddress.id !== this.delivery.shippingOrderAddressId;\n        },\n\n        lastChangedDate() {\n            if (this.currentOrder) {\n                if (this.currentOrder.updatedAt) {\n                    return format.date(\n                        this.currentOrder.updatedAt,\n                    );\n                }\n\n                return format.date(\n                    this.currentOrder.orderDateTime,\n                );\n            }\n            return '';\n        },\n\n        hasTags() {\n            return this.currentOrder.tags.length !== 0;\n        },\n\n        fullName() {\n            const name = {\n                name: this.salutation(this.currentOrder.orderCustomer),\n                company: this.currentOrder.orderCustomer.company,\n            };\n\n            return Object.values(name).filter(item => item !== null).join(' - ').trim();\n        },\n\n        currencyFilter() {\n            return Shopware.Filter.getByName('currency');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.reload();\n            this.renderFormattingAddress();\n        },\n\n        renderFormattingAddress() {\n            this.customSnippetApiService.render(\n                this.billingAddress,\n                this.billingAddress.country?.addressFormat,\n            ).then((res) => {\n                this.formattingAddress = res.rendered;\n            });\n        },\n\n        reload() {\n            this.countryRepository.search(this.countryCriteria()).then((response) => {\n                this.countries = response;\n            });\n        },\n\n        countryCriteria() {\n            const criteria = new Criteria(1, 100);\n            criteria.addSorting(Criteria.sort('name', 'ASC'));\n\n            return criteria;\n        },\n\n        onEditBillingAddress() {\n            if (this.isEditing) {\n                this.addressBeingEdited = this.billingAddress;\n            }\n        },\n\n        onEditDeliveryAddress() {\n            if (this.isEditing) {\n                this.addressBeingEdited = this.delivery.shippingOrderAddress;\n            }\n        },\n\n        onAddressModalSave() {\n            this.addressBeingEdited = null;\n            this.$nextTick(() => {\n                this.emitChange();\n            });\n        },\n\n        onResetOrder() {\n            this.addressBeingEdited = null;\n            this.$nextTick(() => {\n                this.$emit('order-reset');\n            });\n        },\n\n        onAddressModalAddressSelected(address) {\n            const oldAddressId = this.addressBeingEdited.id;\n            this.addressBeingEdited = null;\n            this.$nextTick(() => {\n                return this.orderService.changeOrderAddress(\n                    oldAddressId,\n                    address.id,\n                    {},\n                    ApiService.getVersionHeader(this.currentOrder.versionId),\n                ).then(() => {\n                    this.emitChange();\n                }).catch((error) => {\n                    this.$emit('error', error);\n                });\n            });\n        },\n\n        onAddNewDeliveryAddress() {\n            if (!this.isEditing) {\n                return;\n            }\n\n            this.orderAddressRepository.clone(\n                this.delivery.shippingOrderAddressId,\n                this.versionContext,\n            ).then((response) => {\n                this.delivery.shippingOrderAddressId = response.id;\n                this.emitChange();\n            }).catch((error) => {\n                this.$emit('error', error);\n            });\n        },\n\n        emitChange() {\n            this.$emit('order-change');\n        },\n\n        onAddTag(item) {\n            this.OrderTagRepository.assign(item.id, Shopware.Context.api).then(() => {\n                this.emitChange();\n            });\n        },\n\n        onRemoveTag(item) {\n            this.OrderTagRepository.delete(item.id).then(() => {\n                this.emitChange();\n            });\n        },\n\n        renderTrackingUrl(trackingCode, shippingMethod) {\n            const urlTemplate = shippingMethod ? shippingMethod.trackingUrl : null;\n\n            return urlTemplate ? urlTemplate.replace('%s', encodeURIComponent(trackingCode)) : '';\n        },\n    },\n\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-order-user-card.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"46901412\", content, true, {});"],"sourceRoot":""}