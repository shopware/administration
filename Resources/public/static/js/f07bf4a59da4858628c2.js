(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[24030],{899416:function(){},724030:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return o}}),s(646233);let{Mixin:a}=Shopware,{mapCollectionPropertyErrors:l}=Shopware.Component.getComponentHelper(),r=Shopware.Data.EntityCollection,n=Shopware.Data.Criteria,i=Shopware.Utils;var o={template:'\n{% block sw_seo_url_template_card %}\n<sw-card\n    class="sw-seo-url-template-card"\n    position-identifier="sw-seo-url-template-card"\n    :title="$tc(\'sw-seo-url-template-card.general.titleCard\')"\n    :is-loading="isLoading"\n>\n    <template #toolbar>\n        <sw-sales-channel-switch\n            :label="$tc(\'sw-seo-url-template-card.general.labelSalesChannelSelect\')"\n            @change-sales-channel-id="onSalesChannelChanged"\n        />\n    </template>\n\n    \n    {% block sw_seo_url_template_card_info_box %}\n    <sw-alert\n        :title="$tc(\'sw-seo-url-template-card.general.headlineInfoMessageBoxEmptyProperties\')"\n    >\n        <span>{{ $tc(\'sw-seo-url-template-card.general.textInfoMessageBoxEmptyProperties\') }}</span>\n    </sw-alert>\n    {% endblock %}\n\n    \n    {% block sw_seo_url_template_card_entries %}\n    <template v-if="!isLoading && !salesChannelIsHeadless">\n        <div\n            v-for="(seoUrlTemplate, index) in getTemplatesForSalesChannel(salesChannelId)"\n            :key="index"\n            class="sw-seo-url-template-card__seo-url"\n        >\n            <sw-container\n                columns="3fr 1fr"\n                gap="5px"\n            >\n                \n                {% block sw_seo_url_template_card_entries_input_wrapper %}\n                <sw-inherit-wrapper\n                    v-model:value="seoUrlTemplate.template"\n                    :has-parent="seoUrlTemplate.salesChannelId !== null"\n                    :inherited-value="getPlaceholder(seoUrlTemplate)"\n                    @update:value="onInput(seoUrlTemplate)"\n                >\n\n                    <template #content="props">\n                        \n                        {% block sw_seo_url_template_card_entries_input %}\n                        <sw-text-field\n                            :map-inheritance="props"\n                            :value="props.currentValue"\n                            :disabled="props.isInherited"\n                            :error="seoUrlTemplatesTemplateError[index]"\n                            :name="`sw-field--seo-url-template-${seoUrlTemplate.entity}`"\n                            :label="getLabel(seoUrlTemplate)"\n                            :placeholder="getPlaceholder(seoUrlTemplate)"\n                            @update:value="props.updateCurrentValue"\n                        >\n\n                            <template #suffix>\n                                \n                                {% block sw_seo_url_template_card_entries_input_suffix %}\n                                <sw-loader\n                                    v-if="previewLoadingStates[seoUrlTemplate.id]"\n                                    size="16px"\n                                />\n                                <sw-icon\n                                    v-else-if="errorMessages[seoUrlTemplate.id]"\n                                    v-tooltip="$tc(\'sw-seo-url-template-card.general.tooltipInvalidTemplate\')"\n                                    name="regular-times"\n                                />\n                                <sw-icon\n                                    v-else-if="noEntityError.includes(seoUrlTemplate.id)"\n                                    v-tooltip="$tc(\'sw-seo-url-template-card.general.textUrlNoEntitiesForPreview\', 0, {\n                                        entity: $tc(`global.entities.${seoUrlTemplate.entityName}`, 0)\n                                    })"\n                                    name="regular-exclamation-triangle"\n                                />\n                                <sw-icon\n                                    v-else-if="!props.currentValue"\n                                    v-tooltip="$tc(\'sw-seo-url-template-card.general.textUrlPreviewEmptyTemplate\', 1, {\n                                        entity: $tc(`global.entities.${seoUrlTemplate.entityName}`, 0)\n                                    })"\n                                    name="regular-exclamation-triangle"\n                                />\n                                <sw-icon\n                                    v-else\n                                    v-tooltip="$tc(\'sw-seo-url-template-card.general.tooltipValidTemplate\')"\n                                    name="regular-checkmark"\n                                />\n                                {% endblock %}\n                            </template>\n\n                        </sw-text-field>\n                        {% endblock %}\n                    </template>\n                </sw-inherit-wrapper>\n                {% endblock %}\n                \n                {% block sw_seo_url_template_card_entries_variables %}\n                <sw-single-select\n                    v-if="getVariableOptions(seoUrlTemplate.id) && !noEntityError.includes(seoUrlTemplate.id)"\n                    :value="selectedProperty"\n                    value-property="name"\n                    label-property="name"\n                    show-clearable-button\n                    :options="getVariableOptions(seoUrlTemplate.id)"\n                    :placeholder="$tc(\'sw-seo-url-template-card.general.placeholderSelectVariables\')"\n                    :label="$tc(\'sw-seo-url-template-card.general.labelPossibleValues\')"\n                    @update:value="(propertyName) => onSelectInput(propertyName, seoUrlTemplate)"\n                />\n                {% endblock %}\n            </sw-container>\n            \n            {% block sw_seo_url_template_card_entries_preview %}\n            <div\n                v-if="seoUrlTemplate.template"\n                class="sw-seo-url-template-card__preview"\n            >\n                \n                {% block sw_seo_url_template_card_entries_preview_label %}\n                <span class="sw-seo-url-template-card__preview-label">\n                    {{ $tc(\'sw-seo-url-template-card.general.preview\') }}\n                </span>\n                {% endblock %}\n                \n                {% block sw_seo_url_template_card_entries_preview_item %}\n                <div class="sw-seo-url-template-card__preview-item">\n                    <span v-if="previews[seoUrlTemplate.id] && previews[seoUrlTemplate.id].length > 0">\n                        {{ previews[seoUrlTemplate.id][0].seoPathInfo }}\n                    </span>\n                    <span v-else>\n                        {{ $tc(\'sw-seo-url-template-card.general.textUrlPreviewNotPossible\') }}\n                    </span>\n                    <span v-if="noEntityError.includes(seoUrlTemplate.id)">\n                        {{ $tc(\'sw-seo-url-template-card.general.textUrlNoEntitiesForPreview\', 0, { entity: $tc(`global.entities.${seoUrlTemplate.entityName}`, 0) }) }}\n                    </span>\n                </div>\n                {% endblock %}\n            </div>\n            {% endblock %}\n        </div>\n    </template>\n    <div v-if="salesChannelIsHeadless && !isLoading">\n        {{ $tc(\'sw-seo-url.textSeoUrlsDisallowedForHeadless\') }}\n    </div>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["seoUrlTemplateService","repositoryFactory"],mixins:[a.getByName("notification")],data(){return{defaultSeoUrlTemplates:null,seoUrlTemplates:null,seoUrlPreviewCriteria:{},isLoading:!0,debouncedPreviews:{},previewLoadingStates:{},errorMessages:{},previews:{},noEntityError:[],variableStores:{},seoUrlTemplateRepository:{},salesChannelId:null,salesChannels:[],selectedProperty:null}},computed:{...l("seoUrlTemplates",["template"]),salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},salesChannelIsHeadless(){let e=this.salesChannels.find(e=>e.id===this.salesChannelId);return!!e&&"f183ee5650cf4bdb8a774337575067a6"===e.typeId}},created(){this.createdComponent()},methods:{createdComponent(){this.seoUrlTemplateRepository=this.repositoryFactory.create("seo_url_template"),this.seoUrlTemplates=new r(this.seoUrlTemplateRepository.route,this.seoUrlTemplateRepository.schema.entity,Shopware.Context.api,new n(1,25)),this.defaultSeoUrlTemplates=new r(this.seoUrlTemplateRepository.route,this.seoUrlTemplateRepository.schema.entity,Shopware.Context.api,new n(1,25)),this.seoUrlPreviewCriteria["frontend.navigation.page"]=new n(1,25).addFilter(n.not("and",[n.equals("path",null)])),this.fetchSalesChannels(),this.fetchSeoUrlTemplates()},fetchSeoUrlTemplates(e=null){let t=new n(1,25);e||(e=null),t.addFilter(n.equals("salesChannelId",e)),this.isLoading=!0,this.seoUrlTemplateRepository.search(t).then(t=>{t.forEach(e=>{this.seoUrlTemplates.has(e.id)||this.seoUrlTemplates.add(e)}),e?this.createSeoUrlTemplatesFromDefaultRoutes(e):t.forEach(e=>{this.defaultSeoUrlTemplates.has(e)||this.defaultSeoUrlTemplates.add(e)}),this.isLoading=!1,this.seoUrlTemplates.forEach(e=>{this.fetchSeoUrlPreview(e),this.variableStores.hasOwnProperty(e.id)||this.seoUrlTemplateService.getContext(e).then(t=>{this.createVariableOptions(e.id,t)})})})},createSeoUrlTemplatesFromDefaultRoutes(e){this.defaultSeoUrlTemplates.forEach(t=>{if(!this.seoUrlTemplates.some(s=>s.routeName===t.routeName&&s.salesChannelId===e)){let s=this.seoUrlTemplateRepository.create();s.routeName=t.routeName,s.salesChannelId=e,s.entityName=t.entityName,s.template=null,this.seoUrlTemplates.add(s)}})},createVariableOptions(e,t){let s=[];Object.entries(t).forEach(([e,t])=>{s.push({name:`${e}`}),t instanceof Object&&Object.keys(t).forEach(t=>{s.push({name:`${e}.${t}`})})}),this.isCompatEnabled("INSTANCE_SET")?this.$set(this.variableStores,e,s):this.variableStores.id=s},getVariableOptions(e){return!!this.variableStores.hasOwnProperty(e)&&this.variableStores[e]},getLabel(e){let t=e.routeName.replace(/\./g,"-");return this.$tc(`sw-seo-url-template-card.routeNames.${t}`)?this.$tc(`sw-seo-url-template-card.routeNames.${t}`):e.routeName},getPlaceholder(e){return e.salesChannelId?Object.values(this.defaultSeoUrlTemplates).find(t=>t.routeName===e.routeName).template:null},onClickSave(){if(Object.keys(this.errorMessages).some(e=>null!==this.errorMessages[e])){this.createSaveErrorNotification();return}this.seoUrlTemplates.forEach(e=>{null===e.template&&this.seoUrlTemplates.remove(e.id)}),this.seoUrlTemplateRepository.sync(this.seoUrlTemplates).then(()=>{this.seoUrlTemplates=new r(this.seoUrlTemplateRepository.route,this.seoUrlTemplateRepository.schema.entity,Shopware.Context.api,new n(1,25)),this.fetchSeoUrlTemplates(this.salesChannelId),this.createSaveSuccessNotification()}).catch(()=>{this.createSaveErrorNotification()})},createSaveErrorNotification(){let e=this.$tc("global.default.error"),t=this.$tc("sw-seo-url-template-card.general.messageSaveError");this.createNotificationError({title:e,message:t})},createSaveSuccessNotification(){let e=this.$tc("global.default.success"),t=this.$tc("sw-seo-url-template-card.general.messageSaveSuccess");this.createNotificationSuccess({title:e,message:t})},onSelectInput(e,t){if(null===e)return;let s=t.template?`${t.template}/`:"";t.template=`${s}{{ ${e} }}`,this.fetchSeoUrlPreview(t)},onInput(e){this.debouncedPreviewSeoUrlTemplate(e)},debouncedPreviewSeoUrlTemplate(e){this.debouncedPreviews[e.id]?this.setErrorMessagesForEntity(e):this.debouncedPreviews[e.id]=i.debounce(()=>{e.template&&""!==e.template?this.fetchSeoUrlPreview(e):this.setErrorMessagesForEntity(e)},400),this.debouncedPreviews[e.id]()},setErrorMessagesForEntity(e,t=null){this.isCompatEnabled("INSTANCE_SET")?this.$set(this.errorMessages,e.id,t):this.errorMessages[e.id]=t},fetchSeoUrlPreview(e){this.isCompatEnabled("INSTANCE_SET")?this.$set(this.previewLoadingStates,e.id,!0):this.previewLoadingStates[e.id]=!0;let t=this.seoUrlPreviewCriteria[e.routeName]?this.seoUrlPreviewCriteria[e.routeName]:new n(1,25);e.criteria=t.parse(),this.seoUrlTemplateService.preview(e).then(t=>{this.noEntityError=this.noEntityError.filter(t=>t!==e.id),this.isCompatEnabled("INSTANCE_SET")?this.$set(this.previews,e.id,t):this.previews[e.id]=t,null===t?this.noEntityError.push(e.id):this.setErrorMessagesForEntity(e),this.previewLoadingStates[e.id]=!1}).catch(t=>{this.setErrorMessagesForEntity(e,t.response.data.errors[0].detail),this.isCompatEnabled("INSTANCE_SET")?this.$set(this.previews,e.id,[]):this.previews[e.id]=[],this.previewLoadingStates[e.id]=!1})},fetchSalesChannels(){this.salesChannelRepository.search(new n(1,25)).then(e=>{this.salesChannels=e})},onSalesChannelChanged(e){this.salesChannelId=e,this.fetchSeoUrlTemplates(e)},getTemplatesForSalesChannel(e){return this.seoUrlTemplates.filter(t=>t.salesChannelId===e)}}}},646233:function(e,t,s){var a=s(899416);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),s(745346).Z("02ffb641",a,!0,{})}}]);