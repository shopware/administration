{"version":3,"sources":["webpack:///./src/module/sw-settings-country/component/sw-settings-country-general/sw-settings-country-general.scss","webpack:///./src/module/sw-settings-country/component/sw-settings-country-general/index.js","webpack:///./src/module/sw-settings-country/component/sw-settings-country-general/sw-settings-country-general.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Component","Mixin","mapPropertyErrors","getComponentHelper","Criteria","Data","template","inject","mixins","getByName","props","country","type","Object","required","isLoading","Boolean","userConfig","userConfigValues","data","showCurrencyModal","currencyDependsValue","currencies","menuOptions","taxFreeType","countryId","baseCurrencyId","computed","_objectSpread","countryRepository","this","repositoryFactory","create","currencyRepository","created","createdComponent","methods","$route","params","id","loadCurrencies","_this","search","Context","api","then","openCustomerTaxModal","onToggleCurrencyModal","openCompanyTaxModal","createDataModal","clearMenuOptions","changeBaseItem","item","includes","currencyId","keys","length","pushDataFromUserConfig","addCheckedHamburgerMenu","addDisabledBaseCurrencyCheckBox","sortCurrencyCheckBox","forEach","checkBox","checked","disabled","_this2","_toConsumableArray","find","value","_this3","sort","a","b","_this4","userCurrencyDependsValue","amount","calculateInheritedPrice","enabled","push","basePrice","getPriceByCurrency","currency","getCurrencyById","currencyBaseItem","factor","saveCountryCurrencyDependent","$emit"],"mappings":"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","file":"static/js/c30b917ea1e6c9f17aae.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-country-general.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"332022b3\", content, true, {});","/**\n * @package buyers-experience\n */\nimport template from './sw-settings-country-general.html.twig';\nimport './sw-settings-country-general.scss';\n\nconst { Component, Mixin } = Shopware;\nconst { mapPropertyErrors } = Component.getComponentHelper();\nconst { Criteria } = Shopware.Data;\n\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('placeholder'),\n        Mixin.getByName('discard-detail-page-changes')('country'),\n    ],\n\n    props: {\n        country: {\n            type: Object,\n            required: true,\n        },\n        isLoading: {\n            type: Boolean,\n            required: true,\n        },\n        userConfig: {\n            type: Object,\n            required: true,\n        },\n        userConfigValues: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            showCurrencyModal: false,\n            currencyDependsValue: [],\n            currencies: [],\n            menuOptions: [],\n            taxFreeType: '',\n            countryId: '',\n            baseCurrencyId: '',\n        };\n    },\n\n    computed: {\n        countryRepository() {\n            return this.repositoryFactory.create('country');\n        },\n\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n\n        ...mapPropertyErrors('country', ['name']),\n\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (!this.$route.params.id) {\n                return;\n            }\n            this.countryId = this.$route.params.id;\n            this.loadCurrencies();\n        },\n\n        loadCurrencies() {\n            return this.currencyRepository.search(new Criteria(1, 25), Shopware.Context.api).then(currencies => {\n                this.currencies = currencies;\n            });\n        },\n\n        openCustomerTaxModal() {\n            this.onToggleCurrencyModal('customerTax');\n        },\n\n        openCompanyTaxModal() {\n            this.onToggleCurrencyModal('companyTax');\n        },\n\n        onToggleCurrencyModal(taxFreeType) {\n            this.taxFreeType = taxFreeType;\n            this.showCurrencyModal = !this.showCurrencyModal;\n            if (this.showCurrencyModal) {\n                this.createDataModal();\n                return;\n            }\n            this.clearMenuOptions();\n        },\n\n        changeBaseItem(item) {\n            if (!['customerTax', 'companyTax'].includes(this.taxFreeType)) {\n                return;\n            }\n            this.country[this.taxFreeType] = item;\n        },\n\n        createDataModal() {\n            if (this.taxFreeType === 'companyTax' || this.taxFreeType === 'customerTax') {\n                this.currencyDependsValue = [this.country[this.taxFreeType]];\n            }\n\n            this.baseCurrencyId = this.currencyDependsValue[0].currencyId;\n\n            if (Object.keys(this.userConfigValues).length > 0) {\n                this.pushDataFromUserConfig();\n            }\n\n            this.addCheckedHamburgerMenu();\n            this.addDisabledBaseCurrencyCheckBox();\n            this.sortCurrencyCheckBox();\n        },\n\n        clearMenuOptions() {\n            this.menuOptions.forEach(checkBox => {\n                delete checkBox.checked;\n                delete checkBox.disabled;\n            });\n        },\n\n        addCheckedHamburgerMenu() {\n            this.menuOptions = [...this.currencies];\n\n            this.menuOptions.forEach((checkBox) => {\n                const checked = this.currencyDependsValue.find((value) => {\n                    return checkBox.id === value.currencyId;\n                });\n\n                checkBox.checked = !!checked;\n            });\n        },\n\n        addDisabledBaseCurrencyCheckBox() {\n            this.menuOptions.forEach((checkBox) => {\n                checkBox.disabled = checkBox.id === this.baseCurrencyId;\n            });\n        },\n\n        sortCurrencyCheckBox() {\n            this.menuOptions.sort((a, b) => b.checked - a.checked || b.disabled - a.disabled);\n        },\n\n        pushDataFromUserConfig() {\n            if (!this.userConfigValues[this.taxFreeType]) {\n                return;\n            }\n            this.userConfigValues[this.taxFreeType].forEach((currencyId) => {\n                const userCurrencyDependsValue = {};\n                userCurrencyDependsValue.amount = this.calculateInheritedPrice(currencyId);\n                userCurrencyDependsValue.currencyId = currencyId;\n                userCurrencyDependsValue.enabled = false;\n                const existedValue = this.currencyDependsValue.find(value => {\n                    return value.currencyId === currencyId;\n                });\n\n                if (!existedValue) {\n                    this.currencyDependsValue.push(userCurrencyDependsValue);\n                }\n            });\n        },\n\n        calculateInheritedPrice(currencyId) {\n            const basePrice = this.currencyDependsValue.find((value) => {\n                return value.enabled === true;\n            });\n            if (!basePrice) {\n                return 0;\n            }\n            return this.getPriceByCurrency(basePrice, currencyId);\n        },\n\n        getPriceByCurrency(basePrice, currencyId) {\n            const currency = this.getCurrencyById(currencyId);\n            const currencyBaseItem = this.getCurrencyById(basePrice.currencyId);\n\n            if (!currencyBaseItem.factor || !currency.factor) {\n                return 0;\n            }\n\n            return (basePrice.amount / currencyBaseItem.factor) * currency.factor;\n        },\n\n        getCurrencyById(currencyId) {\n            const currency = this.currencies.find((value) => {\n                return value.id === currencyId;\n            });\n\n            return currency || {};\n        },\n\n        saveCountryCurrencyDependent() {\n            this.$emit('modal-save');\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_country_general %}\\n<div>\\n    \\n    {% block sw_settings_country_general_card %}\\n    <sw-card\\n        position-identifier=\\\"sw-settings-country-detail-general\\\"\\n        :title=\\\"$tc('sw-settings-country.detail.titleCard')\\\"\\n        :is-loading=\\\"isLoading\\\"\\n    >\\n        <sw-container\\n            columns=\\\"repeat(auto-fit, minmax(250px, 1fr))\\\"\\n            gap=\\\"0px 30px\\\"\\n        >\\n\\n            \\n            {% block sw_settings_country_general_content_field_name %}\\n            <sw-text-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"country.name\\\"\\n                name=\\\"sw-field--country-name\\\"\\n                {% else %}\\n                v-model=\\\"country.name\\\"\\n                {% endif %}\\n                required\\n                :disabled=\\\"!acl.can('country.editor')\\\"\\n                :label=\\\"$tc('sw-settings-country.detail.labelName')\\\"\\n                :placeholder=\\\"placeholder(country, 'name', $tc('sw-settings-country.detail.placeholderName'))\\\"\\n                :error=\\\"countryNameError\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_country_general_content_field_position %}\\n            <sw-number-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"country.position\\\"\\n                name=\\\"sw-field--country-position\\\"\\n                {% else %}\\n                v-model=\\\"country.position\\\"\\n                {% endif %}\\n                number-type=\\\"int\\\"\\n                :disabled=\\\"!acl.can('country.editor')\\\"\\n                :label=\\\"$tc('sw-settings-country.detail.labelPosition')\\\"\\n                :placeholder=\\\"placeholder(country, 'position', $tc('sw-settings-country.detail.placeholderPosition'))\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_country_general_content_field_iso %}\\n            <sw-text-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"country.iso\\\"\\n                name=\\\"sw-field--country-iso\\\"\\n                {% else %}\\n                v-model=\\\"country.iso\\\"\\n                {% endif %}\\n                :disabled=\\\"!acl.can('country.editor')\\\"\\n                :label=\\\"$tc('sw-settings-country.detail.labelIso')\\\"\\n                :placeholder=\\\"placeholder(country, 'iso', $tc('sw-settings-country.detail.placeholderIso'))\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_country_general_content_field_iso3 %}\\n            <sw-text-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"country.iso3\\\"\\n                name=\\\"sw-field--country-iso3\\\"\\n                {% else %}\\n                v-model=\\\"country.iso3\\\"\\n                {% endif %}\\n                :disabled=\\\"!acl.can('country.editor')\\\"\\n                :label=\\\"$tc('sw-settings-country.detail.labelIso3')\\\"\\n                :placeholder=\\\"placeholder(country, 'iso3', $tc('sw-settings-country.detail.placeholderIso3'))\\\"\\n            />\\n            {% endblock %}\\n        </sw-container>\\n    </sw-card>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_country_general_options_card %}\\n    <sw-card\\n        position-identifier=\\\"sw-settings-country-general\\\"\\n        :title=\\\"$tc('sw-settings-country.detail.titleOptions')\\\"\\n        :is-loading=\\\"isLoading\\\"\\n    >\\n        <sw-container class=\\\"sw-settings-country-general__options-container\\\">\\n\\n            \\n            {% block sw_settings_country_general_content_field_active %}\\n            <sw-switch-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"country.active\\\"\\n                name=\\\"sw-field--country-active\\\"\\n                {% else %}\\n                v-model=\\\"country.active\\\"\\n                {% endif %}\\n                class=\\\"sw-settings-country-general__option-items\\\"\\n                bordered\\n                :disabled=\\\"!acl.can('country.editor')\\\"\\n                :label=\\\"$tc('sw-settings-country.detail.labelActive')\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_country_general_content_field_shipping_available %}\\n            <sw-switch-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"country.shippingAvailable\\\"\\n                name=\\\"sw-field--country-shippingAvailable\\\"\\n                {% else %}\\n                v-model=\\\"country.shippingAvailable\\\"\\n                {% endif %}\\n                class=\\\"sw-settings-country-general__option-items\\\"\\n                bordered\\n                :disabled=\\\"!acl.can('country.editor')\\\"\\n                :label=\\\"$tc('sw-settings-country.detail.labelShippingAvailable')\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_country_general_content_field_tax_free %}\\n            <sw-switch-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"country.customerTax.enabled\\\"\\n                name=\\\"sw-field--country-customerTax-enabled\\\"\\n                {% else %}\\n                v-model=\\\"country.customerTax.enabled\\\"\\n                {% endif %}\\n                class=\\\"sw-settings-country-general__option-items switch-field-customer-tax-free\\\"\\n                bordered\\n                :disabled=\\\"!acl.can('country.editor')\\\"\\n                :label=\\\"$tc('sw-settings-country.detail.labelTaxFree')\\\"\\n            />\\n            {% endblock %}\\n\\n            <sw-container\\n                v-if=\\\"country.customerTax.enabled\\\"\\n                class=\\\"sw-settings-country-general-customer-tax\\\"\\n            >\\n\\n                \\n                {% block sw_settings_country_general_content_field_tax_free_from_customer %}\\n                \\n                {% block sw_settings_country_general_content_field_tax_free_from_customer_value %}\\n                <sw-number-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"country.customerTax.amount\\\"\\n                    name=\\\"sw-field--country-customerTax-amount\\\"\\n                    {% else %}\\n                    v-model=\\\"country.customerTax.amount\\\"\\n                    {% endif %}\\n                    class=\\\"sw-settings-country-general__input-amount customer-tax-amount\\\"\\n                    :min=\\\"0\\\"\\n                    :label=\\\"$tc('sw-settings-country.detail.taxFreeFrom')\\\"\\n                    :help-text=\\\"$tc('sw-settings-country.detail.taxFreeFromHelpText')\\\"\\n                    :disabled=\\\"!acl.can('country.editor')\\\"\\n                >\\n                    <template #suffix>\\n                        <sw-entity-single-select\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"country.customerTax.currencyId\\\"\\n                            name=\\\"sw-field--country-customerTax-currencyId\\\"\\n                            {% else %}\\n                            v-model=\\\"country.customerTax.currencyId\\\"\\n                            {% endif %}\\n                            class=\\\"sw-settings-country-general__customer-select-currency sw-settings-country-general__select\\\"\\n                            entity=\\\"currency\\\"\\n                            bordered\\n                            show-clearable-button\\n                            :disabled=\\\"!acl.can('country.editor')\\\"\\n                        />\\n                    </template>\\n                </sw-number-field>\\n                {% endblock %}\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_country_general_content_show_tax_free_currency_dependent_values %}\\n                <sw-container\\n                    columns=\\\"1fr\\\"\\n                    justify=\\\"end\\\"\\n                >\\n                    <a\\n                        class=\\\"sw-settings-country-general__currency-dependent-modal\\\"\\n                        role=\\\"button\\\"\\n                        tabindex=\\\"0\\\"\\n                        @click=\\\"openCustomerTaxModal\\\"\\n                        @keydown.enter=\\\"openCustomerTaxModal\\\"\\n                    >\\n                        {{ $tc('sw-settings-country.detail.currencyDependentValues') }}\\n                        <sw-icon\\n                            name=\\\"regular-long-arrow-right\\\"\\n                            small\\n                        />\\n                    </a>\\n                </sw-container>\\n                {% endblock %}\\n\\n            </sw-container>\\n\\n            \\n            {% block sw_settings_country_general_content_field_tax_free_companies %}\\n            <sw-switch-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"country.companyTax.enabled\\\"\\n                name=\\\"sw-field--country-companyTax-enabled\\\"\\n                {% else %}\\n                v-model=\\\"country.companyTax.enabled\\\"\\n                {% endif %}\\n                class=\\\"sw-settings-country-general__option-items switch-field-company-tax-free\\\"\\n                bordered\\n                :disabled=\\\"!acl.can('country.editor')\\\"\\n                :label=\\\"$tc('sw-settings-country.detail.labelCompanyTaxFree')\\\"\\n                :help-text=\\\"$tc('sw-settings-country.detail.helpTextCompanyTaxFree')\\\"\\n            />\\n            {% endblock %}\\n\\n            <sw-container\\n                v-if=\\\"country.companyTax.enabled\\\"\\n                class=\\\"sw-settings-country-general-company-tax\\\"\\n            >\\n\\n                \\n                {% block sw_settings_country_general_content_field_tax_free_from_companies %}\\n                \\n                {% block sw_settings_country_general_content_field_tax_free_from_companies_value %}\\n                <sw-number-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"country.companyTax.amount\\\"\\n                    name=\\\"sw-field--country-companyTax-amount\\\"\\n                    {% else %}\\n                    v-model=\\\"country.companyTax.amount\\\"\\n                    {% endif %}\\n                    class=\\\"sw-settings-country-general__input-amount\\\"\\n                    :min=\\\"0\\\"\\n                    :label=\\\"$tc('sw-settings-country.detail.taxFreeFrom')\\\"\\n                    :help-text=\\\"$tc('sw-settings-country.detail.taxFreeFromHelpText')\\\"\\n                    :disabled=\\\"!acl.can('country.editor')\\\"\\n                >\\n                    <template #suffix>\\n                        <sw-entity-single-select\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"country.companyTax.currencyId\\\"\\n                            name=\\\"sw-field--country-companyTax-currencyId\\\"\\n                            {% else %}\\n                            v-model=\\\"country.companyTax.currencyId\\\"\\n                            {% endif %}\\n                            class=\\\"sw-settings-country-general__company-select-currency sw-settings-country-general__select\\\"\\n                            entity=\\\"currency\\\"\\n                            show-clearable-button\\n                            :disabled=\\\"!acl.can('country.editor')\\\"\\n                        />\\n                    </template>\\n                </sw-number-field>\\n                {% endblock %}\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_country_general_content_show_company_tax_free_currency_dependent_values %}\\n                <sw-container\\n                    columns=\\\"1fr\\\"\\n                    justify=\\\"end\\\"\\n                >\\n                    <a\\n                        class=\\\"sw-settings-country-general__currency-dependent-modal\\\"\\n                        role=\\\"button\\\"\\n                        tabindex=\\\"0\\\"\\n                        @click=\\\"openCompanyTaxModal\\\"\\n                        @keydown.enter=\\\"openCompanyTaxModal\\\"\\n                    >\\n                        {{ $tc('sw-settings-country.detail.currencyDependentValues') }}\\n                        <sw-icon\\n                            name=\\\"regular-long-arrow-right\\\"\\n                            small\\n                        />\\n                    </a>\\n                </sw-container>\\n                {% endblock %}\\n            </sw-container>\\n\\n            \\n            {% block sw_settings_country_general_content_show_currency_dependent_modal %}\\n            <sw-settings-country-currency-dependent-modal\\n                v-if=\\\"showCurrencyModal\\\"\\n                :currency-depends-value=\\\"currencyDependsValue\\\"\\n                :country-id=\\\"countryId\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :menu-options=\\\"menuOptions\\\"\\n                :user-config=\\\"userConfig\\\"\\n                :user-config-values=\\\"userConfigValues\\\"\\n                :tax-free-type=\\\"taxFreeType\\\"\\n                @modal-close=\\\"onToggleCurrencyModal\\\"\\n                @modal-save=\\\"saveCountryCurrencyDependent\\\"\\n                @base-item-change=\\\"changeBaseItem\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_country_general_content_field_check_vat_id_format %}\\n            <sw-switch-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"country.checkVatIdPattern\\\"\\n                name=\\\"sw-field--country-checkVatIdPattern\\\"\\n                {% else %}\\n                v-model=\\\"country.checkVatIdPattern\\\"\\n                {% endif %}\\n                class=\\\"sw-settings-country-general__field-check-vatid-format sw-settings-country-general__option-items\\\"\\n                bordered\\n                :disabled=\\\"!acl.can('country.editor')\\\"\\n                :label=\\\"$tc('sw-settings-country.detail.labelCheckVatIdFormat')\\\"\\n                :help-text=\\\"$tc('sw-settings-country.detail.helpTextCheckVatIdFormat')\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_country_general_content_field_vat_id_required %}\\n            <sw-switch-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"country.vatIdRequired\\\"\\n                name=\\\"sw-field--country-vatIdRequired\\\"\\n                {% else %}\\n                v-model=\\\"country.vatIdRequired\\\"\\n                {% endif %}\\n                class=\\\"sw-settings-country-general__vat-id-required sw-settings-country-general__option-items\\\"\\n                bordered\\n                :disabled=\\\"!acl.can('country.editor')\\\"\\n                :label=\\\"$tc('sw-settings-country.detail.labelVatIdRequired')\\\"\\n                :help-text=\\\"$tc('sw-settings-country.detail.helpTextLabelVatIdRequired')\\\"\\n            />\\n            {% endblock %}\\n        </sw-container>\\n    </sw-card>\\n    {% endblock %}\\n\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}