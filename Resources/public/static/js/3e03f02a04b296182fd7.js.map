{"version":3,"sources":["webpack:///./src/module/sw-import-export/view/sw-import-export-view-profiles/sw-import-export-view-profiles.scss","webpack:///./src/module/sw-import-export/view/sw-import-export-view-profiles/index.js","webpack:///./src/module/sw-import-export/view/sw-import-export-view-profiles/sw-import-export-view-profiles.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","Criteria","Data","template","inject","mixins","getByName","data","isLoading","selectedProfile","profiles","searchTerm","sortBy","sortDirection","showProfileEditModal","showNewProfileWizard","metaInfo","title","this","$createTitle","computed","profileRepository","repositoryFactory","create","profileCriteria","criteria","setTerm","addAssociation","addSorting","sort","profilesColumns","property","dataIndex","label","allowResize","primary","isNotSystemLanguage","Context","api","systemLanguageId","languageId","createTooltip","showDelay","message","$tc","disabled","created","createdComponent","methods","loadProfiles","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","search","sent","stop","reloadContent","onSearch","onAddNewProfile","profile","fileType","mapping","config","createEntities","updateEntities","type","translated","delimiter","enclosure","onEditProfile","id","_this2","_callee2","_profile$config","_profile$config2","_context2","get","Array","isArray","length","$set","undefined","onDuplicateProfile","item","_this3","behavior","cloneChildren","overwrites","concat","systemDefault","clone","then","setIds","_profile$config3","_profile$config4","catch","createNotificationError","onDownloadTemplate","_this4","_callee3","_context3","t0","window","importExport","getTemplateFileDownloadUrl","t1","abrupt","open","call","onDeleteProfile","$refs","listing","showDelete","closeSelectedProfile","saveSelectedProfile","_this5","save","onCloseNewProfileWizard","createNotificationSuccess","finally","getTypeLabel","isSystemDefault"],"mappings":"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","file":"static/js/3e03f02a04b296182fd7.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-import-export-view-profiles.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3aa58523\", content, true, {});","/**\n * @package services-settings\n */\nimport template from './sw-import-export-view-profiles.html.twig';\nimport './sw-import-export-view-profiles.scss';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @private\n */\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'importExport', 'feature'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            selectedProfile: null,\n            profiles: null,\n            searchTerm: null,\n            sortBy: 'label',\n            sortDirection: 'ASC',\n            showProfileEditModal: false,\n            showNewProfileWizard: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        profileRepository() {\n            return this.repositoryFactory.create('import_export_profile');\n        },\n\n        profileCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.setTerm(this.searchTerm);\n            criteria.addAssociation('importExportLogs');\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection));\n\n            return criteria;\n        },\n\n        profilesColumns() {\n            return [\n                {\n                    property: 'label',\n                    dataIndex: 'label',\n                    label: 'sw-import-export.profile.nameColumn',\n                    allowResize: true,\n                    primary: true,\n                },\n                {\n                    property: 'systemDefault',\n                    dataIndex: 'systemDefault',\n                    label: 'sw-import-export.profile.typeColumn',\n                    allowResize: true,\n                },\n            ];\n        },\n\n        isNotSystemLanguage() {\n            return Shopware.Context.api.systemLanguageId !== Shopware.Context.api.languageId;\n        },\n\n        createTooltip() {\n            return {\n                showDelay: 300,\n                message: this.$tc('sw-import-export.profile.addNewProfileTooltipLanguage'),\n                disabled: !this.isNotSystemLanguage,\n            };\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.loadProfiles();\n        },\n\n        async loadProfiles() {\n            this.isLoading = true;\n\n            this.profiles = await this.profileRepository.search(this.profileCriteria);\n\n            this.isLoading = false;\n        },\n\n        reloadContent() {\n            this.loadProfiles();\n        },\n\n        onSearch() {\n            this.loadProfiles();\n        },\n\n        onAddNewProfile() {\n            const profile = this.profileRepository.create();\n            profile.fileType = 'text/csv';\n            profile.mapping = [];\n            profile.config = {};\n            profile.config.createEntities = true;\n            profile.config.updateEntities = true;\n            profile.type = 'import-export';\n            profile.translated = {};\n            profile.delimiter = ';';\n            profile.enclosure = '\"';\n\n            this.selectedProfile = null;\n            this.selectedProfile = profile;\n            this.showNewProfileWizard = true;\n        },\n\n        async onEditProfile(id) {\n            const profile = await this.profileRepository.get(id);\n\n            if (Array.isArray(profile.config) && profile.config.length <= 0) {\n                this.$set(profile, 'config', {});\n            }\n\n            if (profile.config?.createEntities === undefined) {\n                profile.config.createEntities = true;\n            }\n            if (profile.config?.updateEntities === undefined) {\n                profile.config.updateEntities = true;\n            }\n\n            this.selectedProfile = profile;\n            this.showProfileEditModal = true;\n        },\n\n        onDuplicateProfile(item) {\n            const behavior = {\n                cloneChildren: false,\n                overwrites: {\n                    label: `${this.$tc('sw-import-export.profile.copyOfLabel')} ${item.label || item.translated.label}`,\n                    systemDefault: false,\n                },\n            };\n\n            return this.profileRepository.clone(item.id, Shopware.Context.api, behavior).then((clone) => {\n                const criteria = new Criteria(1, 25);\n                criteria.setIds([clone.id]);\n                return this.profileRepository.search(criteria);\n            }).then((profiles) => {\n                const profile = profiles[0];\n                if (profile.config?.createEntities === undefined) {\n                    profile.config.createEntities = true;\n                }\n                if (profile.config?.updateEntities === undefined) {\n                    profile.config.updateEntities = true;\n                }\n\n                this.selectedProfile = profile;\n                this.showProfileEditModal = true;\n                return this.loadProfiles(); // refresh the list in any case (even if the modal is canceled)\n                // because the duplicate already exists.\n            }).catch(() => {\n                this.createNotificationError({\n                    message: this.$tc('global.notification.unspecifiedSaveErrorMessage'),\n                });\n            });\n        },\n\n        async onDownloadTemplate(profile) {\n            return window.open(await this.importExport.getTemplateFileDownloadUrl(profile.id), '_blank');\n        },\n\n        onDeleteProfile(id) {\n            this.$refs.listing.showDelete(id);\n        },\n\n        closeSelectedProfile() {\n            this.showProfileEditModal = false;\n            this.selectedProfile = null;\n        },\n\n        saveSelectedProfile() {\n            this.isLoading = true;\n            return this.profileRepository.save(this.selectedProfile, Shopware.Context.api).then(() => {\n                this.showProfileEditModal = false;\n                this.selectedProfile = null;\n                this.onCloseNewProfileWizard();\n                this.createNotificationSuccess({\n                    message: this.$tc('sw-import-export.profile.messageSaveSuccess', 0),\n                });\n                return this.loadProfiles();\n            }).catch(() => {\n                this.createNotificationError({\n                    message: this.$tc('sw-import-export.profile.messageSaveError', 0),\n                });\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        getTypeLabel(isSystemDefault) {\n            return isSystemDefault ?\n                this.$tc('sw-import-export.profile.defaultTypeLabel') :\n                this.$tc('sw-import-export.profile.customTypeLabel');\n        },\n\n        onCloseNewProfileWizard() {\n            this.showNewProfileWizard = false;\n            this.selectedProfile = null;\n        },\n    },\n};\n","export default \"\\n{% block sw_import_export_view_profile %}\\n<div class=\\\"sw-import-export-view-profiles\\\">\\n    \\n    {% block sw_import_export_view_profile_profiles %}\\n    <sw-card\\n        :title=\\\"$tc('sw-import-export.page.profileTab')\\\"\\n        class=\\\"sw-import-export-view-profiles__grid-card\\\"\\n        position-identifier=\\\"sw-import-export-view-profiles\\\"\\n    >\\n\\n        \\n        {% block sw_import_export_view_profile_profiles_toolbar %}\\n        <div class=\\\"sw-import-export-view-profiles__toolbar\\\">\\n            \\n            {% block sw_import_export_view_profile_profiles_toolbar_search_field %}\\n            <sw-simple-search-field\\n                v-model=\\\"searchTerm\\\"\\n                class=\\\"sw-import-export-view-profiles__search\\\"\\n                size=\\\"small\\\"\\n                variant=\\\"form\\\"\\n                @search-term-change=\\\"onSearch\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_import_export_view_profile_profiles_toolbar_add_new_profile %}\\n            <sw-button\\n                v-tooltip=\\\"createTooltip\\\"\\n                class=\\\"sw-import-export-view-profiles__create-action\\\"\\n                variant=\\\"ghost\\\"\\n                :disabled=\\\"isLoading || isNotSystemLanguage\\\"\\n                size=\\\"small\\\"\\n                @click=\\\"onAddNewProfile\\\"\\n            >\\n                {{ $tc('sw-import-export.profile.addNewProfileLabel') }}\\n            </sw-button>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_import_export_view_profile_profiles_listing %}\\n        <template #grid>\\n            <sw-entity-listing\\n                ref=\\\"listing\\\"\\n                class=\\\"sw-import-export-view-profiles__listing\\\"\\n                :repository=\\\"profileRepository\\\"\\n                :items=\\\"profiles\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :columns=\\\"profilesColumns\\\"\\n                :sort-by=\\\"sortBy\\\"\\n                :sort-direction=\\\"sortDirection\\\"\\n                :show-settings=\\\"false\\\"\\n                :show-selection=\\\"false\\\"\\n                :allow-column-edit=\\\"false\\\"\\n            >\\n\\n                \\n                {% block sw_import_export_view_profile_profiles_listing_column_label %}\\n                <template #column-label=\\\"{ item }\\\">\\n                    <a\\n                        href=\\\"#\\\"\\n                        @click.prevent=\\\"onEditProfile(item.id)\\\"\\n                    >\\n                        {{ item.translated.label || item.label }}\\n                    </a>\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_import_export_view_profile_profiles_listing_column_system_default %}\\n                <template #column-systemDefault=\\\"{ item }\\\">\\n                    {{ getTypeLabel(item.systemDefault) }}\\n                </template>\\n                {% endblock %}\\n\\n                <template #actions=\\\"{ item }\\\">\\n                    \\n                    {% block sw_import_export_view_profile_profiles_listing_edit %}\\n                    <sw-context-menu-item\\n                        class=\\\"sw-import-export-view-profiles__listing-open-action\\\"\\n                        @click=\\\"onEditProfile(item.id)\\\"\\n                    >\\n                        {{ $tc('sw-import-export.profile.openLabel') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_import_export_view_profile_profiles_listing_duplicate %}\\n                    <sw-context-menu-item\\n                        class=\\\"sw-import-export-view-profiles__listing-duplicate-action\\\"\\n                        @click=\\\"onDuplicateProfile(item)\\\"\\n                    >\\n                        {{ $tc('sw-import-export.profile.duplicateLabel') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_import_export_view_profile_profiles_listing_download_template %}\\n                    <sw-context-menu-item\\n                        class=\\\"sw-import-export-view-profiles__listing-download-template-action\\\"\\n                        @click=\\\"onDownloadTemplate(item)\\\"\\n                    >\\n                        {{ $tc('sw-import-export.profile.downloadTemplateLabel') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_import_export_view_profile_profiles_listing_delete %}\\n                    <sw-context-menu-item\\n                        class=\\\"sw-import-export-view-profiles__listing-delete-action\\\"\\n                        variant=\\\"danger\\\"\\n                        :disabled=\\\"item.systemDefault\\\"\\n                        @click=\\\"onDeleteProfile(item.id)\\\"\\n                    >\\n                        {{ $tc('sw-import-export.profile.deleteLabel') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n                </template>\\n\\n            </sw-entity-listing>\\n        </template>\\n        {% endblock %}\\n    </sw-card>\\n    {% endblock %}\\n\\n    \\n    {% block sw_import_export_view_profile_modal %}\\n    <sw-import-export-edit-profile-modal\\n        :show=\\\"showProfileEditModal\\\"\\n        :profile=\\\"selectedProfile\\\"\\n        @profile-save=\\\"saveSelectedProfile\\\"\\n        @profile-close=\\\"closeSelectedProfile\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_import_export_view_new_profile_wizard %}\\n    <sw-import-export-new-profile-wizard\\n        v-if=\\\"showNewProfileWizard\\\"\\n        :profile=\\\"selectedProfile\\\"\\n        @profile-save=\\\"saveSelectedProfile\\\"\\n        @close=\\\"onCloseNewProfileWizard\\\"\\n    />\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}