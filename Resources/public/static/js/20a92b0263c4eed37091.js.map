{"version":3,"sources":["webpack:///./src/module/sw-order/component/sw-order-product-select/sw-order-product-select.scss","webpack:///./src/module/sw-order/component/sw-order-product-select/index.js","webpack:///./src/module/sw-order/component/sw-order-product-select/sw-order-product-select.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Service","Shopware","Criteria","Data","template","props","item","type","Object","required","salesChannelId","String","taxStatus","data","product","computed","productRepository","create","lineItemTypes","LineItemType","lineItemPriceTypes","PriceType","isShownProductSelect","this","_isNew","PRODUCT","isShownItemLabelInput","contextWithInheritance","_objectSpread","Context","api","inheritance","productCriteria","criteria","addAssociation","addFilter","multi","equals","methods","onItemChanged","newProductId","_this","get","then","newProduct","identifier","id","label","name","priceDefinition","price","gross","net","QUANTITY","taxRules","taxRate","tax","unitPrice","totalPrice","quantity","precision"],"mappings":"+HAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,ypBCD5C,IAAQQ,EAAYC,SAAZD,QACAE,EAAaD,SAASE,KAAtBD,SAGO,WACXE,SCbW,0hFDeXC,MAAO,CACHC,KAAM,CACFC,KAAMC,OACNC,UAAU,GAGdC,eAAgB,CACZH,KAAMI,OACNF,UAAU,EACVf,QAAS,IAGbkB,UAAW,CACPL,KAAMI,OACNF,UAAU,EACVf,QAAS,KAIjBmB,KAAI,WACA,MAAO,CACHC,QAAS,OAIjBC,SAAU,CACNC,kBAAiB,WACb,OAAOhB,EAAQ,qBAAqBiB,OAAO,YAG/CC,cAAa,WACT,OAAOC,KAGXC,mBAAkB,WACd,OAAOC,KAGXC,qBAAoB,WAChB,OAAOC,KAAKjB,KAAKkB,QAAUD,KAAKjB,KAAKC,OAASgB,KAAKL,cAAcO,SAGrEC,sBAAqB,WACjB,OAAOH,KAAKjB,KAAKC,OAASgB,KAAKL,cAAcO,SAGjDE,uBAAsB,WAClB,OAAAC,IAAA,GAAY3B,SAAS4B,QAAQC,KAAG,IAAEC,aAAa,KAGnDC,gBAAe,WACX,IAAMC,EAAW,IAAI/B,EAAS,EAAG,IAkBjC,OAhBA+B,EAASC,eAAe,iBAExBD,EAASE,UACLjC,EAASkC,MACL,KACA,CACIlC,EAASmC,OAAO,qBAAsB,GACtCnC,EAASmC,OAAO,qBAAsB,SAKlDJ,EAASE,UACLjC,EAASmC,OAAO,sCAAuCd,KAAKb,iBAGzDuB,IAIfK,QAAS,CACLC,cAAa,SAACC,GAAe,IAADC,EAAA,KACxBlB,KAAKP,kBAAkB0B,IAAIF,EAAcjB,KAAKI,wBAAwBgB,MAAK,SAACC,GACxEH,EAAKnC,KAAKuC,WAAaD,EAAWE,GAClCL,EAAKnC,KAAKyC,MAAQH,EAAWI,KAC7BP,EAAKnC,KAAK2C,gBAAgBC,MAA2B,UAAnBT,EAAK7B,UACjCgC,EAAWM,MAAM,GAAGC,MACpBP,EAAWM,MAAM,GAAGE,IAC1BX,EAAKnC,KAAK2C,gBAAgB1C,KAAOkC,EAAKrB,mBAAmBiC,SACzDZ,EAAKnC,KAAK4C,MAAMI,SAAS,GAAGC,QAAUX,EAAWY,IAAID,QACrDd,EAAKnC,KAAK4C,MAAMO,UAAY,MAC5BhB,EAAKnC,KAAK4C,MAAMQ,WAAa,MAC7BjB,EAAKnC,KAAK4C,MAAMS,SAAW,EAC3BlB,EAAKnC,KAAKmD,UAAY,MACtBhB,EAAKnC,KAAKoD,WAAa,MACvBjB,EAAKnC,KAAKsD,UAAY,EACtBnB,EAAKnC,KAAK2C,gBAAgBK,SAAS,GAAGC,QAAUX,EAAWY,IAAID","file":"static/js/20a92b0263c4eed37091.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-order-product-select.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6babc8dd\", content, true, {});","import template from './sw-order-product-select.html.twig';\nimport { LineItemType, PriceType } from '../../order.types';\nimport './sw-order-product-select.scss';\n\n/**\n * @package checkout\n */\n\nconst { Service } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    props: {\n        item: {\n            type: Object,\n            required: true,\n        },\n\n        salesChannelId: {\n            type: String,\n            required: true,\n            default: '',\n        },\n\n        taxStatus: {\n            type: String,\n            required: true,\n            default: '',\n        },\n    },\n\n    data() {\n        return {\n            product: null,\n        };\n    },\n\n    computed: {\n        productRepository() {\n            return Service('repositoryFactory').create('product');\n        },\n\n        lineItemTypes() {\n            return LineItemType;\n        },\n\n        lineItemPriceTypes() {\n            return PriceType;\n        },\n\n        isShownProductSelect() {\n            return this.item._isNew && this.item.type === this.lineItemTypes.PRODUCT;\n        },\n\n        isShownItemLabelInput() {\n            return this.item.type !== this.lineItemTypes.PRODUCT;\n        },\n\n        contextWithInheritance() {\n            return { ...Shopware.Context.api, inheritance: true };\n        },\n\n        productCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addAssociation('options.group');\n\n            criteria.addFilter(\n                Criteria.multi(\n                    'OR',\n                    [\n                        Criteria.equals('product.childCount', 0),\n                        Criteria.equals('product.childCount', null),\n                    ],\n                ),\n            );\n\n            criteria.addFilter(\n                Criteria.equals('product.visibilities.salesChannelId', this.salesChannelId),\n            );\n\n            return criteria;\n        },\n    },\n\n    methods: {\n        onItemChanged(newProductId) {\n            this.productRepository.get(newProductId, this.contextWithInheritance).then((newProduct) => {\n                this.item.identifier = newProduct.id;\n                this.item.label = newProduct.name;\n                this.item.priceDefinition.price = this.taxStatus === 'gross'\n                    ? newProduct.price[0].gross\n                    : newProduct.price[0].net;\n                this.item.priceDefinition.type = this.lineItemPriceTypes.QUANTITY;\n                this.item.price.taxRules[0].taxRate = newProduct.tax.taxRate;\n                this.item.price.unitPrice = '...';\n                this.item.price.totalPrice = '...';\n                this.item.price.quantity = 1;\n                this.item.unitPrice = '...';\n                this.item.totalPrice = '...';\n                this.item.precision = 2;\n                this.item.priceDefinition.taxRules[0].taxRate = newProduct.tax.taxRate;\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_order_product_select %}\\n<span class=\\\"sw-order-product-select\\\">\\n    \\n    {% block sw_order_product_select_blank_item %}\\n    <sw-text-field\\n        v-if=\\\"isShownItemLabelInput\\\"\\n        {% if VUE3 %}\\n        v-model:value=\\\"item.label\\\"\\n        v-bind=\\\"$attrs\\\"\\n        {% else %}\\n        v-model=\\\"item.label\\\"\\n        {% endif %}\\n        size=\\\"small\\\"\\n        :placeholder=\\\"$tc('sw-order.detailBase.columnProductName')\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_product_select_existing_product %}\\n    \\n    <sw-entity-single-select\\n        v-else-if=\\\"isShownProductSelect\\\"\\n        {% if VUE3 %}\\n        v-model:value=\\\"product\\\"\\n        {% else %}\\n        v-model=\\\"product\\\"\\n        {% endif %}\\n        class=\\\"sw-order-product-select__single-select\\\"\\n        :context=\\\"contextWithInheritance\\\"\\n        :criteria=\\\"productCriteria\\\"\\n        entity=\\\"product\\\"\\n        size=\\\"small\\\"\\n        show-clearable-button\\n        {% if VUE3 %}\\n        @update:value=\\\"onItemChanged\\\"\\n        {% else %}\\n        @change=\\\"onItemChanged\\\"\\n        {% endif %}\\n    >\\n        <template #selection-label-property=\\\"{ item }\\\">\\n            <slot\\n                name=\\\"selection-label-property\\\"\\n                v-bind=\\\"{ item }\\\"\\n            >\\n                \\n                {% block sw_order_product_select_results_variant_info %}\\n                <sw-product-variant-info :variations=\\\"item.variation\\\">\\n                    {{ item.translated.name || item.name }}\\n                </sw-product-variant-info>\\n                {% endblock %}\\n            </slot>\\n        </template>\\n\\n        <template #result-item=\\\"{ item, index }\\\">\\n            <slot\\n                name=\\\"result-item\\\"\\n                v-bind=\\\"{ item, index }\\\"\\n            >\\n                <sw-select-result\\n                    v-bind=\\\"{ item, index }\\\"\\n                >\\n                    \\n                    {% block sw_order_product_select_results_list_result_label %}\\n                    <sw-product-variant-info :variations=\\\"item.variation\\\">\\n                        {{ item.translated.name || item.name }}\\n                    </sw-product-variant-info>\\n                    {% endblock %}\\n                </sw-select-result>\\n            </slot>\\n        </template>\\n    </sw-entity-single-select>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_product_show_product %}\\n    <template v-else>\\n        <span class=\\\"sw-order-product-select__label\\\">\\n            {{ item.label }}\\n        </span>\\n    </template>\\n    {% endblock %}\\n</span>\\n{% endblock %}\\n\";"],"sourceRoot":""}