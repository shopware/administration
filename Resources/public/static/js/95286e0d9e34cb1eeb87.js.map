{"version":3,"sources":["webpack:///./src/module/sw-cms/elements/product-box/config/index.js","webpack:///./src/module/sw-cms/elements/product-box/config/sw-cms-el-config-product-box.html.twig","webpack:///./src/module/sw-cms/elements/product-box/config/sw-cms-el-config-product-box.scss"],"names":["Mixin","Shopware","template","inject","mixins","getByName","computed","productRepository","this","repositoryFactory","create","productSelectContext","context","_objectSpread","Context","api","inheritance","productCriteria","criteria","Criteria","addAssociation","created","createdComponent","methods","initElementConfig","onProductChange","productId","_this","get","then","product","element","config","value","$set","data","$emit","content","__esModule","default","module","i","locals","exports","add"],"mappings":"2YAIA,IAAQA,EAAUC,SAAVD,MAMO,WACXE,SCXW,+vJDaXC,OAAQ,CAAC,qBAETC,OAAQ,CACJJ,EAAMK,UAAU,gBAGpBC,SAAU,CACNC,kBAAiB,WACb,OAAOC,KAAKC,kBAAkBC,OAAO,YAGzCC,qBAAoB,WAChB,IAAMC,E,iWAAOC,CAAA,GAAQZ,SAASa,QAAQC,KAGtC,OAFAH,EAAQI,aAAc,EAEfJ,GAGXK,gBAAe,WACX,IAAMC,EAAW,IAAIC,IAAS,EAAG,IAGjC,OAFAD,EAASE,eAAe,iBAEjBF,IAIfG,QAAO,WACHb,KAAKc,oBAGTC,QAAS,CACLD,iBAAgB,WACZd,KAAKgB,kBAAkB,gBAG3BC,gBAAe,SAACC,GAAY,IAADC,EAAA,KACvB,GAAKD,EAIE,CACH,IAAMR,EAAW,IAAIC,IAAS,EAAG,IACjCD,EAASE,eAAe,SACxBF,EAASE,eAAe,iBAExBZ,KAAKD,kBAAkBqB,IAAIF,EAAWlB,KAAKG,qBAAsBO,GAAUW,MAAK,SAACC,GAC7EH,EAAKI,QAAQC,OAAOF,QAAQG,MAAQP,EACpCC,EAAKO,KAAKP,EAAKI,QAAQI,KAAM,YAAaT,GAC1CC,EAAKO,KAAKP,EAAKI,QAAQI,KAAM,UAAWL,WAX5CtB,KAAKuB,QAAQC,OAAOF,QAAQG,MAAQ,KACpCzB,KAAK0B,KAAK1B,KAAKuB,QAAQI,KAAM,YAAa,MAC1C3B,KAAK0B,KAAK1B,KAAKuB,QAAQI,KAAM,UAAW,MAa5C3B,KAAK4B,MAAM,iBAAkB5B,KAAKuB,a,4CE9D9C,IAAIM,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAA2EL,SAC5E,WAAYF,GAAS,EAAM","file":"static/js/95286e0d9e34cb1eeb87.js","sourcesContent":["import Criteria from 'src/core/data/criteria.data';\nimport template from './sw-cms-el-config-product-box.html.twig';\nimport './sw-cms-el-config-product-box.scss';\n\nconst { Mixin } = Shopware;\n\n/**\n * @private\n * @package buyers-experience\n */\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('cms-element'),\n    ],\n\n    computed: {\n        productRepository() {\n            return this.repositoryFactory.create('product');\n        },\n\n        productSelectContext() {\n            const context = { ...Shopware.Context.api };\n            context.inheritance = true;\n\n            return context;\n        },\n\n        productCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addAssociation('options.group');\n\n            return criteria;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.initElementConfig('product-box');\n        },\n\n        onProductChange(productId) {\n            if (!productId) {\n                this.element.config.product.value = null;\n                this.$set(this.element.data, 'productId', null);\n                this.$set(this.element.data, 'product', null);\n            } else {\n                const criteria = new Criteria(1, 25);\n                criteria.addAssociation('cover');\n                criteria.addAssociation('options.group');\n\n                this.productRepository.get(productId, this.productSelectContext, criteria).then((product) => {\n                    this.element.config.product.value = productId;\n                    this.$set(this.element.data, 'productId', productId);\n                    this.$set(this.element.data, 'product', product);\n                });\n            }\n\n            this.$emit('element-update', this.element);\n        },\n    },\n};\n","export default \"\\n{% block sw_cms_element_product_box_config %}\\n<div class=\\\"sw-cms-el-config-product-box\\\">\\n    \\n    {% block sw_cms_element_product_box_config_product_select %}\\n    <sw-entity-single-select\\n        ref=\\\"cmsProductSelection\\\"\\n        {% if VUE3 %}\\n        v-model:value=\\\"element.config.product.value\\\"\\n        {% else %}\\n        v-model=\\\"element.config.product.value\\\"\\n        {% endif %}\\n        :label=\\\"$tc('sw-cms.elements.productBox.config.label.selection')\\\"\\n        :placeholder=\\\"$tc('sw-cms.elements.productBox.config.placeholder.selection')\\\"\\n        entity=\\\"product\\\"\\n        :criteria=\\\"productCriteria\\\"\\n        :context=\\\"productSelectContext\\\"\\n        show-clearable-button\\n        {% if VUE3 %}\\n        @update:value=\\\"onProductChange\\\"\\n        {% else %}\\n        @change=\\\"onProductChange\\\"\\n        {% endif %}\\n    >\\n        <template #selection-label-property=\\\"{ item }\\\">\\n            <sw-product-variant-info\\n                :variations=\\\"item.variation\\\"\\n            >\\n                {{ item.translated.name || item.name }}\\n            </sw-product-variant-info>\\n        </template>\\n        <template #result-item=\\\"{ item, index }\\\">\\n            <slot\\n                name=\\\"result-item\\\"\\n                v-bind=\\\"{ item, index }\\\"\\n            >\\n                <sw-select-result\\n                    v-bind=\\\"{ item, index }\\\"\\n                >\\n                    \\n                    {% block sw_entity_single_select_base_results_list_result_label %}\\n                    <span class=\\\"sw-select-result__result-item-text\\\">\\n                        <sw-product-variant-info :variations=\\\"item.variation\\\">\\n                            {{ item.translated.name || item.name }}\\n                        </sw-product-variant-info>\\n                    </span>\\n                    {% endblock %}\\n                </sw-select-result>\\n            </slot>\\n        </template>\\n    </sw-entity-single-select>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_element_product_box_config_layout_select %}\\n    <sw-select-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"element.config.boxLayout.value\\\"\\n        {% else %}\\n        v-model=\\\"element.config.boxLayout.value\\\"\\n        {% endif %}\\n        :label=\\\"$tc('sw-cms.elements.productBox.config.label.layoutType')\\\"\\n    >\\n        \\n        {% block sw_cms_element_product_box_config_layout_select_options %}\\n        <option value=\\\"standard\\\">\\n            {{ $tc('sw-cms.elements.productBox.config.label.layoutTypeStandard') }}\\n        </option>\\n        <option value=\\\"image\\\">\\n            {{ $tc('sw-cms.elements.productBox.config.label.layoutTypeImage') }}\\n        </option>\\n        <option value=\\\"minimal\\\">\\n            {{ $tc('sw-cms.elements.productBox.config.label.layoutTypeMinimal') }}\\n        </option>\\n        {% endblock %}\\n    </sw-select-field>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_element_product_box_config_displaymode_select %}\\n    <sw-select-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"element.config.displayMode.value\\\"\\n        {% else %}\\n        v-model=\\\"element.config.displayMode.value\\\"\\n        {% endif %}\\n        :label=\\\"$tc('sw-cms.elements.general.config.label.displayMode')\\\"\\n    >\\n        \\n        {% block sw_cms_element_product_box_config_displaymode_select_options %}\\n        <option value=\\\"standard\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.displayModeStandard') }}\\n        </option>\\n        <option value=\\\"cover\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.displayModeCover') }}\\n        </option>\\n        <option value=\\\"contain\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.displayModeContain') }}\\n        </option>\\n        {% endblock %}\\n    </sw-select-field>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_element_product_box_config_settings_vertical_align %}\\n    <sw-select-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"element.config.verticalAlign.value\\\"\\n        {% else %}\\n        v-model=\\\"element.config.verticalAlign.value\\\"\\n        {% endif %}\\n        :label=\\\"$tc('sw-cms.elements.general.config.label.verticalAlign')\\\"\\n        :placeholder=\\\"$tc('sw-cms.elements.general.config.label.verticalAlign')\\\"\\n    >\\n        \\n        {% block sw_cms_element_product_box_config_settings_vertical_align_options %}\\n        <option value=\\\"flex-start\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.verticalAlignTop') }}\\n        </option>\\n        <option value=\\\"center\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.verticalAlignCenter') }}\\n        </option>\\n        <option value=\\\"flex-end\\\">\\n            {{ $tc('sw-cms.elements.general.config.label.verticalAlignBottom') }}\\n        </option>\\n        {% endblock %}\\n    </sw-select-field>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-cms-el-config-product-box.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"37976f41\", content, true, {});"],"sourceRoot":""}