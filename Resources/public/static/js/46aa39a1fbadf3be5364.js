"use strict";(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[56392],{356392:function(e,t,n){n.r(t),n.d(t,{default:function(){return r}});let{Mixin:s}=Shopware,{EntityCollection:a,Criteria:i}=Shopware.Data;var r={template:'\n{% block sw_settings_search_index %}\n<sw-page class="sw-settings-search">\n    \n    {% block sw_settings_search_smart_bar_header %}\n    <template #smart-bar-header>\n        <h2>\n            \n            {% block sw_settings_search_smart_bar_header_title_text %}\n            {{ $tc(\'sw-settings.index.title\') }}\n            <sw-icon\n                name="regular-chevron-right-xs"\n                small\n            />\n            {{ $tc(\'sw-settings-search.general.mainMenuItemGeneral\') }}\n            {% endblock %}\n        </h2>\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_search_language_switch %}\n    <template #language-switch>\n        <sw-language-switch @on-change="onChangeLanguage" />\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_search_smart_bar_actions %}\n    <template #smart-bar-actions>\n        \n        {% block sw_settings_search_smart_bar_actions_save %}\n        <sw-button-process\n            v-tooltip.bottom="tooltipSave"\n            class="sw-settings-search__button-save"\n            variant="primary"\n            :disabled="!allowSave"\n            :is-loading="isLoading"\n            :process-success="isSaveSuccessful"\n            @update:process-success="saveFinish"\n            @click.prevent="onSaveSearchSettings"\n        >\n            {{ $tc(\'global.default.save\') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_search_content %}\n    <template #content>\n        <sw-card-view>\n            \n            {% block sw_settings_search_tabs_header %}\n            <sw-tabs position-identifier="sw-settings-search-header">\n                \n                {% block sw_setting_search_tabs_general %}\n                <sw-tabs-item\n                    v-bind="$props"\n                    class="sw-settings-search__general-tab"\n                    :route="{ name: \'sw.settings.search.index.general\' }"\n                    @click="onTabChange"\n                >\n                    {{ $tc(\'sw-settings-search.page.generalTab\') }}\n                </sw-tabs-item>\n                {% endblock %}\n\n                \n                {% block sw_setting_search_tabs_live_search %}\n                <sw-tabs-item\n                    v-bind="$props"\n                    class="sw-settings-search__live-search-tab"\n                    :route="{ name: \'sw.settings.search.index.liveSearch\' }"\n                >\n                    {{ $tc(\'sw-settings-search.page.liveSearchTab\') }}\n                </sw-tabs-item>\n                {% endblock %}\n\n                \n                {% block sw_setting_search_tabs_after %}{% endblock %}\n            </sw-tabs>\n            {% endblock %}\n\n            \n            {% block sw_settings_search_tabs_content %}\n            <template v-if="isLoading">\n                <sw-skeleton />\n                <sw-skeleton />\n            </template>\n\n            {# v-show is used here as underlying components influence the loading state and v-if would destroy this behaviour #}\n            <router-view\n                v-show="!isLoading"\n                v-slot="{ Component }"\n            >\n                <component\n                    :is="Component"\n                    :is-loading="isLoading"\n                    :product-search-configs="productSearchConfigs"\n                    :current-sales-channel-id="currentSalesChannelId"\n                    :search-terms="searchTerms"\n                    :search-results="searchResults"\n                    @edit-change="onEditChanged"\n                    @sales-channel-change="onSalesChannelChanged"\n                    @live-search-results-change="onLiveSearchResultsChanged"\n                    @excluded-search-terms-load="getProductSearchConfigs"\n                />\n            </router-view>\n            {% endblock %}\n        </sw-card-view>\n\n        \n        {% block sw_settings_search_discard_model %}\n        <sw-confirm-modal\n            v-if="isDisplayingLeavePageWarning"\n            class="sw_settings_search_leave_modal"\n            type="yesno"\n            :text="$tc(\'sw-settings-search.textLeaveConfirm\')"\n            @confirm="onConfirmLeave"\n            @close="onCloseLeaveModal"\n            @cancel="onCancelLeaveModal"\n        />\n        {% endblock %}\n\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory","acl"],mixins:[s.getByName("notification")],shortcuts:{"SYSTEMKEY+S":{active(){return this.allowSave},method:"onSaveSearchSettings"},ESCAPE:"onCancel"},data:()=>({productSearchConfigs:{andLogic:!0,minSearchLength:2},isLoading:!1,currentSalesChannelId:null,searchTerms:"",searchResults:null,defaultConfig:null,isSaveSuccessful:!1,nextRoute:null,isDisplayingLeavePageWarning:!1,leaveConfirmation:!1,isEditing:!1}),computed:{productSearchRepository(){return this.repositoryFactory.create("product_search_config")},productSearchFieldRepository(){return this.repositoryFactory.create("product_search_config_field")},productSearchConfigsCriteria(){let e=new i(1,25);return e.addAssociation("configFields"),e.addFilter(i.equals("languageId",Shopware.Context.api.languageId)),e},productDefaultConfigsCriteria(){let e=new i(1,25);return e.addAssociation("configFields"),e.addFilter(i.equals("languageId",Shopware.Context.api.systemLanguageId)),e},allowSave(){return this.acl.can("product_search_config.editor")||this.acl.can("product_search_config.creator")},tooltipSave(){if(!this.allowSave)return{message:this.$tc("sw-privileges.tooltip.warning"),disabled:this.allowSave,showOnDisabledElements:!0};let e=this.$device.getSystemKey();return{message:`${e} + S`,appearance:"light"}}},created(){this.createdComponent()},beforeRouteUpdate(e,t,n){this.unsavedDataLeaveHandler(e,t,n)},beforeRouteLeave(e,t,n){this.unsavedDataLeaveHandler(e,t,n)},methods:{createdComponent(){this.getDefaultSearchConfig(),this.getProductSearchConfigs()},getProductSearchConfigs(){this.isLoading=!0,this.productSearchRepository.search(this.productSearchConfigsCriteria).then(e=>{e.total?this.productSearchConfigs=e.first():this.onSaveDefaultSearchConfig()}).catch(e=>{this.createNotificationError({message:e.message})}).finally(()=>{this.isLoading=!1})},getDefaultSearchConfig(){this.productSearchRepository.search(this.productDefaultConfigsCriteria).then(e=>{this.defaultConfig=e.first()}).catch(e=>{this.createNotificationError({message:e.message})})},createDefaultSearchConfig(){let e=this.productSearchRepository.create();return e.andLogic=this.defaultConfig.andLogic,e.minSearchLength=this.defaultConfig.minSearchLength,e.excludedTerms=[],e.languageId=Shopware.Context.api.languageId,e},createConfigFields(){if(!this.defaultConfig||!this.defaultConfig.configFields.length)return null;let e=new a(this.productSearchFieldRepository.route,this.productSearchFieldRepository.entityName,Shopware.Context.api);return this.defaultConfig.configFields.forEach(t=>{let n=this.productSearchFieldRepository.create();n.field=t.field,n.ranking=t.ranking,n.searchable=t.searchable,n.tokenize=t.tokenize,n.customFieldId=null,n.searchConfigId=this.productSearchConfigs.id,e.add(n)}),e},onSaveDefaultSearchConfig(){this.productSearchConfigs=this.createDefaultSearchConfig(),this.productSearchConfigs.configFields=this.createConfigFields(),this.productSearchRepository.save(this.productSearchConfigs).then(()=>{this.getProductSearchConfigs()}).catch(()=>{this.createNotificationError({message:this.$tc("sw-settings-search.notification.saveError")})})},onChangeLanguage(){this.getDefaultSearchConfig(),this.getProductSearchConfigs()},onTabChange(){this.getProductSearchConfigs()},onSaveSearchSettings(){this.isLoading=!0,this.productSearchRepository.save(this.productSearchConfigs).then(()=>{this.createNotificationSuccess({message:this.$tc("sw-settings-search.notification.saveSuccess")}),this.getProductSearchConfigs(),this.isSaveSuccessful=!0}).catch(()=>{this.createNotificationError({message:this.$tc("sw-settings-search.notification.saveError")})}).finally(()=>{this.isLoading=!1,this.isEditing=!1})},saveFinish(){this.isSaveSuccessful=!1},fetchSalesChannels(){this.salesChannelRepository.search(new i(1,25)).then(e=>{this.salesChannels=e})},unsavedDataLeaveHandler(e,t,n){if(this.leaveConfirmation){this.leaveConfirmation=!1,n();return}this.isEditing?(this.isDisplayingLeavePageWarning=!0,this.nextRoute=e,n(!1)):n()},onSalesChannelChanged(e){this.currentSalesChannelId=e},onLiveSearchResultsChanged({searchTerms:e,searchResults:t}){this.searchTerms=e,this.searchResults=t},onEditChanged(e){this.isEditing=e},onConfirmLeave(){this.leaveConfirmation=!0,this.isDisplayingLeavePageWarning=!1,this.isEditing=!1,this.$nextTick(()=>{this.$router.push({name:this.nextRoute.name,params:this.nextRoute.params})})},onCloseLeaveModal(){this.isDisplayingLeavePageWarning=!1},onCancelLeaveModal(){this.isDisplayingLeavePageWarning=!1}}}}}]);