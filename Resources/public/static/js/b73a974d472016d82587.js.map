{"version":3,"sources":["webpack:///./src/module/sw-order/component/sw-order-create-options/index.ts","webpack:///./src/module/sw-order/component/sw-order-create-options/sw-order-create-options.html.twig","webpack:///./src/module/sw-order/component/sw-order-create-options/sw-order-create-options.scss"],"names":["_Shopware","Shopware","Component","State","Criteria","Data","wrapComponentConfig","template","props","promotionCodes","type","Array","required","disabledAutoPromotion","Boolean","context","Object","data","shippingCost","isSameAsBillingAddress","promotionCodeTags","computed","salesChannelId","_State$get$context$sa","_State$get$context","_State$get$context$sa2","get","salesChannel","id","salesChannelCriteria","criteria","this","addFilter","equals","shippingMethodCriteria","paymentMethodCriteria","customer","currency","cart","cartDelivery","_this$cart","deliveries","watch","immediate","handler","value","_value$shippingCosts$","_value$shippingCosts","shippingCosts","totalPrice","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","updateCartContext","stop","updateSameAsBillingAddressToggle","_this2","_callee2","_context2","shippingAddressId","billingAddressId","created","createdComponent","methods","_toConsumableArray","validatePromotions","searchTerm","promotionCode","trim","length","find","code","onToggleAutoPromotion","$emit","changePromotionCodes","_this3","_callee3","_context3","abrupt","updateOrderContext","loadCart","dispatch","contextToken","token","onChangeShippingCost","content","__esModule","default","module","i","locals","exports","add"],"mappings":"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","file":"static/js/b73a974d472016d82587.js","sourcesContent":["import type { Entity } from '@shopware-ag/admin-extension-sdk/es/data/_internals/Entity';\nimport type { PropType } from 'vue';\nimport type CriteriaType from 'src/core/data/criteria.data';\n\nimport template from './sw-order-create-options.html.twig';\nimport './sw-order-create-options.scss';\n\nimport type {\n    ContextSwitchParameters,\n    Cart,\n    CartDelivery,\n} from '../../order.types';\n\n/**\n * @package checkout\n */\n\nconst { Component, State } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default Component.wrapComponentConfig({\n    template,\n\n    props: {\n        promotionCodes: {\n            type: Array as PropType<string[]>,\n            required: true,\n        },\n\n        disabledAutoPromotion: {\n            type: Boolean,\n            required: true,\n        },\n\n        context: {\n            type: Object as PropType<ContextSwitchParameters>,\n            required: true,\n        },\n    },\n\n    data(): {\n        shippingCost: number,\n        promotionCodeTags: string[],\n        isSameAsBillingAddress: boolean,\n        } {\n        return {\n            shippingCost: 0,\n            isSameAsBillingAddress: false,\n            promotionCodeTags: [],\n        };\n    },\n\n    computed: {\n        salesChannelId(): string {\n            return State.get('swOrder').context?.salesChannel?.id ?? '';\n        },\n\n        salesChannelCriteria(): CriteriaType {\n            const criteria = new Criteria();\n\n            if (this.salesChannelId) {\n                criteria.addFilter(Criteria.equals('salesChannels.id', this.salesChannelId));\n            }\n\n            return criteria;\n        },\n\n        shippingMethodCriteria(): CriteriaType {\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equals('active', 1));\n\n            if (this.salesChannelId) {\n                criteria.addFilter(Criteria.equals('salesChannels.id', this.salesChannelId));\n            }\n\n            return criteria;\n        },\n\n        paymentMethodCriteria(): CriteriaType {\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equals('active', 1));\n\n            if (this.salesChannelId) {\n                criteria.addFilter(Criteria.equals('salesChannels.id', this.salesChannelId));\n            }\n\n            return criteria;\n        },\n\n        customer(): Entity<'customer'> | null {\n            return State.get('swOrder').customer;\n        },\n\n        currency(): Entity<'currency'> {\n            return State.get('swOrder').context.currency;\n        },\n\n        cart(): Cart {\n            return State.get('swOrder').cart;\n        },\n\n        cartDelivery(): CartDelivery | null {\n            return this.cart?.deliveries[0] as CartDelivery | null;\n        },\n    },\n\n    watch: {\n        cartDelivery: {\n            immediate: true,\n            handler(value): void {\n                // eslint-disable-next-line max-len\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n                this.shippingCost = value?.shippingCosts?.totalPrice ?? 0;\n            },\n        },\n\n        'context.currencyId': {\n            async handler(): Promise<void> {\n                // await this.getCurrency();\n                await this.updateCartContext();\n            },\n        },\n\n        'context.shippingAddressId': {\n            handler(): void {\n                this.updateSameAsBillingAddressToggle();\n            },\n        },\n\n        'context.billingAddressId': {\n            handler(): void {\n                this.updateSameAsBillingAddressToggle();\n            },\n        },\n\n        'context.shippingMethodId': {\n            async handler(): Promise<void> {\n                await this.updateCartContext();\n            },\n        },\n\n        isSameAsBillingAddress(value): void {\n            if (!value) {\n                return;\n            }\n\n            this.context.shippingAddressId = this.context.billingAddressId;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        updateSameAsBillingAddressToggle(): void {\n            this.isSameAsBillingAddress = this.context.shippingAddressId === this.context.billingAddressId;\n        },\n\n        createdComponent(): void {\n            this.promotionCodeTags = [...this.promotionCodes];\n            this.isSameAsBillingAddress = this.context.shippingAddressId === this.context.billingAddressId;\n        },\n\n        validatePromotions(searchTerm: string): boolean {\n            const promotionCode = searchTerm.trim();\n\n            if (promotionCode.length <= 0) {\n                return false;\n            }\n\n            const isExist = this.promotionCodes.find((code: string) => code === promotionCode);\n            return !isExist;\n        },\n\n        onToggleAutoPromotion(value: boolean): void {\n            this.$emit('auto-promotion-toggle', value);\n        },\n\n        changePromotionCodes(value: string[]): void {\n            this.$emit('promotions-change', value);\n        },\n\n        async updateCartContext(): Promise<void> {\n            if (!this.salesChannelId) {\n                return;\n            }\n\n            await this.updateOrderContext();\n            await this.loadCart();\n        },\n\n        updateOrderContext(): Promise<void> {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return State.dispatch('swOrder/updateOrderContext', {\n                context: this.context,\n                salesChannelId: this.salesChannelId,\n                contextToken: this.cart.token,\n            });\n        },\n\n        loadCart(): Promise<void> {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return State.dispatch('swOrder/getCart', {\n                salesChannelId: this.salesChannelId,\n                contextToken: this.cart.token,\n            });\n        },\n\n        onChangeShippingCost(value: number): void {\n            this.$emit('shipping-cost-change', value);\n        },\n    },\n});\n","export default \"\\n{% block sw_order_create_options %}\\n<div class=\\\"sw-order-create-options\\\">\\n    \\n    {% block sw_order_create_options_container %}\\n    \\n    {% block sw_order_create_options_order %}\\n    \\n    {% block sw_order_create_options_order_headline %}\\n    <h3 class=\\\"sw-order-create-options__headline\\\">\\n        {{ $tc('sw-order.initialModal.options.textHeadlineOrder') }}\\n    </h3>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_create_options_order_switch_disable_auto_promotion %}\\n    <sw-switch-field\\n        class=\\\"sw-order-create-options__disable-auto-promotion\\\"\\n        :value=\\\"disabledAutoPromotion\\\"\\n        :label=\\\"$tc('sw-order.createBase.labelToggleAutomaticPromotions')\\\"\\n        {% if VUE3 %}\\n        @update:value=\\\"onToggleAutoPromotion\\\"\\n        {% else %}\\n        @change=\\\"onToggleAutoPromotion\\\"\\n        {% endif %}\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_create_options_order_field_container %}\\n    <sw-container\\n        class=\\\"sw-order-create-options__order-container\\\"\\n        gap=\\\"0px 32px\\\"\\n        columns=\\\"1fr 1fr\\\"\\n    >\\n        \\n        {% block sw_order_create_options_order_language %}\\n        <sw-entity-single-select\\n            {% if VUE3 %}\\n            v-model:value=\\\"context.languageId\\\"\\n            {% else %}\\n            v-model=\\\"context.languageId\\\"\\n            {% endif %}\\n            entity=\\\"language\\\"\\n            class=\\\"sw-order-create-options__order-language\\\"\\n            :criteria=\\\"salesChannelCriteria\\\"\\n            :label=\\\"$tc('sw-order.createBase.labelOrderLanguage')\\\"\\n            :placeholder=\\\"$tc('sw-order.createBase.placeholderOrderLanguage')\\\"\\n            show-clearable-button\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_create_options_promotions %}\\n        <sw-multi-tag-select\\n            class=\\\"sw-order-create-options__promotion-code\\\"\\n            :value=\\\"promotionCodes\\\"\\n            :label=\\\"$tc('sw-order.createBase.labelPromotions')\\\"\\n            :validate=\\\"validatePromotions\\\"\\n            {% if VUE3 %}\\n            @update:value=\\\"changePromotionCodes\\\"\\n            {% else %}\\n            @change=\\\"changePromotionCodes\\\"\\n            {% endif %}\\n        >\\n            <template #message-add-data>\\n                <span>{{ $tc('sw-order.initialModal.options.placeholderAddPromotion') }}</span>\\n            </template>\\n            <template #message-enter-valid-data>\\n                <span>{{ $tc('sw-order.createBase.placeholderAddPromotion') }}</span>\\n            </template>\\n        </sw-multi-tag-select>\\n        {% endblock %}\\n    </sw-container>\\n    {% endblock %}\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_create_options_payment %}\\n    \\n    {% block sw_order_create_options_payment_headline %}\\n    <h3>{{ $tc('sw-order.initialModal.options.textHeadlinePayment') }}</h3>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_create_options_payment_container %}\\n    <sw-container\\n        class=\\\"sw-order-create-options__payment-container\\\"\\n        gap=\\\"0px 32px\\\"\\n        columns=\\\"1fr 1fr\\\"\\n    >\\n        \\n        {% block sw_order_create_options_payment_method %}\\n        <sw-entity-single-select\\n            {% if VUE3 %}\\n            v-model:value=\\\"context.paymentMethodId\\\"\\n            {% else %}\\n            v-model=\\\"context.paymentMethodId\\\"\\n            {% endif %}\\n            entity=\\\"payment_method\\\"\\n            label-property=\\\"distinguishableName\\\"\\n            class=\\\"sw-order-create-options__payment-method\\\"\\n            :criteria=\\\"paymentMethodCriteria\\\"\\n            :label=\\\"$tc('sw-order.createBase.labelPaymentMethod')\\\"\\n            :placeholder=\\\"$tc('sw-order.createBase.placeholderPaymentMethod')\\\"\\n            show-clearable-button\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_create_options_billing_address %}\\n        <sw-order-customer-address-select\\n            {% if VUE3 %}\\n            v-model:value=\\\"context.billingAddressId\\\"\\n            {% else %}\\n            v-model=\\\"context.billingAddressId\\\"\\n            {% endif %}\\n            class=\\\"sw-order-create-options__billing-address\\\"\\n            :label=\\\"$tc('sw-order.createBase.labelBillingAddress')\\\"\\n            :placeholder=\\\"$tc('sw-order.createBase.placeholderBillingAddress')\\\"\\n            :same-address-value=\\\"context.shippingAddressId\\\"\\n            :customer=\\\"customer\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_create_options_order_currency %}\\n        <sw-entity-single-select\\n            {% if VUE3 %}\\n            v-model:value=\\\"context.currencyId\\\"\\n            {% else %}\\n            v-model=\\\"context.currencyId\\\"\\n            {% endif %}\\n            class=\\\"sw-order-create-options__currency-select\\\"\\n            entity=\\\"currency\\\"\\n            :criteria=\\\"salesChannelCriteria\\\"\\n            :label=\\\"$tc('sw-order.createBase.labelCurrency')\\\"\\n            :placeholder=\\\"$tc('sw-order.createBase.placeholderCurrency')\\\"\\n            show-clearable-button\\n        />\\n        {% endblock %}\\n    </sw-container>\\n    {% endblock %}\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_create_options_shipment %}\\n    \\n    {% block sw_order_create_options_shipment_headline %}\\n    <h3>{{ $tc('sw-order.initialModal.options.textHeadlineShipment') }}</h3>\\n    {% endblock %}\\n\\n    <sw-container\\n        class=\\\"sw-order-create-options__shipping-container\\\"\\n        gap=\\\"0px 32px\\\"\\n        columns=\\\"1fr 1fr\\\"\\n    >\\n        \\n        {% block sw_order_create_options_shipping_method %}\\n        <sw-entity-single-select\\n            {% if VUE3 %}\\n            v-model:value=\\\"context.shippingMethodId\\\"\\n            {% else %}\\n            v-model=\\\"context.shippingMethodId\\\"\\n            {% endif %}\\n            class=\\\"sw-order-create-options__shipping-method\\\"\\n            entity=\\\"shipping_method\\\"\\n            show-clearable-button\\n            :criteria=\\\"shippingMethodCriteria\\\"\\n            :label=\\\"$tc('sw-order.createBase.labelShippingMethod')\\\"\\n            :placeholder=\\\"$tc('sw-order.createBase.placeholderShippingMethod')\\\"\\n        />\\n        {% endblock %}\\n\\n        <sw-number-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"shippingCost\\\"\\n            {% else %}\\n            v-model=\\\"shippingCost\\\"\\n            {% endif %}\\n            class=\\\"sw-order-create-options__shipping-cost\\\"\\n            :label=\\\"$tc('sw-order.initialModal.options.labelShippingCosts')\\\"\\n            {% if VUE3 %}\\n            @update:value=\\\"onChangeShippingCost\\\"\\n            {% else %}\\n            @change=\\\"onChangeShippingCost\\\"\\n            {% endif %}\\n        >\\n            <template #suffix>\\n                {{ currency.symbol }}\\n            </template>\\n        </sw-number-field>\\n\\n        <sw-switch-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"isSameAsBillingAddress\\\"\\n            {% else %}\\n            v-model=\\\"isSameAsBillingAddress\\\"\\n            {% endif %}\\n            {% if VUE3 %}\\n            name=\\\"sw-field--isSameAsBillingAddress\\\"\\n            {% endif %}\\n            :label=\\\"$tc('sw-order.initialModal.options.labelSameAsBillingAddress')\\\"\\n        />\\n\\n        \\n        {% block sw_order_create_options_shipping_address %}\\n        <sw-order-customer-address-select\\n            {% if VUE3 %}\\n            v-model:value=\\\"context.shippingAddressId\\\"\\n            {% else %}\\n            v-model=\\\"context.shippingAddressId\\\"\\n            {% endif %}\\n            class=\\\"sw-order-create-options__shipping-address\\\"\\n            :label=\\\"$tc('sw-order.createBase.labelShippingAddress')\\\"\\n            :placeholder=\\\"$tc('sw-order.createBase.placeholderShippingAddress')\\\"\\n            :same-address-label=\\\"$tc('sw-order.initialModal.options.textSameAsBillingAddress')\\\"\\n            :same-address-value=\\\"context.billingAddressId\\\"\\n            :customer=\\\"customer\\\"\\n            :disabled=\\\"isSameAsBillingAddress\\\"\\n        />\\n        {% endblock %}\\n    </sw-container>\\n    {% endblock %}\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-order-create-options.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1e46572a\", content, true, {});"],"sourceRoot":""}