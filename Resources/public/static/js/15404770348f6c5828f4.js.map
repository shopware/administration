{"version":3,"sources":["webpack:///./src/module/sw-settings-snippet/component/sidebar/sw-settings-snippet-sidebar/sw-settings-snippet-sidebar.scss","webpack:///./src/module/sw-settings-snippet/component/sidebar/sw-settings-snippet-sidebar/index.js","webpack:///./src/module/sw-settings-snippet/component/sidebar/sw-settings-snippet-sidebar/sw-settings-snippet-sidebar.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","template","props","filterItems","type","Array","required","authorFilters","filterSettings","Object","computed","activeFilterNumber","count","this","values","forEach","value","isExpandedAuthorFilters","_this","some","item","isExpandedMoreFilters","_this2","methods","closeContent","filterSidebarIsOpen","$refs","filterSideBar","$emit","openContent","onChange","field","onRefresh","resetAll"],"mappings":"0GAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAA2EL,SAC5E,WAAYF,GAAS,EAAM,K,mDCF7B,WACXQ,SCRW,qgIDUXC,MAAO,CACHC,YAAa,CACTC,KAAMC,MACNC,UAAU,GAGdC,cAAe,CACXH,KAAMC,MACNC,UAAU,GAGdE,eAAgB,CACZJ,KAAMK,OACNH,UAAU,EACVX,QAAS,OAIjBe,SAAU,CACNC,mBAAkB,WACd,IAAIC,EAAQ,EAEZ,OAAKC,KAAKL,gBAIVC,OAAOK,OAAOD,KAAKL,gBAAgBO,SAAQ,SAACC,IAC1B,IAAVA,IACAJ,GAAS,MAIVA,GATIA,GAYfK,wBAAuB,WAAI,IAADC,EAAA,KACtB,QAAKL,KAAKL,gBAIHK,KAAKN,cAAcY,MAAK,SAACC,GAAI,OAAmC,IAA9BF,EAAKV,eAAeY,OAGjEC,sBAAqB,WAAI,IAADC,EAAA,KACpB,QAAKT,KAAKL,gBAIHK,KAAKV,YAAYgB,MAAK,SAACC,GAAI,OAAmC,IAA9BE,EAAKd,eAAeY,QAInEG,QAAS,CACLC,aAAY,WACR,GAAIX,KAAKY,oBAIL,OAHAZ,KAAKa,MAAMC,cAAcH,eACzBX,KAAKY,qBAAsB,OAC3BZ,KAAKe,MAAM,oBAIff,KAAKa,MAAMC,cAAcE,cACzBhB,KAAKY,qBAAsB,EAE3BZ,KAAKe,MAAM,oBAGfE,SAAQ,SAACC,GACLlB,KAAKe,MAAM,SAAUG,IAGzBC,UAAS,WACLnB,KAAKe,MAAM,oCAGfK,SAAQ,WACJpB,KAAKe,MAAM,yB","file":"static/js/15404770348f6c5828f4.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-snippet-sidebar.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"9361505e\", content, true, {});","/**\n * @package services-settings\n */\nimport template from './sw-settings-snippet-sidebar.html.twig';\nimport './sw-settings-snippet-sidebar.scss';\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    props: {\n        filterItems: {\n            type: Array,\n            required: true,\n        },\n\n        authorFilters: {\n            type: Array,\n            required: true,\n        },\n\n        filterSettings: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n    },\n\n    computed: {\n        activeFilterNumber() {\n            let count = 0;\n\n            if (!this.filterSettings) {\n                return count;\n            }\n\n            Object.values(this.filterSettings).forEach((value) => {\n                if (value === true) {\n                    count += 1;\n                }\n            });\n\n            return count;\n        },\n\n        isExpandedAuthorFilters() {\n            if (!this.filterSettings) {\n                return false;\n            }\n\n            return this.authorFilters.some((item) => this.filterSettings[item] === true);\n        },\n\n        isExpandedMoreFilters() {\n            if (!this.filterSettings) {\n                return false;\n            }\n\n            return this.filterItems.some((item) => this.filterSettings[item] === true);\n        },\n    },\n\n    methods: {\n        closeContent() {\n            if (this.filterSidebarIsOpen) {\n                this.$refs.filterSideBar.closeContent();\n                this.filterSidebarIsOpen = false;\n                this.$emit('sw-sidebar-close');\n                return;\n            }\n\n            this.$refs.filterSideBar.openContent();\n            this.filterSidebarIsOpen = true;\n\n            this.$emit('sw-sidebar-open');\n        },\n\n        onChange(field) {\n            this.$emit('change', field);\n        },\n\n        onRefresh() {\n            this.$emit('sw-sidebar-collaps-refresh-grid');\n        },\n\n        resetAll() {\n            this.$emit('sidebar-reset-all');\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_snippet_grid_sidebar %}\\n<sw-sidebar class=\\\"sw-snippet-settings__sidebar\\\">\\n    \\n    {% block sw_settings_snippet_grid_sidebar_refresh %}\\n    <sw-sidebar-item\\n        icon=\\\"regular-undo\\\"\\n        :title=\\\"$tc('sw-settings-snippet.list.titleSidebarItemRefresh')\\\"\\n        @click=\\\"onRefresh\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_snippet_grid_sidebar_filter %}\\n    <sw-sidebar-item\\n        ref=\\\"filterSideBar\\\"\\n        icon=\\\"regular-filter\\\"\\n        :title=\\\"$tc('sw-settings-snippet.list.titleSidebarItemFilter')\\\"\\n        :badge=\\\"activeFilterNumber\\\"\\n        @close-content=\\\"closeContent\\\"\\n        @click=\\\"closeContent\\\"\\n    >\\n        <template #headline-content>\\n            \\n            <a\\n                v-if=\\\"activeFilterNumber\\\"\\n                class=\\\"sw-snippet-settings__sidebar-reset-all\\\"\\n                role=\\\"button\\\"\\n                tabindex=\\\"0\\\"\\n                @click=\\\"resetAll\\\"\\n            >\\n                {{ $tc('sw-sidebar-filter-panel.resetButton') }}\\n            </a>\\n        </template>\\n\\n        \\n        {% block sw_settings_snippet_grid_sidebar_filter_only_empty %}\\n        <sw-settings-snippet-filter-switch\\n            name=\\\"emptySnippets\\\"\\n            group=\\\"emptySnippets\\\"\\n            type=\\\"small\\\"\\n            :value=\\\"filterSettings?.emptySnippets\\\"\\n            :label=\\\"$tc('sw-settings-snippet.filter.showOnlyEmpty')\\\"\\n            @change=\\\"onChange\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_snippet_grid_sidebar_filter_custom %}\\n        <sw-settings-snippet-filter-switch\\n            name=\\\"editedSnippets\\\"\\n            group=\\\"editedSnippets\\\"\\n            type=\\\"small\\\"\\n            :value=\\\"filterSettings?.editedSnippets\\\"\\n            :label=\\\"$tc('sw-settings-snippet.filter.showOnlyCustom')\\\"\\n            @change=\\\"onChange\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_snippet_grid_sidebar_filter_added %}\\n        <sw-settings-snippet-filter-switch\\n            name=\\\"addedSnippets\\\"\\n            group=\\\"addedSnippets\\\"\\n            type=\\\"small\\\"\\n            :value=\\\"filterSettings?.addedSnippets\\\"\\n            :label=\\\"$tc('sw-settings-snippet.filter.showOnlyAdded')\\\"\\n            @change=\\\"onChange\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_snippet_grid_sidebar_filter_author %}\\n        <sw-sidebar-collapse :expand-on-loading=\\\"isExpandedAuthorFilters\\\">\\n            <template #header>\\n                {{ $tc('sw-settings-snippet.filter.author') }}\\n            </template>\\n            <template #content>\\n                <div\\n                    v-for=\\\"(item, index) in authorFilters\\\"\\n                    :key=\\\"index\\\"\\n                >\\n                    <sw-settings-snippet-filter-switch\\n                        group=\\\"authorFilter\\\"\\n                        :name=\\\"item\\\"\\n                        :value=\\\"filterSettings?.[item]\\\"\\n                        :label=\\\"item\\\"\\n                        @change=\\\"onChange\\\"\\n                    />\\n                </div>\\n            </template>\\n        </sw-sidebar-collapse>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_snippet_grid_sidebar_filter_more %}\\n        <sw-sidebar-collapse :expand-on-loading=\\\"isExpandedMoreFilters\\\">\\n            <template #header>\\n                {{ $tc('sw-settings-snippet.filter.more') }}\\n            </template>\\n            <template #content>\\n                <div\\n                    v-for=\\\"(item, index) in filterItems\\\"\\n                    :key=\\\"index\\\"\\n                >\\n                    <sw-settings-snippet-filter-switch\\n                        group=\\\"namespaceFilters\\\"\\n                        :name=\\\"item\\\"\\n                        :value=\\\"filterSettings?.[item]\\\"\\n                        :label=\\\"item\\\"\\n                        @change=\\\"onChange\\\"\\n                    />\\n                </div>\\n            </template>\\n        </sw-sidebar-collapse>\\n        {% endblock %}\\n    </sw-sidebar-item>\\n    {% endblock %}\\n</sw-sidebar>\\n{% endblock %}\\n\";"],"sourceRoot":""}