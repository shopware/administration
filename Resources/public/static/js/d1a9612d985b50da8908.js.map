{"version":3,"sources":["webpack:///./src/module/sw-settings-search/component/sw-settings-search-excluded-search-terms/sw-settings-search-excluded-search-terms.html.twig","webpack:///./src/module/sw-settings-search/component/sw-settings-search-excluded-search-terms/index.js","webpack:///./src/module/sw-settings-search/component/sw-settings-search-excluded-search-terms/sw-settings-search-excluded-search-terms.scss"],"names":["Mixin","Shopware","template","inject","mixins","getByName","props","searchConfigs","type","Object","required","default","isExcludedTermsLoading","Boolean","data","items","originalItems","showEmptyState","page","limit","total","searchTerm","isLoading","isAddingItem","responseMessage","computed","searchRepository","this","repositoryFactory","create","getSearchableGeneralColumns","property","label","inlineEdit","sortable","assetFilter","Filter","watch","createdComponent","created","methods","undefined","excludedTerms","length","resetData","renderComponent","addExcludedSearchTerms","onInsertTerm","$refs","itemFilter","term","unshift","id","value","dataGrid","onDbClickCell","$emit","all","filterItems","sliceItems","_this","filter","search","offset","slice","map","item","index","onPagePagination","params","onDeleteExcludedTerm","terms","$tc","values","find","saveConfig","onSearchTermChange","selectionChanged","selection","onSaveEdit","createNotificationError","message","originTerm","getOriginItem","found","onCancelEdit","onBulkDeleteExcludedTerm","_this2","save","then","createNotificationSuccess","catch","error","finally","onResetExcludedSearchTermDefault","_this3","excludedSearchTermService","resetExcludedSearchTerm","content","__esModule","module","i","locals","exports","add"],"mappings":"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","file":"static/js/d1a9612d985b50da8908.js","sourcesContent":["export default \"\\n{% block sw_settings_search_excluded_search_terms %}\\n<sw-card\\n    :title=\\\"$tc('sw-settings-search.generalTab.labelExcludedSearchTerms')\\\"\\n    class=\\\"sw-settings-search-excluded-search-terms\\\"\\n    position-identifier=\\\"sw-settings-search-excluded-search-terms\\\"\\n>\\n    <template #grid>\\n        \\n        {% block sw_settings_search_excluded_search_terms_empty_state %}\\n        <sw-empty-state\\n            v-if=\\\"showEmptyState\\\"\\n            :title=\\\"$tc('sw-settings-search.generalTab.textEmptyStateExcludedSearchTerms')\\\"\\n            :show-description=\\\"false\\\"\\n            :has-action-slot=\\\"true\\\"\\n            :absolute=\\\"false\\\"\\n            class=\\\"sw-empty-state\\\"\\n        >\\n            <template #icon>\\n                \\n                {% block sw_settings_search_excluded_search_terms_empty_state_image %}\\n                <img\\n                    :src=\\\"assetFilter('administration/static/img/empty-states/settings-empty-state.svg')\\\"\\n                    :alt=\\\"$tc('sw-settings-search.generalTab.textEmptyStateExcludedSearchTerms')\\\"\\n                >\\n                {% endblock %}\\n            </template>\\n\\n            <template #actions>\\n                \\n                {% block sw_settings_search_excluded_search_terms_empty_state_action %}\\n                <sw-button\\n                    class=\\\"sw-settings-search-excluded-search-terms__action-add\\\"\\n                    variant=\\\"ghost\\\"\\n                    size=\\\"small\\\"\\n                    :disabled=\\\"!acl.can('product_search_config.creator')\\\"\\n                    @click=\\\"addExcludedSearchTerms\\\"\\n                >\\n                    {{ $tc('sw-settings-search.generalTab.buttonAddExcludedSearch') }}\\n                </sw-button>\\n                {% endblock %}\\n            </template>\\n        </sw-empty-state>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_search_excluded_search_terms_grid %}\\n        <div v-if=\\\"!showEmptyState\\\">\\n            \\n            {% block sw_settings_search_excluded_search_terms_header_bar %}\\n            <sw-container\\n                class=\\\"sw-settings-search-excluded-search-terms__header-bar\\\"\\n                columns=\\\"1fr auto\\\"\\n                gap=\\\"10px\\\"\\n                align=\\\"center\\\"\\n            >\\n                \\n                {% block sw_settings_search_excluded_search_terms_filter %}\\n                <sw-card-filter\\n                    ref=\\\"itemFilter\\\"\\n                    :placeholder=\\\"$tc('sw-settings-search.generalTab.textPlaceholderTermsFilter')\\\"\\n                    @sw-card-filter-term-change=\\\"onSearchTermChange\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_search_excluded_search_terms_actions %}\\n                <div class=\\\"sw-settings-search-excluded-search-terms-group-actions\\\">\\n                    \\n                    {% block sw_settings_search_excluded_search_terms_add_button %}\\n                    <sw-button\\n                        class=\\\"sw-settings-search-excluded-search-terms__insert-button\\\"\\n                        variant=\\\"ghost\\\"\\n                        size=\\\"small\\\"\\n                        :disabled=\\\"!acl.can('product_search_config.creator')\\\"\\n                        @click=\\\"onInsertTerm\\\"\\n                    >\\n                        {{ $tc('sw-settings-search.generalTab.buttonAddExcludedSearchTerms') }}\\n                    </sw-button>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_settings_search_excluded_search_terms_reset_button %}\\n                    <sw-button\\n                        class=\\\"sw-settings-search-excluded-search-terms__reset-button\\\"\\n                        size=\\\"small\\\"\\n                        :disabled=\\\"!acl.can('product_search_config.creator')\\\"\\n                        :is-loading=\\\"isLoading\\\"\\n                        @click=\\\"onResetExcludedSearchTermDefault\\\"\\n                    >\\n                        {{ $tc('sw-settings-search.generalTab.buttonResetDefault') }}\\n                    </sw-button>\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n            </sw-container>\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_search_excluded_search_terms_grid_list %}\\n            <sw-container>\\n                <sw-data-grid\\n                    v-if=\\\"items.length !== 0\\\"\\n                    ref=\\\"dataGrid\\\"\\n                    :data-source=\\\"items\\\"\\n                    :allow-inline-edit=\\\"acl.can('product_search_config.editor')\\\"\\n                    :is-loading=\\\"isLoading || isExcludedTermsLoading\\\"\\n                    :columns=\\\"getSearchableGeneralColumns\\\"\\n                    class=\\\"sw-settings-search__grid sw-settings-search-excluded-search-terms_grid\\\"\\n                    @inline-edit-save=\\\"onSaveEdit\\\"\\n                    @inline-edit-cancel=\\\"onCancelEdit\\\"\\n                    @select-item=\\\"selectionChanged\\\"\\n                >\\n                    <template #bulk>\\n                        <sw-button\\n                            variant=\\\"danger\\\"\\n                            size=\\\"small\\\"\\n                            :disabled=\\\"!acl.can('product_search_config.deleter')\\\"\\n                            @click=\\\"onBulkDeleteExcludedTerm()\\\"\\n                        >\\n                            {{ $tc('global.default.delete') }}\\n                        </sw-button>\\n                    </template>\\n\\n                    <template #actions=\\\"{ item }\\\">\\n                        \\n                        {% block sw_search_excluded_terms_column_actions %}\\n                        <sw-context-menu-item\\n                            variant=\\\"danger\\\"\\n                            :disabled=\\\"!acl.can('product_search_config.deleter')\\\"\\n                            @click=\\\"onDeleteExcludedTerm([item])\\\"\\n                        >\\n                            {{ $tc('global.default.delete') }}\\n                        </sw-context-menu-item>\\n                        {% endblock %}\\n                    </template>\\n\\n                    <template #pagination>\\n                        \\n                        {% block sw_search_excluded_terms_list_pagination %}\\n                        <sw-pagination\\n                            :page=\\\"page\\\"\\n                            :limit=\\\"limit\\\"\\n                            :total=\\\"total\\\"\\n                            :total-visible=\\\"7\\\"\\n                            @page-change=\\\"onPagePagination\\\"\\n                        />\\n                        {% endblock %}\\n                    </template>\\n                </sw-data-grid>\\n                \\n                {% block sw_search_excliuded_terms_no_results %}\\n                <div v-if=\\\"items.length === 0\\\">\\n                    <p class=\\\"sw-settings-search__no-data-results\\\">\\n                        {{ $tc('sw-settings-search.generalTab.labelExcludedSearchTermsNoResults') }}\\n                    </p>\\n                </div>\\n                {% endblock %}\\n            </sw-container>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n    </template>\\n</sw-card>\\n{% endblock %}\\n\";","/**\n * @package buyers-experience\n */\nimport template from './sw-settings-search-excluded-search-terms.html.twig';\nimport './sw-settings-search-excluded-search-terms.scss';\n\nconst { Mixin } = Shopware;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'excludedSearchTermService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        searchConfigs: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n\n        isExcludedTermsLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            items: [],\n            originalItems: [],\n            showEmptyState: false,\n            page: 1,\n            limit: 10,\n            total: 0,\n            searchTerm: '',\n            isLoading: false,\n            isAddingItem: false,\n            responseMessage: '',\n        };\n    },\n\n    computed: {\n        searchRepository() {\n            return this.repositoryFactory.create('product_search_config');\n        },\n\n        getSearchableGeneralColumns() {\n            return [{\n                property: 'value',\n                label: 'sw-settings-search.generalTab.textColumnSearchTerm',\n                inlineEdit: 'string',\n                sortable: false,\n            }];\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        searchConfigs() {\n            this.createdComponent();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n            if (\n                this.searchConfigs.excludedTerms === undefined ||\n                this.searchConfigs.excludedTerms === null ||\n                this.searchConfigs.excludedTerms.length <= 0\n            ) {\n                this.resetData();\n                this.showEmptyState = true;\n                this.isLoading = false;\n                return;\n            }\n            this.originalItems = this.searchConfigs.excludedTerms;\n            this.renderComponent();\n        },\n\n        resetData() {\n            this.originalItems = [];\n            this.items = [];\n            this.page = 1;\n            this.total = 0;\n        },\n\n        addExcludedSearchTerms() {\n            this.showEmptyState = false;\n        },\n\n        onInsertTerm() {\n            this.isAddingItem = true;\n            this.searchTerm = '';\n            this.$refs.itemFilter.term = '';\n            this.page = 1;\n            this.renderComponent();\n\n            this.items.unshift({ id: null, value: '' });\n            this.$refs.dataGrid.onDbClickCell(this.items[0]);\n            this.$emit('edit-change', true);\n        },\n\n        renderComponent() {\n            if (this.originalItems.length <= 0) {\n                this.isLoading = false;\n                this.items = [];\n                return;\n            }\n            const all = this.filterItems();\n            this.total = all.length;\n            if (this.total <= 0) {\n                this.items = [];\n                this.showEmptyState = false;\n                this.isLoading = false;\n                return;\n            }\n\n            this.items = this.sliceItems(all);\n            if (this.items.length <= 0) {\n                this.page -= 1;\n                this.renderComponent();\n            }\n            this.showEmptyState = false;\n            this.isLoading = false;\n        },\n\n        filterItems() {\n            return this.originalItems.filter((term) => {\n                return term.search(this.searchTerm) >= 0;\n            });\n        },\n\n        sliceItems(items) {\n            const offset = (this.page - 1) * this.limit;\n            return items.slice(offset, offset + this.limit).map((item, index) => {\n                return { id: index, value: item };\n            });\n        },\n\n        onPagePagination(params) {\n            this.page = params.page;\n            this.limit = params.limit;\n            this.isAddingItem = false;\n            this.renderComponent();\n        },\n\n        onDeleteExcludedTerm(terms) {\n            this.responseMessage = this.$tc('sw-settings-search.notification.deleteExcludedTermSuccess');\n            this.isLoading = true;\n            const values = terms.filter((term) => { return term.value !== ''; }).map(term => term.value);\n            if (values.length <= 0) {\n                this.renderComponent();\n                return;\n            }\n            this.originalItems = this.originalItems.filter((item) => {\n                return !values.find(term => term === item);\n            });\n            this.saveConfig();\n        },\n\n        onSearchTermChange(searchTerm) {\n            this.page = 1;\n            this.searchTerm = searchTerm;\n            if (searchTerm === '' && this.isAddingItem) {\n                return;\n            }\n            this.isAddingItem = false;\n            this.renderComponent();\n        },\n\n        selectionChanged(selection) {\n            this.selection = selection;\n        },\n\n        onSaveEdit(term) {\n            this.isLoading = true;\n            // Make sure value is not null\n            if (term.value === '') {\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-search.notification.excludedTermRequired'),\n                });\n                this.renderComponent();\n                return;\n            }\n\n            // Make sure value not exists\n            const originTerm = this.getOriginItem(term);\n            const isExists = this.originalItems.find((item) => {\n                return item === term.value && item !== originTerm;\n            });\n            if (isExists) {\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-search.notification.excludedTermAlreadyExists'),\n                });\n                this.renderComponent();\n                return;\n            }\n\n            if (this.isAddingItem) {\n                this.responseMessage = this.$tc('sw-settings-search.notification.createExcludedTermSuccess');\n                this.originalItems.unshift(term.value);\n                this.saveConfig();\n                return;\n            }\n\n            this.responseMessage = this.$tc('sw-settings-search.notification.updateExcludedTermSuccess');\n            this.originalItems[term.id] = term.value;\n            this.saveConfig();\n        },\n\n        getOriginItem(term) {\n            const all = this.filterItems();\n            const items = this.sliceItems(all);\n            const found = items.find(item => item.id === term.id);\n\n            if (found) {\n                return found.value;\n            }\n            return null;\n        },\n\n        onCancelEdit() {\n            this.renderComponent();\n            this.$emit('edit-change', false);\n        },\n\n        onBulkDeleteExcludedTerm() {\n            this.onDeleteExcludedTerm(Object.values(this.selection));\n        },\n\n        saveConfig() {\n            this.searchConfigs.excludedTerms = this.originalItems;\n\n            return this.searchRepository.save(this.searchConfigs)\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.responseMessage,\n                    });\n                    this.isAddingItem = false;\n                    this.renderComponent();\n                    this.$emit('edit-change', false);\n                })\n                .catch((error) => {\n                    this.createNotificationError({\n                        message: error,\n                    });\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        onResetExcludedSearchTermDefault() {\n            this.excludedSearchTermService.resetExcludedSearchTerm()\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-settings-search.notification.resetToDefaultExcludedTermSuccess'),\n                    });\n                    this.$emit('data-load');\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-search.notification.resetToDefaultExcludedTermError'),\n                    });\n                });\n        },\n    },\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-search-excluded-search-terms.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"01187f8a\", content, true, {});"],"sourceRoot":""}