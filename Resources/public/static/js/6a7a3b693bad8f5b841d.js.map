{"version":3,"sources":["webpack:///./src/module/sw-settings-listing/component/sw-settings-listing-visibility-detail/index.js","webpack:///./src/module/sw-settings-listing/component/sw-settings-listing-visibility-detail/sw-settings-listing-visibility-detail.html.twig"],"names":["Criteria","Shopware","Data","template","inject","props","disabled","type","Boolean","required","default","config","Array","data","items","page","limit","total","computed","salesChannelRepository","this","repositoryFactory","create","created","createdComponent","methods","onPageChange","params","_this","offset","length","fetchSalesChannels","then","slice","changeVisibilityValue","event","item","visibility","Number","_this2","salesChannelIds","map","id","criteria","addFilter","equalsAny","search","salesChannels","salesChannel","get","_objectSpread","name"],"mappings":"wtBAEA,IAAQA,EAAaC,SAASC,KAAtBF,SAGO,WACXG,SCNW,4qGDQXC,OAAQ,CAAC,qBAETC,MAAO,CACHC,SAAU,CACNC,KAAMC,QACNC,UAAU,EACVC,SAAS,GAGbC,OAAQ,CACJF,UAAU,EACVF,KAAMK,QAIdC,KAAI,WACA,MAAO,CACHC,MAAO,GACPC,KAAM,EACNC,MAAO,GACPC,MAAO,IAIfC,SAAU,CACNC,uBAAsB,WAClB,OAAOC,KAAKC,kBAAkBC,OAAO,mBAI7CC,QAAO,WACHH,KAAKI,oBAGTC,QAAS,CACLD,iBAAgB,WACZJ,KAAKM,aAAa,CAAEX,KAAMK,KAAKL,KAAMC,MAAOI,KAAKJ,SAGrDU,aAAY,SAACC,GAAS,IAADC,EAAA,KACXC,GAAUF,EAAOZ,KAAO,GAAKY,EAAOX,MAC1CI,KAAKH,MAAQG,KAAKT,OAAOmB,OAEzBV,KAAKW,qBAAqBC,MAAK,SAAArB,GAC3BiB,EAAKd,MAAQH,EAAOsB,MAAMJ,EAAQA,EAASF,EAAOX,WAI1DkB,sBAAqB,SAACC,EAAOC,GACzBA,EAAKC,WAAaC,OAAOH,IAG7BJ,mBAAkB,WAAI,IAADQ,EAAA,KACXC,EAAkBpB,KAAKT,OAAO8B,KAAI,SAAA9B,GAAM,OAAIA,EAAO+B,MACnDC,EAAW,IAAI3C,EAAS,EAAG,IAIjC,OAFA2C,EAASC,UAAU5C,EAAS6C,UAAU,KAAML,IAErCpB,KAAKD,uBAAuB2B,OAAOH,GAAUX,MAAK,SAAAe,GACrD,OAAOR,EAAK5B,OAAO8B,KAAI,SAAA9B,GACnB,IAAMqC,EAAeD,EAAcE,IAAItC,EAAO+B,IAC9C,OAAKM,EAILE,IAAA,GACOvC,GAAM,IACTwC,KAAMH,EAAaG,OALZxC","file":"static/js/6a7a3b693bad8f5b841d.js","sourcesContent":["import template from './sw-settings-listing-visibility-detail.html.twig';\n\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        config: {\n            required: true,\n            type: Array,\n        },\n    },\n\n    data() {\n        return {\n            items: [],\n            page: 1,\n            limit: 10,\n            total: 0,\n        };\n    },\n\n    computed: {\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.onPageChange({ page: this.page, limit: this.limit });\n        },\n\n        onPageChange(params) {\n            const offset = (params.page - 1) * params.limit;\n            this.total = this.config.length;\n\n            this.fetchSalesChannels().then(config => {\n                this.items = config.slice(offset, offset + params.limit);\n            });\n        },\n\n        changeVisibilityValue(event, item) {\n            item.visibility = Number(event);\n        },\n\n        fetchSalesChannels() {\n            const salesChannelIds = this.config.map(config => config.id);\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(Criteria.equalsAny('id', salesChannelIds));\n\n            return this.salesChannelRepository.search(criteria).then(salesChannels => {\n                return this.config.map(config => {\n                    const salesChannel = salesChannels.get(config.id);\n                    if (!salesChannel) {\n                        return config;\n                    }\n\n                    return {\n                        ...config,\n                        name: salesChannel.name,\n                    };\n                });\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_product_visibility_detail %}\\n<sw-grid\\n    table\\n    :items=\\\"items\\\"\\n    :selectable=\\\"false\\\"\\n>\\n    \\n    {% block sw_settings_listing_visibility_detail_columns %}\\n    <template #columns=\\\"{ item }\\\">\\n        \\n        {% block sw_settings_listing_visibility_detail_columns_sales_channel %}\\n        <sw-grid-column flex=\\\"minmax(100px, auto)\\\">\\n            \\n            {% block sw_settings_listing_visibility_detail_columns_sales_channel_label %}\\n            <span>{{ item.name }}</span>\\n            {% endblock %}\\n        </sw-grid-column>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_listing_visibility_detail_columns_all %}\\n        <sw-grid-column\\n            flex=\\\"0.5fr\\\"\\n            :label=\\\"$tc('sw-product.visibility.columnAll')\\\"\\n            align=\\\"center\\\"\\n        >\\n            <sw-radio-field\\n                :disabled=\\\"disabled\\\"\\n                :value=\\\"item.visibility\\\"\\n                :name=\\\"'visibility' + item.id\\\"\\n                :options=\\\"[{ value: 30 }]\\\"\\n                {% if VUE3 %}\\n                @update:value=\\\"changeVisibilityValue($event, item)\\\"\\n                {% else %}\\n                @change=\\\"changeVisibilityValue($event, item)\\\"\\n                {% endif %}\\n            />\\n        </sw-grid-column>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_listing_visibility_detail_columns_search_only %}\\n        <sw-grid-column\\n            flex=\\\"1fr\\\"\\n            :label=\\\"$tc('sw-product.visibility.columnSearchOnly')\\\"\\n            align=\\\"center\\\"\\n        >\\n            <sw-radio-field\\n                :disabled=\\\"disabled\\\"\\n                :value=\\\"item.visibility\\\"\\n                :name=\\\"'visibility' + item.id\\\"\\n                :options=\\\"[{ value: 20 }]\\\"\\n                {% if VUE3 %}\\n                @update:value=\\\"changeVisibilityValue($event, item)\\\"\\n                {% else %}\\n                @change=\\\"changeVisibilityValue($event, item)\\\"\\n                {% endif %}\\n            />\\n        </sw-grid-column>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_listing_visibility_detail_columns_link_only %}\\n        <sw-grid-column\\n            flex=\\\"1fr\\\"\\n            :label=\\\"$tc('sw-product.visibility.columnLinkOnly')\\\"\\n            align=\\\"center\\\"\\n        >\\n            <sw-radio-field\\n                type=\\\"radio\\\"\\n                :disabled=\\\"disabled\\\"\\n                :value=\\\"item.visibility\\\"\\n                :name=\\\"'visibility' + item.id\\\"\\n                :options=\\\"[{ value: 10 }]\\\"\\n                {% if VUE3 %}\\n                @update:value=\\\"changeVisibilityValue($event, item)\\\"\\n                {% else %}\\n                @change=\\\"changeVisibilityValue($event, item)\\\"\\n                {% endif %}\\n            />\\n        </sw-grid-column>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_listing_visibility_detail_pagination %}\\n    <template #pagination>\\n        <sw-pagination\\n            :page=\\\"page\\\"\\n            :limit=\\\"limit\\\"\\n            :total=\\\"total\\\"\\n            :total-visible=\\\"10\\\"\\n            :steps=\\\"[10]\\\"\\n            @page-change=\\\"onPageChange\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n</sw-grid>\\n{% endblock %}\\n\";"],"sourceRoot":""}