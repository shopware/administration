{"version":3,"sources":["webpack:///./src/module/sw-product/component/sw-product-variant-modal/index.js","webpack:///./src/module/sw-product/component/sw-product-variant-modal/sw-product-variant-modal.html.twig","webpack:///./src/module/sw-product/component/sw-product-variant-modal/sw-product-variant-modal.scss"],"names":["_Shopware","Shopware","Mixin","Context","Criteria","Data","template","inject","mixins","getByName","props","productEntity","type","Object","required","data","productVariants","currency","paginationLimit","paginationPage","toBeDeletedVariants","showDeleteModal","searchTerm","isDeleteButtonLoading","isDeletionOver","sortDirection","sortBy","isLoading","groups","filterOptions","includeOptions","filterWindowOpen","showBulkEditModal","computed","modalTitle","this","$t","productName","translated","name","openMainProductText","productRepository","repositoryFactory","create","productMediaRepository","media","entity","currencyRepository","groupRepository","contextMenuEditText","acl","can","$tc","filterCriteria","length","reduce","result","option","parentGroup","find","group","id","groupId","options","push","map","equalsAny","productVariantCriteria","criteria","productEntityId","addFilter","equals","setTerm","getAssociation","addAssociation","split","forEach","term","addQuery","contains","cri","addSorting","sort","gridColumns","_this$currency","property","dataIndex","label","routerLink","inlineEdit","allowResize","align","concat","width","sortable","canBeDeletedCriteria","variantIds","variant","groupCriteria","selectedGroups","_this$productEntity","_this$groups","groupIds","configuratorSettings","element","indexOf","filter","filterOptionsListing","_this","_toConsumableArray","a","b","position","index","children","getOptionsForGroup","childCount","parentId","afterId","storeObject","optionsForGroup","elementA","elementB","stockColorVariantFilter","Filter","watch","created","createdComponent","methods","fetchProductVariants","fetchSystemCurrency","loadGroups","_this2","systemCurrencyId","app","get","then","response","_this3","search","finally","getDefaultPriceForVariant","_this4","price","currencyId","defaultCurrency","defaultPrice","onInheritanceRestore","foundVariantIndex","findIndex","$delete","onInheritanceRemove","newPrice","gross","factor","linked","net","$set","sortOptions","buildVariantOptions","seperator","arguments","undefined","ommitParenthesis","ommitOptionGroupName","sortedOptions","formattedOptions","accumulator","currentOption","optionValue","optionGroupName","slice","buildVariantName","variantName","getVariantPrice","variantPrice","onPageChange","_ref","_ref$limit","limit","_ref$page","page","visitProduct","productId","_this5","$emit","$nextTick","$router","params","getItemMedia","item","cover","deleteVariants","_this6","amount","canVariantsBeDeleted","canBeDeleted","createNotificationError","message","syncDeleted","createNotificationSuccess","$refs","variantGrid","resetSelection","catch","_this7","_asyncToGenerator","_regeneratorRuntime","mark","_callee","products","wrap","_context","prev","next","sent","abrupt","stop","onInlineEditSave","editedVariant","_this8","save","onInlineEditCancel","onClickBulkDelete","gridSelection","selection","values","closeDeleteModal","onDeleteVariant","onSearchTermChange","onSortColumn","column","getNoPermissionsTooltip","role","showOnDisabledElements","showDelay","appearance","disabled","isMediaFieldInherited","forceMediaInheritanceRemove","onMediaInheritanceRestore","isInlineEdit","coverId","getIds","mediaId","remove","onMediaInheritanceRemove","_this9","_ref2","mediaItem","api","assign","_this10","searchResult","resetFilterOptions","_this11","filterOptionChecked","checked","includeOption","_this$productEntity2","isDeleted","toggleFilterMenu","toggleBulkEditModal","onEditItems","_this12","_callee2","includesDigital","digital","_context2","product","states","includes","isCloseout","variantIsDigital","content","__esModule","default","module","i","locals","exports","add"],"mappings":"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","file":"static/js/24a6c3e8b0d1b97e761f.js","sourcesContent":["/*\n * @package inventory\n */\n\nimport template from './sw-product-variant-modal.html.twig';\nimport './sw-product-variant-modal.scss';\n\nconst { Mixin, Context } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        // this is the parent product entity from wich we will get all the variants\n        productEntity: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            productVariants: [],\n            currency: null,\n            paginationLimit: 25,\n            paginationPage: 1,\n            toBeDeletedVariants: [],\n            showDeleteModal: false,\n            searchTerm: '',\n            isDeleteButtonLoading: false,\n            isDeletionOver: false,\n            sortDirection: 'ASC',\n            sortBy: 'productNumber',\n            isLoading: false,\n            groups: [],\n            filterOptions: [],\n            includeOptions: [],\n            filterWindowOpen: false,\n            showBulkEditModal: false,\n        };\n    },\n\n    computed: {\n        modalTitle() {\n            return this.$t('sw-product.list.variantModalTitle', { productName: this.productEntity.translated.name });\n        },\n\n        openMainProductText() {\n            return this.$t('sw-product.list.openMainProduct', { productName: this.productEntity.translated.name });\n        },\n\n        productRepository() {\n            return this.repositoryFactory.create('product');\n        },\n\n        productMediaRepository() {\n            return this.repositoryFactory.create(this.productEntity.media.entity);\n        },\n\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n\n        groupRepository() {\n            return this.repositoryFactory.create('property_group');\n        },\n\n        contextMenuEditText() {\n            return this.acl.can('product.editor') ?\n                this.$tc('global.default.edit') :\n                this.$tc('global.default.view');\n        },\n\n        filterCriteria() {\n            if (this.includeOptions.length <= 0) {\n                return [];\n            }\n\n            // Collect each selected option in a group\n            // [\n            //   {id: 'abc123', options: [...optionIds]},\n            //   {id: 'def456', options: [...optionIds]},\n            // ]\n            const optionInGroups = this.includeOptions.reduce((result, option) => {\n                const parentGroup = result.find((group) => group.id === option.groupId);\n\n                // Push to group when array exists\n                if (parentGroup) {\n                    parentGroup.options.push(option.id);\n                } else {\n                    // otherwise create new group with the option\n                    result.push({\n                        id: option.groupId,\n                        options: [option.id],\n                    });\n                }\n\n                return result;\n            }, []);\n\n            return optionInGroups.map((group) => {\n                return Criteria.equalsAny('product.optionIds', group.options);\n            });\n        },\n\n        productVariantCriteria() {\n            const criteria = new Criteria(this.paginationPage, this.paginationLimit);\n\n            // this is the id of the main product.\n            const productEntityId = this.productEntity.id;\n            criteria.addFilter(Criteria.equals('parentId', productEntityId));\n\n            if (this.searchTerm) {\n                criteria.setTerm(this.searchTerm);\n            }\n\n            criteria.getAssociation('options')\n                .addAssociation('group');\n            criteria.addAssociation('cover');\n            criteria.addAssociation('media');\n\n            if (this.searchTerm) {\n                // Split each word for search\n                const terms = this.searchTerm.split(' ');\n\n                // Create query for each single word\n                terms.forEach(term => {\n                    criteria.addQuery(Criteria.equals('product.options.name', term), 3500);\n                    criteria.addQuery(Criteria.contains('product.options.name', term), 500);\n                });\n            }\n\n            // User selected filters\n            if (this.filterCriteria) {\n                this.filterCriteria.forEach((cri) => {\n                    criteria.addFilter(cri);\n                });\n            }\n\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, true));\n\n            return criteria;\n        },\n\n        gridColumns() {\n            return [\n                {\n                    property: 'name',\n                    dataIndex: 'name',\n                    label: this.$tc('sw-product.list.columnName'),\n                    routerLink: 'sw.product.detail',\n                    inlineEdit: 'string',\n                    allowResize: true,\n                },\n                {\n                    property: 'sales',\n                    dataIndex: 'sales',\n                    label: this.$tc('sw-product.list.columnSales'),\n                    allowResize: true,\n                    align: 'right',\n                },\n                {\n                    property: 'price',\n                    dataIndex: `price.${this.currency?.id || ''}.net`,\n                    label: 'sw-product.list.columnPrice',\n                    allowResize: true,\n                    width: '250px',\n                    inlineEdit: 'number',\n                    align: 'right',\n                },\n                {\n                    property: 'stock',\n                    dataIndex: 'stock',\n                    label: 'sw-product.list.columnInStock',\n                    allowResize: true,\n                    inlineEdit: 'number',\n                    align: 'right',\n                },\n                {\n                    property: 'active',\n                    dataIndex: 'active',\n                    label: 'sw-product.list.columnActive',\n                    allowResize: true,\n                    inlineEdit: 'boolean',\n                    align: 'center',\n                },\n                {\n                    property: 'productNumber',\n                    dataIndex: 'productNumber',\n                    label: 'sw-product.list.columnProductNumber',\n                    allowResize: true,\n                    align: 'right',\n                },\n                {\n                    property: 'media',\n                    dataIndex: 'media',\n                    label: this.$tc('sw-product.list.columnMedia'),\n                    allowResize: true,\n                    inlineEdit: true,\n                    sortable: false,\n                },\n            ];\n        },\n\n        canBeDeletedCriteria() {\n            const criteria = new Criteria(1, 25);\n            const variantIds = this.toBeDeletedVariants.map(variant => variant.id);\n            criteria.addFilter(Criteria.equalsAny('canonicalProductId', variantIds));\n\n            return criteria;\n        },\n\n        groupCriteria() {\n            return new Criteria(1, 100);\n        },\n\n        selectedGroups() {\n            // get groups for selected options\n            const groupIds = this.productEntity?.configuratorSettings.reduce((result, element) => {\n                if (result.indexOf(element.option.groupId) < 0) {\n                    result.push(element.option.groupId);\n                }\n\n                return result;\n            }, []);\n\n            return this.groups?.filter((group) => {\n                return groupIds.indexOf(group.id) >= 0;\n            });\n        },\n\n        filterOptionsListing() {\n            // Prepare groups\n            const groups = [...this.selectedGroups]\n                .sort((a, b) => a.position - b.position).map((group, index) => {\n                    const children = this.getOptionsForGroup(group.id);\n\n                    return {\n                        id: group.id,\n                        name: group.name,\n                        childCount: children.length,\n                        parentId: null,\n                        afterId: index > 0 ? this.selectedGroups[index - 1].id : null,\n                        storeObject: group,\n                    };\n                });\n\n            // Prepare options\n            const children = groups.reduce((result, group) => {\n                const options = this.getOptionsForGroup(group.id);\n\n                // Iterate for each group options\n                const optionsForGroup = options.sort((elementA, elementB) => {\n                    return elementA.position - elementB.position;\n                }).map((element, index) => {\n                    const option = element.option;\n\n                    // Get previous element\n                    let afterId = null;\n                    if (index > 0) {\n                        afterId = options[index - 1].option.id;\n                    }\n\n                    return {\n                        id: option.id,\n                        name: option.name,\n                        childCount: 0,\n                        parentId: option.groupId,\n                        afterId,\n                        storeObject: element,\n                    };\n                });\n\n                return [...result, ...optionsForGroup];\n            }, []);\n\n            // Assign groups and children to order objects\n            return [...groups, ...children];\n        },\n\n        stockColorVariantFilter() {\n            return Shopware.Filter.getByName('stockColorVariant');\n        },\n    },\n\n    watch: {\n        selectedGroups() {\n            this.filterOptions = this.filterOptionsListing;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.fetchProductVariants();\n            this.fetchSystemCurrency();\n            this.loadGroups();\n        },\n\n        fetchSystemCurrency() {\n            const systemCurrencyId = Shopware.Context.app.systemCurrencyId;\n\n            this.currencyRepository.get(systemCurrencyId).then(response => {\n                this.currency = response;\n            });\n        },\n\n        fetchProductVariants() {\n            this.isLoading = true;\n\n            return this.productRepository.search(this.productVariantCriteria)\n                .then(response => {\n                    this.productVariants = response;\n                }).finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        getDefaultPriceForVariant(variant) {\n            if (!variant.price) {\n                return this.defaultPrice;\n            }\n\n            const foundDefaultPrice = variant.price.find((price) => {\n                return price.currencyId === this.defaultCurrency.id;\n            });\n\n            return foundDefaultPrice || this.defaultPrice;\n        },\n\n        onInheritanceRestore(variant, currency) {\n            if (!variant.price) {\n                return;\n            }\n\n            const foundVariantIndex = variant.price.findIndex((price) => {\n                return price.currencyId === currency.id;\n            });\n\n            if (foundVariantIndex >= 0) {\n                this.$delete(variant.price, foundVariantIndex);\n            }\n\n            if (variant.price.length <= 0) {\n                variant.price = null;\n            }\n        },\n\n        onInheritanceRemove(variant, currency) {\n            if (!variant.price) {\n                variant.price = [];\n            }\n\n            // create new price for selected currency\n            const defaultPrice = this.productEntity.price[0];\n            const newPrice = {\n                currencyId: currency.id,\n                gross: defaultPrice.gross * currency.factor,\n                linked: defaultPrice.linked,\n                net: defaultPrice.net * currency.factor,\n            };\n\n            // add new price currency to variant\n            this.$set(variant.price, variant.price.length, newPrice);\n        },\n\n        /**\n         * Sorts variant options by their position. If the position is the same it sorts them by their name.\n         * @param {Array} options\n         * @return {Array}\n         */\n        sortOptions(options) {\n            // making a local copy because using .sort directly on `option` causes an infinite loop\n            const localOptions = [...options];\n\n            return localOptions.sort((a, b) => {\n                if (a.position === b.position) {\n                    return a.name > b.name ? 1 : -1;\n                }\n\n                return a.position > b.position ? 1 : -1;\n            });\n        },\n\n        /**\n         * Returns a string with all options of an variant: \"(color: black, size: xl)\"\n         * @param {object} variant\n         * @returns {string}\n         */\n        buildVariantOptions(variant, seperator = ', ', ommitParenthesis = false, ommitOptionGroupName = false) {\n            const options = variant.options;\n\n            const sortedOptions = this.sortOptions(options);\n\n            /* Creates following string: \"color: black, size: xl\".\n             * The slice method removes the last two chars from the string wich are: \", \".\n             */\n            const formattedOptions = sortedOptions.reduce((accumulator, currentOption) => {\n                const optionValue = currentOption.translated.name;\n                const optionGroupName = currentOption.group.translated.name;\n\n                return accumulator.concat(\n                    !ommitOptionGroupName ? optionGroupName : '',\n                    !ommitOptionGroupName ? ': ' : '',\n                    optionValue,\n                    seperator,\n                );\n            }, '').slice(0, -seperator.length);\n\n            return ommitParenthesis ? formattedOptions : `(${formattedOptions})`;\n        },\n\n        /**\n         * Returns a string with the name of the variant and the options: T-Shirt (black, xl)\n         * @param {object} variant\n         * @returns {string}\n         */\n        buildVariantName(variant) {\n            const options = this.buildVariantOptions(variant);\n            const variantName = variant.translated.name || this.productEntity.translated.name;\n\n            return `${variantName} ${options}`;\n        },\n\n        /**\n         * Returns the price of a variant. If the variant has no price it gets the price of the parent product.\n         * @param {object} variant\n         * @returns {number}\n         */\n        getVariantPrice(variant) {\n            const variantPrice = variant.price;\n\n            return variantPrice ? variantPrice[0] : this.productEntity.price[0];\n        },\n\n        onPageChange({ limit = 25, page = 1 }) {\n            this.paginationLimit = limit;\n            this.paginationPage = page;\n\n            this.fetchProductVariants();\n        },\n\n        visitProduct(productId) {\n            this.$emit('modal-close');\n\n            // using $nextTick to wait unit the dom has updated and the modal is closed\n            this.$nextTick().then(() => {\n                this.$router.push({\n                    name: 'sw.product.detail',\n                    params: {\n                        id: productId,\n                    },\n                });\n            });\n        },\n\n        getItemMedia(item) {\n            if (item.cover) {\n                return item.cover.media;\n            }\n\n            if (this.productEntity.cover) {\n                return this.productEntity.cover.media;\n            }\n\n            return null;\n        },\n\n        deleteVariants() {\n            this.isDeleteButtonLoading = true;\n\n            const variantIds = this.toBeDeletedVariants.map(variant => variant.id);\n            const variantName = this.toBeDeletedVariants[0].translated.name || this.productEntity.translated.name;\n            const amount = variantIds.length;\n\n            this.canVariantsBeDeleted().then(canBeDeleted => {\n                if (!canBeDeleted) {\n                    this.isDeleteButtonLoading = false;\n                    this.isDeletionOver = true;\n\n                    this.createNotificationError({\n                        message: this.$tc(\n                            'sw-product.list.notificationVariantDeleteErrorCanonicalUrl',\n                            amount,\n                            { variantName },\n                        ),\n                    });\n\n                    return;\n                }\n\n                this.productRepository.syncDeleted(variantIds)\n                    .then(() => {\n                        this.createNotificationSuccess({\n                            message: this.$tc(\n                                'sw-product.list.notificationVariantDeleteSuccess',\n                                amount,\n                                { variantName, amount },\n                            ),\n                        });\n\n                        this.$refs.variantGrid.resetSelection();\n\n                        this.fetchProductVariants();\n                    })\n                    .catch(() => {\n                        this.createNotificationError({\n                            message: this.$tc(\n                                'sw-product.list.notificationVariantDeleteError',\n                                amount,\n                                { variantName, amount },\n                            ),\n                        });\n                    })\n                    .finally(() => {\n                        this.isDeleteButtonLoading = false;\n                        this.isDeletionOver = true;\n                    });\n            });\n        },\n\n        async canVariantsBeDeleted() {\n            const products = await this.productRepository.search(this.canBeDeletedCriteria);\n\n            return products.length === 0;\n        },\n\n        onInlineEditSave(editedVariant) {\n            const variantName = this.buildVariantName(editedVariant);\n\n            this.productRepository.save(editedVariant).then(() => {\n                this.createNotificationSuccess({\n                    message: this.$t('sw-product.list.notificationVariantSaveSuccess', { variantName }),\n                });\n\n                this.fetchProductVariants();\n            });\n        },\n\n        onInlineEditCancel() {\n            this.fetchProductVariants();\n        },\n\n        onClickBulkDelete() {\n            const gridSelection = this.$refs.variantGrid.selection;\n            this.toBeDeletedVariants = Object.values(gridSelection);\n\n            this.showDeleteModal = true;\n        },\n\n        closeDeleteModal() {\n            this.showDeleteModal = false;\n            this.toBeDeletedVariants = [];\n            this.isDeletionOver = false;\n        },\n\n        onDeleteVariant(variant) {\n            this.toBeDeletedVariants.push(variant);\n\n            this.showDeleteModal = true;\n        },\n\n        onSearchTermChange() {\n            this.fetchProductVariants();\n        },\n\n        onSortColumn(column) {\n            if (this.sortBy === column.dataIndex) {\n                this.sortDirection = this.sortDirection === 'ASC' ? 'DESC' : 'ASC';\n            } else {\n                this.sortBy = column.dataIndex;\n            }\n\n            this.fetchProductVariants();\n        },\n\n        getNoPermissionsTooltip(role, showOnDisabledElements = true) {\n            return {\n                showDelay: 300,\n                message: this.$tc('sw-privileges.tooltip.warning'),\n                appearance: 'dark',\n                showOnDisabledElements,\n                disabled: this.acl.can(role),\n            };\n        },\n\n        isMediaFieldInherited(variant) {\n            if (variant.forceMediaInheritanceRemove) {\n                return false;\n            }\n\n            if (variant.media) {\n                return variant.media.length <= 0;\n            }\n\n            return !!variant.media;\n        },\n\n        onMediaInheritanceRestore(variant, isInlineEdit) {\n            if (!isInlineEdit) {\n                return;\n            }\n\n            variant.forceMediaInheritanceRemove = false;\n            variant.coverId = null;\n\n            variant.media.getIds().forEach((mediaId) => {\n                variant.media.remove(mediaId);\n            });\n        },\n\n        onMediaInheritanceRemove(variant, isInlineEdit) {\n            if (!isInlineEdit) {\n                return;\n            }\n\n            variant.forceMediaInheritanceRemove = true;\n            this.productEntity.media.forEach(({ id, mediaId, position, media }) => {\n                const mediaItem = this.productMediaRepository.create(Context.api);\n                Object.assign(mediaItem, { mediaId, position, productId: this.productEntity.id, media });\n\n                if (this.productEntity.coverId === id) {\n                    variant.coverId = mediaItem.id;\n                }\n\n                variant.media.push(mediaItem);\n            });\n        },\n\n        loadGroups() {\n            return this.groupRepository.search(this.groupCriteria).then((searchResult) => {\n                this.groups = searchResult;\n            });\n        },\n\n        resetFilterOptions() {\n            this.filterOptions = [];\n            this.includeOptions = [];\n\n            this.$nextTick(() => {\n                this.filterOptions = this.filterOptionsListing;\n                this.fetchProductVariants();\n            });\n        },\n\n        filterOptionChecked(option) {\n            if (option.checked) {\n                // Remove from include list\n                this.includeOptions.push({\n                    id: option.id,\n                    groupId: option.parentId,\n                });\n                return;\n            }\n            // Remove option from option list which is unchecked\n            this.includeOptions = this.includeOptions.filter((includeOption) => includeOption.id !== option.id);\n        },\n\n        getOptionsForGroup(groupId) {\n            return this.productEntity?.configuratorSettings.filter((element) => {\n                return !element.isDeleted && element.option.groupId === groupId;\n            });\n        },\n\n        toggleFilterMenu() {\n            this.filterWindowOpen = !this.filterWindowOpen;\n        },\n\n        toggleBulkEditModal() {\n            this.showBulkEditModal = !this.showBulkEditModal;\n        },\n\n        async onEditItems() {\n            await this.$nextTick();\n\n            let includesDigital = '0';\n            const digital = Object.values(this.$refs.variantGrid.selection)\n                .filter(product => product.states.includes('is-download'));\n            if (digital.length > 0) {\n                includesDigital = (digital.filter(product => product.isCloseout).length !== digital.length) ? '1' : '2';\n            }\n\n            this.$router.push({\n                name: 'sw.bulk.edit.product',\n                params: {\n                    parentId: this.productEntity.id,\n                    includesDigital,\n                },\n            });\n        },\n\n        variantIsDigital(variant) {\n            return variant.states && variant.states.includes('is-download');\n        },\n    },\n};\n","export default \"\\n\\n{% block sw_product_variant_modal %}\\n<sw-modal\\n    class=\\\"sw-product-variant-modal\\\"\\n    :title=\\\"modalTitle\\\"\\n    variant=\\\"full\\\"\\n    @modal-close=\\\"$emit('modal-close')\\\"\\n>\\n\\n    \\n    {% block sw_product_variant_modal_body %}\\n\\n    \\n    {% block sw_product_variant_modal_toolbar %}\\n    <div class=\\\"sw-configuration-option-list__toolbar\\\">\\n        \\n        {% block sw_product_variant_modal_toolbar_container %}\\n        <sw-container\\n            columns=\\\"1fr minmax(50px, max-content)\\\"\\n            gap=\\\"0 16px\\\"\\n        >\\n\\n            \\n            {% block sw_product_variant_modal_body_label_search %}\\n            <sw-simple-search-field\\n                v-model=\\\"searchTerm\\\"\\n                class=\\\"sw-product-variant-modal__search\\\"\\n                size=\\\"small\\\"\\n                variant=\\\"form\\\"\\n                @search-term-change=\\\"onSearchTermChange\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variant_modal_option_list_toolbar_container_filter_list %}\\n            <div class=\\\"sw-product-variant-modal__filter-list-button\\\">\\n\\n                \\n                {% block sw_product_variant_modal_option_list_toolbar_container_filter_list_button %}\\n                <sw-button\\n                    class=\\\"sw-product-variant-modal__button-filter\\\"\\n                    @click=\\\"toggleFilterMenu\\\"\\n                >\\n                    {{ $tc('sw-product.variations.generatedFilterList') }}\\n                    <sw-icon name=\\\"regular-filter\\\" />\\n                </sw-button>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variant_modal_option_list_toolbar_container_filter_context_menu %}\\n                <sw-context-menu\\n                    v-show=\\\"filterWindowOpen\\\"\\n                    class=\\\"sw-product-variant-modal__filter-context-menu\\\"\\n                >\\n                    <sw-container\\n                        columns=\\\"1fr\\\"\\n                        gap=\\\"5px\\\"\\n                    >\\n\\n                        \\n                        {% block sw_product_variant_modal_option_list_toolbar_container_filter_tree %}\\n                        <sw-tree\\n                            v-show=\\\"filterOptions.length\\\"\\n                            :sortable=\\\"false\\\"\\n                            :items=\\\"filterOptions\\\"\\n                            :searchable=\\\"false\\\"\\n                            disable-context-menu\\n                            bind-items-to-folder\\n                        >\\n                            <template #items=\\\"{ treeItems, sortable, draggedItem, disableContextMenu, onChangeRoute, checkItem}\\\">\\n                                <sw-tree-item\\n                                    v-for=\\\"(item, index) in treeItems\\\"\\n                                    :key=\\\"item.id\\\"\\n                                    :sortable=\\\"false\\\"\\n                                    :item=\\\"item\\\"\\n                                    disable-context-menu\\n                                    @check-item=\\\"filterOptionChecked\\\"\\n                                />\\n                            </template>\\n                        </sw-tree>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_product_variant_modal_option_list_toolbar_container_filter_buttons %}\\n                        <div class=\\\"sw-product-variant-modal__filter-buttons\\\">\\n                            \\n                            {% block sw_product_variant_modal_option_list_toolbar_container_button_filter_reset %}\\n                            <sw-button\\n                                class=\\\"sw-product-variant-modal__reset-filter\\\"\\n                                @click=\\\"resetFilterOptions\\\"\\n                            >\\n                                {{ $tc('sw-product.variations.overview.filterReset') }}\\n                            </sw-button>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_product_variant_modal_option_list_toolbar_container_button_update_list %}\\n                            <sw-button\\n                                variant=\\\"primary\\\"\\n                                @click=\\\"fetchProductVariants\\\"\\n                            >\\n                                {{ $tc('sw-product.variations.overview.filter') }}\\n                            </sw-button>\\n                            {% endblock %}\\n                        </div>\\n                        {% endblock %}\\n\\n                    </sw-container>\\n                </sw-context-menu>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </sw-container>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variant_modal_body_grid %}\\n    <sw-data-grid\\n        v-if=\\\"productVariants.length > 0\\\"\\n        ref=\\\"variantGrid\\\"\\n        :is-loading=\\\"isLoading\\\"\\n        :columns=\\\"gridColumns\\\"\\n        :data-source=\\\"productVariants\\\"\\n        :sort-by=\\\"sortBy\\\"\\n        :sort-direction=\\\"sortDirection\\\"\\n        :allow-inline-edit=\\\"acl.can('product.editor')\\\"\\n        show-settings\\n        @column-sort=\\\"onSortColumn\\\"\\n        @inline-edit-save=\\\"onInlineEditSave\\\"\\n        @inline-edit-cancel=\\\"onInlineEditCancel\\\"\\n    >\\n\\n        \\n        {% block sw_product_variant_modal_body_grid_bulk %}\\n        <template #bulk>\\n            \\n            {% block sw_product_variant_modal_body_grid_bulk_edit %}\\n            <span\\n                v-if=\\\"acl.can('product.editor')\\\"\\n                class=\\\"link link-primary sw-product-variant-modal__bulk-edit-action\\\"\\n                role=\\\"link\\\"\\n                tabindex=\\\"0\\\"\\n                @click=\\\"toggleBulkEditModal\\\"\\n            >\\n                {{ $tc('global.default.bulkEdit') }}\\n            </span>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variant_modal_body_grid_bulk_delete %}\\n            <span\\n                v-if=\\\"acl.can('product.deleter')\\\"\\n                class=\\\"link link-danger sw-product-variant-modal__bulk-delete-action\\\"\\n                role=\\\"link\\\"\\n                tabindex=\\\"0\\\"\\n                @click=\\\"onClickBulkDelete\\\"\\n            >\\n                {{ $tc('global.default.delete') }}\\n            </span>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variant_modal_bulk_edit_modal %}\\n        <template #bulk-modals=\\\"{ selection }\\\">\\n            <sw-bulk-edit-modal\\n                v-if=\\\"showBulkEditModal\\\"\\n                class=\\\"sw-product-variant-modal__bulk-edit-modal\\\"\\n                :selection=\\\"selection\\\"\\n                :bulk-grid-edit-columns=\\\"gridColumns\\\"\\n                @edit-items=\\\"onEditItems\\\"\\n                @modal-close=\\\"toggleBulkEditModal\\\"\\n            >\\n                \\n                {% block sw_product_variant_modal_bulk_edit_modal_column_name %}\\n                <template #column-name=\\\"{ item }\\\">\\n                    <sw-media-preview-v2 :source=\\\"getItemMedia(item)\\\" />\\n                    <router-link :to=\\\"{ name: 'sw.product.detail', params: { id: item.id } }\\\">\\n                        <span\\n                            v-if=\\\"item.translated.name\\\"\\n                            class=\\\"sw-product-variant-modal__variant-name\\\"\\n                        >\\n                            {{ item.translated.name }}\\n                        </span>\\n                        <sw-product-variant-info\\n                            v-else\\n                            class=\\\"sw-product-variant-modal__variant-options\\\"\\n                            :variations=\\\"item.variation\\\"\\n                            :show-tooltip=\\\"false\\\"\\n                            :ommit-parenthesis=\\\"true\\\"\\n                            seperator=\\\", \\\"\\n                        />\\n                    </router-link>\\n                    <sw-product-variant-info\\n                        v-if=\\\"item.translated.name\\\"\\n                        :variations=\\\"item.variation\\\"\\n                        :show-tooltip=\\\"false\\\"\\n                    />\\n                    <sw-label\\n                        v-if=\\\"variantIsDigital(item)\\\"\\n                        class=\\\"sw-product-variant-modal__digital-indicator\\\"\\n                    >\\n                        {{ $tc('sw-product.variations.generatedListColumnContentProductState.is-download') }}\\n                    </sw-label>\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variant_modal_bulk_edit_modal_column_price %}\\n                <template #column-price=\\\"{ item }\\\">\\n                    <sw-inheritance-switch\\n                        class=\\\"sw-product-variant-modal__price-inheritance-switch\\\"\\n                        :is-inherited=\\\"item.price === null\\\"\\n                        disabled\\n                    />\\n                    <sw-price-preview\\n                        :price=\\\"item.price ? item.price : []\\\"\\n                        :default-price=\\\"productEntity.price[0]\\\"\\n                        :tax-rate=\\\"productEntity.tax\\\"\\n                        :currency=\\\"currency\\\"\\n                    />\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variant_modal_bulk_edit_modal_column_stock %}\\n                <template #column-stock=\\\"{ item }\\\">\\n                    {{ item.stock }}\\n                    <sw-color-badge :variant=\\\"stockColorVariant(item.stock)\\\" />\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variant_modal_bulk_edit_modal_column_active %}\\n                <template #column-active=\\\"{ item }\\\">\\n                    <sw-icon\\n                        v-if=\\\"item.active === true\\\"\\n                        class=\\\"sw-icon--product-status is--active\\\"\\n                        name=\\\"regular-checkmark-xs\\\"\\n                        small\\n                    />\\n                    <sw-icon\\n                        v-else-if=\\\"item.active === false\\\"\\n                        class=\\\"sw-icon--product-status is--inactive\\\"\\n                        name=\\\"regular-times-s\\\"\\n                        small\\n                    />\\n                    <sw-icon\\n                        v-else\\n                        key=\\\"inherit-icon\\\"\\n                        name=\\\"regular-link-horizontal\\\"\\n                        size=\\\"16\\\"\\n                        multicolor\\n                    />\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variant_modal_bulk_edit_modal_column_media %}\\n                <template #column-media=\\\"{ item }\\\">\\n                    <sw-inheritance-switch\\n                        class=\\\"sw-product-variant-modal__media-inherited-icon\\\"\\n                        :is-inherited=\\\"isMediaFieldInherited(item)\\\"\\n                        disabled\\n                    />\\n                    <sw-product-variants-media-upload\\n                        :source=\\\"item\\\"\\n                        :upload-tag=\\\"item.id\\\"\\n                        :is-inherited=\\\"isMediaFieldInherited(item)\\\"\\n                        :parent-product=\\\"productEntity\\\"\\n                        disabled\\n                    />\\n                </template>\\n                {% endblock %}\\n            </sw-bulk-edit-modal>\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variant_modal_body_grid_column_name %}\\n        <template #column-name=\\\"{item, isInlineEdit}\\\">\\n\\n            \\n            {% block sw_product_variant_modal_body_grid_column_name_inline_edit %}\\n            <sw-text-field\\n                v-if=\\\"isInlineEdit\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"item.name\\\"\\n                {% else %}\\n                v-model=\\\"item.name\\\"\\n                {% endif %}\\n                :placeholder=\\\"$tc('sw-product.list.variantModalInlineEditProductNamePlaceholder')\\\"\\n                size=\\\"small\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variant_modal_body_grid_column_name_content %}\\n            <template v-else>\\n                \\n                {% block sw_product_variant_modal_body_grid_column_name_content_media_preview %}\\n                <sw-media-preview-v2 :source=\\\"getItemMedia(item)\\\" />\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variant_modal_body_grid_column_name_content_name %}\\n                <router-link :to=\\\"{ name: 'sw.product.detail', params: { id: item.id } }\\\">\\n                    <span\\n                        v-if=\\\"item.translated.name\\\"\\n                        class=\\\"sw-product-variant-modal__variant-name\\\"\\n                    >\\n                        {{ item.translated.name }}\\n                    </span>\\n\\n                    <sw-product-variant-info\\n                        v-else\\n                        class=\\\"sw-product-variant-modal__variant-options\\\"\\n                        :variations=\\\"item.variation\\\"\\n                        :show-tooltip=\\\"false\\\"\\n                        :ommit-parenthesis=\\\"true\\\"\\n                        seperator=\\\", \\\"\\n                    />\\n                </router-link>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variant_modal_body_grid_column_name_content_options %}\\n                <sw-product-variant-info\\n                    v-if=\\\"item.translated.name\\\"\\n                    :variations=\\\"item.variation\\\"\\n                    :show-tooltip=\\\"false\\\"\\n                />\\n                {% endblock %}\\n\\n                <sw-label\\n                    v-if=\\\"variantIsDigital(item)\\\"\\n                    class=\\\"sw-product-variant-modal__digital-indicator\\\"\\n                >\\n                    {{ $tc('sw-product.variations.generatedListColumnContentProductState.is-download') }}\\n                </sw-label>\\n            </template>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variant_modal_body_grid_column_price %}\\n        <template #column-price=\\\"{item, isInlineEdit}\\\">\\n            <template v-if=\\\"isInlineEdit\\\">\\n                <sw-inheritance-switch\\n                    :is-inherited=\\\"item.price === null\\\"\\n                    class=\\\"sw-product-variant-modal__price-inheritance-switch\\\"\\n                    @inheritance-restore=\\\"onInheritanceRestore(item, currency)\\\"\\n                    @inheritance-remove=\\\"onInheritanceRemove(item, currency)\\\"\\n                />\\n\\n                <sw-price-field\\n                    :price=\\\"item.price ? item.price : []\\\"\\n                    :default-price=\\\"productEntity.price[0]\\\"\\n                    :tax-rate=\\\"productEntity.tax\\\"\\n                    :label=\\\"false\\\"\\n                    :compact=\\\"true\\\"\\n                    :disable-suffix=\\\"true\\\"\\n                    enable-inheritance\\n                    :currency=\\\"currency\\\"\\n                />\\n            </template>\\n\\n            <template v-else>\\n                <sw-inheritance-switch\\n                    :is-inherited=\\\"item.price === null\\\"\\n                    class=\\\"sw-product-variant-modal__price-inheritance-switch\\\"\\n                    disabled\\n                />\\n\\n                <sw-price-preview\\n                    :price=\\\"item.price ? item.price : []\\\"\\n                    :default-price=\\\"productEntity.price[0]\\\"\\n                    :tax-rate=\\\"productEntity.tax\\\"\\n                    :currency=\\\"currency\\\"\\n                />\\n            </template>\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variant_modal_body_grid_column_stock %}\\n        <template #column-stock=\\\"{item, isInlineEdit}\\\">\\n\\n            \\n            {% block sw_product_variant_modal_body_grid_column_stock_inline_edit %}\\n            <sw-number-field\\n                v-if=\\\"isInlineEdit\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"item.stock\\\"\\n                {% else %}\\n                v-model=\\\"item.stock\\\"\\n                {% endif %}\\n                :placeholder=\\\"$tc('sw-product.list.variantModalInlineEditStockPlaceholder')\\\"\\n                size=\\\"small\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variant_modal_body_grid_column_stock_content %}\\n            <template v-else>\\n                {{ item.stock }}\\n                <sw-color-badge :variant=\\\"stockColorVariantFilter(item.stock)\\\" />\\n            </template>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variant_modal_body_grid_column_active %}\\n        <template #column-active=\\\"{item, isInlineEdit}\\\">\\n\\n            \\n            {% block sw_product_variant_modal_body_grid_column_active_inline_edit %}\\n            <template v-if=\\\"isInlineEdit\\\">\\n                <sw-checkbox-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"item.active\\\"\\n                    {% else %}\\n                    v-model=\\\"item.active\\\"\\n                    {% endif %}\\n                    :disabled=\\\"item.active === null\\\"\\n                />\\n\\n                <sw-inheritance-switch\\n                    :is-inherited=\\\"item.active === null\\\"\\n                    class=\\\"sw-product-variant-modal__active-inheritance-switch\\\"\\n                    @inheritance-restore=\\\"item.active = null\\\"\\n                    @inheritance-remove=\\\"item.active = true\\\"\\n                />\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variant_modal_body_grid_column_active_content %}\\n            <template v-else>\\n\\n                \\n                {% block sw_product_variant_modal_body_grid_column_active_content_icon_active %}\\n                <sw-icon\\n                    v-if=\\\"item.active === true\\\"\\n                    name=\\\"regular-checkmark-xs\\\"\\n                    small\\n                    class=\\\"sw-icon--product-status is--active\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variant_modal_body_grid_column_active_content_icon_not_active %}\\n                <sw-icon\\n                    v-else-if=\\\"item.active === false\\\"\\n                    name=\\\"regular-times-s\\\"\\n                    small\\n                    class=\\\"sw-icon--product-status is--inactive\\\"\\n                />\\n                {% endblock %}\\n\\n                <sw-icon\\n                    v-else\\n                    key=\\\"inherit-icon\\\"\\n                    :multicolor=\\\"true\\\"\\n                    name=\\\"regular-link-horizontal\\\"\\n                    size=\\\"16\\\"\\n                />\\n            </template>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variant_modal_body_grid_column_media %}\\n        <template\\n            #column-media=\\\"{ item, isInlineEdit, compact }\\\"\\n        >\\n            \\n            {% block sw_product_variant_modal_body_grid_column_media_inline_edit %}\\n            \\n            {% block sw_product_variant_modal_body_grid_column_media_inherit %}\\n            <sw-inheritance-switch\\n                :is-inherited=\\\"isMediaFieldInherited(item)\\\"\\n                :disabled=\\\"!isInlineEdit\\\"\\n                class=\\\"sw-product-variant-modal__media-inherited-icon\\\"\\n                @inheritance-restore=\\\"onMediaInheritanceRestore(item, isInlineEdit)\\\"\\n                @inheritance-remove=\\\"onMediaInheritanceRemove(item, isInlineEdit)\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variant_modal_body_grid_column_media_content %}\\n            <sw-product-variants-media-upload\\n                :source=\\\"item\\\"\\n                :upload-tag=\\\"item.id\\\"\\n                :is-inherited=\\\"isMediaFieldInherited(item)\\\"\\n                :disabled=\\\"isInlineEdit ? isMediaFieldInherited(item) : true\\\"\\n                :parent-product=\\\"productEntity\\\"\\n            />\\n            {% endblock %}\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variant_modal_body_grid_actions %}\\n        <template #actions=\\\"{item}\\\">\\n\\n            \\n            {% block sw_product_variant_modal_body_grid_actions_edit %}\\n            <sw-context-menu-item @click=\\\"visitProduct(item.id)\\\">\\n                {{ contextMenuEditText }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variant_modal_body_grid_actions_delete %}\\n            <sw-context-menu-item\\n                v-tooltip.left=\\\"getNoPermissionsTooltip('product.deleter')\\\"\\n                variant=\\\"danger\\\"\\n                :disabled=\\\"!acl.can('product.deleter')\\\"\\n                @click=\\\"onDeleteVariant(item)\\\"\\n            >\\n                {{ $tc('global.default.delete') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variant_modal_body_grid_pagination %}\\n        <template #pagination>\\n            <sw-pagination\\n                v-if=\\\"productVariants.length !== 0\\\"\\n                ref=\\\"pagination\\\"\\n                :page=\\\"paginationPage\\\"\\n                :limit=\\\"paginationLimit\\\"\\n                :total=\\\"productVariants.total\\\"\\n                @page-change=\\\"onPageChange\\\"\\n            />\\n        </template>\\n        {% endblock %}\\n    </sw-data-grid>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variant_modal_body_empty_state %}\\n    <sw-empty-state\\n        v-else\\n        title=\\\"\\\"\\n        :subline=\\\"$tc('sw-product.list.variantGridEmptyStateSubline')\\\"\\n        :absolute=\\\"false\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variant_modal_body_delete_modal %}\\n    <sw-modal\\n        v-if=\\\"showDeleteModal\\\"\\n        class=\\\"sw-product-variant-modal__delete-modal\\\"\\n        :title=\\\"$tc('sw-product.list.variantDeleteModalTitle')\\\"\\n        variant=\\\"small\\\"\\n        @modal-close=\\\"closeDeleteModal\\\"\\n    >\\n\\n        \\n        {% block sw_product_variant_modal_body_delete_modal_body_multiple %}\\n        <template v-if=\\\"toBeDeletedVariants.length > 1\\\">\\n\\n            \\n            {% block sw_product_variant_modal_body_delete_modal_body_multiple_text %}\\n            <p>{{ $t('sw-product.list.multipleVariantsDeleteModalText', { amount: toBeDeletedVariants.length }) }}</p>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variant_modal_body_delete_modal_body_multiple_subline %}\\n            <p class=\\\"sw-product-variant-modal__delete-modal-subline\\\">\\n                ({{ $tc('sw-product.list.multipleVariantsDeleteModalSubline') }})\\n            </p>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variant_modal_body_delete_modal_body_single %}\\n        <p v-else>\\n            {{ $t('sw-product.list.variantDeleteModalText', { variantName: buildVariantName(toBeDeletedVariants[0]) }) }}\\n        </p>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variant_modal_body_delete_modal_footer %}\\n        <template #modal-footer>\\n\\n            \\n            {% block sw_product_variant_modal_body_delete_modal_footer_close %}\\n            <sw-button\\n                size=\\\"small\\\"\\n                @click=\\\"closeDeleteModal\\\"\\n            >\\n                {{ $tc('global.default.cancel') }}\\n            </sw-button>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variant_modal_body_delete_modal_footer_confirm %}\\n            <sw-button-process\\n                variant=\\\"danger\\\"\\n                size=\\\"small\\\"\\n                :animation-timeout=\\\"750\\\"\\n                :process-success=\\\"isDeletionOver\\\"\\n                :is-loading=\\\"isDeleteButtonLoading\\\"\\n                @click=\\\"deleteVariants\\\"\\n                {% if VUE3 %}\\n                @update:process-success=\\\"closeDeleteModal\\\"\\n                {% else %}\\n                @process-finish=\\\"closeDeleteModal\\\"\\n                {% endif %}\\n            >\\n                {{ $tc('global.default.delete') }}\\n            </sw-button-process>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n    </sw-modal>\\n    {% endblock %}\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variant_modal_footer %}\\n    <template #modal-footer>\\n        \\n        {% block sw_product_variant_modal_footer_visit_main_product %}\\n        <div\\n            class=\\\"sw-product-variant-modal__main-product-link\\\"\\n            role=\\\"button\\\"\\n            tabindex=\\\"0\\\"\\n            @click=\\\"visitProduct(productEntity.id)\\\"\\n        >\\n            {{ openMainProductText }}\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variant_modal_footer_close_button %}\\n        <sw-button\\n            size=\\\"small\\\"\\n            @click=\\\"$emit('modal-close')\\\"\\n        >\\n            {{ $tc('global.sw-modal.labelClose') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n</sw-modal>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-variant-modal.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"b3f4aeac\", content, true, {});"],"sourceRoot":""}