{"version":3,"sources":["webpack:///./src/module/sw-settings/page/sw-settings-index/sw-settings-index.scss","webpack:///./src/module/sw-settings/page/sw-settings-index/index.js","webpack:///./src/module/sw-settings/page/sw-settings-index/sw-settings-index.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","hasOwnProperty","Shopware","Utils","object","template","inject","metaInfo","title","this","$createTitle","computed","settingsGroups","_this","Object","entries","State","get","reduce","acc","_ref","_ref2","_slicedToArray","groupName","group","filter","setting","privilege","acl","can","sort","a","b","_a$label","_b$label","labelA","label","labelB","$tc","localeCompare","length","methods","hasPluginConfig","plugins","getRouteConfig","settingsItem","to","name","_typeof","getLabel","translated"],"mappings":"0GAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,uFCHpCQ,G,UAAmBC,SAASC,MAAMC,OAAlCH,gBAGO,WACXI,SCVW,+tKDYXC,OAAQ,CAAC,OAETC,SAAQ,WACJ,MAAO,CACHC,MAAOC,KAAKC,iBAIpBC,SAAU,CACNC,eAAc,WAAI,IAADC,EAAA,KACPD,EAAiBE,OAAOC,QAAQb,SAASc,MAAMC,IAAI,iBAAiBL,gBAC1E,OAAOA,EAAeM,QAAO,SAACC,EAAGC,GAAkC,IAADC,EAAAC,IAAAF,EAAA,GAA9BG,EAASF,EAAA,GACnCG,EADkDH,EAAA,GAEnDI,QAAO,SAACC,GACL,OAAKA,EAAQC,WAINd,EAAKe,IAAIC,IAAIH,EAAQC,cAE/BG,MAAK,SAACC,EAAGC,GAAO,IAADC,EAAAC,EACNC,EAA4B,iBAAZJ,EAAEK,MAAqBL,EAAEK,MAAe,QAAVH,EAAGF,EAAEK,aAAK,IAAAH,OAAA,EAAPA,EAASG,MAC1DC,EAA4B,iBAAZL,EAAEI,MAAqBJ,EAAEI,MAAe,QAAVF,EAAGF,EAAEI,aAAK,IAAAF,OAAA,EAAPA,EAASE,MAEhE,OAAOvB,EAAKyB,IAAIH,GAAQI,cAAc1B,EAAKyB,IAAID,OAOvD,OAJIb,EAAMgB,OAAS,IACfrB,EAAII,GAAaC,GAGdL,IACR,MAIXsB,QAAS,CACLC,gBAAe,WACX,OAAQzC,EAAeQ,KAAKG,eAAgB,YAAcH,KAAKG,eAAe+B,QAAQH,OAAS,GAGnGI,eAAc,SAACC,GACX,OAAK5C,EAAe4C,EAAc,MAIH,iBAApBA,EAAaC,GACb,CAAEC,KAAMF,EAAaC,IAGD,WAA3BE,IAAOH,EAAaC,IACbD,EAAaC,GAGjB,GAXI,IAcfG,SAAQ,SAACJ,GACL,OAAK5C,EAAe4C,EAAc,SAIA,iBAAvBA,EAAaT,MACb3B,KAAK6B,IAAIO,EAAaT,OAGC,WAA9BY,IAAOH,EAAaT,OACb,GAGNnC,EAAe4C,EAAaT,MAAO,eAInCnC,EAAe4C,EAAaT,MAAO,UAAgD,iBAA7BS,EAAaT,MAAMA,MAI1ES,EAAaT,MAAMc,WACZL,EAAaT,MAAMA,MAGvB3B,KAAK6B,IAAIO,EAAaT,MAAMA,OAXxB,GAZA,O","file":"static/js/5b001acba13045b0041f.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-index.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"9f5d8a62\", content, true, {});","/**\n * @package services-settings\n */\nimport template from './sw-settings-index.html.twig';\nimport './sw-settings-index.scss';\n\nconst { hasOwnProperty } = Shopware.Utils.object;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['acl'],\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        settingsGroups() {\n            const settingsGroups = Object.entries(Shopware.State.get('settingsItems').settingsGroups);\n            return settingsGroups.reduce((acc, [groupName, groupSettings]) => {\n                const group = groupSettings\n                    .filter((setting) => {\n                        if (!setting.privilege) {\n                            return true;\n                        }\n\n                        return this.acl.can(setting.privilege);\n                    })\n                    .sort((a, b) => {\n                        const labelA = typeof a.label === 'string' ? a.label : a.label?.label;\n                        const labelB = typeof b.label === 'string' ? b.label : b.label?.label;\n\n                        return this.$tc(labelA).localeCompare(this.$tc(labelB));\n                    });\n\n                if (group.length > 0) {\n                    acc[groupName] = group;\n                }\n\n                return acc;\n            }, {});\n        },\n    },\n\n    methods: {\n        hasPluginConfig() {\n            return (hasOwnProperty(this.settingsGroups, 'plugins') && this.settingsGroups.plugins.length > 0);\n        },\n\n        getRouteConfig(settingsItem) {\n            if (!hasOwnProperty(settingsItem, 'to')) {\n                return {};\n            }\n\n            if (typeof settingsItem.to === 'string') {\n                return { name: settingsItem.to };\n            }\n\n            if (typeof settingsItem.to === 'object') {\n                return settingsItem.to;\n            }\n\n            return {};\n        },\n\n        getLabel(settingsItem) {\n            if (!hasOwnProperty(settingsItem, 'label')) {\n                return '';\n            }\n\n            if (typeof settingsItem.label === 'string') {\n                return this.$tc(settingsItem.label);\n            }\n\n            if (typeof settingsItem.label !== 'object') {\n                return '';\n            }\n\n            if (!hasOwnProperty(settingsItem.label, 'translated')) {\n                return '';\n            }\n\n            if (!hasOwnProperty(settingsItem.label, 'label') || typeof settingsItem.label.label !== 'string') {\n                return '';\n            }\n\n            if (settingsItem.label.translated) {\n                return settingsItem.label.label;\n            }\n\n            return this.$tc(settingsItem.label.label);\n        },\n    },\n};\n","export default \"\\n{% block sw_settings %}\\n<sw-page\\n    class=\\\"sw-settings-index\\\"\\n    :show-smart-bar=\\\"false\\\"\\n>\\n\\n    \\n    {% block sw_settings_content %}\\n    <template #content>\\n        <sw-card-view>\\n            \\n            {% block sw_settings_content_tabs %}\\n            <sw-tabs\\n                class=\\\"sw-settings__tabs\\\"\\n                position-identifier=\\\"sw-settings-index\\\"\\n                :is-vertical=\\\"true\\\"\\n                :small=\\\"false\\\"\\n            >\\n                <template #default=\\\"{ active }\\\">\\n                    \\n                    {% block sw_settings_content_tab_shop %}\\n                    <sw-tabs-item\\n                        v-if=\\\"settingsGroups['shop']\\\"\\n                        class=\\\"sw-settings__tab-shop\\\"\\n                        :route=\\\"{ name: 'sw.settings.index.shop'}\\\"\\n                        name=\\\"shop\\\"\\n                        :active-tab=\\\"active\\\"\\n                        :title=\\\"$tc('sw-settings.index.tabShop')\\\"\\n                    >\\n                        {{ $tc('sw-settings.index.tabShop') }}\\n                    </sw-tabs-item>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_settings_content_tab_system %}\\n                    <sw-tabs-item\\n                        v-if=\\\"settingsGroups['system']\\\"\\n                        class=\\\"sw-settings__tab-system\\\"\\n                        name=\\\"system\\\"\\n                        :route=\\\"{ name: 'sw.settings.index.system'}\\\"\\n                        :active-tab=\\\"active\\\"\\n                        :title=\\\"$tc('sw-settings.index.tabSystem')\\\"\\n                    >\\n                        {{ $tc('sw-settings.index.tabSystem') }}\\n                    </sw-tabs-item>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_settings_content_tab_plugins %}\\n                    <sw-tabs-item\\n                        v-if=\\\"hasPluginConfig()\\\"\\n                        class=\\\"sw-settings__tab-plugins\\\"\\n                        name=\\\"plugins\\\"\\n                        :route=\\\"{ name: 'sw.settings.index.plugins'}\\\"\\n                        :active-tab=\\\"active\\\"\\n                        :title=\\\"$tc('sw-settings.index.tabPlugins')\\\"\\n                    >\\n                        {{ $tc('sw-settings.index.tabPlugins') }}\\n                    </sw-tabs-item>\\n                    {% endblock %}\\n                </template>\\n\\n                <template #content=\\\"{ active }\\\">\\n                    \\n                    {% block sw_settings_content_card %}\\n                    \\n                    {% block sw_settings_content_header %}\\n                    <h1 class=\\\"sw-settings__content-header\\\">\\n                        {{ $tc('sw-settings.index.title') }}\\n                    </h1>\\n                    {% endblock %}\\n\\n                    <sw-card\\n                        class=\\\"sw-settings__card\\\"\\n                        position-identifier=\\\"sw-settings-index-content\\\"\\n                    >\\n                        \\n                        {% block sw_settings_content_card_content %}\\n                        <slot\\n                            v-for=\\\"(settingsItems, settingsGroup) in settingsGroups\\\"\\n                            {% if VUE3 %}\\n                            :key=\\\"settingsGroup\\\"\\n                            {% endif %}\\n                            :name=\\\"settingsGroup\\\"\\n                        >\\n                            <div\\n                                v-show=\\\"active === settingsGroup\\\"\\n                                :id=\\\"`sw-settings__content-grid-${settingsGroup}`\\\"\\n                                {% if VUE2 %}\\n                                :key=\\\"settingsGroup\\\"\\n                                {% endif %}\\n                                class=\\\"sw-settings__content-grid\\\"\\n                            >\\n                                <sw-settings-item\\n                                    v-for=\\\"settingsItem in settingsItems\\\"\\n                                    :id=\\\"settingsItem.id\\\"\\n                                    :key=\\\"settingsItem.name\\\"\\n                                    :label=\\\"getLabel(settingsItem)\\\"\\n                                    :to=\\\"getRouteConfig(settingsItem)\\\"\\n                                    :background-enabled=\\\"settingsItem.backgroundEnabled\\\"\\n                                >\\n                                    <template #icon>\\n                                        <component\\n                                            :is=\\\"settingsItem.iconComponent\\\"\\n                                            v-if=\\\"settingsItem.iconComponent\\\"\\n                                        />\\n                                        <sw-icon\\n                                            v-else\\n                                            :name=\\\"settingsItem.icon\\\"\\n                                        />\\n                                    </template>\\n                                </sw-settings-item>\\n                            </div>\\n                        </slot>\\n                        {% endblock %}\\n                    </sw-card>\\n                    {% endblock %}\\n                </template>\\n            </sw-tabs>\\n            {% endblock %}\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}