{"version":3,"sources":["webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-configurator/sw-product-variants-price-field/sw-product-variants-price-field.scss","webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-configurator/sw-product-variants-price-field/sw-product-variants-price-field.html.twig","webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-configurator/sw-product-variants-price-field/index.js"],"names":["content","__esModule","default","module","i","locals","exports","add","Application","Shopware","utils","Utils","template","props","price","type","Object","required","taxRate","String","currency","readonly","Boolean","computed","calculatePriceApiService","getContainer","apiService","getByName","watch","value","this","net","convertGrossToNet","gross","linked","methods","onLockSwitch","$emit","onPriceGrossChange","onPriceGrossChangeDebounce","Number","debounce","onPriceNetChange","onPriceNetChangeDebounce","convertNetToGross","_this","requestTaxValue","then","res","_this2","outputType","_this3","Promise","resolve","calculatePrice","taxId","output","currencyId","id","_ref","data","calculatedTaxes","tax"],"mappings":"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","file":"static/js/d47b90dbc82e5a23857f.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-variants-price-field.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3277b08a\", content, true, {});","export default \"\\n{% block sw_product_variants_price_field %}\\n<div\\n    class=\\\"sw-product-variants-price-field\\\"\\n    :class=\\\"{'is--readonly': readonly}\\\"\\n>\\n    \\n    {% block sw_product_variants_price_field_gross %}\\n    <div class=\\\"sw-field\\\">\\n        <sw-number-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"price.gross\\\"\\n            {% else %}\\n            v-model=\\\"price.gross\\\"\\n            {% endif %}\\n            size=\\\"small\\\"\\n            class=\\\"sw-product-variants-price-field__input\\\"\\n            :disabled=\\\"readonly\\\"\\n            :digits=\\\"currency.decimalPrecision\\\"\\n            v-bind=\\\"$attrs\\\"\\n            {% if VUE3 %}\\n            @update:value=\\\"onPriceGrossChange\\\"\\n            {% else %}\\n            @change=\\\"onPriceGrossChange\\\"\\n            {% endif %}\\n        />\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variants_price_field_lock_button %}\\n    <button\\n        class=\\\"sw-product-variants-price-field__lock\\\"\\n        :class=\\\"{'is--locked': price.linked}\\\"\\n        @click=\\\"onLockSwitch\\\"\\n    >\\n        <sw-icon\\n            v-if=\\\"price.linked\\\"\\n            name=\\\"regular-lock\\\"\\n            size=\\\"16\\\"\\n        />\\n        <sw-icon\\n            v-else\\n            name=\\\"regular-lock-open\\\"\\n            size=\\\"16\\\"\\n        />\\n    </button>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variants_price_field_net %}\\n    <div class=\\\"sw-field\\\">\\n        <sw-number-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"price.net\\\"\\n            {% else %}\\n            v-model=\\\"price.net\\\"\\n            {% endif %}\\n            size=\\\"small\\\"\\n            class=\\\"sw-field sw-product-variants-price-field__input\\\"\\n            :disabled=\\\"readonly\\\"\\n            :digits=\\\"currency.decimalPrecision\\\"\\n            v-bind=\\\"$attrs\\\"\\n            {% if VUE3 %}\\n            @update:value=\\\"onPriceNetChange\\\"\\n            {% else %}\\n            @change=\\\"onPriceNetChange\\\"\\n            {% endif %}\\n        />\\n    </div>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","/*\n * @package inventory\n */\n\nimport template from './sw-product-variants-price-field.html.twig';\nimport './sw-product-variants-price-field.scss';\n\nconst { Application } = Shopware;\nconst utils = Shopware.Utils;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    props: {\n        price: {\n            type: Object,\n            required: true,\n        },\n\n        taxRate: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        currency: {\n            type: Object,\n            required: true,\n        },\n\n        readonly: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    computed: {\n        calculatePriceApiService() {\n            return Application.getContainer('factory').apiService.getByName('calculate-price');\n        },\n    },\n\n    watch: {\n        'price.linked': function priceLinkedWatcher(value) {\n            if (value === true) {\n                this.price.net = this.convertGrossToNet(this.price.gross);\n            }\n        },\n\n        'taxRate.taxRate': function taxRateWatcher() {\n            if (this.price.linked === true) {\n                this.price.net = this.convertGrossToNet(this.price.gross);\n            }\n        },\n    },\n\n    methods: {\n        onLockSwitch() {\n            if (this.readonly) {\n                return false;\n            }\n            this.price.linked = !this.price.linked;\n            this.$emit('price-lock-change', this.price.linked);\n            this.$emit('change', this.price);\n            return true;\n        },\n\n        onPriceGrossChange(value) {\n            if (!value || typeof value !== 'number') {\n                return;\n            }\n\n            if (this.price.linked) {\n                this.$emit('price-calculate', true);\n                this.onPriceGrossChangeDebounce(Number(this.price.gross));\n            }\n        },\n\n        onPriceGrossChangeDebounce: utils.debounce(function onPriceGrossChange(value) {\n            this.$emit('price-gross-change', value);\n            this.$emit('change', this.price);\n\n            this.convertGrossToNet(value);\n        }, 500),\n\n        onPriceNetChange(value) {\n            if (!value || typeof value !== 'number') {\n                return;\n            }\n\n            if (this.price.linked) {\n                this.$emit('price-calculate', true);\n                this.onPriceNetChangeDebounce(Number(this.price.net));\n            }\n        },\n\n        onPriceNetChangeDebounce: utils.debounce(function onPriceNetChange(value) {\n            this.$emit('price-net-change', value);\n            this.$emit('change', this.price);\n\n            this.convertNetToGross(value);\n        }, 500),\n\n        convertNetToGross(value) {\n            if (!value || typeof value !== 'number') {\n                return false;\n            }\n            this.$emit('price-calculate', true);\n\n            this.requestTaxValue(value, 'net').then((res) => {\n                this.price.gross = Number(this.price.net) + res;\n            });\n            return true;\n        },\n\n        convertGrossToNet(value) {\n            if (!value || typeof value !== 'number') {\n                return false;\n            }\n            this.$emit('price-calculate', true);\n\n            this.requestTaxValue(value, 'gross').then((res) => {\n                this.price.net = Number(this.price.gross) - res;\n            });\n            return true;\n        },\n\n        requestTaxValue(value, outputType) {\n            this.$emit('price-calculate', true);\n\n            return new Promise((resolve) => {\n                if (!value || typeof value !== 'number' || !this.price[outputType] || !this.taxRate || !outputType) {\n                    return;\n                }\n\n                this.calculatePriceApiService.calculatePrice({\n                    taxId: this.taxRate,\n                    price: this.price[outputType],\n                    output: outputType,\n                    currencyId: this.currency.id,\n                }).then(({ data }) => {\n                    resolve(data.calculatedTaxes[0].tax);\n                    this.$emit('price-calculate', false);\n                });\n            });\n        },\n    },\n};\n"],"sourceRoot":""}