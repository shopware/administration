{"version":3,"sources":["webpack:///./src/module/sw-category/view/sw-category-detail-products/sw-category-detail-products.scss","webpack:///./src/module/sw-category/view/sw-category-detail-products/index.js","webpack:///./src/module/sw-category/view/sw-category-detail-products/sw-category-detail-products.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Criteria","Shopware","Data","mapPropertyErrors","Component","getComponentHelper","ShopwareError","Classes","template","inject","mixins","props","isLoading","type","Boolean","required","data","productStreamFilter","productStreamInvalid","manualAssignedProductsCount","computed","_objectSpread","category","State","get","productStreamRepository","this","repositoryFactory","create","productColumns","property","label","$tc","dataIndex","routerLink","sortable","manufacturerColumn","nameColumn","productCriteria","addAssociation","addFilter","equals","productStreamInvalidError","code","detail","productAssignmentTypes","value","dynamicProductGroupHelpText","helpText","link","concat","JSON","stringify","name","URL","_unused","assetFilter","Filter","getByName","watch","id","loadProductStreamPreview","created","createdComponent","methods","productStreamId","_this","then","response","apiFilter","invalid","catch","onPaginateManualProductAssignment","assignment","total"],"mappings":"uGAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,6oBCN5C,IAAQQ,EAAaC,SAASC,KAAtBF,SACAG,EAAsBF,SAASG,UAAUC,qBAAzCF,kBACFG,EAAgBL,SAASM,QAAQD,cAMxB,WACXE,SCZW,8rMDcXC,OAAQ,CAAC,oBAAqB,OAE9BC,OAAQ,CACJ,eAGJC,MAAO,CACHC,UAAW,CACPC,KAAMC,QACNC,UAAU,IAIlBC,KAAI,WACA,MAAO,CACHC,oBAAqB,KACrBC,sBAAsB,EACtBC,4BAA6B,IAIrCC,SAAQC,IAAA,CACJC,SAAQ,WACJ,OAAOrB,SAASsB,MAAMC,IAAI,oBAAoBF,UAGlDG,wBAAuB,WACnB,OAAOC,KAAKC,kBAAkBC,OAAO,mBAGzCC,eAAc,WACV,MAAO,CACH,CACIC,SAAU,OACVC,MAAOL,KAAKM,IAAI,6CAChBC,UAAW,OACXC,WAAY,oBACZC,UAAU,GACX,CACCL,SAAU,oBACVC,MAAOL,KAAKM,IAAI,qDAChBE,WAAY,yBACZC,UAAU,KAKtBC,mBAAkB,WACd,MAAO,4BAGXC,WAAU,WACN,MAAO,eAGXC,gBAAe,WACX,OAAQ,IAAItC,EAAS,EAAG,IACnBuC,eAAe,iBACfA,eAAe,gBACfC,UAAUxC,EAASyC,OAAO,WAAY,QAG/CC,0BAAyB,WACrB,OAAIhB,KAAKR,qBACE,IAAIZ,EAAc,CACrBqC,KAAM,yBACNC,OAAQlB,KAAKM,IAAI,iEAGlB,OAGR7B,EAAkB,WAAY,CAC7B,kBACA,2BACF,IAEF0C,uBAAsB,WAClB,MAAO,CACH,CACIC,MAAO,UACPf,MAAOL,KAAKM,IAAI,+DAEpB,CACIc,MAAO,iBACPf,MAAOL,KAAKM,IAAI,iEAK5Be,4BAA2B,WACvB,IAIMC,EAAWtB,KAAKM,IAAI,8DAA+D,EAAG,CACxFiB,KAAK,8DAADC,OACsBC,KAAKC,UANtB,CACTC,KAAM,4BAKwC,6EAAAH,OAEjCxB,KAAKM,IAAI,kEAAiE,kDAI3F,IAEI,IAAIsB,IAAI5B,KAAKM,IAAI,mEACnB,MAAAuB,GACE,OAAOP,EAGX,MAAM,GAANE,OAAUF,EAAQ,qGAAAE,OAGExB,KAAKM,IAAI,kEAAiE,gCAAAkB,OAChFxB,KAAKM,IAAI,mEAAkE,8CAI7FwB,YAAW,WACP,OAAOvD,SAASwD,OAAOC,UAAU,YAIzCC,MAAO,CACH,2BAA0B,SAACC,GAClBA,EAILlC,KAAKmC,2BAHDnC,KAAKT,oBAAsB,OAOvC6C,QAAO,WACHpC,KAAKqC,oBAGTC,QAAS,CACLD,iBAAgB,WACPrC,KAAKJ,SAAS2C,iBAGnBvC,KAAKmC,4BAGTA,yBAAwB,WAAI,IAADK,EAAA,KACvBxC,KAAKD,wBAAwBD,IAAIE,KAAKJ,SAAS2C,iBAC1CE,MAAK,SAACC,GACHF,EAAKjD,oBAAsBmD,EAASC,UACpCH,EAAKhD,qBAAuBkD,EAASE,WACtCC,OAAM,WACLL,EAAKjD,oBAAsB,KAC3BiD,EAAKhD,sBAAuB,MAIxCsD,kCAAiC,SAACC,GAC9B/C,KAAKP,4BAA8BsD,EAAWC,U","file":"static/js/baa599fba8bf247df5f9.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-category-detail-products.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4e1a7faa\", content, true, {});","import template from './sw-category-detail-products.html.twig';\nimport './sw-category-detail-products.scss';\n\nconst { Criteria } = Shopware.Data;\nconst { mapPropertyErrors } = Shopware.Component.getComponentHelper();\nconst ShopwareError = Shopware.Classes.ShopwareError;\n\n/**\n * @package content\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl'],\n\n    mixins: [\n        'placeholder',\n    ],\n\n    props: {\n        isLoading: {\n            type: Boolean,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            productStreamFilter: null,\n            productStreamInvalid: false,\n            manualAssignedProductsCount: 0,\n        };\n    },\n\n    computed: {\n        category() {\n            return Shopware.State.get('swCategoryDetail').category;\n        },\n\n        productStreamRepository() {\n            return this.repositoryFactory.create('product_stream');\n        },\n\n        productColumns() {\n            return [\n                {\n                    property: 'name',\n                    label: this.$tc('sw-category.base.products.columnNameLabel'),\n                    dataIndex: 'name',\n                    routerLink: 'sw.product.detail',\n                    sortable: false,\n                }, {\n                    property: 'manufacturer.name',\n                    label: this.$tc('sw-category.base.products.columnManufacturerLabel'),\n                    routerLink: 'sw.manufacturer.detail',\n                    sortable: false,\n                },\n            ];\n        },\n\n        manufacturerColumn() {\n            return 'column-manufacturer.name';\n        },\n\n        nameColumn() {\n            return 'column-name';\n        },\n\n        productCriteria() {\n            return (new Criteria(1, 10))\n                .addAssociation('options.group')\n                .addAssociation('manufacturer')\n                .addFilter(Criteria.equals('parentId', null));\n        },\n\n        productStreamInvalidError() {\n            if (this.productStreamInvalid) {\n                return new ShopwareError({\n                    code: 'PRODUCT_STREAM_INVALID',\n                    detail: this.$tc('sw-category.base.products.dynamicProductGroupInvalidMessage'),\n                });\n            }\n            return null;\n        },\n\n        ...mapPropertyErrors('category', [\n            'productStreamId',\n            'productAssignmentType',\n        ]),\n\n        productAssignmentTypes() {\n            return [\n                {\n                    value: 'product',\n                    label: this.$tc('sw-category.base.products.productAssignmentTypeManualLabel'),\n                },\n                {\n                    value: 'product_stream',\n                    label: this.$tc('sw-category.base.products.productAssignmentTypeStreamLabel'),\n                },\n            ];\n        },\n\n        dynamicProductGroupHelpText() {\n            const link = {\n                name: 'sw.product.stream.index',\n            };\n\n            const helpText = this.$tc('sw-category.base.products.dynamicProductGroupHelpText.label', 0, {\n                link: `<sw-internal-link\n                           :router-link=${JSON.stringify(link)}\n                           :inline=\"true\">\n                           ${this.$tc('sw-category.base.products.dynamicProductGroupHelpText.linkText')}\n                       </sw-internal-link>`,\n            });\n\n            try {\n                // eslint-disable-next-line no-new\n                new URL(this.$tc('sw-category.base.products.dynamicProductGroupHelpText.videoUrl'));\n            } catch {\n                return helpText;\n            }\n\n            return `${helpText}\n                    <br>\n                    <sw-external-link\n                        href=\"${this.$tc('sw-category.base.products.dynamicProductGroupHelpText.videoUrl')}\">\n                        ${this.$tc('sw-category.base.products.dynamicProductGroupHelpText.videoLink')}\n                    </sw-external-link>`;\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        'category.productStreamId'(id) {\n            if (!id) {\n                this.productStreamFilter = null;\n                return;\n            }\n            this.loadProductStreamPreview();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (!this.category.productStreamId) {\n                return;\n            }\n            this.loadProductStreamPreview();\n        },\n\n        loadProductStreamPreview() {\n            this.productStreamRepository.get(this.category.productStreamId)\n                .then((response) => {\n                    this.productStreamFilter = response.apiFilter;\n                    this.productStreamInvalid = response.invalid;\n                }).catch(() => {\n                    this.productStreamFilter = null;\n                    this.productStreamInvalid = true;\n                });\n        },\n\n        onPaginateManualProductAssignment(assignment) {\n            this.manualAssignedProductsCount = assignment.total;\n        },\n    },\n};\n","export default \"\\n{% block sw_category_detail_products %}\\n<div class=\\\"sw-category-detail-products\\\">\\n\\n    \\n    {% block sw_category_detail_product_assignment %}\\n    <sw-many-to-many-assignment-card\\n        v-if=\\\"category.type !== 'folder'\\\"\\n        :title=\\\"$tc('sw-category.base.products.productAssignmentHeadline')\\\"\\n        :entity-collection=\\\"category.products\\\"\\n        :columns=\\\"productColumns\\\"\\n        :is-loading=\\\"isLoading\\\"\\n        :disabled=\\\"!acl.can('category.editor')\\\"\\n        :local-mode=\\\"category.isNew()\\\"\\n        :criteria=\\\"productCriteria\\\"\\n        :select-label=\\\"$tc('sw-category.base.products.productAssignmentLabel')\\\"\\n        :placeholder=\\\"$tc('sw-category.base.products.productAssignmentPlaceholder')\\\"\\n        @paginate=\\\"onPaginateManualProductAssignment\\\"\\n    >\\n\\n        \\n        {% block sw_category_detail_product_assignment_type_select %}\\n        <template #prepend-select>\\n\\n            \\n            {% block sw_category_detail_product_assignment_type_select_field %}\\n            <sw-single-select\\n                {% if VUE3 %}\\n                v-model:value=\\\"category.productAssignmentType\\\"\\n                {% else %}\\n                v-model=\\\"category.productAssignmentType\\\"\\n                {% endif %}\\n                class=\\\"sw-category-detail-products__product-assignment-type-select\\\"\\n                :label=\\\"$tc('sw-category.base.products.productAssignmentTypeLabel')\\\"\\n                :error=\\\"categoryProductAssignmentTypeError\\\"\\n                :options=\\\"productAssignmentTypes\\\"\\n                :disabled=\\\"!acl.can('category.editor')\\\"\\n                required\\n                show-clearable-button\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_category_detail_product_assignment_manual_alert %}\\n            <sw-alert\\n                v-if=\\\"category.productAssignmentType === 'product_stream' && manualAssignedProductsCount > 0\\\"\\n                variant=\\\"info\\\"\\n            >\\n                {{ $tc('sw-category.base.products.alertManualAssignedProductsOnAssignmentTypeStream') }}\\n            </sw-alert>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_category_detail_product_assignment_stream_select %}\\n        <template\\n            v-if=\\\"category.productAssignmentType === 'product_stream'\\\"\\n            #select\\n        >\\n\\n            \\n            {% block sw_category_detail_product_assignment_stream_select_field %}\\n            <sw-entity-single-select\\n                {% if VUE3 %}\\n                v-model:value=\\\"category.productStreamId\\\"\\n                {% else %}\\n                v-model=\\\"category.productStreamId\\\"\\n                {% endif %}\\n                class=\\\"sw-category-detail-products__product-stream-select\\\"\\n                entity=\\\"product_stream\\\"\\n                show-clearable-button\\n                :disabled=\\\"!acl.can('category.editor')\\\"\\n                :label=\\\"$tc('sw-category.base.products.productAssignmentTypeStreamLabel')\\\"\\n                :help-text=\\\"dynamicProductGroupHelpText\\\"\\n                :placeholder=\\\"$tc('sw-category.base.products.productAssignmentTypeStreamPlaceholder')\\\"\\n                :error=\\\"productStreamInvalidError || categoryProductStreamIdError\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_category_detail_product_assignment_stream_preview_link %}\\n            <div class=\\\"sw-category-detail-products__product-stream-preview-link\\\">\\n                <router-link\\n                    v-if=\\\"category.productStreamId\\\"\\n                    :to=\\\"{ name: 'sw.product.stream.detail', params: { id: category.productStreamId } }\\\"\\n                >\\n                    {{ $tc('sw-category.base.products.dynamicProductGroupDetailLinkText') }}\\n                    <sw-icon\\n                        name=\\\"regular-long-arrow-right\\\"\\n                        small\\n                    />\\n                </router-link>\\n            </div>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_category_detail_product_assignment_stream_preview_grid %}\\n        <template\\n            v-if=\\\"category.productAssignmentType === 'product_stream'\\\"\\n            #data-grid\\n        >\\n            <sw-product-stream-grid-preview\\n                :filters=\\\"productStreamFilter\\\"\\n                :columns=\\\"productColumns\\\"\\n            />\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_category_detail_product_assignment_column_name %}\\n        <template #[nameColumn]=\\\"{ item, column }\\\">\\n            <router-link\\n                :to=\\\"{ name: column.routerLink, params: { id: item.id } }\\\"\\n            >\\n                <sw-product-variant-info :variations=\\\"item.options\\\">\\n                    {{ item.name || item.translated.name }}\\n                </sw-product-variant-info>\\n            </router-link>\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_category_detail_product_assignment_column_manufacturer %}\\n        <template #[manufacturerColumn]=\\\"{ item, column }\\\">\\n            <router-link\\n                v-if=\\\"item.manufacturerId\\\"\\n                :to=\\\"{ name: column.routerLink, params: { id: item.manufacturerId } }\\\"\\n            >\\n                {{ item.manufacturer.name || item.manufacturer.translated.name }}\\n            </router-link>\\n            <span v-else></span>\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_category_detail_product_assignment_empty_state %}\\n        <template #empty-state>\\n            <sw-empty-state\\n                :title=\\\"$tc('sw-category.base.products.productAssignmentEmptyStateDescription')\\\"\\n                :subline=\\\"''\\\"\\n                auto-height\\n            >\\n                <template #icon>\\n                    <img\\n                        :src=\\\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\\\"\\n                        :alt=\\\"$tc('sw-category.base.products.productAssignmentEmptyStateDescription')\\\"\\n                    >\\n                </template>\\n            </sw-empty-state>\\n        </template>\\n        {% endblock %}\\n\\n    </sw-many-to-many-assignment-card>\\n    {% endblock %}\\n\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}