"use strict";(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[76961],{576961:function(e,n,s){s.r(n),s.d(n,{default:function(){return i}});let{Mixin:t}=Shopware;var i={template:'\n{% block sw_settings_media_index %}\n<sw-page class="sw-settings-media">\n\n    \n    {% block sw_settings_media_header %}\n    <template #smart-bar-header>\n        <h2>{{ $tc(\'sw-settings.index.title\') }} <sw-icon\n            name="regular-chevron-right-xs"\n            small\n        /> {{ $tc(\'sw-settings-media.general.title\') }} </h2>\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_media_smart_bar_actions %}\n    <template #smart-bar-actions>\n        \n            {% block sw_settings_media_actions_save %}\n        <sw-button-process\n            class="sw-settings-media__save-action"\n            :is-loading="isLoading"\n            :process-success="isSaveSuccessful"\n            :disabled="isLoading"\n            variant="primary"\n            @update:process-success="saveFinish"\n            @click="onSave"\n        >\n            {{ $tc(\'sw-settings-media.general.buttonSave\') }}\n        </sw-button-process>\n            {% endblock %}\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_media_content %}\n    <template #content>\n        <sw-card-view>\n            <template v-if="isLoading">\n                <sw-skeleton />\n                <sw-skeleton />\n            </template>\n\n            <sw-system-config\n                v-show="!isLoading"\n                ref="systemConfig"\n                domain="core.media"\n                @loading-changed="onLoadingChanged"\n            >\n                <template #card-element-last>\n                    <mt-slider\n                        v-if="!isLoading"\n                        v-model="sliderValue"\n                        :min="0"\n                        :max="100"\n                        @input="onSliderChange"\n                    />\n                </template>\n            </sw-system-config>\n\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',inject:["systemConfigApiService"],mixins:[t.getByName("notification")],data(){return{isLoading:!1,isSaveSuccessful:!1,sliderValue:0}},metaInfo(){return{title:this.$createTitle()}},created(){this.createdComponent()},methods:{async createdComponent(){this.isLoading=!0;try{let e=await this.systemConfigApiService.getValues("core.media");this.sliderValue=void 0!==e["core.media.defaultLightIntensity"]?e["core.media.defaultLightIntensity"]:100}catch(e){e?.response?.data?.errors&&this.createErrorNotification(e.response.data.errors)}finally{this.isLoading=!1}},saveFinish(){this.isSaveSuccessful=!1},onSave(){this.isSaveSuccessful=!1,this.isLoading=!0,this.$refs.systemConfig.saveAll().then(async()=>{this.isLoading=!1,this.isSaveSuccessful=!0,await this.systemConfigApiService.batchSave({null:{"core.media.defaultLightIntensity":this.sliderValue}})}).catch(e=>{this.isLoading=!1,this.createNotificationError({message:e})})},onLoadingChanged(e){this.isLoading=e},onSliderChange(e){this.sliderValue=e}}}}}]);