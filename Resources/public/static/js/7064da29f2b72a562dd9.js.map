{"version":3,"sources":["webpack:///./src/module/sw-property/page/sw-property-list/index.js","webpack:///./src/module/sw-property/page/sw-property-list/sw-property-list.html.twig","webpack:///./src/module/sw-property/page/sw-property-list/sw-property-list.scss"],"names":["Mixin","Shopware","Criteria","Data","template","inject","mixins","getByName","data","propertyGroup","sortBy","isLoading","sortDirection","showDeleteModal","searchConfigEntity","metaInfo","title","this","$createTitle","computed","propertyRepository","repositoryFactory","create","defaultCriteria","criteria","page","limit","setTerm","term","addSorting","sort","useNaturalSorting","addAssociation","methods","onDelete","id","onCloseDeleteModal","onConfirmDelete","_this","delete","then","getList","onChangeLanguage","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","addQueryScores","sent","entitySearchable","total","abrupt","freshSearchTerm","resetSorting","search","items","catch","stop","getPropertyColumns","property","label","routerLink","inlineEdit","allowResize","primary","align","content","__esModule","default","module","i","locals","exports","add"],"mappings":"0KAOQA,G,UAAUC,SAAVD,OACAE,EAAaD,SAASE,KAAtBD,SAGO,WACXE,SCZW,0nTDcXC,OAAQ,CACJ,oBACA,OAGJC,OAAQ,CACJN,EAAMO,UAAU,YAGpBC,KAAI,WACA,MAAO,CACHC,cAAe,KACfC,OAAQ,OACRC,WAAW,EACXC,cAAe,MACfC,iBAAiB,EACjBC,mBAAoB,mBAI5BC,SAAQ,WACJ,MAAO,CACHC,MAAOC,KAAKC,iBAIpBC,SAAU,CACNC,mBAAkB,WACd,OAAOH,KAAKI,kBAAkBC,OAAO,mBAGzCC,gBAAe,WACX,IAAMC,EAAW,IAAItB,EAASe,KAAKQ,KAAMR,KAAKS,OAM9C,OAJAF,EAASG,QAAQV,KAAKW,MACtBJ,EAASK,WAAW3B,EAAS4B,KAAKb,KAAKP,OAAQO,KAAKL,cAAeK,KAAKc,oBACxEP,EAASQ,eAAe,WAEjBR,GAGXO,kBAAiB,WACb,MAAuB,kBAAhBd,KAAKP,SAIpBuB,QAAS,CACLC,SAAQ,SAACC,GACLlB,KAAKJ,gBAAkBsB,GAG3BC,mBAAkB,WACdnB,KAAKJ,iBAAkB,GAG3BwB,gBAAe,SAACF,GAAK,IAADG,EAAA,KAGhB,OAFArB,KAAKJ,iBAAkB,EAEhBI,KAAKG,mBAAmBmB,OAAOJ,GAAIK,MAAK,WAC3CF,EAAKG,cAIbC,iBAAgB,WACZzB,KAAKwB,WAGHA,QAAO,WAAI,IAADE,EAAA,YAAAC,IAAAC,IAAAC,MAAA,SAAAC,IAAA,IAAAvB,EAAA,OAAAqB,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACU,OAAtBR,EAAKhC,WAAY,EAAKsC,EAAAE,KAAA,EAECR,EAAKS,eAAeT,EAAKf,KAAMe,EAAKpB,iBAAiB,KAAD,EAA7D,GAARC,EAAQyB,EAAAI,KACTV,EAAKW,iBAAiB,CAADL,EAAAE,KAAA,QAEP,OADfR,EAAKhC,WAAY,EACjBgC,EAAKY,MAAQ,EAAEN,EAAAO,OAAA,UAER,GAAK,OAKf,OAFGb,EAAKc,iBACLjC,EAASkC,eACZT,EAAAO,OAAA,SAEMb,EAAKvB,mBAAmBuC,OAAOnC,GAAUgB,MAAK,SAACoB,GAKlD,OAJAjB,EAAKY,MAAQK,EAAML,MACnBZ,EAAKlC,cAAgBmD,EACrBjB,EAAKhC,WAAY,EAEViD,KACRC,OAAM,WACLlB,EAAKhC,WAAY,MACnB,yBAAAsC,EAAAa,UAAAf,MAvBUH,IA0BhBmB,mBAAkB,WACd,MAAO,CAAC,CACJC,SAAU,OACVC,MAAO,8BACPC,WAAY,qBACZC,WAAY,SACZC,aAAa,EACbC,SAAS,GACV,CACCL,SAAU,UACVC,MAAO,iCACPG,aAAa,GACd,CACCJ,SAAU,cACVC,MAAO,qCACPG,aAAa,GACd,CACCJ,SAAU,aACVC,MAAO,oCACPE,WAAY,UACZC,aAAa,EACbE,MAAO,e,4CE7HvB,IAAIC,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM","file":"static/js/7064da29f2b72a562dd9.js","sourcesContent":["/*\n * @package inventory\n */\n\nimport template from './sw-property-list.html.twig';\nimport './sw-property-list.scss';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    data() {\n        return {\n            propertyGroup: null,\n            sortBy: 'name',\n            isLoading: false,\n            sortDirection: 'ASC',\n            showDeleteModal: false,\n            searchConfigEntity: 'property_group',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        propertyRepository() {\n            return this.repositoryFactory.create('property_group');\n        },\n\n        defaultCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            criteria.setTerm(this.term);\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, this.useNaturalSorting));\n            criteria.addAssociation('options');\n\n            return criteria;\n        },\n\n        useNaturalSorting() {\n            return this.sortBy === 'property.name';\n        },\n    },\n\n    methods: {\n        onDelete(id) {\n            this.showDeleteModal = id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete(id) {\n            this.showDeleteModal = false;\n\n            return this.propertyRepository.delete(id).then(() => {\n                this.getList();\n            });\n        },\n\n        onChangeLanguage() {\n            this.getList();\n        },\n\n        async getList() {\n            this.isLoading = true;\n\n            const criteria = await this.addQueryScores(this.term, this.defaultCriteria);\n            if (!this.entitySearchable) {\n                this.isLoading = false;\n                this.total = 0;\n\n                return false;\n            }\n\n            if (this.freshSearchTerm) {\n                criteria.resetSorting();\n            }\n\n            return this.propertyRepository.search(criteria).then((items) => {\n                this.total = items.total;\n                this.propertyGroup = items;\n                this.isLoading = false;\n\n                return items;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        getPropertyColumns() {\n            return [{\n                property: 'name',\n                label: 'sw-property.list.columnName',\n                routerLink: 'sw.property.detail',\n                inlineEdit: 'string',\n                allowResize: true,\n                primary: true,\n            }, {\n                property: 'options',\n                label: 'sw-property.list.columnOptions',\n                allowResize: true,\n            }, {\n                property: 'description',\n                label: 'sw-property.list.columnDescription',\n                allowResize: true,\n            }, {\n                property: 'filterable',\n                label: 'sw-property.list.columnFilterable',\n                inlineEdit: 'boolean',\n                allowResize: true,\n                align: 'center',\n            }];\n        },\n    },\n};\n","export default \"\\n{% block sw_property_list %}\\n<sw-page class=\\\"sw-property-list\\\">\\n\\n    \\n    {% block sw_property_list_search_bar %}\\n    <template #search-bar>\\n        <sw-search-bar\\n            initial-search-type=\\\"property\\\"\\n            :placeholder=\\\"$tc('sw-property.general.placeholderSearchBar')\\\"\\n            @search=\\\"onSearch\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_property_list_smart_bar_header %}\\n    <template #smart-bar-header>\\n\\n        \\n        {% block sw_property_list_smart_bar_header_title %}\\n        <h2>\\n\\n            \\n            {% block sw_property_list_smart_bar_header_title_text %}\\n            {{ $tc('sw-property.list.textProperties') }}\\n            {% endblock %}\\n\\n            \\n            {% block sw_property_list_smart_bar_header_title_amount %}\\n            <span\\n                v-if=\\\"!isLoading\\\"\\n                class=\\\"sw-page__smart-bar-amount\\\"\\n            >\\n                ({{ total }})\\n            </span>\\n            {% endblock %}\\n\\n        </h2>\\n        {% endblock %}\\n\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_property_list_ %}\\n    <template #smart-bar-actions>\\n\\n        \\n        {% block sw_property_list_add_button %}\\n        <sw-button\\n            v-tooltip=\\\"{\\n                message: $tc('sw-privileges.tooltip.warning'),\\n                disabled: acl.can('property.creator'),\\n                showOnDisabledElements: true\\n            }\\\"\\n            class=\\\"sw-property-list__button-create\\\"\\n            :disabled=\\\"!acl.can('property.creator')\\\"\\n            :router-link=\\\"{ name: 'sw.property.create' }\\\"\\n            variant=\\\"primary\\\"\\n        >\\n            {{ $tc('sw-property.list.buttonAddProperty') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_property_list_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch @on-change=\\\"onChangeLanguage\\\" />\\n    </template>\\n    {% endblock %}\\n\\n    <template #content>\\n\\n        \\n        {% block sw_property_list_content %}\\n        <div class=\\\"sw-property-list__content\\\">\\n\\n            \\n            {% block sw_property_list_grid %}\\n            <sw-entity-listing\\n                v-if=\\\"entitySearchable\\\"\\n                ref=\\\"propertyList\\\"\\n                class=\\\"sw-property-list-grid\\\"\\n                :items=\\\"propertyGroup\\\"\\n                :columns=\\\"getPropertyColumns()\\\"\\n                :repository=\\\"propertyRepository\\\"\\n                :show-selection=\\\"false\\\"\\n                :show-settings=\\\"true\\\"\\n                :full-page=\\\"true\\\"\\n                :sort-by=\\\"currentSortBy\\\"\\n                :sort-direction=\\\"sortDirection\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :allow-column-edit=\\\"true\\\"\\n                :compact-mode=\\\"false\\\"\\n                :allow-edit=\\\"acl.can('property.editor')\\\"\\n                :allow-delete=\\\"acl.can('property.deleter')\\\"\\n                :allow-inline-edit=\\\"acl.can('property.editor')\\\"\\n                identifier=\\\"sw-properties-list\\\"\\n                :disable-data-fetching=\\\"true\\\"\\n                @column-sort=\\\"onSortColumn\\\"\\n                @page-change=\\\"onPageChange\\\"\\n            >\\n\\n                \\n                {% block sw_property_list_grid_options %}\\n                <template\\n                    #column-options=\\\"{ item }\\\"\\n                >\\n                    <span\\n                        v-for=\\\"(option, index) in item.options.slice(0, 4)\\\"\\n                        :key=\\\"option.id\\\"\\n                    >\\n                        {{ (index > 0) ? `, ${option.translated.name}` : option.translated.name }}\\n                    </span>\\n                    <span v-if=\\\"item.options.length >= 5\\\">\\n                        , ...\\n                    </span>\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_property_list_grid_filterable %}\\n                <template #column-filterable=\\\"{ item, isInlineEdit }\\\">\\n                    \\n                    {% block sw_property_list_grid_columns_filterable_inline_edit %}\\n                    <template v-if=\\\"isInlineEdit\\\">\\n                        <sw-checkbox-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"item.filterable\\\"\\n                            {% else %}\\n                            v-model=\\\"item.filterable\\\"\\n                            {% endif %}\\n                        />\\n                    </template>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_property_list_grid_columns_filterable_content %}\\n                    <template v-else>\\n                        <sw-icon\\n                            v-if=\\\"item.filterable\\\"\\n                            name=\\\"regular-checkmark-xs\\\"\\n                            class=\\\"is--active\\\"\\n                        />\\n                        <sw-icon\\n                            v-else\\n                            name=\\\"regular-times-s\\\"\\n                            class=\\\"is--inactive\\\"\\n                        />\\n                    </template>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_property_list_grid_columns_actions %}\\n                <template\\n                    #actions=\\\"{ item }\\\"\\n                >\\n                    \\n                    {% block sw_property_list_grid_columns_actions_detail %}\\n                    <sw-context-menu-item\\n                        class=\\\"sw-property-list__edit-action\\\"\\n                        :router-link=\\\"{ name: 'sw.property.detail', params: { id: item.id } }\\\"\\n                        :disabled=\\\"!acl.can('property.editor')\\\"\\n                    >\\n                        {{ $tc('sw-property.list.contextMenuView') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_property_list_grid_columns_actions_delete %}\\n                    <sw-context-menu-item\\n                        class=\\\"sw-property-list__delete-action\\\"\\n                        variant=\\\"danger\\\"\\n                        :disabled=\\\" !acl.can('property.deleter')\\\"\\n                        @click=\\\"onDelete(item.id)\\\"\\n                    >\\n                        {{ $tc('sw-property.list.contextMenuDelete') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_list_grid_action_modals %}\\n                <template\\n                    #action-modals=\\\"{ item }\\\"\\n                >\\n                    <sw-modal\\n                        v-if=\\\"showDeleteModal === item.id\\\"\\n                        variant=\\\"small\\\"\\n                        :title=\\\"$tc('global.default.warning')\\\"\\n                        @modal-close=\\\"onCloseDeleteModal\\\"\\n                    >\\n                        <p class=\\\"sw-property-list__confirm-delete-text\\\">\\n                            {{ $tc('sw-property.list.textDeleteConfirm', 0, { name: item.translated.name }) }}\\n                        </p>\\n\\n                        <template #modal-footer>\\n                            <sw-button\\n                                size=\\\"small\\\"\\n                                @click=\\\"onCloseDeleteModal\\\"\\n                            >\\n                                {{ $tc('sw-property.list.buttonCancel') }}\\n                            </sw-button>\\n\\n                            <sw-button\\n                                variant=\\\"danger\\\"\\n                                size=\\\"small\\\"\\n                                @click=\\\"onConfirmDelete(item.id)\\\"\\n                            >\\n                                {{ $tc('sw-property.list.buttonDelete') }}\\n                            </sw-button>\\n                        </template>\\n                    </sw-modal>\\n                </template>\\n                {% endblock %}\\n\\n            </sw-entity-listing>\\n            {% endblock %}\\n\\n            \\n            {% block sw_property_list_empty_state %}\\n            <template v-if=\\\"!isLoading && !total\\\">\\n                <sw-empty-state\\n                    v-if=\\\"isValidTerm(term)\\\"\\n                    :title=\\\"$tc('sw-empty-state.messageNoResultTitle')\\\"\\n                >\\n                    <template #default>\\n                        {{ $tc('sw-empty-state.messageNoResultSublineBefore') }}\\n                        <router-link\\n                            class=\\\"sw-empty-state__description-link\\\"\\n                            :to=\\\"{ name: 'sw.profile.index.searchPreferences' }\\\"\\n                        >\\n                            {{ $tc('sw-empty-state.messageNoResultSublineLink') }}\\n                        </router-link>\\n                        {{ $tc('sw-empty-state.messageNoResultSublineAfter') }}\\n                    </template>\\n                </sw-empty-state>\\n\\n                <sw-empty-state\\n                    v-else\\n                    :title=\\\"$tc('sw-property.list.messageEmpty')\\\"\\n                />\\n            </template>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n    </template>\\n\\n    \\n    {% block sw_property_list_sidebar %}\\n    <template #sidebar>\\n        <sw-sidebar>\\n            \\n            {% block sw_property_list_sidebar_refresh_item %}\\n            <sw-sidebar-item\\n                icon=\\\"regular-undo\\\"\\n                :title=\\\"$tc('sw-property.list.titleSidebarItemRefresh')\\\"\\n                @click=\\\"onRefresh\\\"\\n            />\\n            {% endblock %}\\n        </sw-sidebar>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-property-list.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6610f926\", content, true, {});"],"sourceRoot":""}