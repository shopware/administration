{"version":3,"sources":["webpack:///./src/module/sw-flow/component/modals/sw-flow-create-mail-template-modal/sw-flow-create-mail-template-modal.scss","webpack:///./src/module/sw-flow/component/modals/sw-flow-create-mail-template-modal/index.js","webpack:///./src/module/sw-flow/component/modals/sw-flow-create-mail-template-modal/sw-flow-create-mail-template-modal.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","Criteria","Data","mapPropertyErrors","Component","getComponentHelper","utils","Utils","template","inject","mixins","getByName","data","mailTemplate","mailTemplateType","editorConfig","enableBasicAutocompletion","isLoading","computed","_objectSpread","mailTemplateRepository","this","repositoryFactory","create","mailTemplateTypeRepository","mailTemplateCriteria","criteria","addAssociation","outerCompleterFunction","entityMappingService","innerMailTemplateType","prefix","properties","Object","keys","getEntityMapping","availableEntities","forEach","val","push","value","created","createdComponent","methods","State","getters","commit","Context","api","createId","onClose","$emit","onAddMailTemplate","_this","mailTemplateSubject","subject","placeholder","isSaveSuccessful","save","then","getMailTemplate","catch","error","errorMsg","response","errors","length","errorDetailMsg","detail","concat","$tc","createNotificationError","message","getMailTemplateType","_this$mailTemplate","_this2","mailTemplateTypeId","get","item","$refs","htmlEditor","defineAutocompletion","plainEditor","Promise","resolve","onChangeType","id","_this3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","t0","stop","_this4","finally"],"mappings":"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","file":"static/js/d7328e5c1589cdaa3712.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-flow-create-mail-template-modal.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"32e42970\", content, true, {});","import template from './sw-flow-create-mail-template-modal.html.twig';\nimport './sw-flow-create-mail-template-modal.scss';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { mapPropertyErrors } = Shopware.Component.getComponentHelper();\nconst utils = Shopware.Utils;\n\n/**\n * @private\n * @package services-settings\n */\nexport default {\n    template,\n\n    inject: ['mailService', 'entityMappingService', 'repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('placeholder'),\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            mailTemplate: {},\n            mailTemplateType: {},\n            editorConfig: {\n                enableBasicAutocompletion: true,\n            },\n            isLoading: false,\n        };\n    },\n\n    computed: {\n        mailTemplateRepository() {\n            return this.repositoryFactory.create('mail_template');\n        },\n\n        mailTemplateTypeRepository() {\n            return this.repositoryFactory.create('mail_template_type');\n        },\n\n        mailTemplateCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addAssociation('mailTemplateType');\n\n            return criteria;\n        },\n\n        outerCompleterFunction() {\n            return (function completerWrapper(entityMappingService, innerMailTemplateType) {\n                function completerFunction(prefix) {\n                    const properties = [];\n                    Object.keys(\n                        entityMappingService.getEntityMapping(prefix, innerMailTemplateType.availableEntities),\n                    ).forEach((val) => {\n                        properties.push({\n                            value: val,\n                        });\n                    });\n                    return properties;\n                }\n                return completerFunction;\n            }(this.entityMappingService, this.mailTemplateType));\n        },\n\n        ...mapPropertyErrors('mailTemplate', [\n            'contentHtml',\n            'contentPlain',\n            'mailTemplateTypeId',\n            'subject',\n        ]),\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (!Shopware.State.getters['context/isSystemDefaultLanguage']) {\n                Shopware.State.commit('context/resetLanguageToDefault');\n            }\n\n            this.mailTemplate = this.mailTemplateRepository.create(Shopware.Context.api, utils.createId());\n        },\n\n        onClose() {\n            this.$emit('modal-close');\n        },\n\n        onAddMailTemplate() {\n            const mailTemplateSubject = this.mailTemplate.subject || this.placeholder(this.mailTemplate, 'subject');\n\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            return this.mailTemplateRepository.save(this.mailTemplate).then(() => {\n                this.getMailTemplate();\n            }).catch(error => {\n                let errorMsg = '';\n                this.isLoading = false;\n\n                if (error.response.data.errors.length > 0) {\n                    const errorDetailMsg = error.response.data.errors[0].detail;\n                    errorMsg = `<br/> ${this.$tc('sw-mail-template.detail.textErrorMessage')}: \"${errorDetailMsg}\"`;\n                }\n\n                this.createNotificationError({\n                    message: this.$tc(\n                        'sw-mail-template.detail.messageSaveError',\n                        0,\n                        { subject: mailTemplateSubject },\n                    ) + errorMsg,\n                });\n            });\n        },\n\n        getMailTemplateType() {\n            if (!this.mailTemplate?.mailTemplateTypeId) {\n                return Promise.resolve();\n            }\n\n            return this.mailTemplateTypeRepository.get(this.mailTemplate.mailTemplateTypeId).then((item) => {\n                this.mailTemplateType = item;\n                this.$refs.htmlEditor.defineAutocompletion(this.outerCompleterFunction);\n                this.$refs.plainEditor.defineAutocompletion(this.outerCompleterFunction);\n            });\n        },\n\n        async onChangeType(id) {\n            if (!id) {\n                return;\n            }\n\n            try {\n                await this.getMailTemplateType();\n            } catch (e) {\n                let errorMsg = '';\n                if (e.response.data.errors.length > 0) {\n                    const errorDetailMsg = e.response.data.errors[0].detail;\n                    errorMsg = `<br/> ${this.$tc('sw-mail-template.detail.textErrorMessage')}: \"${errorDetailMsg}\"`;\n                }\n\n                this.createNotificationError({\n                    message: errorMsg,\n                });\n            }\n        },\n\n        getMailTemplate() {\n            return this.mailTemplateRepository.get(this.mailTemplate.id, Shopware.Context.api, this.mailTemplateCriteria)\n                .then((data) => {\n                    this.$emit('process-finish', data);\n                }).catch(() => {\n                    this.$emit('process-finish', null);\n                }).finally(() => {\n                    this.isLoading = false;\n                    this.onClose();\n                });\n        },\n    },\n};\n","export default \"\\n{% block sw_flow_create_mail_template_modal %}\\n<sw-modal\\n    class=\\\"sw-flow-create-mail-template-modal\\\"\\n    :title=\\\"$tc('sw-flow.modals.mail.titleNewEmailTemplate')\\\"\\n    :closable=\\\"false\\\"\\n    @modal-close=\\\"onClose\\\"\\n>\\n    \\n    {% block sw_flow_create_mail_template_modal_content %}\\n    \\n    {% block sw_flow_create_mail_template_modal_type_selection %}\\n    <sw-entity-single-select\\n        {% if VUE3 %}\\n        v-model:value=\\\"mailTemplate.mailTemplateTypeId\\\"\\n        {% else %}\\n        v-model=\\\"mailTemplate.mailTemplateTypeId\\\"\\n        {% endif %}\\n        class=\\\"sw-flow-create-mail-template-modal__type\\\"\\n        entity=\\\"mail_template_type\\\"\\n        required\\n        :label=\\\"$tc('sw-flow.modals.mail.labelMailType')\\\"\\n        :placeholder=\\\"$tc('sw-flow.modals.mail.placeholderMailType')\\\"\\n        :error=\\\"mailTemplateMailTemplateTypeIdError\\\"\\n        {% if VUE3 %}\\n        @update:value=\\\"onChangeType\\\"\\n        {% else %}\\n        @change=\\\"onChangeType\\\"\\n        {% endif %}\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_create_mail_template_modal_info %}\\n    <sw-container\\n        columns=\\\"1fr 1fr\\\"\\n        gap=\\\"30px\\\"\\n    >\\n        \\n        {% block sw_flow_create_mail_template_modal_subject %}\\n        <sw-text-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"mailTemplate.subject\\\"\\n            {% else %}\\n            v-model=\\\"mailTemplate.subject\\\"\\n            {% endif %}\\n            class=\\\"sw-flow-create-mail-template-modal__subject\\\"\\n            required\\n            :label=\\\"$tc('sw-flow.modals.mail.labelSubject')\\\"\\n            :placeholder=\\\"$tc('sw-flow.modals.mail.placeholderSubject')\\\"\\n            :error=\\\"mailTemplateSubjectError\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_create_mail_template_modal_sender_name %}\\n        <sw-text-field\\n            {% if VUE3 %}\\n            v-model:value=\\\"mailTemplate.senderName\\\"\\n            {% else %}\\n            v-model=\\\"mailTemplate.senderName\\\"\\n            {% endif %}\\n            class=\\\"sw-flow-create-mail-template-modal__sender-name\\\"\\n            :label=\\\"$tc('sw-flow.modals.mail.labelSenderName')\\\"\\n            :placeholder=\\\"$tc('sw-flow.modals.mail.placeholderSenderName')\\\"\\n        />\\n        {% endblock %}\\n    </sw-container>\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_create_mail_template_modal_description %}\\n    <sw-textarea-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"mailTemplate.description\\\"\\n        {% else %}\\n        v-model=\\\"mailTemplate.description\\\"\\n        {% endif %}\\n        class=\\\"sw-flow-create-mail-template-modal__description\\\"\\n        :label=\\\"$tc('sw-flow.modals.mail.labelDescription')\\\"\\n        :placeholder=\\\"$tc('sw-flow.modals.mail.placeholderDescription')\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_create_mail_template_modal_plain_content %}\\n    <sw-code-editor\\n        ref=\\\"plainEditor\\\"\\n        :key=\\\"`${mailTemplate.mailTemplateTypeId}plain`\\\"\\n        v-model=\\\"mailTemplate.contentPlain\\\"\\n        class=\\\"sw-flow-create-mail-template-modal__content-plain\\\"\\n        name=\\\"content_plain\\\"\\n        completion-mode=\\\"entity\\\"\\n        :label=\\\"$tc('sw-flow.modals.mail.labelContentPlain')\\\"\\n        :placeholder=\\\"placeholder(mailTemplate, 'contentPlain', $tc('sw-flow.modals.mail.placeholderPlain'))\\\"\\n        :completer-function=\\\"outerCompleterFunction\\\"\\n        :editor-config=\\\"editorConfig\\\"\\n        :error=\\\"mailTemplateContentPlainError\\\"\\n        required\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_create_mail_template_modal_html_content %}\\n    <sw-code-editor\\n        ref=\\\"htmlEditor\\\"\\n        :key=\\\"`${mailTemplate.mailTemplateTypeId}html`\\\"\\n        v-model=\\\"mailTemplate.contentHtml\\\"\\n        class=\\\"sw-flow-create-mail-template-modal__content-html\\\"\\n        name=\\\"content_html\\\"\\n        completion-mode=\\\"entity\\\"\\n        :label=\\\"$tc('sw-flow.modals.mail.labelContentHtml')\\\"\\n        :placeholder=\\\"placeholder(mailTemplate, 'contentPlain', $tc('sw-flow.modals.mail.placeholderHtml'))\\\"\\n        :completer-function=\\\"outerCompleterFunction\\\"\\n        :editor-config=\\\"editorConfig\\\"\\n        :error=\\\"mailTemplateContentHtmlError\\\"\\n        required\\n    />\\n    {% endblock %}\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_create_mail_template_modal_footer %}\\n    <template #modal-footer>\\n        \\n        {% block sw_flow_create_mail_template_modal_footer_cancel_button %}\\n        <sw-button\\n            class=\\\"sw-flow-create-mail-template-modal__cancel-button\\\"\\n            size=\\\"small\\\"\\n            @click=\\\"onClose\\\"\\n        >\\n            {{ $tc('global.default.cancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_create_mail_template_modal_footer_save_button %}\\n        <sw-button\\n            class=\\\"sw-flow-create-mail-template-modal__save-button\\\"\\n            variant=\\\"primary\\\"\\n            size=\\\"small\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            @click=\\\"onAddMailTemplate\\\"\\n        >\\n            {{ $tc('sw-flow.modals.mail.buttonAddMailTemplate') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n</sw-modal>\\n{% endblock %}\\n\";"],"sourceRoot":""}