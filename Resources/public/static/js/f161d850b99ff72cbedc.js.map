{"version":3,"sources":["webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-media-upload/sw-product-variants-media-upload.scss","webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-media-upload/index.js","webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-media-upload/sw-product-variants-media-upload.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Mixin","Context","isEmpty","Utils","types","template","inject","mixins","getByName","props","source","type","Object","required","parentProduct","isInherited","Boolean","data","showMediaModal","mediaDefaultFolderId","showPreviewModal","activeItemId","computed","productMediaRepository","this","repositoryFactory","create","media","entity","product","mediaSource","_toConsumableArray","sort","a","b","position","cover","coverId","mediaId","find","id","coverImageSource","_this$product$cover$m","_this$product","_this$product$cover","_this$product2","_this$product2$cover","_this$cover$media","created","createdComponent","methods","_this","getMediaDefaultFolderId","then","updateMediaItemPositions","catch","mediaDefaultFolderService","getDefaultFolderId","isCover","productMedia","length","markMediaAsCover","removeMedia","first","remove","onAddMedia","_this2","forEach","item","addMedia","_ref","fileName","createNotificationError","message","$tc","isExistingMedia","Promise","reject","newMedia","api","url","resolve","some","_ref2","onUploadMediaSuccessful","_ref3","targetId","isReplacedMedia","productId","sourceMedia","onUploadMediaFailed","_ref4","isLoading","previewMedia","onClosePreviewModal","medium","index"],"mappings":"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","file":"static/js/f161d850b99ff72cbedc.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-variants-media-upload.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"021cbdcb\", content, true, {});","/*\n * @package inventory\n */\n\nimport template from './sw-product-variants-media-upload.html.twig';\nimport './sw-product-variants-media-upload.scss';\n\nconst { Mixin, Context } = Shopware;\nconst { isEmpty } = Shopware.Utils.types;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'mediaDefaultFolderService'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        source: {\n            type: Object,\n            required: true,\n        },\n\n        parentProduct: {\n            type: Object,\n            required: true,\n        },\n\n        isInherited: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            showMediaModal: false,\n            mediaDefaultFolderId: null,\n            showPreviewModal: false,\n            activeItemId: null,\n        };\n    },\n\n    computed: {\n        productMediaRepository() {\n            return this.repositoryFactory.create(this.source.media.entity);\n        },\n\n        product() {\n            if (this.isInherited) {\n                return this.parentProduct;\n            }\n\n            return this.source;\n        },\n\n        mediaSource() {\n            if (!this.product) {\n                return [];\n            }\n            const media = [...this.product.media];\n\n            return media.sort((a, b) => a.position - b.position);\n        },\n\n        cover() {\n            if (!this.product) {\n                return null;\n            }\n            const coverId = this.product.cover ? this.product.cover.mediaId : this.product.coverId;\n            return this.product.media.find(media => media.id === coverId);\n        },\n\n        coverImageSource() {\n            if (this.cover) {\n                return this.cover.media ?? this.cover.mediaId;\n            }\n\n            return this.product?.cover?.mediaId ?? this.product?.cover?.media;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.getMediaDefaultFolderId()\n                .then((id) => {\n                    this.mediaDefaultFolderId = id;\n                    this.updateMediaItemPositions();\n                })\n                .catch(() => {\n                    this.mediaDefaultFolderId = null;\n                });\n        },\n\n        getMediaDefaultFolderId() {\n            return this.mediaDefaultFolderService.getDefaultFolderId('product');\n        },\n\n        isCover(productMedia) {\n            const coverId = this.product.cover ? this.product.cover.id : this.product.coverId;\n\n            if (this.product.media.length === 0) {\n                return false;\n            }\n\n            return productMedia.id === coverId;\n        },\n\n        markMediaAsCover(productMedia) {\n            this.product.cover = productMedia;\n            this.product.coverId = productMedia.id;\n        },\n\n        removeMedia(productMedia) {\n            if (this.product.coverId === productMedia.id) {\n                this.product.cover = null;\n                this.product.coverId = null;\n            }\n\n            if (this.product.coverId === null && this.product.media.length > 0) {\n                this.product.coverId = this.product.media.first().id;\n            }\n\n            this.product.media.remove(productMedia.id);\n        },\n\n        onAddMedia(media) {\n            if (isEmpty(media)) {\n                return;\n            }\n\n            media.forEach((item) => {\n                this.addMedia(item).catch(({ fileName }) => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-product.mediaForm.errorMediaItemDuplicated', 0, { fileName }),\n                    });\n                });\n            });\n            this.updateMediaItemPositions();\n        },\n\n        addMedia(media) {\n            if (this.isExistingMedia(media)) {\n                return Promise.reject(media);\n            }\n\n            const newMedia = this.productMediaRepository.create(Context.api);\n            newMedia.mediaId = media.id;\n            newMedia.media = { url: media.url, id: media.id };\n\n            if (isEmpty(this.source.media)) {\n                this.source.cover = newMedia;\n                this.source.coverId = newMedia.id;\n            }\n\n            this.source.media.add(newMedia);\n\n            return Promise.resolve();\n        },\n\n        isExistingMedia(media) {\n            return this.source.media.some(({ id, mediaId }) => {\n                return id === media.id || mediaId === media.id;\n            });\n        },\n\n        onUploadMediaSuccessful({ targetId }) {\n            if (this.isReplacedMedia(targetId)) {\n                return;\n            }\n\n            const newMedia = this.productMediaRepository.create(Context.api);\n            newMedia.productId = this.source.id;\n            newMedia.mediaId = targetId;\n\n            if (isEmpty(this.source.media)) {\n                newMedia.position = 0;\n                this.source.coverId = newMedia.id;\n            } else {\n                newMedia.position = this.source.media.length;\n            }\n\n            this.source.media.add(newMedia);\n            this.updateMediaItemPositions();\n        },\n\n        isReplacedMedia(targetId) {\n            return this.source.media.find((sourceMedia) => {\n                return sourceMedia.mediaId === targetId;\n            });\n        },\n\n        onUploadMediaFailed({ targetId }) {\n            const newMedia = this.source.media.find((sourceMedia) => {\n                return sourceMedia.mediaId === targetId;\n            });\n\n            if (newMedia) {\n                if (this.source.coverId === newMedia.id) {\n                    this.source.coverId = null;\n                }\n                this.source.media.remove(newMedia.id);\n            }\n\n            this.source.isLoading = false;\n        },\n\n        previewMedia(item) {\n            this.activeItemId = item.id;\n            this.showPreviewModal = true;\n        },\n\n        onClosePreviewModal() {\n            this.activeItemId = null;\n            this.showPreviewModal = false;\n        },\n\n        updateMediaItemPositions() {\n            this.source.media.forEach((medium, index) => {\n                medium.position = index;\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_media_upload_v2 %}\\n<div\\n    class=\\\"sw-media-upload-v2 sw-product-variants-media-upload\\\"\\n    :class=\\\"{ 'is--disabled': disabled }\\\"\\n>\\n    \\n    {% block sw_product_variants_media_upload_content %}\\n    <div class=\\\"sw-media-upload-v2__content\\\">\\n        \\n        {% block sw_product_variants_media_upload_drop_zone %}\\n        <div\\n            ref=\\\"dropzone\\\"\\n            class=\\\"sw-media-upload-v2__dropzone\\\"\\n        >\\n            <div class=\\\"sw-product-variants-media-upload__preview-images\\\">\\n                \\n                {% block sw_product_variants_media_upload_cover_preview %}\\n                <div\\n                    v-if=\\\"product.cover || cover\\\"\\n                    class=\\\"sw-product-variants-media-upload__preview-cover\\\"\\n                >\\n                    \\n                    {% block sw_product_variants_media_upload_cover_image %}\\n                    <sw-media-preview-v2\\n                        class=\\\"sw-product-variants-media-upload__cover-image\\\"\\n                        :source=\\\"coverImageSource\\\"\\n                    />\\n                    {% endblock %}\\n                </div>\\n                <div\\n                    v-else-if=\\\"source.media.length > 0\\\"\\n                    class=\\\"sw-product-variants-media-upload__preview-cover\\\"\\n                >\\n                    \\n                    {% block sw_product_variants_media_upload_cover_image_empty %}\\n                    <sw-media-preview-v2\\n                        class=\\\"sw-product-variants-media-upload__cover-image\\\"\\n                        :source=\\\"null\\\"\\n                    />\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variants_media_upload_preview %}\\n                <div\\n                    class=\\\"sw-product-variants-media-upload__images\\\"\\n                    :class=\\\"{ 'is--compact--button': mediaSource.length > 2 }\\\"\\n                >\\n                    <div\\n                        v-for=\\\"(item, index) in mediaSource\\\"\\n                        :key=\\\"index\\\"\\n                        class=\\\"sw-product-variants-media-upload__image\\\"\\n                    >\\n                        \\n                        {% block ssw_product_variants_media_upload_content_preview_file %}\\n                        <sw-media-preview-v2\\n                            :key=\\\"item.id\\\"\\n                            class=\\\"sw-media-upload-v2__preview\\\"\\n                            :class=\\\"{ 'is--cover': isCover(item), 'is--disabled': disabled }\\\"\\n                            :source=\\\"item.media && item.productId ? item.media : item.mediaId\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_product_variants_media_upload_action_buttons %}\\n                        <sw-context-button\\n                            class=\\\"sw-product-variants-media-upload__context-button\\\"\\n                            :disabled=\\\"disabled\\\"\\n                        >\\n                            \\n                            {% block sw_product_variants_media_upload_context %}\\n                            \\n                            {% block sw_product_variants_media_upload_context_cover_action %}\\n                            <sw-context-menu-item\\n                                v-if=\\\"!isCover(item)\\\"\\n                                @click=\\\"markMediaAsCover(item)\\\"\\n                            >\\n                                {{ $tc('global.sw-product-image.context.buttonAsCover') }}\\n                            </sw-context-menu-item>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_product_variants_media_upload_context_preview_action %}\\n                            <sw-context-menu-item @click=\\\"previewMedia(item)\\\">\\n                                {{ $tc('global.sw-product-image.context.buttonPreviewImage') }}\\n                            </sw-context-menu-item>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_product_variants_media_upload_context_delete_action %}\\n                            <sw-context-menu-item\\n                                variant=\\\"danger\\\"\\n                                @click=\\\"removeMedia(item)\\\"\\n                            >\\n                                {{ $tc('global.sw-product-image.context.buttonRemove') }}\\n                            </sw-context-menu-item>\\n                            {% endblock %}\\n                            {% endblock %}\\n                        </sw-context-button>\\n                        {% endblock %}\\n                    </div>\\n                </div>\\n                {% endblock %}\\n            </div>\\n            \\n            {% block sw_product_variants_media_upload_actions %}\\n            <div class=\\\"sw-media-upload-v2__actions\\\">\\n                \\n                {% block sw_product_variants_media_upload_actions_regular %}\\n                <div\\n                    v-if=\\\"mediaSource.length <= 2\\\"\\n                    class=\\\"sw-product-variants-media-upload__regular-button\\\"\\n                >\\n                    \\n                    {% block sw_product_variants_media_upload_actions_regular_upload_button %}\\n                    <sw-button\\n                        class=\\\"sw-media-upload-v2__button upload\\\"\\n                        :disabled=\\\"disabled\\\"\\n                        variant=\\\"ghost\\\"\\n                        size=\\\"small\\\"\\n                        @click=\\\"onClickUpload\\\"\\n                    >\\n                        {{ $tc('global.sw-media-upload-v2.buttonFilesUpload') }}\\n                    </sw-button>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_product_variants_media_upload_actions_regular_open_button %}\\n                    <sw-button\\n                        variant=\\\"primary\\\"\\n                        :disabled=\\\"disabled\\\"\\n                        class=\\\"sw-product-variants-media-upload__browse-button\\\"\\n                        @click=\\\"showMediaModal = true\\\"\\n                    >\\n                        <sw-icon\\n                            class=\\\"sw-product-variants-media-upload__browse-icon\\\"\\n                            name=\\\"regular-image\\\"\\n                        />\\n                    </sw-button>\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_variants_media_upload_actions_compact %}\\n                <div\\n                    v-else\\n                    class=\\\"sw-product-variants-media-upload__compact-button\\\"\\n                >\\n                    <sw-button\\n                        variant=\\\"primary\\\"\\n                        :disabled=\\\"disabled\\\"\\n                        class=\\\"sw-product-variants-media-upload__browse-button\\\"\\n                    >\\n                        <sw-icon\\n                            class=\\\"sw-product-variants-media-upload__browse-icon\\\"\\n                            name=\\\"regular-plus\\\"\\n                        />\\n                    </sw-button>\\n                    <sw-context-button\\n                        class=\\\"sw-product-variants-media-upload__context-button\\\"\\n                        :disabled=\\\"disabled\\\"\\n                    >\\n                        \\n                        {% block sw_product_variants_media_upload_actions_compact_button_context %}\\n                        \\n                        {% block sw_product_variants_media_upload_actions_compact_button_context_upload_action %}\\n                        <sw-context-menu-item @click=\\\"onClickUpload\\\">\\n                            {{ $tc('global.sw-media-upload-v2.buttonFilesUpload') }}\\n                        </sw-context-menu-item>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_product_variants_media_upload_actions_compact_button_context_open_action %}\\n                        <sw-context-menu-item @click=\\\"showMediaModal = true\\\">\\n                            {{ $tc('global.sw-media-upload-v2.buttonOpenMedia') }}\\n                        </sw-context-menu-item>\\n                        {% endblock %}\\n                        {% endblock %}\\n                    </sw-context-button>\\n                </div>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variants_media_upload_file_input %}\\n    <form\\n        ref=\\\"fileForm\\\"\\n        class=\\\"sw-media-upload-v2__form\\\"\\n    >\\n        \\n        <input\\n            :key=\\\"source.id\\\"\\n            ref=\\\"fileInput\\\"\\n            class=\\\"sw-media-upload-v2__file-input\\\"\\n            type=\\\"file\\\"\\n            :accept=\\\"fileAccept\\\"\\n            :multiple=\\\"multiSelect\\\"\\n            @change=\\\"onFileInputChange\\\"\\n        >\\n    </form>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variants_media_upload_actions_media_modal %}\\n    <sw-media-modal-v2\\n        v-if=\\\"showMediaModal\\\"\\n        :initial-folder-id=\\\"mediaDefaultFolderId\\\"\\n        :entity-context=\\\"product.getEntityName()\\\"\\n        @modal-close=\\\"showMediaModal = false\\\"\\n        @media-modal-selection-change=\\\"onAddMedia\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variants_media_upload_listener %}\\n    <sw-upload-listener\\n        auto-upload\\n        :upload-tag=\\\"uploadTag\\\"\\n        @media-upload-finish=\\\"onUploadMediaSuccessful\\\"\\n        @media-upload-fail=\\\"onUploadMediaFailed\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variants_media_upload_preview_modal %}\\n    <sw-image-preview-modal\\n        v-if=\\\"showPreviewModal\\\"\\n        :active-item-id=\\\"activeItemId\\\"\\n        :media-items=\\\"mediaSource\\\"\\n        @modal-close=\\\"onClosePreviewModal\\\"\\n    />\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}