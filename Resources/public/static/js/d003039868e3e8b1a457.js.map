{"version":3,"sources":["webpack:///./src/module/sw-bulk-edit/component/sw-bulk-edit-save-modal-process/index.js","webpack:///./src/module/sw-bulk-edit/component/sw-bulk-edit-save-modal-process/sw-bulk-edit-save-modal-process.html.twig","webpack:///./src/module/sw-bulk-edit/component/sw-bulk-edit-save-modal-process/sw-bulk-edit-save-modal-process.scss"],"names":["chunkArray","Shopware","Utils","array","chunk","template","inject","data","requestsPerPayload","document","invoice","isReached","storno","delivery_note","credit_note","computed","selectedIds","State","get","documentTypes","_Shopware$State$get","_Shopware$State$get$o","_Shopware$State$get$o2","orderDocuments","download","value","documentTypeConfigs","getters","selectedDocumentTypes","_this","this","length","forEach","documentTypeConfig","selectedDocumentType","find","documentType","type","technicalName","push","createDocumentPayload","_this2","payload","selectedId","_this2$documentTypeCo","_objectSpread","orderId","created","createdComponent","methods","_this3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","updateButtons","setTitle","createDocuments","$emit","stop","$tc","buttonConfig","key","label","position","action","disabled","variant","_this4","_callee2","invoiceDocuments","stornoDocuments","creditNoteDocuments","deliveryNoteDocuments","_context2","abrupt","filter","item","createDocument","_this5","_callee4","chunkedPayload","percentages","_context4","orderDocumentApiService","generate","$set","Promise","resolve","Math","round","all","map","_ref","_callee3","_context3","_x","apply","arguments","then","content","__esModule","default","module","i","locals","exports","add"],"mappings":"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","file":"static/js/d003039868e3e8b1a457.js","sourcesContent":["/**\n * @package system-settings\n */\nimport template from './sw-bulk-edit-save-modal-process.html.twig';\nimport './sw-bulk-edit-save-modal-process.scss';\n\nconst { chunk: chunkArray } = Shopware.Utils.array;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['orderDocumentApiService'],\n\n    data() {\n        return {\n            requestsPerPayload: 5,\n            document: {\n                invoice: {\n                    isReached: 0,\n                },\n                storno: {\n                    isReached: 0,\n                },\n                delivery_note: {\n                    isReached: 0,\n                },\n                credit_note: {\n                    isReached: 0,\n                },\n            },\n        };\n    },\n\n    computed: {\n        selectedIds() {\n            return Shopware.State.get('shopwareApps').selectedIds;\n        },\n\n        documentTypes() {\n            return Shopware.State.get('swBulkEdit')?.orderDocuments?.download?.value;\n        },\n\n        documentTypeConfigs() {\n            return Shopware.State.getters['swBulkEdit/documentTypeConfigs'];\n        },\n\n        selectedDocumentTypes() {\n            if (this.documentTypeConfigs.length <= 0) {\n                return [];\n            }\n\n            const selectedDocumentTypes = [];\n\n            this.documentTypeConfigs.forEach((documentTypeConfig) => {\n                const selectedDocumentType = this.documentTypes.find((documentType) => {\n                    return documentTypeConfig.type === documentType.technicalName;\n                });\n\n                if (selectedDocumentType) {\n                    selectedDocumentTypes.push(selectedDocumentType);\n                }\n            });\n\n            return selectedDocumentTypes;\n        },\n\n        createDocumentPayload() {\n            const payload = [];\n\n            this.selectedIds.forEach((selectedId) => {\n                this.documentTypeConfigs?.forEach((documentTypeConfig) => {\n                    if (documentTypeConfig) {\n                        payload.push({\n                            ...documentTypeConfig,\n                            orderId: selectedId,\n                        });\n                    }\n                });\n            });\n\n            return payload;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            this.updateButtons();\n            this.setTitle();\n            await this.createDocuments();\n            this.$emit('changes-apply');\n        },\n\n        setTitle() {\n            this.$emit('title-set', this.$tc('sw-bulk-edit.modal.process.title'));\n        },\n\n        updateButtons() {\n            const buttonConfig = [\n                {\n                    key: 'cancel',\n                    label: this.$tc('sw-bulk-edit.modal.process.buttons.cancel'),\n                    position: 'left',\n                    action: '',\n                    disabled: false,\n                },\n                {\n                    key: 'next',\n                    label: this.$tc('global.sw-modal.labelClose'),\n                    position: 'right',\n                    variant: 'primary',\n                    action: '',\n                    disabled: true,\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        async createDocuments() {\n            if (this.createDocumentPayload.length <= 0) {\n                return;\n            }\n\n            const invoiceDocuments = this.createDocumentPayload.filter((item) => item.type === 'invoice');\n            const stornoDocuments = this.createDocumentPayload.filter((item) => item.type === 'storno');\n            const creditNoteDocuments = this.createDocumentPayload.filter((item) => item.type === 'credit_note');\n            const deliveryNoteDocuments = this.createDocumentPayload.filter((item) => item.type === 'delivery_note');\n\n            if (invoiceDocuments.length > 0) {\n                await this.createDocument('invoice', invoiceDocuments);\n            }\n\n            if (stornoDocuments.length > 0) {\n                await this.createDocument('storno', stornoDocuments);\n            }\n\n            if (creditNoteDocuments.length > 0) {\n                await this.createDocument('credit_note', creditNoteDocuments);\n            }\n\n            if (deliveryNoteDocuments.length > 0) {\n                await this.createDocument('delivery_note', deliveryNoteDocuments);\n            }\n        },\n\n        async createDocument(documentType, payload) {\n            if (payload.length <= this.requestsPerPayload) {\n                await this.orderDocumentApiService.generate(documentType, payload);\n                this.$set(this.document[documentType], 'isReached', 100);\n\n                return Promise.resolve();\n            }\n\n            const chunkedPayload = chunkArray(payload, this.requestsPerPayload);\n            const percentages = Math.round(100 / chunkedPayload.length);\n\n            return Promise\n                .all(chunkedPayload.map(async (item) => {\n                    await this.orderDocumentApiService.generate(documentType, item);\n                    this.$set(this.document[documentType], 'isReached', this.document[documentType].isReached + percentages);\n                }))\n                .then(() => {\n                    this.$set(this.document[documentType], 'isReached', 100);\n                });\n        },\n    },\n};\n","export default \"\\n{% block sw_bulk_edit_save_modal_process %}\\n<div class=\\\"sw-bulk-edit-save-modal-process\\\">\\n    \\n    {% block sw_bulk_edit_save_modal_process_icon %}\\n    <sw-label\\n        class=\\\"sw-bulk-edit-save-modal__icon\\\"\\n        appearance=\\\"pill\\\"\\n        variant=\\\"info\\\"\\n    >\\n        <sw-loader\\n            class=\\\"sw-bulk-edit-save-modal__loading-icon\\\"\\n            size=\\\"30px\\\"\\n        />\\n    </sw-label>\\n    {% endblock %}\\n\\n    \\n    {% block sw_bulk_edit_save_modal_process_generate_document %}\\n    <ul\\n        v-if=\\\"selectedDocumentTypes.length > 0\\\"\\n        class=\\\"sw-bulk-edit-save-modal-process__generate-document-container\\\"\\n    >\\n        <li\\n            v-for=\\\"selectedDocumentType in selectedDocumentTypes\\\"\\n            :key=\\\"selectedDocumentType.id\\\"\\n            class=\\\"sw-bulk-edit-save-modal-process__generate-document\\\"\\n            :class=\\\"`is--${selectedDocumentType.technicalName}`\\\"\\n        >\\n            <div class=\\\"progress\\\">\\n                <div class=\\\"progress__label\\\">\\n                    <span>{{ selectedDocumentType.translated.name }}</span>\\n                    <span>{{ `${document[selectedDocumentType.technicalName].isReached}%` }}</span>\\n                </div>\\n                <div class=\\\"progress__bar\\\">\\n                    <div\\n                        class=\\\"progress__bar-fill\\\"\\n                        :style=\\\"{ width: `${document[selectedDocumentType.technicalName].isReached}%` }\\\"\\n                    >\\n                    </div>\\n                </div>\\n            </div>\\n        </li>\\n    </ul>\\n    {% endblock %}\\n\\n    \\n    {% block sw_bulk_edit_save_modal_process_content %}\\n    <p class=\\\"sw-bulk-edit-save-modal__help-text\\\">\\n        {{ $tc('sw-bulk-edit.modal.process.description') }}\\n        <br>\\n        <br>\\n        {{ $tc('sw-bulk-edit.modal.process.helpText') }}\\n    </p>\\n\\n    <sw-alert\\n        variant=\\\"warning\\\"\\n        class=\\\"sw-bulk-edit-save-modal__warning\\\"\\n    >\\n        {{ $tc('sw-bulk-edit.modal.warningText') }}\\n    </sw-alert>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-bulk-edit-save-modal-process.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"579ba4f8\", content, true, {});"],"sourceRoot":""}