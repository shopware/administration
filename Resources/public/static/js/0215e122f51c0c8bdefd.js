(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[87292],{774851:function(){},787292:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return i}}),t(202401);let{Criteria:r}=Shopware.Data;var i={template:'\n{% block sw_product_clone_modal %}\n<sw-modal\n    v-if="cloningVariants"\n    :title="$tc(\'sw-product.general.cloneTitle\')"\n    :closable="false"\n    variant="small"\n    class="clone-variant__modal"\n>\n    \n    {% block sw_product_clone_modal_description %}\n    <div class="clone-variant__description">\n        {{ $tc(\'sw-product.general.cloneNotice\') }}\n    </div>\n    {% endblock %}\n\n    \n    {% block sw_product_clone_modal_progress_bar %}\n    <sw-progress-bar\n        class="clone-variant-progress-bar"\n        :value="progressInPercentage"\n    />\n    {% endblock %}\n\n    \n    {% block sw_product_clone_modal_progress_bar_description %}\n    <div class="clone-variant-progress-bar__description">\n        {{ cloneProgress }} {{ $tc(\'sw-product.variations.progressTypeOf\') }} {{ cloneMaxProgress }} {{ $tc(\'sw-product.general.cloneSuffix\') }}\n    </div>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n',inject:["repositoryFactory","numberRangeService"],props:{product:{type:Object,required:!0}},data(){return{cloningVariants:!1,cloneMaxProgress:0,cloneProgress:0}},computed:{progressInPercentage(){return 100/(this.cloneMaxProgress*this.cloneProgress)},repository(){return this.repositoryFactory.create("product")}},created(){this.createdComponent()},methods:{createdComponent(){this.duplicate()},duplicate(){this.numberRangeService.reserve("product").then(this.cloneParent).then(this.verifyVariants)},async cloneParent(e){let n=this.product.variantListingConfig;n&&n.mainVariantId&&(n.mainVariantId=null);let t={cloneChildren:!1,overwrites:{productNumber:e.number,name:`${this.product.name} ${this.$tc("global.default.copy")}`,active:!1,mainVariantId:null,variantListingConfig:n}};return await this.repository.save(this.product),{id:(await this.repository.clone(this.product.id,t,Shopware.Context.api)).id,productNumber:e.number}},verifyVariants(e){this.getChildrenIds().then(n=>{if(n.length<=0){this.$emit("clone-finish",{id:e.id});return}this.cloningVariants=!0,this.cloneProgress=1,this.cloneMaxProgress=n.length,this.duplicateVariant(e,n,()=>{this.cloningVariants=!1,this.$emit("clone-finish",{id:e.id})})})},getChildrenIds(){let e=new r(1,null);return e.addFilter(r.equals("parentId",this.product.id)),this.repository.searchIds(e).then(e=>e.data)},duplicateVariant(e,n,t){if(n.length<=0){t();return}let r=n.shift(),i={overwrites:{parentId:e.id,productNumber:`${e.productNumber}.${this.cloneProgress}`},cloneChildren:!1};this.repository.clone(r,i,Shopware.Context.api).then(()=>{this.cloneProgress+=1,this.duplicateVariant(e,n,t)})}}}},202401:function(e,n,t){var r=t(774851);r.__esModule&&(r=r.default),"string"==typeof r&&(r=[[e.id,r,""]]),r.locals&&(e.exports=r.locals),t(745346).Z("97a70c28",r,!0,{})}}]);