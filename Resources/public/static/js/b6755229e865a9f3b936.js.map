{"version":3,"sources":["webpack:///./src/module/sw-settings-salutation/page/sw-settings-salutation-detail/index.js","webpack:///./src/module/sw-settings-salutation/page/sw-settings-salutation-detail/sw-settings-salutation-detail.html.twig"],"names":["Mixin","Shopware","Criteria","Data","ShopwareError","Classes","mapPropertyErrors","Component","getComponentHelper","utils","Utils","template","inject","mixins","getByName","props","salutationId","type","String","required","default","shortcuts","active","this","allowSave","method","ESCAPE","data","entityName","isLoading","salutation","invalidKey","isKeyChecking","isSaveSuccessful","customFieldSets","metaInfo","title","$createTitle","identifier","computed","_objectSpread","placeholder","salutationRepository","repositoryFactory","create","entityDescription","$tc","invalidKeyError","code","isNew","acl","can","tooltipSave","message","disabled","showOnDisabledElements","systemKey","$device","getSystemKey","concat","appearance","tooltipCancel","showCustomFields","length","watch","createdComponent","created","methods","_this","get","then","loadCustomFieldSets","State","commit","_this2","customFieldDataProviderService","getCustomFieldSets","sets","onChangeLanguage","saveFinish","onSave","_this3","save","$router","push","name","params","id","updatedSalutation","catch","createNotificationError","onCancel","onChange","onChangeDebounce","debounce","_this4","salutationKey","trim","criteria","addFilter","multi","equals","not","search","_ref","total"],"mappings":"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","file":"static/js/b6755229e865a9f3b936.js","sourcesContent":["/**\n * @package buyers-experience\n */\nimport template from './sw-settings-salutation-detail.html.twig';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst ShopwareError = Shopware.Classes.ShopwareError;\nconst { mapPropertyErrors } = Shopware.Component.getComponentHelper();\nconst utils = Shopware.Utils;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl', 'customFieldDataProviderService'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('placeholder'),\n        Mixin.getByName('discard-detail-page-changes')('salutation'),\n    ],\n\n    props: {\n        salutationId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    shortcuts: {\n        'SYSTEMKEY+S': {\n            active() {\n                return this.allowSave;\n            },\n            method: 'onSave',\n        },\n\n        ESCAPE: 'onCancel',\n    },\n\n    data() {\n        return {\n            entityName: 'salutation',\n            isLoading: false,\n            salutation: null,\n            invalidKey: false,\n            isKeyChecking: false,\n            isSaveSuccessful: false,\n            customFieldSets: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        identifier() {\n            return this.placeholder(this.salutation, 'displayName');\n        },\n\n        salutationRepository() {\n            return this.repositoryFactory.create('salutation');\n        },\n\n        entityDescription() {\n            return this.placeholder(\n                this.salutation,\n                'salutationKey',\n                this.$tc('sw-settings-salutation.detail.placeholderNewSalutation'),\n            );\n        },\n\n        invalidKeyError() {\n            if (this.invalidKey && !this.isKeyChecking) {\n                return new ShopwareError({ code: 'DUPLICATED_SALUTATION_KEY' });\n            }\n            return null;\n        },\n\n        allowSave() {\n            return this.salutation && this.salutation.isNew()\n                ? this.acl.can('salutation.creator')\n                : this.acl.can('salutation.editor');\n        },\n\n        tooltipSave() {\n            if (!this.allowSave) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.allowSave,\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        tooltipCancel() {\n            return {\n                message: 'ESC',\n                appearance: 'light',\n            };\n        },\n\n        ...mapPropertyErrors(\n            'salutation',\n            [\n                'displayName',\n                'letterName',\n                'salutationKey',\n            ],\n        ),\n\n        showCustomFields() {\n            return this.salutation && this.customFieldSets && this.customFieldSets.length > 0;\n        },\n    },\n\n    watch: {\n        salutationId() {\n            if (!this.salutationId) {\n                this.createdComponent();\n            }\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n            if (this.salutationId) {\n                this.salutationRepository.get(this.salutationId).then((salutation) => {\n                    this.salutation = salutation;\n                    this.isLoading = false;\n                });\n                this.loadCustomFieldSets();\n                return;\n            }\n\n            Shopware.State.commit('context/resetLanguageToDefault');\n            this.salutation = this.salutationRepository.create();\n            this.isLoading = false;\n        },\n\n        loadCustomFieldSets() {\n            this.customFieldDataProviderService.getCustomFieldSets('salutation').then((sets) => {\n                this.customFieldSets = sets;\n            });\n        },\n\n        onChangeLanguage() {\n            this.createdComponent();\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onSave() {\n            this.isLoading = true;\n            this.isSaveSuccessful = false;\n\n            return this.salutationRepository.save(this.salutation).then(() => {\n                this.isSaveSuccessful = true;\n                if (!this.salutationId) {\n                    this.$router.push({ name: 'sw.settings.salutation.detail', params: { id: this.salutation.id } });\n                }\n\n                this.salutationRepository.get(this.salutation.id).then((updatedSalutation) => {\n                    this.salutation = updatedSalutation;\n                    this.isLoading = false;\n                });\n            }).catch(() => {\n                this.isLoading = false;\n\n                this.createNotificationError({\n                    title: this.$tc('global.default.error'),\n                    message: this.$tc('sw-settings-salutation.detail.notificationErrorMessage'),\n                });\n            });\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'sw.settings.salutation.index' });\n        },\n\n        onChange() {\n            this.isKeyChecking = true;\n            this.onChangeDebounce();\n        },\n\n        onChangeDebounce: utils.debounce(function executeChange() {\n            if (!this.salutation) {\n                return;\n            }\n\n            if (typeof this.salutation.salutationKey !== 'string' ||\n                this.salutation.salutationKey.trim() === ''\n            ) {\n                this.invalidKey = false;\n                this.isKeyChecking = false;\n                return;\n            }\n\n            const criteria = new Criteria(1, 1);\n            criteria.addFilter(\n                Criteria.multi(\n                    'AND',\n                    [\n                        Criteria.equals('salutationKey', this.salutation.salutationKey),\n                        Criteria.not('AND', [Criteria.equals('id', this.salutation.id)]),\n                    ],\n                ),\n            );\n\n            this.salutationRepository.search(criteria).then(({ total }) => {\n                this.invalidKey = total > 0;\n                this.isKeyChecking = false;\n            }).catch(() => {\n                this.invalidKey = true;\n                this.isKeyChecking = false;\n            });\n        }, 500),\n    },\n};\n","export default \"\\n{% block sw_settings_salutation_detail %}\\n<sw-page class=\\\"sw-settings-salutation-detail\\\">\\n\\n    \\n    {% block sw_settings_salutation_detail_search_bar %}\\n    <template #search-bar></template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_salutation_detail_smart_bar_header %}\\n    <template #smart-bar-header>\\n        \\n        {% block sw_settings_salutation_detail_smart_bar_header_title %}\\n        <h2>\\n            \\n            {% block sw_settings_salutation_detail_smart_bar_header_title_text %}\\n            {{ placeholder(salutation, 'salutationKey', $tc('sw-settings-salutation.detail.placeholderNewSalutation')) }}\\n            {% endblock %}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_salutation_detail_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch\\n            :disabled=\\\"salutationId == null\\\"\\n            @on-change=\\\"onChangeLanguage\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_salutation_detail_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_settings_salutation_detail_actions_cancel %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"tooltipCancel\\\"\\n            class=\\\"sw-settings-salutation-detail__cancel\\\"\\n            @click=\\\"onCancel\\\"\\n        >\\n            {{ $tc('sw-settings-salutation.general.buttonCancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_salutation_detail_actions_save %}\\n        <sw-button-process\\n            v-tooltip.bottom=\\\"tooltipSave\\\"\\n            class=\\\"sw-settings-salutation-detail__save\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :process-success=\\\"isSaveSuccessful\\\"\\n            :disabled=\\\"invalidKey || isKeyChecking || !allowSave\\\"\\n            variant=\\\"primary\\\"\\n            {% if VUE3 %}\\n            @update:process-success=\\\"saveFinish\\\"\\n            {% else %}\\n            @process-finish=\\\"saveFinish\\\"\\n            {% endif %}\\n            @click=\\\"onSave\\\"\\n        >\\n            {{ $tc('sw-settings-salutation.general.buttonSave') }}\\n        </sw-button-process>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_salutation_detail_cardview %}\\n    <template #content>\\n        <sw-card-view>\\n            <sw-skeleton v-if=\\\"isLoading\\\" />\\n\\n            <template v-else>\\n                \\n                {% block sw_settings_salutation_detail_content_language_info %}\\n                <sw-language-info :entity-description=\\\"entityDescription\\\" />\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_salutation_detail_content_card %}\\n                <sw-card\\n                    position-identifier=\\\"sw-settings-salutation-detail-content\\\"\\n                    :is-loading=\\\"isLoading\\\"\\n                    :title=\\\"$tc('sw-settings-salutation.detail.cardTitle')\\\"\\n                >\\n\\n                    <template v-if=\\\"salutation\\\">\\n                        \\n                        {% block sw_settings_salutation_detail_content_card_salutation_key %}\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"salutation.salutationKey\\\"\\n                            {% else %}\\n                            v-model=\\\"salutation.salutationKey\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--salutation-salutationKey\\\"\\n                            class=\\\"sw-settings-salutation-detail__salutation_key\\\"\\n                            :label=\\\"$tc('sw-settings-salutation.detail.fieldSalutationKeyLabel')\\\"\\n                            :placeholder=\\\"$tc('sw-settings-salutation.detail.fieldSalutationKeyPlaceholder')\\\"\\n                            :help-text=\\\"$tc('sw-settings-salutation.detail.fieldSalutationKeyTooltip')\\\"\\n                            :error=\\\"salutationSalutationKeyError\\\"\\n                            validation=\\\"required\\\"\\n                            required\\n                            :disabled=\\\"!acl.can('salutation.editor')\\\"\\n                            {% if VUE3 %}\\n                            @update:value=\\\"onChange\\\"\\n                            {% else %}\\n                            @input=\\\"onChange\\\"\\n                            {% endif %}\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_salutation_detail_content_card_display_name %}\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"salutation.displayName\\\"\\n                            {% else %}\\n                            v-model=\\\"salutation.displayName\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--salutation-displayName\\\"\\n                            required\\n                            class=\\\"sw-settings-salutation-detail__displayName\\\"\\n                            :label=\\\"$tc('sw-settings-salutation.detail.fieldDisplayNameLabel')\\\"\\n                            :error=\\\"salutationDisplayNameError\\\"\\n                            :disabled=\\\"!acl.can('salutation.editor')\\\"\\n                            :placeholder=\\\"placeholder(salutation, 'displayName', $tc('sw-settings-salutation.detail.fieldDisplayNamePlaceholder'))\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_salutation_detail_content_card_letter_name %}\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"salutation.letterName\\\"\\n                            {% else %}\\n                            v-model=\\\"salutation.letterName\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--salutation-letterName\\\"\\n                            required\\n                            class=\\\"sw-settings-salutation-detail__letterName\\\"\\n                            :label=\\\"$tc('sw-settings-salutation.detail.fieldLetterNameLabel')\\\"\\n                            :error=\\\"salutationLetterNameError\\\"\\n                            :disabled=\\\"!acl.can('salutation.editor')\\\"\\n                            :placeholder=\\\"placeholder(salutation, 'letterName', $tc('sw-settings-salutation.detail.fieldLetterNamePlaceholder'))\\\"\\n                        />\\n                        {% endblock %}\\n                    </template>\\n                </sw-card>\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_salutation_detail_custom_field_sets %}\\n                <sw-card\\n                    v-if=\\\"showCustomFields\\\"\\n                    position-identifier=\\\"sw-settings-salutation-detail-custom-fields\\\"\\n                    :title=\\\"$tc('sw-settings-custom-field.general.mainMenuItemGeneral')\\\"\\n                    :is-loading=\\\"isLoading\\\"\\n                >\\n                    <sw-custom-field-set-renderer\\n                        :entity=\\\"salutation\\\"\\n                        :disabled=\\\"!acl.can('salutation.editor')\\\"\\n                        :sets=\\\"customFieldSets\\\"\\n                    />\\n                </sw-card>\\n                {% endblock %}\\n            </template>\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n\\n</sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}