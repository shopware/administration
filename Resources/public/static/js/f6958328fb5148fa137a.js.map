{"version":3,"sources":["webpack:///./src/module/sw-users-permissions/components/sw-users-permissions-user-listing/sw-users-permissions-user-listing.scss","webpack:///./src/module/sw-users-permissions/components/sw-users-permissions-user-listing/index.js","webpack:///./src/module/sw-users-permissions/components/sw-users-permissions-user-listing/sw-users-permissions-user-listing.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Data","Mixin","State","Criteria","template","inject","mixins","getByName","data","user","isLoading","itemToDelete","disableRouteParams","confirmPassword","sortBy","isConfirmingPassword","metaInfo","title","this","$createTitle","computed","userRepository","repositoryFactory","create","currentUser","get","userCriteria","criteria","page","limit","term","setTerm","addSorting","sort","sortDirection","addAssociation","userColumns","property","label","$tc","sortable","methods","getItemToDelete","item","id","onSearch","value","getList","_this","$emit","search","then","users","total","finally","onDelete","onConfirmDelete","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","username","titleDeleteSuccess","messageDeleteSuccess","titleDeleteError","messageDeleteError","verifiedToken","context","wrap","_context","prev","next","concat","firstName","lastName","name","createNotificationError","message","abrupt","loginService","verifyUserToken","sent","t0","finish","confirmPasswordModal","_objectSpread","Context","api","authToken","access","delete","createNotificationSuccess","catch","onCloseDeleteModal","stop"],"mappings":"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","file":"static/js/f6958328fb5148fa137a.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-users-permissions-user-listing.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0e1543ac\", content, true, {});","/**\n * @package services-settings\n */\nimport template from './sw-users-permissions-user-listing.html.twig';\nimport './sw-users-permissions-user-listing.scss';\n\nconst { Data, Mixin, State } = Shopware;\nconst { Criteria } = Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'userService',\n        'loginService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n        Mixin.getByName('salutation'),\n    ],\n\n    data() {\n        return {\n            user: [],\n            isLoading: false,\n            itemToDelete: null,\n            disableRouteParams: true,\n            confirmPassword: '',\n            sortBy: 'username',\n            isConfirmingPassword: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        userRepository() {\n            return this.repositoryFactory.create('user');\n        },\n\n        currentUser: {\n            get() {\n                return State.get('session').currentUser;\n            },\n        },\n\n        userCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            if (this.term) {\n                criteria.setTerm(this.term);\n            }\n\n            if (this.sortBy) {\n                criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection || 'ASC'));\n            }\n\n            criteria.addAssociation('aclRoles');\n\n            return criteria;\n        },\n\n        userColumns() {\n            return [{\n                property: 'username',\n                label: this.$tc('sw-users-permissions.users.user-grid.labelUsername'),\n            }, {\n                property: 'firstName',\n                label: this.$tc('sw-users-permissions.users.user-grid.labelFirstName'),\n            }, {\n                property: 'lastName',\n                label: this.$tc('sw-users-permissions.users.user-grid.labelLastName'),\n            }, {\n                property: 'aclRoles',\n                sortable: false,\n                label: this.$tc('sw-users-permissions.users.user-grid.labelRoles'),\n            }, {\n                property: 'email',\n                label: this.$tc('sw-users-permissions.users.user-grid.labelEmail'),\n            }];\n        },\n    },\n\n    methods: {\n        getItemToDelete(item) {\n            if (!this.itemToDelete) {\n                return false;\n            }\n            return this.itemToDelete.id === item.id;\n        },\n\n        onSearch(value) {\n            this.term = value;\n\n            this.getList();\n        },\n\n        getList() {\n            this.isLoading = true;\n            this.user = [];\n\n            this.$emit('get-list');\n\n            return this.userRepository.search(this.userCriteria).then((users) => {\n                this.total = users.total;\n                this.user = users;\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onDelete(user) {\n            this.itemToDelete = user;\n        },\n\n        async onConfirmDelete(user) {\n            const username = `${user.firstName} ${user.lastName} `;\n            const titleDeleteSuccess = this.$tc('global.default.success');\n            const messageDeleteSuccess = this.$tc(\n                'sw-users-permissions.users.user-grid.notification.deleteSuccess.message',\n                0,\n                { name: username },\n            );\n            const titleDeleteError = this.$tc('global.default.error');\n            const messageDeleteError = this.$tc(\n                'sw-users-permissions.users.user-grid.notification.deleteError.message',\n                0,\n                { name: username },\n            );\n            if (user.id === this.currentUser.id) {\n                this.createNotificationError({\n                    title: this.$tc('global.default.error'),\n                    message: this.$tc('sw-users-permissions.users.user-grid.notification.deleteUserLoggedInError.message'),\n                });\n                return;\n            }\n\n            let verifiedToken;\n            try {\n                this.isConfirmingPassword = true;\n                verifiedToken = await this.loginService.verifyUserToken(this.confirmPassword);\n            } catch (e) {\n                this.createNotificationError({\n                    title: this.$tc(\n                        'sw-users-permissions.users.user-detail.passwordConfirmation.notificationPasswordErrorTitle',\n                    ),\n                    message: this.$tc(\n                        'sw-users-permissions.users.user-detail.passwordConfirmation.notificationPasswordErrorMessage',\n                    ),\n                });\n            } finally {\n                this.confirmPassword = '';\n                this.isConfirmingPassword = false;\n            }\n\n            if (!verifiedToken) {\n                return;\n            }\n\n            this.confirmPasswordModal = false;\n            const context = { ...Shopware.Context.api };\n            context.authToken.access = verifiedToken;\n\n            this.userRepository.delete(user.id, context).then(() => {\n                this.createNotificationSuccess({\n                    title: titleDeleteSuccess,\n                    message: messageDeleteSuccess,\n                });\n                this.getList();\n            }).catch(() => {\n                this.createNotificationError({\n                    title: titleDeleteError,\n                    message: messageDeleteError,\n                });\n            });\n            this.onCloseDeleteModal();\n        },\n\n        onCloseDeleteModal() {\n            this.itemToDelete = null;\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_user_list %}\\n<sw-card\\n    class=\\\"sw-users-permissions-user-listing sw-settings-user-list\\\"\\n    position-identifier=\\\"sw-users-permissions-user-listing\\\"\\n    :title=\\\"$tc('sw-users-permissions.users.general.cardLabel')\\\"\\n>\\n\\n    <div class=\\\"sw-users-permissions-user-listing__toolbar\\\">\\n        <sw-container\\n            columns=\\\"1fr minmax(100px, 200px)\\\"\\n            gap=\\\"0 10px\\\"\\n        >\\n            \\n            {% block sw_settings_user_list_smart_bar_actions %}\\n            \\n            {% block sw_settings_user_list_search_bar %}\\n            <sw-simple-search-field\\n                v-model=\\\"term\\\"\\n                size=\\\"small\\\"\\n                variant=\\\"form\\\"\\n                @search-term-change=\\\"onSearch\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_user_list_actions_create_user %}\\n            <sw-button\\n                :router-link=\\\"{ name: 'sw.users.permissions.user.create' }\\\"\\n                variant=\\\"ghost\\\"\\n                size=\\\"small\\\"\\n                :disabled=\\\"!acl.can('users_and_permissions.creator')\\\"\\n                class=\\\"sw-users-permissions-user-listing__add-user-button\\\"\\n            >\\n                {{ $tc('sw-users-permissions.users.general.labelCreateNewUser') }}\\n            </sw-button>\\n            {% endblock %}\\n            {% endblock %}\\n        </sw-container>\\n    </div>\\n\\n    \\n    {% block sw_settings_user_list_content %}\\n    \\n    {% block sw_settings_user_list_content_grid %}\\n    <sw-data-grid\\n        :data-source=\\\"user\\\"\\n        :columns=\\\"userColumns\\\"\\n        identifier=\\\"user-grid\\\"\\n        :show-settings=\\\"true\\\"\\n        :show-selection=\\\"false\\\"\\n        :is-loading=\\\"isLoading\\\"\\n        @column-sort=\\\"onSortColumn\\\"\\n    >\\n\\n        \\n        {% block sw_settings_user_list_content_grid_actions %}\\n        <template #actions=\\\"{ item }\\\">\\n            \\n            {% block sw_settings_user_list_actions_edit %}\\n            <sw-context-menu-item\\n                class=\\\"sw-settings-user-list__user-view-action\\\"\\n                :disabled=\\\"!acl.can('users_and_permissions.editor')\\\"\\n                :router-link=\\\"{ name: 'sw.users.permissions.user.detail', params: { id: item.id } }\\\"\\n            >\\n                {{ $tc('sw-users-permissions.users.user-grid.contextMenuEdit') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_user_list_actions_delete %}\\n            <sw-context-menu-item\\n                class=\\\"sw-settings-user-list__user-delete-action\\\"\\n                variant=\\\"danger\\\"\\n                :disabled=\\\"!acl.can('users_and_permissions.deleter')\\\"\\n                @click=\\\"onDelete(item)\\\"\\n            >\\n                {{ $tc('sw-users-permissions.users.user-grid.contextMenuDelete') }}\\n            </sw-context-menu-item>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_user_list_column_username_preview %}\\n        <template #preview-username=\\\"{ item, compact }\\\">\\n            <sw-avatar\\n                :size=\\\"compact ? '32px' : '48px'\\\"\\n                :first-name=\\\"item.firstName\\\"\\n                :last-name=\\\"item.lastName\\\"\\n                variant=\\\"square\\\"\\n                :source-context=\\\"item\\\"\\n            />\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_user_list_column_username %}\\n        <template #column-username=\\\"{ item }\\\">\\n            \\n            {% block sw_settings_user_list_column_username_content %}\\n            <router-link\\n                class=\\\"sw-settings-user-list__columns\\\"\\n                :to=\\\"{ name: 'sw.users.permissions.user.detail', params: { id: item.id } }\\\"\\n            >\\n                {{ item.username }}\\n            </router-link>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_user_list_column_username_acl_roles %}\\n        <template #column-aclRoles=\\\"{ item, compact }\\\">\\n            <template v-if=\\\"item.aclRoles && item.aclRoles.length > 0\\\">\\n                <span\\n                    v-for=\\\"(role, index) in item.aclRoles\\\"\\n                    :key=\\\"index\\\"\\n                >\\n                    {{ role.name }}<template v-if=\\\"index + 1 < item.aclRoles.length\\\">,&nbsp;</template>\\n                </span>\\n            </template>\\n            <span v-else-if=\\\"item.admin\\\">\\n                {{ $tc('sw-users-permissions.users.user-detail.labelAdministrator') }}\\n            </span>\\n            <span v-else></span>\\n        </template>\\n        {% endblock %}\\n\\n        <template #pagination>\\n            \\n            {% block sw_settings_user_list_grid_pagination %}\\n            <sw-pagination\\n                :page=\\\"page\\\"\\n                :limit=\\\"limit\\\"\\n                :total=\\\"total\\\"\\n                :auto-hide=\\\"true\\\"\\n                @page-change=\\\"onPageChange\\\"\\n            />\\n            {% endblock %}\\n        </template>\\n\\n        <template #action-modals=\\\"{ item }\\\">\\n            \\n            {% block sw_settings_user_list_delete_modal %}\\n            <sw-modal\\n                v-if=\\\"getItemToDelete(item)\\\"\\n                :title=\\\"$tc('global.default.warning')\\\"\\n                variant=\\\"small\\\"\\n                @modal-close=\\\"onCloseDeleteModal\\\"\\n            >\\n                \\n                {% block sw_settings_user_list_delete_modal_confirm_delete_text %}\\n                <p class=\\\"sw-settings-user-list__confirm-delete-text\\\">\\n                    {{ $tc('sw-users-permissions.users.user-grid.textModalDelete', 0, { name: salutation(item) }) }}\\n                </p>\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_user_list_delete_modal_input__confirm_password %}\\n                <sw-password-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"confirmPassword\\\"\\n                    {% else %}\\n                    v-model=\\\"confirmPassword\\\"\\n                    {% endif %}\\n                    class=\\\"sw-settings-user-detail__confirm-password\\\"\\n                    required\\n                    name=\\\"sw-field--confirm-password\\\"\\n                    :password-toggle-able=\\\"true\\\"\\n                    :copy-able=\\\"false\\\"\\n                    autocomplete=\\\"new-password\\\"\\n                    :label=\\\"$tc('sw-users-permissions.users.user-detail.passwordConfirmation.labelConfirmPassword')\\\"\\n                    :placeholder=\\\"$tc('sw-users-permissions.users.user-detail.passwordConfirmation.placeholderConfirmPassword')\\\"\\n                    @keypress.enter=\\\"onConfirmDelete(item)\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_user_list_delete_modal_footer %}\\n                <template #modal-footer>\\n                    \\n                    {% block sw_settings_user_list_delete_modal_cancel %}\\n                    <sw-button\\n                        size=\\\"small\\\"\\n                        @click=\\\"onCloseDeleteModal\\\"\\n                    >\\n                        {{ $tc('sw-users-permissions.users.user-grid.labelButtonCancel') }}\\n                    </sw-button>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_settings_user_list_delete_modal_confirm %}\\n                    <sw-button\\n                        :disabled=\\\"!confirmPassword\\\"\\n                        :is-loading=\\\"isConfirmingPassword\\\"\\n                        variant=\\\"danger\\\"\\n                        size=\\\"small\\\"\\n                        @click=\\\"onConfirmDelete(item)\\\"\\n                    >\\n                        {{ $tc('sw-users-permissions.users.user-grid.labelButtonDelete') }}\\n                    </sw-button>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n            </sw-modal>\\n            {% endblock %}\\n        </template>\\n    </sw-data-grid>\\n    {% endblock %}\\n    {% endblock %}\\n</sw-card>\\n{% endblock %}\\n\";"],"sourceRoot":""}