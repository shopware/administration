{"version":3,"sources":["webpack:///./src/module/sw-settings-custom-field/page/sw-settings-custom-field-set-detail/index.js","webpack:///./src/module/sw-settings-custom-field/page/sw-settings-custom-field-set-detail/sw-settings-custom-field-set-detail.html.twig"],"names":["Mixin","Shopware","Criteria","Data","template","inject","mixins","getByName","shortcuts","active","this","acl","can","method","ESCAPE","data","set","setId","isLoading","isSaveSuccessful","technicalNameError","metaInfo","title","$createTitle","identifier","computed","config","getInlineSnippet","label","name","customFieldSetRepository","repositoryFactory","create","customFieldRepository","customFieldCriteria","criteria","addFilter","equals","customFieldSetCriteria","addAssociation","tooltipSave","message","$tc","disabled","showOnDisabledElements","systemKey","$device","getSystemKey","concat","appearance","tooltipCancel","created","createdComponent","methods","$route","params","id","loadEntityData","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","Context","api","sent","stop","saveFinish","onSave","_this2","setLabel","titleSaveSuccess","messageSaveSuccess","translated","fallbackLocale","swInlineSnippetFallbackLocale","_defineProperty","relations","save","then","createNotificationSuccess","catch","error","_error$response$data$","_error$response","_error$response$data","_error$response$data$2","_error$response$data$3","errorMessage","response","errors","detail","createNotificationError","finally","onCancel","$router","push","abortOnLanguageChange","hasChanges","saveOnLanguageChange","onChangeLanguage","onLoadingChanged","loading","onResetErrors"],"mappings":"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","file":"static/js/ac077809b7b3e0cc6554.js","sourcesContent":["/**\n * @package services-settings\n */\nimport template from './sw-settings-custom-field-set-detail.html.twig';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet'),\n        Mixin.getByName('discard-detail-page-changes')('set'),\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': {\n            active() {\n                return this.acl.can('custom_field.editor');\n            },\n            method: 'onSave',\n        },\n        ESCAPE: 'onCancel',\n    },\n\n    data() {\n        return {\n            set: {},\n            setId: '',\n            isLoading: true,\n            isSaveSuccessful: false,\n            technicalNameError: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        identifier() {\n            return this.set.config && this.getInlineSnippet(this.set.config.label)\n                ? this.getInlineSnippet(this.set.config.label)\n                : this.set.name;\n        },\n\n        customFieldSetRepository() {\n            return this.repositoryFactory.create('custom_field_set');\n        },\n\n        customFieldRepository() {\n            return this.repositoryFactory.create('custom_field');\n        },\n\n        customFieldCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(Criteria.equals('customFieldSetId', this.setId));\n\n            return criteria;\n        },\n\n        customFieldSetCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addAssociation('relations');\n\n            return criteria;\n        },\n\n        tooltipSave() {\n            if (!this.acl.can('custom_field.editor')) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.acl.can('custom_field.editor'),\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        tooltipCancel() {\n            return {\n                message: 'ESC',\n                appearance: 'light',\n            };\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.setId = this.$route.params.id;\n                this.loadEntityData();\n            }\n        },\n\n        async loadEntityData() {\n            this.set = await this.customFieldSetRepository.get(\n                this.setId,\n                Shopware.Context.api,\n                this.customFieldSetCriteria,\n            );\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onSave() {\n            const setLabel = this.identifier;\n            const titleSaveSuccess = this.$tc('global.default.success');\n            const messageSaveSuccess = this.$tc('sw-settings-custom-field.set.detail.messageSaveSuccess', 0, {\n                name: setLabel,\n            });\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            // Remove all translations except for default locale(fallbackLanguage)\n            // in case, the set is not translated\n            if (!this.set.config.translated || this.set.config.translated === false) {\n                const fallbackLocale = this.swInlineSnippetFallbackLocale;\n                this.set.config.label = { [fallbackLocale]: this.set.config.label[fallbackLocale] };\n            }\n\n            if (!this.set.relations) {\n                this.set.relations = [];\n            }\n\n            this.customFieldSetRepository.save(this.set).then(() => {\n                this.isSaveSuccessful = true;\n\n                this.createNotificationSuccess({\n                    title: titleSaveSuccess,\n                    message: messageSaveSuccess,\n                });\n\n                return this.loadEntityData();\n            }).catch((error) => {\n                const errorMessage = error?.response?.data?.errors?.[0]?.detail ?? 'Error';\n\n                this.createNotificationError({\n                    message: errorMessage,\n                });\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'sw.settings.custom.field.index' });\n        },\n\n        abortOnLanguageChange() {\n            return this.customFieldSetRepository.hasChanges(this.set);\n        },\n\n        saveOnLanguageChange() {\n            return this.onSave();\n        },\n\n        onChangeLanguage() {\n            this.loadEntityData();\n        },\n\n        onLoadingChanged(loading) {\n            this.isLoading = loading;\n        },\n\n        onResetErrors() {\n            this.technicalNameError = null;\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_custom_field_set_detail %}\\n<sw-page class=\\\"sw-settings-set-detail\\\">\\n\\n    \\n    {% block sw_settings_customField_set_detail_header %}\\n    <template #smart-bar-header>\\n        <h2 v-if=\\\"set && set.config && getInlineSnippet(set.config.label)\\\">\\n            {{ getInlineSnippet(set.config.label) }}\\n        </h2>\\n        <h2 v-else>\\n            {{ $tc('sw-settings-custom-field.set.detail.textHeadline') }}\\n        </h2>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_custom_field_set_detail_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_settings_custom_field_set_detail_actions_abort %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"tooltipCancel\\\"\\n            :disabled=\\\"set.isLoading\\\"\\n            @click=\\\"onCancel\\\"\\n        >\\n            {{ $tc('sw-settings-custom-field.set.detail.buttonCancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_custom_field_set_detail_actions_save %}\\n        <sw-button-process\\n            v-tooltip.bottom=\\\"tooltipSave\\\"\\n            class=\\\"sw-settings-set-detail__save-action\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :process-success=\\\"isSaveSuccessful\\\"\\n            :disabled=\\\"set.isLoading || !acl.can('custom_field.editor')\\\"\\n            variant=\\\"primary\\\"\\n            {% if VUE3 %}\\n            @update:process-success=\\\"saveFinish\\\"\\n            {% else %}\\n            @process-finish=\\\"saveFinish\\\"\\n            {% endif %}\\n            @click.prevent=\\\"onSave\\\"\\n        >\\n            {{ $tc('sw-settings-custom-field.set.detail.buttonSave') }}\\n        </sw-button-process>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_custom_field_set_detail_content %}\\n    <template #content>\\n        <sw-card-view>\\n            <template v-if=\\\"isLoading\\\">\\n                <sw-skeleton />\\n                <sw-skeleton />\\n            </template>\\n\\n            {# v-show is used here as underlying components influence the loading state and v-if would destroy this behaviour #}\\n            <div v-show=\\\"!isLoading\\\">\\n                \\n                {% block sw_settings_custom_field_set_detail_content_detail_base %}\\n                <sw-custom-field-set-detail-base\\n                    :set=\\\"set\\\"\\n                    :technical-name-error=\\\"technicalNameError\\\"\\n                    @reset-errors=\\\"onResetErrors\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_custom_field_set_detail_content_detail_custom_field_list %}\\n                <sw-custom-field-list\\n                    v-if=\\\"set.id\\\"\\n                    ref=\\\"customFieldList\\\"\\n                    :set=\\\"set\\\"\\n                    @loading-changed=\\\"onLoadingChanged\\\"\\n                />\\n                {% endblock %}\\n            </div>\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}