{"version":3,"sources":["webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-configurator/sw-product-variants-configurator-restrictions/index.js","webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-configurator/sw-product-variants-configurator-restrictions/sw-product-variants-configurator-restrictions.html.twig","webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-configurator/sw-product-variants-configurator-restrictions/sw-product-variants-configurator-restrictions.scss"],"names":["template","props","product","type","Object","required","selectedGroups","Array","data","term","restrictionModalIsOpen","isLoading","groupsWithOptions","actualRestriction","computed","restrictionColumns","property","label","rawData","actualRestrictionValueLength","this","values","length","filteredRestrictions","_this","variantRestrictions","matchingIds","map","restriction","getRestrictionsWithNaming","id","reduce","acc","termMatched","forEach","value","group","toLowerCase","includes","options","find","option","push","filter","indexOf","mounted","mountedComponent","methods","_this2","filterEmptyValues","getOptionsForGroupId","groupId","configuratorSettings","element","isDeleted","restrictionId","_this3","cRestriction","actRestriction","actualGroup","optionNames","optionId","idOfOption","actualOption","sOption","translated","name","_this4","addEmptyRestrictionCombination","uniqueId","String","Date","valueOf","split","reverse","join","addEmptyRestriction","firstGroup","cancelAddRestriction","saveAddRestriction","_this5","some","editRestrictionCombination","deleteRestrictionCombination","deleteRestriction","content","__esModule","default","module","i","locals","exports","add"],"mappings":"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","file":"static/js/00b56552675e1002542f.js","sourcesContent":["/*\n * @package inventory\n */\n\nimport template from './sw-product-variants-configurator-restrictions.html.twig';\nimport './sw-product-variants-configurator-restrictions.scss';\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    props: {\n        product: {\n            type: Object,\n            required: true,\n        },\n\n        selectedGroups: {\n            type: Array,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            term: '',\n            restrictionModalIsOpen: false,\n            isLoading: true,\n            groupsWithOptions: [],\n            actualRestriction: {},\n        };\n    },\n\n    computed: {\n        restrictionColumns() {\n            return [\n                {\n                    property: 'id',\n                    label: 'sw-product.variations.configuratorModal.restrictedCombinations',\n                    rawData: true,\n                },\n            ];\n        },\n\n        actualRestrictionValueLength() {\n            return this.actualRestriction.values.length;\n        },\n\n        filteredRestrictions() {\n            if (this.term.length <= 0) {\n                return this.product.variantRestrictions;\n            }\n\n            // get restriction names for ids\n            const namedRestriction = this.product.variantRestrictions.map((restriction) => {\n                return this.getRestrictionsWithNaming(restriction.id);\n            });\n\n            // search for matching content\n            const matchingIds = namedRestriction.reduce((acc, restriction) => {\n                let termMatched = false;\n\n                restriction.values.forEach((value) => {\n                    if (value.group.toLowerCase().includes(this.term.toLowerCase())) {\n                        termMatched = true;\n                    }\n\n                    value.options.find((option) => {\n                        if (option.toLowerCase().includes(this.term.toLowerCase())) {\n                            termMatched = true;\n                            return true;\n                        }\n                        return false;\n                    });\n                });\n\n                if (termMatched) {\n                    acc.push(restriction.id);\n                }\n                return acc;\n            }, []);\n\n            // return only the restrictions with matching id\n            return this.product.variantRestrictions.filter((restriction) => matchingIds.indexOf(restriction.id) >= 0);\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.filterEmptyValues();\n\n            // Load the groups with the related options\n            this.groupsWithOptions = this.selectedGroups.map((group) => {\n                return {\n                    group: group,\n                    options: this.getOptionsForGroupId(group.id),\n                };\n            });\n\n            this.isLoading = false;\n        },\n\n        getOptionsForGroupId(groupId) {\n            return this.product.configuratorSettings.filter((element) => {\n                return !element.isDeleted && element.option.groupId === groupId;\n            });\n        },\n\n        getRestrictionsWithNaming(restrictionId) {\n            // get the restriction from the param\n            const cRestriction = this.product.variantRestrictions.find((actRestriction) => {\n                return actRestriction.id === restrictionId;\n            });\n\n            // return the restriction with names\n            return {\n                id: cRestriction.id,\n                values: cRestriction.values.map((value) => {\n                    const actualGroup = this.selectedGroups.find((group) => {\n                        return group.id === value.group;\n                    });\n\n                    // When no group was found\n                    if (!actualGroup) {\n                        return {\n                            group: '',\n                            options: [],\n                        };\n                    }\n\n                    const optionNames = value.options.reduce((acc, optionId) => {\n                        const idOfOption = optionId.optionId ? optionId.optionId : optionId;\n\n                        const actualOption = this.product.configuratorSettings.find((sOption) => {\n                            return idOfOption === sOption.optionId;\n                        });\n\n                        if (actualOption?.option) {\n                            acc.push(actualOption.option.translated.name);\n                        }\n                        return acc;\n                    }, []);\n\n                    return {\n                        group: actualGroup.translated.name,\n                        options: optionNames,\n                    };\n                }),\n            };\n        },\n\n        filterEmptyValues() {\n            if (!this.product.variantRestrictions) {\n                return false;\n            }\n            this.product.variantRestrictions = this.product.variantRestrictions.filter((restriction) => {\n                restriction.values = restriction.values.filter((value) => {\n                    value.options = value.options.filter((option) => {\n                        return this.product.configuratorSettings.find((sOption) => {\n                            return option === sOption.optionId;\n                        });\n                    });\n                    return value.options.length > 0;\n                });\n                return restriction.values.length > 0;\n            });\n            return true;\n        },\n\n        addEmptyRestrictionCombination() {\n            const uniqueId = String(new Date().valueOf()).split('').reverse().join('');\n            this.actualRestriction = {\n                id: uniqueId,\n                values: [],\n            };\n            this.addEmptyRestriction();\n            this.restrictionModalIsOpen = true;\n        },\n\n        addEmptyRestriction() {\n            const uniqueId = String(new Date().valueOf()).split('').reverse().join('');\n            const firstGroup = this.groupsWithOptions[0].group;\n            this.actualRestriction.values.push({\n                id: uniqueId,\n                group: firstGroup.id,\n                options: [],\n            });\n        },\n\n        cancelAddRestriction() {\n            this.actualRestriction = {};\n            this.restrictionModalIsOpen = false;\n        },\n\n        saveAddRestriction() {\n            if (this.product.variantRestrictions === null) {\n                this.product.variantRestrictions = [];\n            }\n\n            const exists = this.product.variantRestrictions.some((restriction) => {\n                return restriction.id === this.actualRestriction.id;\n            });\n\n            if (!exists) {\n                this.product.variantRestrictions.push(this.actualRestriction);\n            }\n\n            this.actualRestriction = {};\n            this.restrictionModalIsOpen = false;\n        },\n\n        editRestrictionCombination(restriction) {\n            this.actualRestriction = restriction;\n            this.restrictionModalIsOpen = true;\n        },\n\n        deleteRestrictionCombination(deleteRestriction) {\n            this.product.variantRestrictions = this.product.variantRestrictions.filter((restriction) => {\n                return restriction.id !== deleteRestriction.id;\n            });\n        },\n\n        deleteRestriction(deleteRestriction) {\n            this.actualRestriction.values = this.actualRestriction.values.filter((restriction) => {\n                return restriction !== deleteRestriction;\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_product_variants_configurator_restrictions %}\\n<div class=\\\"sw-product-variants-configurator-restrictions\\\">\\n\\n    \\n    {% block sw_product_variants_configurator_restrictions_search %}\\n    <div class=\\\"sw-product-variants-configurator-restrictions__search\\\">\\n        \\n        {% block sw_product_variants_configurator_restrictions_search_field %}\\n        <sw-simple-search-field\\n            v-model=\\\"term\\\"\\n            size=\\\"small\\\"\\n            variant=\\\"form\\\"\\n            :placeholder=\\\"$tc('sw-product.variations.configuratorModal.searchRestrictions')\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variants_configurator_restrictions_buttons %}\\n        <sw-button\\n            variant=\\\"ghost\\\"\\n            size=\\\"small\\\"\\n            @click=\\\"addEmptyRestrictionCombination\\\"\\n        >\\n            {{ $tc('sw-product.variations.configuratorModal.addNewRestriction') }}\\n        </sw-button>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variants_configurator_restrictions_grid_wrapper %}\\n    <div class=\\\"sw-product-variants-configurator-restrictions__grid-wrapper\\\">\\n        \\n        {% block sw_product_variants_configurator_restrictions_data_grid %}\\n        <sw-data-grid\\n            v-if=\\\"product.variantRestrictions\\\"\\n            ref=\\\"swDataGrid\\\"\\n            :data-source=\\\"filteredRestrictions\\\"\\n            :columns=\\\"restrictionColumns\\\"\\n            :show-selection=\\\"false\\\"\\n            :compact-mode=\\\"false\\\"\\n            full-page\\n        >\\n\\n            \\n            {% block sw_product_variants_configurator_restrictions_data_grid_column_id %}\\n            <template\\n                #column-id=\\\"{ item, isInlineEdit, compact }\\\"\\n            >\\n                <template\\n                    v-for=\\\"restriction in getRestrictionsWithNaming(item.id).values\\\"\\n                    {% if VUE3 %}\\n                    :key=\\\"restriction.id\\\"\\n                    {% endif %}\\n                >\\n                    <span\\n                        {% if VUE2 %}\\n                        :key=\\\"restriction.id\\\"\\n                        {% endif %}\\n                        class=\\\"sw-product-variants-configurator-restrictions__group-name\\\"\\n                    >\\n                        {{ restriction.group }}:\\n                    </span>\\n                    <sw-label\\n                        v-for=\\\"option in restriction.options\\\"\\n                        :key=\\\"option.id\\\"\\n                        ghost\\n                    >\\n                        {{ option }}\\n                    </sw-label>\\n                </template>\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variants_configurator_restrictions_data_grid_actions %}\\n            <template\\n                #actions=\\\"{ item }\\\"\\n            >\\n                \\n                {% block sw_product_variants_configurator_restrictions_data_grid_actions_items %}\\n                <sw-context-menu-item @click=\\\"editRestrictionCombination(item)\\\">\\n                    {{ $tc('sw-product.variations.configuratorModal.editRestriction') }}\\n                </sw-context-menu-item>\\n\\n                <sw-context-menu-item\\n                    variant=\\\"danger\\\"\\n                    @click=\\\"deleteRestrictionCombination(item)\\\"\\n                >\\n                    {{ $tc('sw-product.variations.configuratorModal.deleteRestriction') }}\\n                </sw-context-menu-item>\\n                {% endblock %}\\n            </template>\\n            {% endblock %}\\n        </sw-data-grid>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variants_configurator_restrictions_modal %}\\n    <sw-modal\\n        v-if=\\\"restrictionModalIsOpen\\\"\\n        :title=\\\"$tc('sw-product.variations.configuratorModal.singleRestrictionAddTitle')\\\"\\n        class=\\\"sw-product-variants-configurator-restrictions__modal\\\"\\n        @modal-close=\\\"cancelAddRestriction\\\"\\n    >\\n\\n        \\n        {% block sw_product_variants_configurator_restrictions_modal_main %}\\n        <div class=\\\"sw-product-variants-configurator-restrictions__modal-main\\\">\\n            \\n            {% block sw_product_variants_configurator_restrictions_modal_main_restriction_selection %}\\n            <sw-product-restriction-selection\\n                v-for=\\\"(restriction, index) in actualRestriction.values\\\"\\n                :key=\\\"restriction.id\\\"\\n                :groups-with-options=\\\"groupsWithOptions\\\"\\n                :restriction=\\\"restriction\\\"\\n                @restriction-delete=\\\"deleteRestriction\\\"\\n            >\\n\\n                <template #contentAfter>\\n                    <p\\n                        v-if=\\\"index < actualRestrictionValueLength - 1\\\"\\n                        class=\\\"sw-product-variants-configurator-restrictions__seperator\\\"\\n                    >\\n                        {{ $tc('sw-product.variations.configuratorModal.singleRestrictionSeperation') }}\\n                    </p>\\n                </template>\\n            </sw-product-restriction-selection>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_variants_configurator_restrictions_modal_main_button_new_restriction %}\\n            <sw-button\\n                class=\\\"sw-product-variants-configurator-restrictions__button-new-restriction\\\"\\n                @click=\\\"addEmptyRestriction\\\"\\n            >\\n                {{ $tc('sw-product.variations.configuratorModal.singleRestrictionSeperation') }}\\n            </sw-button>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_variants_configurator_restrictions_modal_footer %}\\n        <template #modal-footer>\\n            \\n            {% block sw_product_variants_configurator_restrictions_modal_footer_cancel %}\\n            <sw-button\\n                size=\\\"small\\\"\\n                @click=\\\"cancelAddRestriction\\\"\\n            >\\n                {{ $tc('sw-product.variations.configuratorModal.cancel') }}\\n            </sw-button>\\n            {% endblock %}\\n            \\n            {% block sw_product_variants_configurator_restrictions_modal_footer_save_add_restriction %}\\n            <sw-button\\n                variant=\\\"primary\\\"\\n                size=\\\"small\\\"\\n                @click=\\\"saveAddRestriction\\\"\\n            >\\n                {{ $tc('sw-product.variations.configuratorModal.save') }}\\n            </sw-button>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n    </sw-modal>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_variants_configurator_restrictions_loader %}\\n    <sw-loader v-if=\\\"isLoading\\\" />\\n    {% endblock %}\\n\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-variants-configurator-restrictions.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"e04d6fe2\", content, true, {});"],"sourceRoot":""}