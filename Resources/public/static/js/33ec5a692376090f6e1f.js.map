{"version":3,"sources":["webpack:///./src/module/sw-import-export/component/sw-import-export-edit-profile-modal-identifiers/sw-import-export-edit-profile-modal-identifiers.scss","webpack:///./src/module/sw-import-export/component/sw-import-export-edit-profile-modal-identifiers/sw-import-export-edit-profile-modal-identifiers.html.twig","webpack:///./src/module/sw-import-export/component/sw-import-export-edit-profile-modal-identifiers/index.js"],"names":["content","__esModule","default","module","i","locals","exports","add","Criteria","Shopware","Data","template","inject","props","profile","type","Object","required","data","currencies","languages","customFieldSets","computed","languageRepository","this","repositoryFactory","create","currencyRepository","customFieldSetRepository","languageCriteria","criteria","addAssociation","currencyCriteria","customFieldSetCriteria","identifierColumns","property","label","allowResize","primary","width","identifiers","_this","mapping","forEach","_identifiers$entity","_this$importExportUpd","importExportUpdateByMapping","getEntity","sourceEntity","key","entity","path","relation","name","entityName","options","selected","getSelected","updateBy","propertyNames","value","replace","RegExp","concat","push","includes","values","created","createdComponent","methods","_this2","search","then","locale","code","isoCode","onChangeIdentifier","mappedKey","updateMapping"],"mappings":"+HAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,mDCT7B,ICMTQ,EAAWC,SAASC,KAAKF,SAKhB,WACXG,SDZW,wpFCcXC,OAAQ,CACJ,oBACA,+BAGJC,MAAO,CACHC,QAAS,CACLC,KAAMC,OACNC,UAAU,EACVf,QAAS,OAIjBgB,KAAI,WACA,MAAO,CACHC,WAAY,GACZC,UAAW,GACXC,gBAAiB,KAIzBC,SAAU,CACNC,mBAAkB,WACd,OAAOC,KAAKC,kBAAkBC,OAAO,aAGzCC,mBAAkB,WACd,OAAOH,KAAKC,kBAAkBC,OAAO,aAGzCE,yBAAwB,WACpB,OAAOJ,KAAKC,kBAAkBC,OAAO,qBAGzCG,iBAAgB,WACZ,IAAMC,EAAW,IAAItB,EAAS,EAAG,KAGjC,OAFAsB,EAASC,eAAe,UAEjBD,GAGXE,iBAAgB,WACZ,OAAO,IAAIxB,EAAS,EAAG,MAG3ByB,uBAAsB,WAClB,IAAMH,EAAW,IAAItB,EAAS,EAAG,KAIjC,OAHAsB,EAASC,eAAe,aACxBD,EAASC,eAAe,gBAEjBD,GAGXI,kBAAiB,WACb,MAAO,CACH,CACIC,SAAU,iBACVC,MAAO,2DACPC,aAAa,EACbC,SAAS,GAEb,CACIH,SAAU,SACVC,MAAO,sDACPC,aAAa,EACbE,MAAO,UAKnBC,YAAW,WAAI,IAADC,EAAA,KACJD,EAAc,GAEpB,OAAKhB,KAAKV,QAAQ4B,SAIlBlB,KAAKV,QAAQ4B,QAAQC,SAAQ,SAACD,GAAa,IAADE,EACtCC,EAAyCJ,EAAKK,4BAA4BC,UACtEN,EAAK3B,QAAQkC,aACbN,EAAQO,KAFJC,EAAML,EAANK,OAAQC,EAAIN,EAAJM,KAAMC,EAAQP,EAARO,SAAUC,EAAIR,EAAJQ,KAKhC,GAAKH,GAAuB,gBAAbE,EAAf,CAIAZ,EAAYU,GAA6B,QAAtBN,EAAGJ,EAAYU,UAAO,IAAAN,IAAI,CACzCU,WAAYJ,EACZK,QAAS,GACTC,SAAUf,EAAKK,4BAA4BW,YAAYP,EAAQT,EAAK3B,QAAQ4C,UAC5EN,WACAO,cAAe,IAGnB,IAAMC,EAAiB,KAATT,EAAcT,EAAQO,IAAIY,QAAQ,IAAIC,OAAO,KAADC,OAAMZ,EAAI,OAAQ,IAAMT,EAAQO,IAE1FT,EAAYU,GAAQK,QAAQS,KAAK,CAAE5B,MAAOwB,EAAOA,UAE5CpB,EAAYU,GAAQS,cAAcM,SAASZ,IAC5Cb,EAAYU,GAAQS,cAAcK,KAAKX,OAIxCrC,OAAOkD,OAAO1B,IA9BV,KAkCnB2B,QAAO,WACH3C,KAAK4C,oBAGTC,QAAS,CACLD,iBAAgB,WAAI,IAADE,EAAA,KACf9C,KAAKD,mBAAmBgD,OAAO/C,KAAKK,kBAAkB2C,MAAK,SAAApD,GACvDkD,EAAKlD,UAAYA,EACjBkD,EAAKlD,UAAU4C,KAAK,CAAES,OAAQ,CAAEC,KAAM,gBAG1ClD,KAAKG,mBAAmB4C,OAAO/C,KAAKQ,kBAAkBwC,MAAK,SAAArD,GACvDmD,EAAKnD,WAAaA,EAClBmD,EAAKnD,WAAW6C,KAAK,CAAEW,QAAS,eAGpCnD,KAAKI,yBAAyB2C,OAAO/C,KAAKS,wBAAwBuC,MAAK,SAACnD,GACpEiD,EAAKjD,gBAAkBA,MAI/BuD,mBAAkB,SAACC,EAAWvB,GAC1B9B,KAAKsB,4BAA4BgC,cAActD,KAAKV,QAAS+D,EAAWvB","file":"static/js/33ec5a692376090f6e1f.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-import-export-edit-profile-modal-identifiers.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2115b854\", content, true, {});","export default \"\\n{% block sw_import_export_edit_profile_modal_identifiers %}\\n<div class=\\\"sw-import-export-edit-profile-modal-identifiers\\\">\\n    \\n    {% block sw_import_export_edit_profile_modal_identifiers_grid %}\\n    <sw-data-grid\\n        v-if=\\\"identifiers && identifiers.length\\\"\\n        :data-source=\\\"identifiers\\\"\\n        :compact-mode=\\\"false\\\"\\n        :show-selection=\\\"false\\\"\\n        :show-actions=\\\"false\\\"\\n        :columns=\\\"identifierColumns\\\"\\n        plain-appearance\\n        class=\\\"sw-import-export-edit-profile-modal-identifiers__grid\\\"\\n    >\\n\\n        \\n        {% block sw_import_export_edit_profile_modal_identifiers_grid_entity_name_column %}\\n        <template #column-identifierName=\\\"{ item }\\\">\\n            {{ item.propertyNames.join(', ') }}\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_import_export_edit_profile_modal_identifiers_grid_mapped_column %}\\n        <template #column-mapped=\\\"{ item }\\\">\\n            <sw-single-select\\n                v-if=\\\"item.relation !== 'many_to_many'\\\"\\n                required\\n                :value=\\\"item.selected\\\"\\n                :options=\\\"item.options\\\"\\n                :disabled=\\\"profile.systemDefault\\\"\\n                :show-clearable-button=\\\"item.selected !== 'id'\\\"\\n                {% if VUE3 %}\\n                @update:value=\\\"onChangeIdentifier($event, item.entityName)\\\"\\n                {% else %}\\n                @change=\\\"onChangeIdentifier($event, item.entityName)\\\"\\n                {% endif %}\\n            />\\n            <sw-import-export-entity-path-select\\n                v-else\\n                :value=\\\"item.selected\\\"\\n                :languages=\\\"languages\\\"\\n                :currencies=\\\"currencies\\\"\\n                :entity-type=\\\"item.entityName\\\"\\n                :disabled=\\\"profile.systemDefault\\\"\\n                :custom-field-sets=\\\"customFieldSets\\\"\\n                {% if VUE3 %}\\n                @update:value=\\\"onChangeIdentifier($event, item.entityName)\\\"\\n                {% else %}\\n                @change=\\\"onChangeIdentifier($event, item.entityName)\\\"\\n                {% endif %}\\n            >\\n                <template #before-item-list>\\n                    <span></span>\\n                </template>\\n            </sw-import-export-entity-path-select>\\n        </template>\\n        {% endblock %}\\n    </sw-data-grid>\\n    {% endblock %}\\n\\n    \\n    {% block sw_import_export_edit_profile_modal_identifiers_empty_state %}\\n    <sw-empty-state\\n        v-else\\n        class=\\\"sw-import-export-edit-profile-modal-identifiers__empty-state\\\"\\n        :title=\\\"$tc('sw-import-export.profile.mappingEmptyState')\\\"\\n        :absolute=\\\"false\\\"\\n    />\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","/**\n * @package services-settings\n */\nimport template from './sw-import-export-edit-profile-modal-identifiers.html.twig';\nimport './sw-import-export-edit-profile-modal-identifiers.scss';\n\nconst Criteria = Shopware.Data.Criteria;\n\n/**\n * @private\n */\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'importExportUpdateByMapping',\n    ],\n\n    props: {\n        profile: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            currencies: [],\n            languages: [],\n            customFieldSets: [],\n        };\n    },\n\n    computed: {\n        languageRepository() {\n            return this.repositoryFactory.create('language');\n        },\n\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n\n        customFieldSetRepository() {\n            return this.repositoryFactory.create('custom_field_set');\n        },\n\n        languageCriteria() {\n            const criteria = new Criteria(1, 500);\n            criteria.addAssociation('locale');\n\n            return criteria;\n        },\n\n        currencyCriteria() {\n            return new Criteria(1, 500);\n        },\n\n        customFieldSetCriteria() {\n            const criteria = new Criteria(1, 500);\n            criteria.addAssociation('relations');\n            criteria.addAssociation('customFields');\n\n            return criteria;\n        },\n\n        identifierColumns() {\n            return [\n                {\n                    property: 'identifierName',\n                    label: 'sw-import-export.profile.identifiers.identifierNameLabel',\n                    allowResize: false,\n                    primary: true,\n                },\n                {\n                    property: 'mapped',\n                    label: 'sw-import-export.profile.identifiers.mappedKeyLabel',\n                    allowResize: false,\n                    width: '100%',\n                },\n            ];\n        },\n\n        identifiers() {\n            const identifiers = {};\n\n            if (!this.profile.mapping) {\n                return [];\n            }\n\n            this.profile.mapping.forEach((mapping) => {\n                const { entity, path, relation, name } = this.importExportUpdateByMapping.getEntity(\n                    this.profile.sourceEntity,\n                    mapping.key,\n                );\n\n                if (!entity || relation === 'one_to_many') {\n                    return;\n                }\n\n                identifiers[entity] = identifiers[entity] ?? {\n                    entityName: entity,\n                    options: [],\n                    selected: this.importExportUpdateByMapping.getSelected(entity, this.profile.updateBy),\n                    relation,\n                    propertyNames: [],\n                };\n\n                const value = path !== '' ? mapping.key.replace(new RegExp(`^(${path}\\.)`), '') : mapping.key;\n\n                identifiers[entity].options.push({ label: value, value });\n\n                if (!identifiers[entity].propertyNames.includes(name)) {\n                    identifiers[entity].propertyNames.push(name);\n                }\n            });\n\n            return Object.values(identifiers);\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.languageRepository.search(this.languageCriteria).then(languages => {\n                this.languages = languages;\n                this.languages.push({ locale: { code: 'DEFAULT' } });\n            });\n\n            this.currencyRepository.search(this.currencyCriteria).then(currencies => {\n                this.currencies = currencies;\n                this.currencies.push({ isoCode: 'DEFAULT' });\n            });\n\n            this.customFieldSetRepository.search(this.customFieldSetCriteria).then((customFieldSets) => {\n                this.customFieldSets = customFieldSets;\n            });\n        },\n\n        onChangeIdentifier(mappedKey, entityName) {\n            this.importExportUpdateByMapping.updateMapping(this.profile, mappedKey, entityName);\n        },\n    },\n};\n"],"sourceRoot":""}