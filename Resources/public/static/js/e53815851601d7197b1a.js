(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[416],{54321:function(){},416:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return a}}),n(34829);let{chunk:s}=Shopware.Utils.array;var a={template:'\n{% block sw_bulk_edit_save_modal_process %}\n<div class="sw-bulk-edit-save-modal-process">\n    \n    {% block sw_bulk_edit_save_modal_process_icon %}\n    <sw-label\n        class="sw-bulk-edit-save-modal__icon"\n        appearance="pill"\n        variant="info"\n    >\n        <sw-loader\n            class="sw-bulk-edit-save-modal__loading-icon"\n            size="30px"\n        />\n    </sw-label>\n    {% endblock %}\n\n    \n    {% block sw_bulk_edit_save_modal_process_generate_document %}\n    <ul\n        v-if="selectedDocumentTypes.length > 0"\n        class="sw-bulk-edit-save-modal-process__generate-document-container"\n    >\n        <li\n            v-for="selectedDocumentType in selectedDocumentTypes"\n            :key="selectedDocumentType.id"\n            class="sw-bulk-edit-save-modal-process__generate-document"\n            :class="`is--${selectedDocumentType.technicalName}`"\n        >\n            <div class="progress">\n                <div class="progress__label">\n                    <span>{{ selectedDocumentType.translated.name }}</span>\n                    <span>{{ `${document[selectedDocumentType.technicalName].isReached}%` }}</span>\n                </div>\n                <div class="progress__bar">\n                    <div\n                        class="progress__bar-fill"\n                        :style="{ width: `${document[selectedDocumentType.technicalName].isReached}%` }"\n                    >\n                    </div>\n                </div>\n            </div>\n        </li>\n    </ul>\n    {% endblock %}\n\n    \n    {% block sw_bulk_edit_save_modal_process_content %}\n    <p class="sw-bulk-edit-save-modal__help-text">\n        {{ $tc(\'sw-bulk-edit.modal.process.description\') }}\n        <br>\n        <br>\n        {{ $tc(\'sw-bulk-edit.modal.process.helpText\') }}\n    </p>\n\n    <sw-alert\n        variant="warning"\n        class="sw-bulk-edit-save-modal__warning"\n    >\n        {{ $tc(\'sw-bulk-edit.modal.warningText\') }}\n    </sw-alert>\n    {% endblock %}\n</div>\n{% endblock %}\n',inject:["orderDocumentApiService"],data(){return{requestsPerPayload:5,document:{invoice:{isReached:0},storno:{isReached:0},delivery_note:{isReached:0},credit_note:{isReached:0}}}},computed:{selectedIds(){return Shopware.State.get("shopwareApps").selectedIds},documentTypes(){return Shopware.State.get("swBulkEdit")?.orderDocuments?.download?.value},documentTypeConfigs(){return Shopware.State.getters["swBulkEdit/documentTypeConfigs"]},selectedDocumentTypes(){if(!this.documentTypeConfigs||this.documentTypeConfigs.length<=0)return[];let e=[];return this.documentTypeConfigs.forEach(t=>{let n=this.documentTypes.find(e=>t.type===e.technicalName);n&&e.push(n)}),e},createDocumentPayload(){let e=[];return this.selectedIds.forEach(t=>{this.documentTypeConfigs?.forEach(n=>{n&&e.push({...n,orderId:t})})}),e}},created(){this.createdComponent()},methods:{async createdComponent(){this.updateButtons(),this.setTitle(),await this.createDocuments(),this.$emit("changes-apply")},setTitle(){this.$emit("title-set",this.$tc("sw-bulk-edit.modal.process.title"))},updateButtons(){let e=[{key:"cancel",label:this.$tc("sw-bulk-edit.modal.process.buttons.cancel"),position:"left",action:"",disabled:!1},{key:"next",label:this.$tc("global.sw-modal.labelClose"),position:"right",variant:"primary",action:"",disabled:!0}];this.$emit("buttons-update",e)},async createDocuments(){if(this.createDocumentPayload.length<=0)return;let e=this.createDocumentPayload.filter(e=>"invoice"===e.type),t=this.createDocumentPayload.filter(e=>"storno"===e.type),n=this.createDocumentPayload.filter(e=>"credit_note"===e.type),s=this.createDocumentPayload.filter(e=>"delivery_note"===e.type);e.length>0&&await this.createDocument("invoice",e),t.length>0&&await this.createDocument("storno",t),n.length>0&&await this.createDocument("credit_note",n),s.length>0&&await this.createDocument("delivery_note",s)},async createDocument(e,t){if(t.length<=this.requestsPerPayload)return await this.orderDocumentApiService.generate(e,t),this.$set(this.document[e],"isReached",100),Promise.resolve();let n=s(t,this.requestsPerPayload),a=Math.round(100/n.length);return Promise.all(n.map(async t=>{await this.orderDocumentApiService.generate(e,t),this.$set(this.document[e],"isReached",this.document[e].isReached+a)})).then(()=>{this.$set(this.document[e],"isReached",100)})}}}},34829:function(e,t,n){var s=n(54321);s.__esModule&&(s=s.default),"string"==typeof s&&(s=[[e.id,s,""]]),s.locals&&(e.exports=s.locals),n(45346).Z("d91b2664",s,!0,{})}}]);