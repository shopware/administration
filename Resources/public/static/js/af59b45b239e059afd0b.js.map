{"version":3,"sources":["webpack:///./src/module/sw-settings-cache/component/sw-settings-cache-modal/sw-settings-cache-modal.twig","webpack:///./src/module/sw-settings-cache/component/sw-settings-cache-modal/index.js"],"names":["Mixin","Shopware","template","shortcuts","inject","mixins","getByName","data","open","watch","_this","this","$nextTick","$refs","button","$el","focus","created","createdComponent","methods","document","addEventListener","event","key","altKey","preventDefault","openModal","acl","can","closeModal","clearCache","_this2","createNotificationInfo","message","$tc","cacheApiService","clear","then","createNotificationSuccess","catch","createNotificationError"],"mappings":"4HAAe,ICKPA,EAAUC,SAAVD,MAGO,WACXE,SDTW,+wBCWXC,UAAW,CACP,cAAe,aAGnBC,OAAQ,CACJ,kBACA,OAGJC,OAAQ,CACJL,EAAMM,UAAU,iBAGpBC,KAAI,WACA,MAAO,CACHC,MAAM,IAIdC,MAAO,CACHD,KAAI,WAAI,IAADE,EAAA,KACEC,KAAKH,MAIVG,KAAKC,WAAU,WACXF,EAAKG,MAAMC,OAAOC,IAAIC,aAKlCC,QAAO,WACHN,KAAKO,oBAGTC,QAAS,CACLD,iBAAgB,WACZE,SAASC,iBAAiB,WAAW,SAACC,IAChB,QAAdA,EAAMC,KAAgC,MAAdD,EAAMC,KAAeD,EAAME,SACnDF,EAAMG,qBAKlBC,UAAS,WACAf,KAAKgB,IAAIC,IAAI,wBAIlBjB,KAAKH,MAAO,IAGhBqB,WAAU,WACNlB,KAAKH,MAAO,GAGhBsB,WAAU,WAAI,IAADC,EAAA,KACTpB,KAAKqB,uBAAuB,CACxBC,QAAStB,KAAKuB,IAAI,wDAGtBvB,KAAKwB,gBAAgBC,QAAQC,MAAK,WAC9BN,EAAKO,0BAA0B,CAC3BL,QAASF,EAAKG,IAAI,2DAEvBK,OAAM,WACLR,EAAKS,wBAAwB,CACzBP,QAASF,EAAKG,IAAI,yDAI1BvB,KAAKH,MAAO","file":"static/js/af59b45b239e059afd0b.js","sourcesContent":["export default \"{% block sw_settings_cache_modal %}\\n    <sw-modal\\n        v-if=\\\"open\\\"\\n        variant=\\\"small\\\"\\n        :title=\\\"$t('sw-settings-cache.modal.title')\\\"\\n        @modal-close=\\\"closeModal\\\">\\n        {{ $tc('sw-settings-cache.modal.message') }}\\n\\n        <template slot=\\\"modal-footer\\\">\\n            <sw-button @click=\\\"closeModal\\\"\\n                       size=\\\"small\\\">\\n                {{ $tc('sw-settings-cache.modal.actions.cancel') }}\\n            </sw-button>\\n\\n            <sw-button @click=\\\"clearCache\\\"\\n                       variant=\\\"primary\\\"\\n                       ref=\\\"button\\\"\\n                       size=\\\"small\\\">\\n                {{ $tc('sw-settings-cache.modal.actions.clear') }}\\n            </sw-button>\\n        </template>\\n    </sw-modal>\\n{% endblock %}\\n\";","/**\n * @package services-settings\n */\nimport template from './sw-settings-cache-modal.twig';\n\nconst { Mixin } = Shopware;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    shortcuts: {\n        'SYSTEMKEY+c': 'openModal',\n    },\n\n    inject: [\n        'cacheApiService',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            open: false,\n        };\n    },\n\n    watch: {\n        open() {\n            if (!this.open) {\n                return;\n            }\n\n            this.$nextTick(() => {\n                this.$refs.button.$el.focus();\n            });\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            document.addEventListener('keydown', (event) => {\n                if (event.key === 'Alt' || (event.key === 'c' && event.altKey)) {\n                    event.preventDefault();\n                }\n            });\n        },\n\n        openModal() {\n            if (!this.acl.can('system.clear_cache')) {\n                return;\n            }\n\n            this.open = true;\n        },\n\n        closeModal() {\n            this.open = false;\n        },\n\n        clearCache() {\n            this.createNotificationInfo({\n                message: this.$tc('sw-settings-cache.notifications.clearCache.started'),\n            });\n\n            this.cacheApiService.clear().then(() => {\n                this.createNotificationSuccess({\n                    message: this.$tc('sw-settings-cache.notifications.clearCache.success'),\n                });\n            }).catch(() => {\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-cache.notifications.clearCache.error'),\n                });\n            });\n\n            this.open = false;\n        },\n    },\n};\n"],"sourceRoot":""}