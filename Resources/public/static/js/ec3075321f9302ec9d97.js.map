{"version":3,"sources":["webpack:///./src/module/sw-product/component/sw-product-cross-selling-assignment/sw-product-cross-selling-assignment.scss","webpack:///./src/module/sw-product/component/sw-product-cross-selling-assignment/index.js","webpack:///./src/module/sw-product/component/sw-product-cross-selling-assignment/sw-product-cross-selling-assignment.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware$Component$g","Shopware","Component","getComponentHelper","mapGetters","mapState","Context","Criteria","Data","template","inject","props","assignedProducts","type","Array","required","crossSellingId","String","allowEdit","Boolean","data","isLoadingData","variantNames","computed","_objectSpread","isLoadingGrid","this","isLoading","assignmentRepository","repositoryFactory","create","entity","source","productRepository","searchCriteria","criteria","addFilter","not","equals","product","id","multi","addAssociation","searchContext","api","inheritance","total","isArray","length","assignedProductColumns","property","label","$tc","primary","allowResize","sortable","variantProductIds","forEach","item","parentId","translated","name","push","variantCriteria","setIds","assetFilter","Filter","getByName","created","_this","search","then","variants","variant","methods","onToggleProduct","productId","_this2","matchedAssignedProduct","find","assignedProduct","removeItem","newProduct","position","get","oldPosition","remove","isSelected","some","p"],"mappings":"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","file":"static/js/ec3075321f9302ec9d97.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-cross-selling-assignment.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"9d27f2c0\", content, true, {});","/*\n * @package inventory\n */\n\nimport template from './sw-product-cross-selling-assignment.html.twig';\nimport './sw-product-cross-selling-assignment.scss';\n\nconst { mapGetters, mapState } = Shopware.Component.getComponentHelper();\nconst { Context } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    props: {\n        assignedProducts: {\n            type: Array,\n            required: true,\n        },\n\n        crossSellingId: {\n            type: String,\n            required: true,\n        },\n        allowEdit: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoadingData: false,\n            variantNames: {},\n        };\n    },\n\n    computed: {\n        ...mapState('swProductDetail', [\n            'product',\n        ]),\n\n        ...mapGetters('swProductDetail', [\n            'isLoading',\n        ]),\n\n        isLoadingGrid() {\n            return this.isLoadingData || this.isLoading;\n        },\n\n        assignmentRepository() {\n            return this.repositoryFactory.create(\n                this.assignedProducts.entity,\n                this.assignedProducts.source,\n            );\n        },\n\n        productRepository() {\n            return this.repositoryFactory.create('product');\n        },\n\n        searchCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(Criteria.not('and', [Criteria.equals('id', this.product.id)]));\n            criteria.addFilter(Criteria.multi('or', [\n                Criteria.equals('childCount', 0),\n                Criteria.not('and', [Criteria.equals('parentId', null)]),\n            ]));\n\n            criteria.addAssociation('options.group');\n\n            return criteria;\n        },\n\n        searchContext() {\n            return {\n                ...Context.api,\n                inheritance: true,\n            };\n        },\n\n        total() {\n            if (!this.assignedProducts || !Array.isArray(this.assignedProducts)) {\n                return 0;\n            }\n\n            return this.assignedProducts.length;\n        },\n\n        assignedProductColumns() {\n            return [{\n                property: 'product.translated.name',\n                label: this.$tc('sw-product.list.columnName'),\n                primary: true,\n                allowResize: true,\n                sortable: false,\n            }, {\n                property: 'product.productNumber',\n                label: this.$tc('sw-product.list.columnProductNumber'),\n                allowResize: true,\n                sortable: false,\n            }, {\n                property: 'position',\n                label: this.$tc('sw-product.crossselling.inputCrossSellingPosition'),\n                allowResize: true,\n                sortable: false,\n            }];\n        },\n\n        variantProductIds() {\n            const variantProductIds = [];\n\n            this.assignedProducts.forEach((item) => {\n                if (!item.product.parentId || item.product.translated.name || item.product.name) {\n                    return;\n                }\n\n                variantProductIds.push(item.product.id);\n            });\n\n            return variantProductIds;\n        },\n\n        variantCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.setIds(this.variantProductIds);\n\n            return criteria;\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    created() {\n        if (this.variantProductIds.length === 0) {\n            return;\n        }\n\n        this.productRepository.search(this.variantCriteria, { ...Context.api, inheritance: true }).then((variants) => {\n            const variantNames = {};\n            variants.forEach((variant) => {\n                variantNames[variant.id] = variant.translated.name;\n            });\n            this.variantNames = variantNames;\n        });\n    },\n\n    methods: {\n        onToggleProduct(productId) {\n            if (productId === null) {\n                return;\n            }\n\n            this.isLoadingData = true;\n            const matchedAssignedProduct = this.assignedProducts.find((assignedProduct) => {\n                return assignedProduct.productId === productId;\n            });\n\n            if (matchedAssignedProduct) {\n                this.removeItem(matchedAssignedProduct);\n                this.isLoadingData = false;\n            } else {\n                const newProduct = this.assignmentRepository.create();\n                newProduct.crossSellingId = this.crossSellingId;\n                newProduct.productId = productId;\n                newProduct.position = this.assignedProducts.length + 1;\n                this.assignedProducts.add(newProduct);\n\n                const criteria = new Criteria(1, 25);\n                criteria.addAssociation('options.group');\n\n                this.productRepository.get(productId, { ...Context.api, inheritance: true }, criteria).then((product) => {\n                    newProduct.product = product;\n                    this.isLoadingData = false;\n                });\n            }\n        },\n\n        removeItem(item) {\n            const oldPosition = item.position;\n\n            this.assignedProducts.remove(item.id);\n            this.assignedProducts.forEach((assignedProduct) => {\n                if (assignedProduct.position <= oldPosition) {\n                    return;\n                }\n\n                assignedProduct.position -= 1;\n            });\n        },\n\n        isSelected(item) {\n            return this.assignedProducts.some(p => p.productId === item.id);\n        },\n    },\n};\n","export default \"<div class=\\\"sw-product-cross-selling-assignment\\\">\\n    \\n    {% block sw_product_cross_selling_assignment_container %}\\n    <div class=\\\"sw-product-cross-selling-assignment__select-container\\\">\\n        \\n        {% block sw_product_cross_selling_assignment_select %}\\n        <sw-entity-single-select\\n            :label=\\\"$tc('sw-product.crossselling.inputCrossSellingProductList')\\\"\\n            entity=\\\"product\\\"\\n            value=\\\"\\\"\\n            :criteria=\\\"searchCriteria\\\"\\n            :context=\\\"searchContext\\\"\\n            disable-auto-close\\n            :disabled=\\\"!allowEdit\\\"\\n            show-clearable-button\\n            {% if VUE3 %}\\n            @update:value=\\\"onToggleProduct\\\"\\n            {% else %}\\n            @change=\\\"onToggleProduct\\\"\\n            {% endif %}\\n        >\\n\\n            <template #result-item=\\\"{ item, index }\\\">\\n                <slot\\n                    name=\\\"result-item\\\"\\n                    v-bind=\\\"{ item, index, isSelected }\\\"\\n                >\\n                    <sw-select-result\\n                        :selected=\\\"isSelected(item)\\\"\\n                        v-bind=\\\"{ item, index }\\\"\\n                    >\\n                        \\n                        {% block sw_entity_single_select_base_results_list_result_label %}\\n                        <span class=\\\"sw-select-result__result-item-text\\\">\\n                            <sw-product-variant-info :variations=\\\"item.variation\\\">\\n                                {{ item.translated.name || item.name }}\\n                            </sw-product-variant-info>\\n                        </span>\\n                        {% endblock %}\\n                    </sw-select-result>\\n                </slot>\\n            </template>\\n\\n        </sw-entity-single-select>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_cross_selling_assignment_option_grid %}\\n        <sw-data-grid\\n            v-if=\\\"total\\\"\\n            :key=\\\"isLoadingGrid\\\"\\n            :data-source=\\\"assignedProducts\\\"\\n            :is-loading=\\\"isLoadingGrid\\\"\\n            :columns=\\\"assignedProductColumns\\\"\\n            :show-settings=\\\"true\\\"\\n            :show-selection=\\\"false\\\"\\n        >\\n\\n            <template #actions=\\\"{ item }\\\">\\n                <sw-context-menu-item\\n                    :disabled=\\\"!allowEdit\\\"\\n                    variant=\\\"danger\\\"\\n                    @click=\\\"removeItem(item)\\\"\\n                >\\n                    {{ $tc('global.default.delete') }}\\n                </sw-context-menu-item>\\n            </template>\\n\\n            <template #column-product.translated.name=\\\"{ item }\\\">\\n                \\n                {% block sw_data_grid_columns_render_value %}\\n                <span>\\n                    <sw-product-variant-info :variations=\\\"item.product.variation\\\">\\n                        {{ item.product.translated.name || item.product.name || variantNames[item.product.id] }}\\n                    </sw-product-variant-info>\\n                </span>\\n                {% endblock %}\\n            </template>\\n\\n            \\n            {% block sw_product_cross_selling_assignment_option_grid_column_position %}\\n            <template #column-position=\\\"{ item }\\\">\\n                <sw-data-grid-column-position\\n                    ref=\\\"columnPosition\\\"\\n                    v-model=\\\"assignedProducts\\\"\\n                    :show-value=\\\"true\\\"\\n                    :item=\\\"item\\\"\\n                />\\n            </template>\\n            {% endblock %}\\n        </sw-data-grid>\\n        {% endblock %}\\n        \\n        {% block sw_product_cross_selling_assignment_empty_state %}\\n        <sw-empty-state\\n            v-if=\\\"!total && !isLoadingGrid\\\"\\n            class=\\\"sw-product-cross-selling-assignment__option-list-empty-state\\\"\\n            title=\\\"\\\"\\n            :absolute=\\\"false\\\"\\n            :subline=\\\"$tc('sw-product.crossselling.assignEmptyStateDescription')\\\"\\n        >\\n            <template #icon>\\n                <img\\n                    :src=\\\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\\\"\\n                    alt=\\\"\\\"\\n                >\\n            </template>\\n        </sw-empty-state>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n</div>\\n\";"],"sourceRoot":""}