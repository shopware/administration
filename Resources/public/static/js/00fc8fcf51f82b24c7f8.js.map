{"version":3,"sources":["webpack:///./src/module/sw-cms/elements/product-listing/config/sw-cms-el-config-product-listing.scss","webpack:///./src/module/sw-cms/elements/product-listing/config/index.js","webpack:///./src/module/sw-cms/elements/product-listing/config/sw-cms-el-config-product-listing.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","_Shopware$Data","Data","Criteria","EntityCollection","template","inject","mixins","getByName","data","productSortings","defaultSorting","filters","filterPropertiesTerm","properties","propertiesPage","propertiesLimit","propertiesTotal","computed","showSortingGrid","this","element","config","useCustomSorting","value","showFilterGrid","filterByProperties","productSortingRepository","repositoryFactory","create","propertyRepository","productSortingsCriteria","criteria","addFilter","equalsAny","_toConsumableArray","Object","keys","productSortingsConfigValue","addSorting","sort","propertyCriteria","setTerm","equals","allProductSortingsCriteria","excludedDefaultSortingCriteria","id","not","availableSortings","filterByManufacturer","get","isActiveFilter","set","updateFilters","filterByRating","filterByPrice","filterByFreeShipping","sortProperties","showPropertySelection","length","gridColumns","property","label","disabled","width","gridClasses","assetFilter","Filter","watch","handler","transformProductSortings","deep","key","created","createdComponent","methods","_this","initElementConfig","Utils","types","isEmpty","route","schema","entity","Context","api","fetchProductSortings","then","initDefaultSorting","unpackFilters","loadFilterableProperties","_this2","search","updateValuesFromConfig","entries","forEach","_ref","_ref2","_slicedToArray","matchingProductSorting","find","productSorting","priority","object","currentProductSorting","_this3","defaultSortingKey","response","first","_this4","total","_this5","active","propertyWhitelist","includes","a","b","onDefaultSortingChange","has","isDefaultSorting","item","concat","reduce","acc","current","join","undefined","split","onFilterProperties","onPropertiesPageChange","_ref3","limit","page","propertyStatusChanged","allowlist"],"mappings":"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","file":"static/js/00fc8fcf51f82b24c7f8.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-cms-el-config-product-listing.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"cea70694\", content, true, {});","import template from './sw-cms-el-config-product-listing.html.twig';\nimport './sw-cms-el-config-product-listing.scss';\n\nconst { Mixin } = Shopware;\nconst { Criteria, EntityCollection } = Shopware.Data;\n\n/**\n * @private\n * @package buyers-experience\n */\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'feature'],\n\n    mixins: [\n        Mixin.getByName('cms-element'),\n    ],\n\n    data() {\n        return {\n            productSortings: [], // only for presentational usage\n            defaultSorting: {},\n            filters: [],\n            filterPropertiesTerm: '',\n            properties: [],\n            propertiesPage: 1,\n            propertiesLimit: 6,\n            propertiesTotal: 0,\n        };\n    },\n\n    computed: {\n        showSortingGrid() {\n            return this.element.config.useCustomSorting.value;\n        },\n\n        showFilterGrid() {\n            return !this.filterByProperties;\n        },\n\n        productSortingRepository() {\n            return this.repositoryFactory.create('product_sorting');\n        },\n\n        propertyRepository() {\n            return this.repositoryFactory.create('property_group');\n        },\n\n        productSortingsCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(Criteria.equalsAny('key', [...Object.keys(this.productSortingsConfigValue)]));\n            criteria.addSorting(Criteria.sort('priority', 'desc'));\n\n            return criteria;\n        },\n\n        propertyCriteria() {\n            const criteria = new Criteria(this.propertiesPage, this.propertiesLimit);\n\n            criteria.setTerm(this.filterPropertiesTerm);\n\n            criteria.addSorting(Criteria.sort('name', 'ASC', false));\n            criteria.addFilter(Criteria.equals('filterable', true));\n\n            return criteria;\n        },\n\n        allProductSortingsCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(Criteria.equals('locked', false));\n\n            return criteria;\n        },\n\n        excludedDefaultSortingCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            if (this.defaultSorting.id) {\n                criteria.addFilter(Criteria.not(\n                    'AND',\n                    [Criteria.equals('id', this.defaultSorting.id)],\n                ));\n            }\n\n            criteria.addFilter(Criteria.equals('locked', false));\n\n            return criteria;\n        },\n\n        productSortingsConfigValue() {\n            return this.element.config.availableSortings.value;\n        },\n\n        filterByManufacturer: {\n            get() {\n                return this.isActiveFilter('manufacturer-filter');\n            },\n            set(value) {\n                this.updateFilters('manufacturer-filter', value);\n            },\n        },\n\n        filterByRating: {\n            get() {\n                return this.isActiveFilter('rating-filter');\n            },\n            set(value) {\n                this.updateFilters('rating-filter', value);\n            },\n        },\n\n        filterByPrice: {\n            get() {\n                return this.isActiveFilter('price-filter');\n            },\n            set(value) {\n                this.updateFilters('price-filter', value);\n            },\n        },\n\n        filterByFreeShipping: {\n            get() {\n                return this.isActiveFilter('shipping-free-filter');\n            },\n            set(value) {\n                this.updateFilters('shipping-free-filter', value);\n            },\n        },\n\n        filterByProperties: {\n            get() {\n                return !this.isActiveFilter('property-filter');\n            },\n            set(value) {\n                this.updateFilters('property-filter', !value);\n                this.sortProperties(this.properties);\n            },\n        },\n\n        showPropertySelection() {\n            return !this.properties.length < 1;\n        },\n\n        gridColumns() {\n            return [\n                {\n                    property: 'status',\n                    label: 'sw-cms.elements.productListing.config.filter.gridHeaderStatus',\n                    disabled: this.showFilterGrid,\n                    width: '70px',\n                },\n                {\n                    property: 'name',\n                    label: 'sw-cms.elements.productListing.config.filter.gridHeaderName',\n                },\n            ];\n        },\n\n        gridClasses() {\n            return {\n                'is--disabled': this.showFilterGrid,\n            };\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        productSortings: {\n            handler() {\n                this.element.config.availableSortings.value = this.transformProductSortings();\n            },\n            deep: true,\n        },\n\n        defaultSorting() {\n            if (Object.keys(this.defaultSorting).length === 0) {\n                this.element.config.defaultSorting.value = '';\n            } else {\n                this.element.config.defaultSorting.value = this.defaultSorting.key;\n            }\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.initElementConfig('product-listing');\n\n            if (Shopware.Utils.types.isEmpty(this.productSortingsConfigValue)) {\n                this.productSortings = new EntityCollection(\n                    this.productSortingRepository.route,\n                    this.productSortingRepository.schema.entity,\n                    Shopware.Context.api,\n                    this.productSortingsCriteria,\n                );\n            } else {\n                this.fetchProductSortings().then(productSortings => {\n                    this.productSortings = productSortings;\n                });\n            }\n\n            this.initDefaultSorting();\n            this.unpackFilters();\n            this.loadFilterableProperties();\n        },\n\n        fetchProductSortings() {\n            return this.productSortingRepository.search(this.productSortingsCriteria)\n                .then(productSortings => this.updateValuesFromConfig(productSortings));\n        },\n\n        updateValuesFromConfig(productSortings) {\n            Object.entries(this.productSortingsConfigValue).forEach(([key, value]) => {\n                const matchingProductSorting = productSortings.find(productSorting => productSorting.key === key);\n\n                if (!matchingProductSorting) {\n                    return;\n                }\n\n                matchingProductSorting.priority = value;\n            });\n\n            return productSortings;\n        },\n\n        /**\n         * This functions transforms the product sorting entities to an format that the server accepts\n         * e.g. 'Product sorting entity' => [{ 'test-sorting': 10 }]\n         */\n        transformProductSortings() {\n            const object = {};\n\n            this.productSortings.forEach(currentProductSorting => {\n                object[currentProductSorting.key] = currentProductSorting.priority;\n            });\n\n            return object;\n        },\n\n        initDefaultSorting() {\n            const defaultSortingKey = this.element.config.defaultSorting.value;\n            if (defaultSortingKey !== '') {\n                const criteria = new Criteria(1, 25);\n\n                criteria.addFilter(Criteria.equals('key', defaultSortingKey));\n\n                this.productSortingRepository.search(criteria)\n                    .then(response => {\n                        this.defaultSorting = response.first() || {};\n                    });\n            }\n        },\n\n        loadFilterableProperties() {\n            return this.propertyRepository.search(this.propertyCriteria)\n                .then(properties => {\n                    this.propertiesTotal = properties.total;\n\n                    this.properties = this.sortProperties(properties);\n                });\n        },\n\n        sortProperties(properties) {\n            properties.forEach(property => {\n                if (!this.filterByProperties) {\n                    property.active = true;\n\n                    return;\n                }\n\n                // eslint-disable-next-line inclusive-language/use-inclusive-words\n                property.active = this.element.config.propertyWhitelist.value.includes(property.id);\n            });\n\n            properties.sort((a, b) => {\n                if (a.active === b.active || !a.active === !b.active) {\n                    return 0;\n                }\n\n                if (a.active) {\n                    return -1;\n                }\n\n                return 1;\n            });\n\n            return properties;\n        },\n\n        onDefaultSortingChange(entity, defaultSorting) {\n            if (!defaultSorting) {\n                this.defaultSorting = {};\n                return;\n            }\n\n            // add the default sorting to available sortings, so it won't break logic\n            if (!this.productSortings.has(defaultSorting.id)) {\n                this.productSortings.add(defaultSorting);\n            }\n\n            this.defaultSorting = defaultSorting;\n        },\n\n        isDefaultSorting(productSorting) {\n            return this.defaultSorting.key === productSorting.key;\n        },\n\n        isActiveFilter(item) {\n            return this.filters.includes(item);\n        },\n\n        updateFilters(item, active) {\n            if (active) {\n                this.filters = [...this.filters, item];\n            } else {\n                this.filters = this.filters\n                    .reduce((acc, current) => {\n                        if (current === item) {\n                            return acc;\n                        }\n\n                        return [...acc, current];\n                    }, []);\n            }\n\n            this.element.config.filters.value = this.filters.join();\n        },\n\n        unpackFilters() {\n            if (this.element.config.filters === undefined) {\n                return;\n            }\n\n            const filters = this.element.config.filters.value;\n\n            if (filters === null || filters === '') {\n                return;\n            }\n\n            this.filters = filters.split(',');\n        },\n\n        onFilterProperties() {\n            this.propertiesPage = 1;\n\n            return this.loadFilterableProperties();\n        },\n\n        onPropertiesPageChange({ limit, page }) {\n            this.propertiesLimit = limit;\n            this.propertiesPage = page;\n\n            return this.loadFilterableProperties();\n        },\n\n        propertyStatusChanged(id) {\n            // eslint-disable-next-line inclusive-language/use-inclusive-words\n            const allowlist = this.element.config.propertyWhitelist.value;\n\n            if (!allowlist.includes(id)) {\n                // eslint-disable-next-line inclusive-language/use-inclusive-words\n                this.element.config.propertyWhitelist.value = [...allowlist, id];\n\n                return;\n            }\n\n            // eslint-disable-next-line inclusive-language/use-inclusive-words\n            this.element.config.propertyWhitelist.value = allowlist\n                .reduce((acc, current) => {\n                    if (current === id) {\n                        return acc;\n                    }\n\n                    return [...acc, current];\n                }, []);\n        },\n    },\n};\n","export default \"\\n{% block sw_cms_element_product_listing_config %}\\n<div class=\\\"sw-cms-el-config-product-listing\\\">\\n\\n    <sw-tabs\\n        position-identifier=\\\"sw-cms-element-config-product-listing\\\"\\n        default-item=\\\"content\\\"\\n    >\\n        <template #default=\\\"{ active }\\\">\\n            <sw-tabs-item\\n                class=\\\"sw-cms-el-config-product-listing__tab-content\\\"\\n                name=\\\"content\\\"\\n                :active-tab=\\\"active\\\"\\n            >\\n                {{ $tc('sw-cms.elements.general.config.tab.content') }}\\n            </sw-tabs-item>\\n\\n            <sw-tabs-item\\n                class=\\\"sw-cms-el-config-product-listing__tab-sorting\\\"\\n                name=\\\"sorting\\\"\\n                :active-tab=\\\"active\\\"\\n            >\\n                {{ $tc('sw-cms.elements.productListing.config.tab.sorting') }}\\n            </sw-tabs-item>\\n\\n            <sw-tabs-item\\n                class=\\\"sw-cms-el-config-product-listing__tab-filter\\\"\\n                name=\\\"filter\\\"\\n                :active-tab=\\\"active\\\"\\n            >\\n                {{ $tc('sw-cms.elements.productListing.config.tab.filter') }}\\n            </sw-tabs-item>\\n        </template>\\n\\n        <template\\n            #content=\\\"{ active }\\\"\\n        >\\n            <template v-if=\\\"active === 'content'\\\">\\n\\n                \\n                {% block sw_cms_element_product_listing_config_layout_select %}\\n                <sw-select-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"element.config.boxLayout.value\\\"\\n                    {% else %}\\n                    v-model=\\\"element.config.boxLayout.value\\\"\\n                    {% endif %}\\n                    :label=\\\"$tc('sw-cms.elements.productBox.config.label.layoutType')\\\"\\n                >\\n                    \\n                    {% block sw_cms_element_product_listing_config_layout_select_options %}\\n                    <option value=\\\"standard\\\">\\n                        {{ $tc('sw-cms.elements.productBox.config.label.layoutTypeStandard') }}\\n                    </option>\\n                    <option value=\\\"image\\\">\\n                        {{ $tc('sw-cms.elements.productBox.config.label.layoutTypeImage') }}\\n                    </option>\\n                    <option value=\\\"minimal\\\">\\n                        {{ $tc('sw-cms.elements.productBox.config.label.layoutTypeMinimal') }}\\n                    </option>\\n                    {% endblock %}\\n                </sw-select-field>\\n                {% endblock %}\\n\\n                \\n                {% block sw_cms_element_product_listing_config_info %}\\n                <sw-alert variant=\\\"info\\\">\\n                    {{ $tc('sw-cms.elements.general.config.infoText.listingElement') }}\\n                </sw-alert>\\n                {% endblock %}\\n            </template>\\n\\n            <template v-if=\\\"active === 'sorting'\\\">\\n                \\n                {% block sw_cms_element_product_listing_config_show_sorting %}\\n                <sw-switch-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"element.config.showSorting.value\\\"\\n                    {% else %}\\n                    v-model=\\\"element.config.showSorting.value\\\"\\n                    {% endif %}\\n                    :label=\\\"$tc('sw-cms.elements.productListing.config.sorting.labelShowSorting')\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_cms_element_product_listing_config_use_default_sorting %}\\n                <sw-switch-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"element.config.useCustomSorting.value\\\"\\n                    {% else %}\\n                    v-model=\\\"element.config.useCustomSorting.value\\\"\\n                    {% endif %}\\n                    :label=\\\"$tc('sw-cms.elements.productListing.config.sorting.labelUseCustomSortings')\\\"\\n                    :help-text=\\\"$tc('sw-cms.elements.productListing.config.sorting.helpTextUseCustomSortings')\\\"\\n                    class=\\\"sw-cms-el-config-product-listing-custom-sortings\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_cms_element_product_listing_config_default_sorting %}\\n                <sw-entity-single-select\\n                    v-if=\\\"showSortingGrid\\\"\\n                    class=\\\"sw-cms-element-config-product-listing__sorting-default-select\\\"\\n                    entity=\\\"product_sorting\\\"\\n                    label-property=\\\"label\\\"\\n                    show-clearable-button\\n                    :value=\\\"defaultSorting.id\\\"\\n                    :label=\\\"$tc('sw-cms.elements.productListing.config.sorting.labelDefaultSorting')\\\"\\n                    :help-text=\\\"$tc('sw-cms.elements.productListing.config.sorting.helpTextDefaultSorting')\\\"\\n                    :criteria=\\\"allProductSortingsCriteria\\\"\\n                    @option-select=\\\"onDefaultSortingChange\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_cms_element_product_listing_config_available_sortings %}\\n                <sw-entity-multi-select\\n                    v-if=\\\"showSortingGrid\\\"\\n                    v-model=\\\"productSortings\\\"\\n                    class=\\\"sw-cms-el-config-product-listing-config-sorting-grid__select\\\"\\n                    :label=\\\"$tc('sw-cms.elements.productListing.config.sorting.labelProductSortings')\\\"\\n                    label-property=\\\"label\\\"\\n                    :criteria=\\\"allProductSortingsCriteria\\\"\\n                    :hide-labels=\\\"true\\\"\\n                    :placeholder=\\\"$tc('sw-cms.elements.productListing.config.sorting.placeHolderProductSortings')\\\"\\n                >\\n                    <template #result-item=\\\"{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, isSelected, addItem, getKey }\\\">\\n                        <slot\\n                            name=\\\"result-item\\\"\\n                            v-bind=\\\"{ item, index, labelProperty, valueProperty: 'id', searchTerm, highlightSearchTerm, isSelected, addItem, getKey }\\\"\\n                        >\\n                            <sw-select-result\\n                                v-tooltip=\\\"{\\n                                    showDelay: 300,\\n                                    message: $tc('sw-cms.elements.productListing.config.sorting.defaultSortingInUse'),\\n                                    disabled: !isDefaultSorting(item)\\n                                }\\\"\\n                                :selected=\\\"isSelected(item)\\\"\\n                                :disabled=\\\"isDefaultSorting(item)\\\"\\n                                v-bind=\\\"{ item, index }\\\"\\n                                @item-select=\\\"addItem\\\"\\n                            >\\n                                \\n                                {% block sw_entity_multi_select_base_results_list_result_label %}\\n                                <slot\\n                                    name=\\\"result-label-property\\\"\\n                                    v-bind=\\\"{ item, index, labelProperty, valueProperty: 'id', searchTerm, highlightSearchTerm, getKey }\\\"\\n                                >\\n                                    <sw-highlight-text\\n                                        v-if=\\\"highlightSearchTerm\\\"\\n                                        :text=\\\"getKey(item,labelProperty) || getKey(item, `translated.${labelProperty}`)\\\"\\n                                        :search-term=\\\"searchTerm\\\"\\n                                    />\\n                                    <template v-else>\\n                                        {{ getKey(item,labelProperty) || getKey(item, `translated.${labelProperty}`) }}\\n                                    </template>\\n                                </slot>\\n                                {% endblock %}\\n                            </sw-select-result>\\n                        </slot>\\n                    </template>\\n                </sw-entity-multi-select>\\n                {% endblock %}\\n\\n                \\n                {% block sw_cms_element_product_listing_config_sorting_grid %}\\n                <sw-cms-el-config-product-listing-config-sorting-grid\\n                    v-if=\\\"showSortingGrid\\\"\\n                    :product-sortings=\\\"productSortings\\\"\\n                    :default-sorting=\\\"defaultSorting\\\"\\n                />\\n                {% endblock %}\\n            </template>\\n\\n            <template v-if=\\\"active === 'filter'\\\">\\n                \\n                {% block sw_cms_element_product_listing_config_filter_info %}\\n                <sw-alert variant=\\\"info\\\">\\n                    {{ $tc('sw-cms.elements.productListing.config.filter.infoText') }}\\n                </sw-alert>\\n                {% endblock %}\\n\\n                \\n                {% block sw_cms_element_product_listing_config_filter_by_wrapper %}\\n                <sw-container\\n                    columns=\\\"1fr 1fr\\\"\\n                    gap=\\\"0px 30px\\\"\\n                >\\n                    \\n                    {% block sw_cms_element_product_listing_config_filter_by_manufacturer %}\\n                    <sw-switch-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"filterByManufacturer\\\"\\n                        {% else %}\\n                        v-model=\\\"filterByManufacturer\\\"\\n                        {% endif %}\\n                        :label=\\\"$tc('sw-cms.elements.productListing.config.filter.labelFilterByManufacturer')\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_element_product_listing_config_filter_by_rating %}\\n                    <sw-switch-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"filterByRating\\\"\\n                        {% else %}\\n                        v-model=\\\"filterByRating\\\"\\n                        {% endif %}\\n                        :label=\\\"$tc('sw-cms.elements.productListing.config.filter.labelFilterByRating')\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_element_product_listing_config_filter_by_price %}\\n                    <sw-switch-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"filterByPrice\\\"\\n                        {% else %}\\n                        v-model=\\\"filterByPrice\\\"\\n                        {% endif %}\\n                        :label=\\\"$tc('sw-cms.elements.productListing.config.filter.labelFilterByPrice')\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_element_product_listing_config_filter_for_free_shipping %}\\n                    <sw-switch-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"filterByFreeShipping\\\"\\n                        {% else %}\\n                        v-model=\\\"filterByFreeShipping\\\"\\n                        {% endif %}\\n                        :label=\\\"$tc('sw-cms.elements.productListing.config.filter.labelFilterForFreeShipping')\\\"\\n                    />\\n                    {% endblock %}\\n                </sw-container>\\n                {% endblock %}\\n\\n                \\n                {% block sw_cms_element_product_listing_config_filter_properties_wrapper %}\\n                <div>\\n\\n                    \\n                    {% block sw_cms_element_product_listing_config_filter_spacer %}\\n                    <hr class=\\\"spacer\\\">\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_element_product_listing_config_filter_properties_as_filter %}\\n                    \\n                    {% block sw_cms_element_product_listing_config_filter_properties_as_filter_switch %}\\n                    <sw-switch-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"filterByProperties\\\"\\n                        {% else %}\\n                        v-model=\\\"filterByProperties\\\"\\n                        {% endif %}\\n                        :label=\\\"$tc('sw-cms.elements.productListing.config.filter.labelUseFilterByProperties')\\\"\\n                        :help-text=\\\"$tc('sw-cms.elements.productListing.config.filter.helpTextUseFilterByProperties')\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_element_product_listing_config_filter_properties_as_filter_info_text %}\\n                    <div\\n                        class=\\\"sw-cms-el-config-product-listing-filter_properties_as_filter__description-text\\\"\\n                        v-html=\\\"$tc('sw-cms.elements.productListing.config.filter.descriptionTextUseFilterByProperties')\\\"\\n                    ></div>\\n                    {% endblock %}\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_element_product_listing_config_filter_property_search %}\\n                    <sw-simple-search-field\\n                        v-model=\\\"filterPropertiesTerm\\\"\\n                        class=\\\"sw-cms-element-product-listing-config-filter-property-search\\\"\\n                        variant=\\\"form\\\"\\n                        :disabled=\\\"showFilterGrid\\\"\\n                        @search-term-change=\\\"onFilterProperties\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_element_product_listing_config_filter_property_grid %}\\n                    <div\\n                        v-if=\\\"showPropertySelection\\\"\\n                        class=\\\"sw-cms-el-config-product-listing-property-grid\\\"\\n                        :class=\\\"gridClasses\\\"\\n                    >\\n                        <sw-data-grid\\n                            :data-source=\\\"properties\\\"\\n                            :columns=\\\"gridColumns\\\"\\n                            :compact-mode=\\\"true\\\"\\n                            :allow-inline-edit=\\\"false\\\"\\n                            :show-actions=\\\"false\\\"\\n                            :show-selection=\\\"false\\\"\\n                            plain-appearance\\n                        >\\n\\n                            <template #column-status=\\\"{ item, column }\\\">\\n                                \\n                                {% block sw_cms_element_product_listing_config_filter_property_grid_column_status %}\\n                                <sw-switch-field\\n                                    :disabled=\\\"column.disabled\\\"\\n                                    :value=\\\"item.active\\\"\\n                                    {% if VUE3 %}\\n                                    @update:value=\\\"propertyStatusChanged(item.id)\\\"\\n                                    {% else %}\\n                                    @change=\\\"propertyStatusChanged(item.id)\\\"\\n                                    {% endif %}\\n                                />\\n                            {% endblock %}\\n                            </template>\\n\\n                            <template #pagination>\\n                                \\n                                {% block sw_cms_element_product_listing_config_filter_property_grid_pagination %}\\n                                <sw-pagination\\n                                    v-if=\\\"!disabled\\\"\\n                                    :page=\\\"propertiesPage\\\"\\n                                    :limit=\\\"propertiesLimit\\\"\\n                                    :total=\\\"propertiesTotal\\\"\\n                                    :auto-hide=\\\"false\\\"\\n                                    :steps=\\\"[]\\\"\\n                                    @page-change=\\\"onPropertiesPageChange\\\"\\n                                />\\n                            {% endblock %}\\n                            </template>\\n                        </sw-data-grid>\\n                    </div>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_cms_element_product_listing_config_filter_empty_state %}\\n                    <sw-empty-state\\n                        v-else\\n                        :absolute=\\\"false\\\"\\n                        :title=\\\"$tc('sw-cms.elements.productListing.config.filter.gridEmptyStateLabel')\\\"\\n                        :subline=\\\"$tc('sw-cms.elements.productListing.config.filter.gridEmptyStateHint')\\\"\\n                    >\\n                        <template #icon>\\n                            <img\\n                                :src=\\\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\\\"\\n                                alt=\\\"$tc('sw-cms.elements.productListing.config.filter.gridEmptyStateLabel')\\\"\\n                            >\\n                        </template>\\n                    </sw-empty-state>\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n            </template>\\n        </template>\\n    </sw-tabs>\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}