(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[79522],{21411:function(){},79522:function(o,e,t){"use strict";t.r(e),t.d(e,{default:function(){return a}}),t(25660);let{Component:d,Mixin:n}=Shopware,{format:i}=Shopware.Utils,{mapGetters:r}=d.getComponentHelper();var a={template:'<div\n    class="sw-product-download-form"\n    :class="{ \'is--disabled\': disabled }"\n>\n    <sw-upload-listener\n        v-if="!isLoading"\n        :upload-tag="`downloads-${product.id}`"\n        auto-upload\n        @media-upload-finish="successfulUpload"\n        @media-upload-fail="onUploadFailed"\n    />\n\n    <sw-media-upload-v2\n        v-if="!isLoading && acl.can(\'product.editor\')"\n        :class="swFieldClasses"\n        variant="regular"\n        :upload-tag="`downloads-${product.id}`"\n        :scroll-target="$parent.$el"\n        :private-filesystem="true"\n        :extension-accept="fileAccept"\n        default-folder="product_download"\n        v-bind="$attrs"\n    />\n\n    <sw-field-error :error="error" />\n\n    <div\n        v-if="!isLoading"\n        class="sw-product-download-form__previews sw-product-download-form__grid"\n    >\n        <div\n            v-for="download in productDownloads"\n            :key="download.id"\n            class="sw-product-download-form__row"\n        >\n            <span\n                v-tooltip="{\n                    message: getFileName(download),\n                    disabled: false,\n                    width: \'auto\'\n                }"\n                class="sw-product-download-form-row__name"\n            >\n                {{ getFileName(download) }}\n            </span>\n\n            <div class="sw-product-download-form-row__info">\n                <span class="sw-product-download-form-row__mime">\n                    {{ download.media.mimeType }}\n                </span>\n\n                <span class="sw-product-download-form-row__size">\n                    {{ getFileSize(download) }}\n                </span>\n\n                <span class="sw-product-download-form-row__changed-date">\n                    {{ createdAt(download) }}\n                </span>\n            </div>\n\n            <sw-context-button class="sw-product-download-form-row__context">\n                <sw-context-menu-item\n                    class="sw-product-download-form-row__context-remove"\n                    variant="danger"\n                    :disabled="isLoading || !acl.can(\'product.editor\')"\n                    @click="onRemoveDownload(download)"\n                >\n                    {{ $tc(\'global.default.remove\') }}\n                </sw-context-menu-item>\n            </sw-context-button>\n\n        </div>\n    </div>\n    <sw-loader v-else />\n</div>\n',inject:["repositoryFactory","acl","configService"],mixins:[n.getByName("notification")],props:{disabled:{type:Boolean,required:!1,default:!1},isInherited:{type:Boolean,required:!1,default:!1}},data(){return{isMediaLoading:!1,fileAcceptedExtensions:[]}},computed:{...r("error",["getApiError"]),product(){let o=Shopware.State.get("swProductDetail");return this.isInherited?o.parentProduct:o.product},...r("swProductDetail",{isStoreLoading:"isLoading"}),isLoading(){return this.isMediaLoading||this.isStoreLoading},productDownloadRepository(){return this.repositoryFactory.create("product_download")},productDownloads(){return this.product?this.product.downloads:[]},mediaRepository(){return this.repositoryFactory.create("media")},error(){return this.getApiError(this.product,"downloads")},hasError(){return!!this.error},swFieldClasses(){return{"has--error":this.hasError}},fileAccept(){return this.fileAcceptedExtensions.join(", ")}},created(){this.createdComponent()},methods:{async createdComponent(){this.configService.getConfig().then(o=>{this.fileAcceptedExtensions=o.settings.private_allowed_extensions})},onOpenMedia(){this.$emit("media-open")},getFileSize(o){return i.fileSize(o.media.fileSize)},getFileName(o){return o.media.fileExtension?`${o.media.fileName}.${o.media.fileExtension}`:o.media.fileName},createdAt(o){let e=o.media.uploadedAt||o.media.createdAt;return i.date(e,{month:"numeric"})},onRemoveDownload(o){this.product.downloads.remove(o.id)},async successfulUpload({targetId:o}){if(this.product.downloads.find(e=>e.mediaId===o))return;let e=this.createDownloadAssociation(o);e.media=await this.mediaRepository.get(o),this.product.downloads.add(e),this.error&&Shopware.State.dispatch("error/removeApiError",{expression:this.error.selfLink})},createDownloadAssociation(o){let e=this.productDownloadRepository.create();return e.productId=this.product.id,e.mediaId=o,e.position=this.product.downloads.length,e},onUploadFailed(o){let e=this.product.media.find(e=>e.mediaId===o.targetId);e&&(this.product.coverId===e.id&&(this.product.coverId=null),this.product.media.remove(e.id)),this.product.isLoading=!1},removeFile(o){this.product.coverId===o.id&&(this.product.cover=null,this.product.coverId=null),null===this.product.coverId&&this.product.media.length>0&&(this.product.coverId=this.product.media.first().id),this.product.media.remove(o.id)},updateMediaItemPositions(){this.productMedia.forEach((o,e)=>{o.position=e})}}}},25660:function(o,e,t){var d=t(21411);d.__esModule&&(d=d.default),"string"==typeof d&&(d=[[o.id,d,""]]),d.locals&&(o.exports=d.locals),t(45346).Z("0e549f98",d,!0,{})}}]);