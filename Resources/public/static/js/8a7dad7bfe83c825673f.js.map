{"version":3,"sources":["webpack:///./src/module/sw-settings-listing/component/sw-settings-listing-default-sales-channel/index.js","webpack:///./src/module/sw-settings-listing/component/sw-settings-listing-default-sales-channel/sw-settings-listing-default-sales-channel.html.twig","webpack:///./src/module/sw-settings-listing/component/sw-settings-listing-default-sales-channel/sw-settings-listing-default-sales-channel.scss"],"names":["EntityCollection","Shopware","Data","isEmpty","Utils","types","cloneDeep","object","template","inject","props","isLoading","type","Boolean","required","default","data","isDefaultSalesChannelLoading","displayVisibilityDetail","configData","null","visibilityConfig","computed","salesChannelRepository","this","repositoryFactory","create","salesChannel","get","_this$configData","_this$configData$null","set","watch","handler","_this","length","salesChannelIds","map","id","filter","entry","includes","Map","forEach","_objectSpread","_this$configData$null2","visibility","_toConsumableArray","values","deep","created","createdComponent","methods","fetchSalesChannelsSystemConfig","_this2","salesChannelEntity","route","entityName","Context","api","systemConfigApiService","getValues","then","add","displayAdvancedVisibility","closeAdvancedVisibility","_this3","$refs","items","saveSalesChannelVisibilityConfig","batchSave","updateSalesChannel","content","__esModule","module","i","locals","exports"],"mappings":"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","file":"static/js/8a7dad7bfe83c825673f.js","sourcesContent":["import template from './sw-settings-listing-default-sales-channel.html.twig';\nimport './sw-settings-listing-default-sales-channel.scss';\n\nconst { EntityCollection } = Shopware.Data;\nconst { isEmpty } = Shopware.Utils.types;\nconst { cloneDeep } = Shopware.Utils.object;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'systemConfigApiService'],\n\n    props: {\n        isLoading: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default() {\n                return false;\n            },\n        },\n    },\n\n    data() {\n        return {\n            isDefaultSalesChannelLoading: false,\n            displayVisibilityDetail: false,\n            configData: {\n                null: {\n                    'core.defaultSalesChannel.active': true,\n                    'core.defaultSalesChannel.salesChannel': [],\n                    'core.defaultSalesChannel.visibility': {},\n                },\n            },\n            visibilityConfig: [],\n        };\n    },\n\n    computed: {\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        salesChannel: {\n            get() {\n                return this.configData?.null?.['core.defaultSalesChannel.salesChannel'];\n            },\n            set(salesChannel) {\n                this.configData.null['core.defaultSalesChannel.salesChannel'] = salesChannel;\n            },\n        },\n    },\n\n    watch: {\n        salesChannel: {\n            handler() {\n                if (!this.salesChannel.length) {\n                    this.visibilityConfig = [];\n                    return;\n                }\n\n                const salesChannelIds = this.salesChannel.map(salesChannel => salesChannel.id);\n                this.visibilityConfig = this.visibilityConfig.filter(entry => salesChannelIds.includes(entry.id));\n\n                const configData = new Map();\n                this.visibilityConfig.forEach(entry => configData.set(entry.id, { ...entry }));\n\n                this.salesChannel.forEach((salesChannel) => {\n                    configData.set(salesChannel, {\n                        id: salesChannel,\n                        visibility: this.configData.null?.['core.defaultSalesChannel.visibility'][salesChannel] || 30,\n                    });\n                });\n\n                this.visibilityConfig = [...configData.values()];\n            },\n            deep: true,\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.fetchSalesChannelsSystemConfig();\n        },\n\n        fetchSalesChannelsSystemConfig() {\n            this.isDefaultSalesChannelLoading = true;\n\n            const salesChannelEntity = new EntityCollection(\n                this.salesChannelRepository.route,\n                this.salesChannelRepository.entityName,\n                Shopware.Context.api,\n            );\n\n            this.systemConfigApiService.getValues('core.defaultSalesChannel').then((configData) => {\n                this.isDefaultSalesChannelLoading = false;\n\n                if (!isEmpty(configData)) {\n                    this.configData.null = configData;\n                    this.salesChannel.forEach(salesChannel => salesChannelEntity.add(salesChannel));\n                    this.salesChannel = salesChannelEntity;\n\n                    return;\n                }\n\n                this.salesChannel = salesChannelEntity;\n            });\n        },\n\n        displayAdvancedVisibility() {\n            this.displayVisibilityDetail = true;\n        },\n\n        closeAdvancedVisibility() {\n            this.displayVisibilityDetail = false;\n\n            this.visibilityConfig = cloneDeep(this.$refs.visibilityConfig.items);\n\n            this.configData.null['core.defaultSalesChannel.visibility'] = {};\n            this.visibilityConfig.forEach((entry) => {\n                this.configData.null['core.defaultSalesChannel.visibility'][entry.id] = entry.visibility;\n            });\n        },\n\n        saveSalesChannelVisibilityConfig() {\n            return this.systemConfigApiService.batchSave(this.configData);\n        },\n\n        updateSalesChannel(salesChannel) {\n            this.salesChannel = salesChannel;\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_listing_default_sales_channel %}\\n<div class=\\\"sw-settings-listing-default-sales-channel\\\">\\n    \\n    {% block sw_settings_listing_default_sales_channel_loader %}\\n    <sw-loader v-if=\\\"isLoading || isDefaultSalesChannelLoading\\\" />\\n    {% endblock %}\\n\\n    <template v-else>\\n        \\n        {% block sw_settings_listing_default_sales_channel_description %}\\n        <p class=\\\"sw-settings-listing-default-sales-channel__description\\\">\\n            {{ $tc('sw-settings-listing.index.defaultSalesChannel.description') }}\\n        </p>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_listing_default_sales_channel_select %}\\n        <sw-entity-multi-id-select\\n            {% if VUE3 %}\\n            v-model:ids=\\\"configData[null]['core.defaultSalesChannel.salesChannel']\\\"\\n            {% else %}\\n            v-model=\\\"configData[null]['core.defaultSalesChannel.salesChannel']\\\"\\n            {% endif %}\\n            :repository=\\\"salesChannelRepository\\\"\\n            :label=\\\"$tc('sw-settings.system-config.labelSalesChannelSelect')\\\"\\n            :placeholder=\\\"$tc('sw-product.visibility.placeholderVisibility')\\\"\\n            {% if VUE3 %}\\n            @update:ids=\\\"updateSalesChannel\\\"\\n            {% else %}\\n            @change=\\\"updateSalesChannel\\\"\\n            {% endif %}\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_listing_default_sales_channeld_setting %}\\n        <div class=\\\"sw-settings-listing-default-sales-channel__options-container\\\">\\n            \\n            {% block sw_settings_listing_default_sales_channel_setting_active %}\\n            <sw-switch-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"configData[null]['core.defaultSalesChannel.active']\\\"\\n                {% else %}\\n                v-model=\\\"configData[null]['core.defaultSalesChannel.active']\\\"\\n                {% endif %}\\n                class=\\\"sw-settings-listing-default-sales-channel__active-switch\\\"\\n                :label=\\\"$tc('sw-product.settingsForm.labelActive')\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_listing_default_sales_channel_setting_visibility %}\\n            <a\\n                v-if=\\\"salesChannel.length > 0\\\"\\n                class=\\\"sw-settings-listing-default-sales-channel__quick-link\\\"\\n                role=\\\"button\\\"\\n                tabindex=\\\"0\\\"\\n                @click=\\\"displayAdvancedVisibility\\\"\\n                @keydown.enter=\\\"displayAdvancedVisibility\\\"\\n            >\\n                {{ $tc('sw-settings-listing.index.defaultSalesChannel.linkAdvancedVisibility') }}\\n                <sw-icon\\n                    class=\\\"sw-settings-listing-default-sales-channel__link-icon\\\"\\n                    name=\\\"regular-long-arrow-right\\\"\\n                    small\\n                />\\n            </a>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_listing_default_sales_channel_select_visibiliy_modal %}\\n        <sw-modal\\n            v-if=\\\"displayVisibilityDetail\\\"\\n            class=\\\"sw-settings-listing-default-sales-channel__visibility-modal\\\"\\n            :title=\\\"$tc('sw-product.visibility.textHeadline')\\\"\\n            @modal-close=\\\"closeAdvancedVisibility\\\"\\n        >\\n            <p>{{ $tc('sw-product.visibility.visibilityModalDescription') }}</p>\\n\\n            <sw-settings-listing-visibility-detail\\n                ref=\\\"visibilityConfig\\\"\\n                :config=\\\"visibilityConfig\\\"\\n            />\\n\\n            <template #modal-footer>\\n                <sw-button\\n                    variant=\\\"primary\\\"\\n                    size=\\\"small\\\"\\n                    @click=\\\"closeAdvancedVisibility\\\"\\n                >\\n                    {{ $tc('sw-product.visibility.closeModal') }}\\n                </sw-button>\\n            </template>\\n        </sw-modal>\\n        {% endblock %}\\n    </template>\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-listing-default-sales-channel.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"49c7ce11\", content, true, {});"],"sourceRoot":""}