{"version":3,"sources":["webpack:///./src/module/sw-product/page/sw-product-list/index.js","webpack:///./src/module/sw-product/page/sw-product-list/sw-product-list.html.twig","webpack:///./src/module/sw-product/page/sw-product-list/sw-product-list.scss"],"names":["Mixin","Shopware","Criteria","Data","cloneDeep","Utils","object","template","inject","mixins","getByName","data","products","currencies","sortBy","sortDirection","naturalSorting","isLoading","isBulkLoading","total","product","cloning","productEntityVariantModal","filterCriteria","defaultFilters","storeKey","activeFilterNumber","showBulkEditModal","searchConfigEntity","metaInfo","title","this","$createTitle","computed","productRepository","repositoryFactory","create","productColumns","getProductColumns","currencyRepository","currenciesColumns","sort","a","b","isSystemDefault","map","item","property","concat","isoCode","dataIndex","id","label","name","routerLink","allowResize","currencyId","visible","align","useCustomSort","productCriteria","page","limit","setTerm","term","addSorting","addAssociation","forEach","filter","addFilter","currencyCriteria","showVariantModal","listFilterOptions","$tc","placeholder","numberType","step","min","fromPlaceholder","toPlaceholder","optionHasCriteria","optionNoCriteria","displayPath","digits","type","options","value","dateType","fromFieldLabel","toFieldLabel","showTimeframe","listFilters","filterFactory","productBulkEditColumns","inlineEdit","_objectWithoutProperties","_excluded","assetFilter","Filter","currencyFilter","dateFilter","stockColorVariantFilter","watch","handler","getList","deep","beforeRouteLeave","to","from","next","closeVariantModal","$nextTick","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","criteria","variantCriteria","variants","parentIds","result","wrap","_context","prev","Service","mergeWithStoredFilters","sent","addQueryScores","equals","not","filters","length","entitySearchable","abrupt","freshSearchTerm","resetSorting","search","variant","push","parentId","addQuery","equalsAny","searchRankingPoint","HIGH_SEARCH_RANKING","Promise","all","selection","t0","stop","onInlineEditSave","promise","_this2","productName","then","createNotificationSuccess","message","catch","createNotificationError","onInlineEditCancel","discardChanges","updateTotal","_ref","onChangeLanguage","languageId","State","commit","updateCriteria","getCurrencyPriceByCurrencyId","prices","priceForProduct","find","price","gross","linked","net","primary","_toConsumableArray","onDuplicate","referenceProduct","onDuplicateFinish","duplicate","_this3","$router","params","onColumnSort","column","onSortColumn","productHasVariants","productEntity","childCount","productIsDigital","states","includes","openVariantModal","onBulkEditItems","includesDigital","digital","Object","values","isCloseout","onBulkEditModalOpen","onBulkEditModalClose","content","__esModule","default","module","i","locals","exports","add"],"mappings":"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","file":"static/js/646a7024bd8b3b385125.js","sourcesContent":["/*\n * @package inventory\n */\n\nimport { searchRankingPoint } from 'src/app/service/search-ranking.service';\nimport template from './sw-product-list.html.twig';\nimport './sw-product-list.scss';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { cloneDeep } = Shopware.Utils.object;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'numberRangeService',\n        'acl',\n        'filterFactory',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('listing'),\n        Mixin.getByName('placeholder'),\n    ],\n\n    data() {\n        return {\n            products: null,\n            currencies: [],\n            sortBy: 'productNumber',\n            sortDirection: 'DESC',\n            naturalSorting: false,\n            isLoading: false,\n            isBulkLoading: false,\n            total: 0,\n            product: null,\n            cloning: false,\n            productEntityVariantModal: false,\n            filterCriteria: [],\n            defaultFilters: [\n                'active-filter',\n                'product-without-images-filter',\n                'release-date-filter',\n                'stock-filter',\n                'price-filter',\n                'manufacturer-filter',\n                'visibilities-filter',\n                'categories-filter',\n                'sales-filter',\n                'tags-filter',\n                'product-states-filter',\n            ],\n            storeKey: 'grid.filter.product',\n            activeFilterNumber: 0,\n            showBulkEditModal: false,\n            searchConfigEntity: 'product',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        productRepository() {\n            return this.repositoryFactory.create('product');\n        },\n\n        productColumns() {\n            return this.getProductColumns();\n        },\n\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n\n        currenciesColumns() {\n            // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n            return this.currencies.sort((a, b) => {\n                return b.isSystemDefault ? 1 : -1;\n            }).map(item => {\n                return {\n                    property: `price-${item.isoCode}`,\n                    dataIndex: `price.${item.id}`,\n                    label: `${item.name}`,\n                    routerLink: 'sw.product.detail',\n                    allowResize: true,\n                    currencyId: item.id,\n                    visible: item.isSystemDefault,\n                    align: 'right',\n                    useCustomSort: true,\n                };\n            });\n        },\n\n        productCriteria() {\n            const productCriteria = new Criteria(this.page, this.limit);\n\n            productCriteria.setTerm(this.term);\n            productCriteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, this.naturalSorting));\n            productCriteria.addAssociation('cover');\n            productCriteria.addAssociation('manufacturer');\n            productCriteria.addAssociation('media');\n            productCriteria.addAssociation('configuratorSettings.option');\n\n            this.filterCriteria.forEach(filter => {\n                productCriteria.addFilter(filter);\n            });\n\n            return productCriteria;\n        },\n\n        currencyCriteria() {\n            return new Criteria(1, 500);\n        },\n\n        showVariantModal() {\n            return !!this.productEntityVariantModal;\n        },\n\n        listFilterOptions() {\n            return {\n                'active-filter': {\n                    property: 'active',\n                    label: this.$tc('sw-product.filters.activeFilter.label'),\n                    placeholder: this.$tc('sw-product.filters.activeFilter.placeholder'),\n                },\n                'stock-filter': {\n                    property: 'stock',\n                    label: this.$tc('sw-product.filters.stockFilter.label'),\n                    numberType: 'int',\n                    step: 1,\n                    min: 0,\n                    fromPlaceholder: this.$tc('sw-product.filters.fromPlaceholder'),\n                    toPlaceholder: this.$tc('sw-product.filters.toPlaceholder'),\n                },\n                'product-without-images-filter': {\n                    property: 'media',\n                    label: this.$tc('sw-product.filters.imagesFilter.label'),\n                    placeholder: this.$tc('sw-product.filters.imagesFilter.placeholder'),\n                    optionHasCriteria: this.$tc('sw-product.filters.imagesFilter.textHasCriteria'),\n                    optionNoCriteria: this.$tc('sw-product.filters.imagesFilter.textNoCriteria'),\n                },\n                'manufacturer-filter': {\n                    property: 'manufacturer',\n                    label: this.$tc('sw-product.filters.manufacturerFilter.label'),\n                    placeholder: this.$tc('sw-product.filters.manufacturerFilter.placeholder'),\n                },\n                'visibilities-filter': {\n                    property: 'visibilities.salesChannel',\n                    label: this.$tc('sw-product.filters.salesChannelsFilter.label'),\n                    placeholder: this.$tc('sw-product.filters.salesChannelsFilter.placeholder'),\n                },\n                'categories-filter': {\n                    property: 'categories',\n                    label: this.$tc('sw-product.filters.categoriesFilter.label'),\n                    placeholder: this.$tc('sw-product.filters.categoriesFilter.placeholder'),\n                    displayPath: true,\n                },\n                'sales-filter': {\n                    property: 'sales',\n                    label: this.$tc('sw-product.filters.salesFilter.label'),\n                    digits: 20,\n                    min: 0,\n                    fromPlaceholder: this.$tc('sw-product.filters.fromPlaceholder'),\n                    toPlaceholder: this.$tc('sw-product.filters.toPlaceholder'),\n                },\n                'price-filter': {\n                    property: 'price',\n                    label: this.$tc('sw-product.filters.priceFilter.label'),\n                    digits: 20,\n                    min: 0,\n                    fromPlaceholder: this.$tc('sw-product.filters.fromPlaceholder'),\n                    toPlaceholder: this.$tc('sw-product.filters.toPlaceholder'),\n                },\n                'tags-filter': {\n                    property: 'tags',\n                    label: this.$tc('sw-product.filters.tagsFilter.label'),\n                    placeholder: this.$tc('sw-product.filters.tagsFilter.placeholder'),\n                },\n                'product-states-filter': {\n                    property: 'states',\n                    label: this.$tc('sw-product.filters.productStatesFilter.label'),\n                    placeholder: this.$tc('sw-product.filters.productStatesFilter.placeholder'),\n                    type: 'multi-select-filter',\n                    options: [\n                        {\n                            label: this.$tc('sw-product.filters.productStatesFilter.options.physical'),\n                            value: 'is-physical',\n                        },\n                        {\n                            label: this.$tc('sw-product.filters.productStatesFilter.options.digital'),\n                            value: 'is-download',\n                        },\n                    ],\n                },\n                'release-date-filter': {\n                    property: 'releaseDate',\n                    label: this.$tc('sw-product.filters.releaseDateFilter.label'),\n                    dateType: 'datetime-local',\n                    fromFieldLabel: null,\n                    toFieldLabel: null,\n                    showTimeframe: true,\n                },\n            };\n        },\n\n        listFilters() {\n            return this.filterFactory.create('product', this.listFilterOptions);\n        },\n\n        productBulkEditColumns() {\n            return this.productColumns.map(item => {\n                const { inlineEdit, ...restParams } = item;\n                return restParams;\n            });\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n\n        currencyFilter() {\n            return Shopware.Filter.getByName('currency');\n        },\n\n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        },\n\n        stockColorVariantFilter() {\n            return Shopware.Filter.getByName('stockColorVariant');\n        },\n    },\n\n    watch: {\n        productCriteria: {\n            handler() {\n                this.getList();\n            },\n            deep: true,\n        },\n    },\n\n    beforeRouteLeave(to, from, next) {\n        const goingToProductDetailPage = to.name === 'sw.product.detail.base';\n\n        if (goingToProductDetailPage && this.showVariantModal) {\n            this.closeVariantModal();\n        }\n\n        this.$nextTick(() => {\n            next();\n        });\n    },\n\n    methods: {\n        async getList() {\n            this.isLoading = true;\n\n            let criteria = await Shopware.Service('filterService')\n                .mergeWithStoredFilters(this.storeKey, this.productCriteria);\n\n            criteria = await this.addQueryScores(this.term, criteria);\n\n            // Clone product query to its variant\n            const variantCriteria = cloneDeep(criteria);\n            criteria.addFilter(Criteria.equals('product.parentId', null));\n            variantCriteria.addFilter(Criteria.not('AND', [Criteria.equals('product.parentId', null)]));\n\n            this.activeFilterNumber = criteria.filters.length - 1;\n\n            if (!this.entitySearchable) {\n                this.isLoading = false;\n                this.total = 0;\n\n                return;\n            }\n\n            if (this.freshSearchTerm) {\n                criteria.resetSorting();\n            }\n\n            try {\n                if (this.term) {\n                    const variants = await this.productRepository.search(variantCriteria);\n                    if (variants.length > 0) {\n                        const parentIds = [];\n\n                        variants.forEach(variant => {\n                            parentIds.push(variant.parentId);\n                        });\n\n                        criteria.addQuery(Criteria.equalsAny('id', parentIds), searchRankingPoint.HIGH_SEARCH_RANKING);\n                    }\n                }\n\n                const result = await Promise.all([\n                    this.productRepository.search(criteria),\n                    this.currencyRepository.search(this.currencyCriteria),\n                ]);\n\n                const products = result[0];\n                const currencies = result[1];\n\n                this.total = products.total;\n                this.products = products;\n\n                this.currencies = currencies;\n                this.isLoading = false;\n\n                this.selection = {};\n            } catch {\n                this.isLoading = false;\n            }\n        },\n\n        onInlineEditSave(promise, product) {\n            const productName = product.name || this.placeholder(product, 'name');\n\n            return promise.then(() => {\n                this.createNotificationSuccess({\n                    message: this.$tc('sw-product.list.messageSaveSuccess', 0, { name: productName }),\n                });\n            }).catch(() => {\n                this.getList();\n                this.createNotificationError({\n                    message: this.$tc('global.notification.notificationSaveErrorMessageRequiredFieldsInvalid'),\n                });\n            });\n        },\n\n        onInlineEditCancel(product) {\n            product.discardChanges();\n        },\n\n        updateTotal({ total }) {\n            this.total = total;\n        },\n\n        onChangeLanguage(languageId) {\n            Shopware.State.commit('context/setApiLanguageId', languageId);\n            this.getList();\n        },\n\n        updateCriteria(criteria) {\n            this.page = 1;\n\n            this.filterCriteria = criteria;\n        },\n\n        getCurrencyPriceByCurrencyId(currencyId, prices) {\n            const priceForProduct = prices.find(price => price.currencyId === currencyId);\n\n            if (priceForProduct) {\n                return priceForProduct;\n            }\n\n            return {\n                currencyId: null,\n                gross: null,\n                linked: true,\n                net: null,\n            };\n        },\n\n        getProductColumns() {\n            return [{\n                property: 'name',\n                label: this.$tc('sw-product.list.columnName'),\n                routerLink: 'sw.product.detail',\n                inlineEdit: 'string',\n                allowResize: true,\n                primary: true,\n            }, {\n                property: 'productNumber',\n                naturalSorting: true,\n                label: this.$tc('sw-product.list.columnProductNumber'),\n                align: 'right',\n                allowResize: true,\n            }, {\n                property: 'manufacturer.name',\n                label: this.$tc('sw-product.list.columnManufacturer'),\n                allowResize: true,\n            }, {\n                property: 'active',\n                label: this.$tc('sw-product.list.columnActive'),\n                inlineEdit: 'boolean',\n                allowResize: true,\n                align: 'center',\n            }, {\n                property: 'sales',\n                label: this.$tc('sw-product.list.columnSales'),\n                allowResize: true,\n                align: 'right',\n            },\n            ...this.currenciesColumns,\n            {\n                property: 'stock',\n                label: this.$tc('sw-product.list.columnInStock'),\n                inlineEdit: 'number',\n                allowResize: true,\n                align: 'right',\n            }, {\n                property: 'availableStock',\n                label: this.$tc('sw-product.list.columnAvailableStock'),\n                allowResize: true,\n                align: 'right',\n            }, {\n                property: 'createdAt',\n                label: this.$tc('sw-product.list.columnCreatedAt'),\n                allowResize: true,\n                visible: false,\n            }, {\n                property: 'updatedAt',\n                label: this.$tc('sw-product.list.columnUpdatedAt'),\n                allowResize: true,\n                visible: false,\n            }];\n        },\n\n        onDuplicate(referenceProduct) {\n            this.product = referenceProduct;\n            this.cloning = true;\n        },\n\n        onDuplicateFinish(duplicate) {\n            this.cloning = false;\n            this.product = null;\n\n            this.$nextTick(() => {\n                this.$router.push({ name: 'sw.product.detail', params: { id: duplicate.id } });\n            });\n        },\n\n        onColumnSort(column) {\n            this.onSortColumn(column);\n        },\n\n        productHasVariants(productEntity) {\n            const childCount = productEntity.childCount;\n\n            return childCount !== null && childCount > 0;\n        },\n\n        productIsDigital(productEntity) {\n            return productEntity.states && productEntity.states.includes('is-download');\n        },\n\n        openVariantModal(item) {\n            this.productEntityVariantModal = item;\n        },\n\n        closeVariantModal() {\n            this.productEntityVariantModal = null;\n        },\n\n        onBulkEditItems() {\n            let includesDigital = '0';\n            const digital = Object.values(this.selection).filter(product => product.states.includes('is-download'));\n            if (digital.length > 0) {\n                includesDigital = (digital.filter(product => product.isCloseout).length !== digital.length) ? '1' : '2';\n            }\n\n            this.$router.push({\n                name: 'sw.bulk.edit.product',\n                params: {\n                    parentId: 'null',\n                    includesDigital,\n                },\n            });\n        },\n\n        onBulkEditModalOpen() {\n            this.showBulkEditModal = true;\n        },\n\n        onBulkEditModalClose() {\n            this.showBulkEditModal = false;\n        },\n    },\n};\n","export default \"\\n{% block sw_product_list %}\\n<sw-page class=\\\"sw-product-list\\\">\\n\\n    \\n    {% block sw_product_list_search_bar %}\\n    <template #search-bar>\\n        <sw-search-bar\\n            initial-search-type=\\\"product\\\"\\n            :initial-search=\\\"term\\\"\\n            @search=\\\"onSearch\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_list_smart_bar_header %}\\n    <template #smart-bar-header>\\n        \\n        {% block sw_product_list_smart_bar_header_title %}\\n        <h2>\\n            \\n            {% block sw_product_list_smart_bar_header_title_text %}\\n            {{ $tc('sw-product.list.textProductOverview') }}\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_list_smart_bar_header_amount %}\\n            <span\\n                v-if=\\\"!isLoading\\\"\\n                class=\\\"sw-page__smart-bar-amount\\\"\\n            >\\n                ({{ total }})\\n            </span>\\n            {% endblock %}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_list_smart_bar_actions %}\\n    <template #smart-bar-actions>\\n        <sw-button-group\\n            v-tooltip.bottom=\\\"{\\n                message: $tc('sw-privileges.tooltip.warning'),\\n                disabled: acl.can('product.creator'),\\n                showOnDisabledElements: true\\n            }\\\"\\n            class=\\\"sw-product-list__add-button-group\\\"\\n            split-button\\n        >\\n            \\n            {% block sw_product_list_smart_bar_actions_add %}\\n            <sw-button\\n                v-tooltip=\\\"{\\n                    message: $tc('sw-privileges.tooltip.warning'),\\n                    disabled: acl.can('product.creator'),\\n                    showOnDisabledElements: true\\n                }\\\"\\n                class=\\\"sw-product-list__add-physical-button\\\"\\n                :router-link=\\\"{ name: 'sw.product.create', query: { creationStates: ['is-physical'] } }\\\"\\n                variant=\\\"primary\\\"\\n                :disabled=\\\"!acl.can('product.creator')\\\"\\n            >\\n                {{ $tc('sw-product.list.buttonAddProduct') }}\\n            </sw-button>\\n            {% endblock %}\\n            \\n            {% block sw_product_list_smart_bar_actions_add_download %}\\n            <sw-context-button class=\\\"sw-product-list__add-other-context-button\\\">\\n                <template #button>\\n                    \\n                    {% block sw_product_list_smart_bar_actions_add_download_button %}\\n                    <sw-button\\n                        class=\\\"sw-product-list__button-context-menu\\\"\\n                        square\\n                        variant=\\\"primary\\\"\\n                        :disabled=\\\"!acl.can('product.editor')\\\"\\n                    >\\n                        <sw-icon\\n                            name=\\\"regular-chevron-down-xs\\\"\\n                            size=\\\"16\\\"\\n                        />\\n                    </sw-button>\\n                    {% endblock %}\\n                </template>\\n\\n                \\n                {% block sw_product_list_smart_bar_actions_add_download_context_menu_item_downloadable_product %}\\n                <sw-context-menu-item\\n                    v-tooltip=\\\"{\\n                        message: $tc('sw-privileges.tooltip.warning'),\\n                        disabled: acl.can('product.creator'),\\n                        showOnDisabledElements: true\\n                    }\\\"\\n                    :router-link=\\\"{ name: 'sw.product.create', query: { creationStates: ['is-download'] } }\\\"\\n                    :disabled=\\\"!acl.can('product.creator')\\\"\\n                >\\n                    {{ $tc('sw-product.list.buttonAddDownloadableProduct') }}\\n                </sw-context-menu-item>\\n                {% endblock %}\\n            </sw-context-button>\\n            {% endblock %}\\n        </sw-button-group>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_list_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch @on-change=\\\"onChangeLanguage\\\" />\\n    </template>\\n    {% endblock %}\\n\\n    <template #content>\\n        \\n        {% block sw_product_list_content %}\\n        <div class=\\\"sw-product-list__content\\\">\\n\\n            \\n            {% block sw_product_list_grid %}\\n            <sw-entity-listing\\n                v-if=\\\"entitySearchable\\\"\\n                ref=\\\"swProductGrid\\\"\\n                class=\\\"sw-product-list-grid\\\"\\n                :items=\\\"products\\\"\\n                :columns=\\\"productColumns\\\"\\n                :repository=\\\"productRepository\\\"\\n                detail-route=\\\"sw.product.detail\\\"\\n                :show-selection=\\\"true\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                identifier=\\\"sw-product-list\\\"\\n                :allow-edit=\\\"acl.can('product.editor')\\\"\\n                :allow-delete=\\\"acl.can('product.deleter')\\\"\\n                :allow-inline-edit=\\\"acl.can('product.editor')\\\"\\n                :sort-by=\\\"currentSortBy\\\"\\n                :sort-direction=\\\"sortDirection\\\"\\n                :natural-sorting=\\\"naturalSorting\\\"\\n                :criteria-limit=\\\"limit\\\"\\n                :disable-data-fetching=\\\"true\\\"\\n                :allow-bulk-edit=\\\"acl.can('product.editor')\\\"\\n                @column-sort=\\\"onColumnSort\\\"\\n                @page-change=\\\"onPageChange\\\"\\n                @inline-edit-save=\\\"onInlineEditSave\\\"\\n                @selection-change=\\\"updateSelection\\\"\\n                @update-records=\\\"updateTotal\\\"\\n                @bulk-edit-modal-open=\\\"onBulkEditModalOpen\\\"\\n            >\\n                \\n                {% block sw_product_list_grid_columns %}\\n                \\n                {% block sw_product_list_grid_columns_name_preview %}\\n                <template #preview-name=\\\"{ item }\\\">\\n                    <sw-media-preview-v2 :source=\\\"item.cover ? item.cover.media : null\\\" />\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_list_grid_columns_name %}\\n                <template #column-name=\\\"{ item, isInlineEdit }\\\">\\n                    \\n                    {% block sw_product_list_grid_columns_name_inline_edit %}\\n                    <sw-text-field\\n                        v-if=\\\"isInlineEdit\\\"\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"item.name\\\"\\n                        {% else %}\\n                        v-model=\\\"item.name\\\"\\n                        {% endif %}\\n                        size=\\\"small\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_product_list_grid_columns_name_content %}\\n                    <div v-else>\\n                        \\n                        {% block sw_product_list_grid_columns_name_content_variant_button %}\\n                        <sw-button\\n                            v-if=\\\"productHasVariants(item)\\\"\\n                            v-tooltip=\\\"{ message: $tc('sw-product.list.variantIndicatorTooltip') }\\\"\\n                            class=\\\"sw-product-list__variant-indicator\\\"\\n                            size=\\\"x-small\\\"\\n                            @click=\\\"openVariantModal(item)\\\"\\n                        >\\n                            <sw-icon\\n                                name=\\\"regular-variants\\\"\\n                                size=\\\"14px\\\"\\n                            />\\n                        </sw-button>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_product_list_grid_columns_name_content_link %}\\n                        <router-link :to=\\\"{ name: 'sw.product.detail', params: { id: item.id } }\\\">\\n                            {{ item.translated ? item.translated.name : item.name }}\\n                        </router-link>\\n                        {% endblock %}\\n\\n                        <sw-label\\n                            v-if=\\\"productIsDigital(item)\\\"\\n                            class=\\\"sw-product-list__digital-indicator\\\"\\n                        >\\n                            {{ $tc('sw-product.variations.generatedListColumnContentProductState.is-download') }}\\n                        </sw-label>\\n                    </div>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_list_grid_columns_active %}\\n                <template #column-active=\\\"{ item, isInlineEdit }\\\">\\n                    \\n                    {% block sw_product_list_grid_columns_active_inline_edit %}\\n                    <template v-if=\\\"isInlineEdit\\\">\\n                        <sw-checkbox-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"item.active\\\"\\n                            {% else %}\\n                            v-model=\\\"item.active\\\"\\n                            {% endif %}\\n                        />\\n                    </template>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_product_list_grid_columns_active_content %}\\n                    <template v-else>\\n                        <sw-icon\\n                            v-if=\\\"item.active\\\"\\n                            name=\\\"regular-checkmark-xs\\\"\\n                            small\\n                            class=\\\"is--active\\\"\\n                        />\\n                        <sw-icon\\n                            v-else\\n                            name=\\\"regular-times-s\\\"\\n                            small\\n                            class=\\\"is--inactive\\\"\\n                        />\\n                    </template>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_list_grid_columns_sales %}\\n                <template #column-sales=\\\"{ item }\\\">\\n                    \\n                    {% block sw_product_list_grid_columns_sales_content %}\\n                    <template v-if=\\\"productHasVariants(item)\\\">\\n                        -\\n                    </template>\\n                    <template v-else>\\n                        {{ item.sales }}\\n                    </template>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_list_grid_columns_price %}\\n                <template\\n                    v-for=\\\"currency in currencies\\\"\\n                    #[`column-price-${currency.isoCode}`]=\\\"{ item }\\\"\\n                >\\n                    {{ currencyFilter(getCurrencyPriceByCurrencyId(currency.id, item.price).gross, currency.isoCode) }}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_list_grid_columns_stock %}\\n                <template #column-stock=\\\"{ item, isInlineEdit, compact }\\\">\\n                    \\n                    {% block sw_product_list_grid_columns_stock_inline_edit %}\\n                    <template v-if=\\\"isInlineEdit\\\">\\n                        <sw-number-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"item.stock\\\"\\n                            {% else %}\\n                            v-model=\\\"item.stock\\\"\\n                            {% endif %}\\n                            :size=\\\"compact ? 'small' : 'default'\\\"\\n                        />\\n                    </template>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_product_list_grid_columns_stock_content %}\\n                    <template v-else>\\n                        {{ item.stock }}\\n                        <sw-color-badge :variant=\\\"stockColorVariantFilter(item.stock)\\\" />\\n                    </template>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                <template #column-createdAt=\\\"{ item }\\\">\\n                    {{ dateFilter(item.createdAt) }}\\n                </template>\\n\\n                <template #column-updatedAt=\\\"{ item }\\\">\\n                    {{ dateFilter(item.updatedAt) }}\\n                </template>\\n\\n                \\n                {% block sw_product_list_grid_columns_actions %}\\n                <template #more-actions=\\\"{ item }\\\">\\n                    \\n                    {% block sw_product_list_grid_columns_actions_duplicate %}\\n                    <sw-context-menu-item\\n                        class=\\\"sw-product-list-grid__duplicate-action\\\"\\n                        :disabled=\\\"item.parentId != null || !acl.can('product.creator')\\\"\\n                        @click=\\\"onDuplicate(item)\\\"\\n                    >\\n                        {{ $tc('sw-product.list.buttonDuplicate') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_product_list_grid_columns_actions_open_variant %}\\n                    <sw-context-menu-item\\n                        v-if=\\\"productHasVariants(item)\\\"\\n                        @click=\\\"openVariantModal(item)\\\"\\n                    >\\n                        {{ $tc('sw-product.list.contextMenuShowVariants') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_list_bulk_edit_modal %}\\n                <template #bulk-edit-modal=\\\"{ selection }\\\">\\n                    <sw-bulk-edit-modal\\n                        v-if=\\\"showBulkEditModal\\\"\\n                        class=\\\"sw-product-bulk-edit-modal\\\"\\n                        :selection=\\\"selection\\\"\\n                        :bulk-grid-edit-columns=\\\"productBulkEditColumns\\\"\\n                        @edit-items=\\\"onBulkEditItems\\\"\\n                        @modal-close=\\\"showBulkEditModal = false\\\"\\n                    >\\n                        \\n                        {% block sw_product_list_bulk_edit_grid_columns_name %}\\n                        <template #column-name=\\\"{ item }\\\">\\n                            <router-link\\n                                :to=\\\"{ name: 'sw.product.detail', params: { id: item.id } }\\\"\\n                                target=\\\"_blank\\\"\\n                                rel=\\\"noreferrer noopener\\\"\\n                            >\\n                                {{ item.translated ? item.translated.name : item.name }}\\n                            </router-link>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_product_list_bulk_edit_grid_columns_active %}\\n                        <template #column-active=\\\"{ item }\\\">\\n                            <sw-icon\\n                                small\\n                                :name=\\\"item.active ? 'regular-checkmark-xs' : 'regular-times-s'\\\"\\n                                :color=\\\"item.active ? '#37d046' : '#de294c'\\\"\\n                            />\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_product_list_bulk_edit_grid_columns_price %}\\n                        <template\\n                            v-for=\\\"currency in currencies\\\"\\n                            #[`column-price-${currency.isoCode}`]=\\\"{ item }\\\"\\n                        >\\n                            {{ currencyFilter(getCurrencyPriceByCurrencyId(currency.id, item.price).gross, currency.isoCode) }}\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_product_list_bulk_edit_grid_columns_stock %}\\n                        <template #column-stock=\\\"{ item }\\\">\\n                            {{ item.stock }}\\n                            <sw-color-badge :variant=\\\"stockColorVariantFilter(item.stock)\\\" />\\n                        </template>\\n                        {% endblock %}\\n                    </sw-bulk-edit-modal>\\n                </template>\\n                {% endblock %}\\n            </sw-entity-listing>\\n\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_list_empty_state %}\\n            <template v-if=\\\"!isLoading && !total\\\">\\n                <sw-empty-state\\n                    v-if=\\\"filterCriteria.length || isValidTerm(term)\\\"\\n                    :title=\\\"$tc('sw-empty-state.messageNoResultTitle')\\\"\\n                >\\n                    <template #icon>\\n                        <img\\n                            :src=\\\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\\\"\\n                            :alt=\\\"$tc('sw-empty-state.messageNoResultTitle')\\\"\\n                        >\\n                    </template>\\n\\n                    <template #default>\\n                        {{ $tc('sw-empty-state.messageNoResultSublineBefore') }}\\n                        <router-link\\n                            class=\\\"sw-empty-state__description-link\\\"\\n                            :to=\\\"{ name: 'sw.profile.index.searchPreferences' }\\\"\\n                        >\\n                            {{ $tc('sw-empty-state.messageNoResultSublineLink') }}\\n                        </router-link>\\n                        {{ $tc('sw-empty-state.messageNoResultSublineAfter') }}\\n                    </template>\\n                </sw-empty-state>\\n                <sw-empty-state\\n                    v-else\\n                    :title=\\\"$tc('sw-product.list.messageEmpty')\\\"\\n                >\\n                    <template #icon>\\n                        <img\\n                            :src=\\\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\\\"\\n                            :alt=\\\"$tc('sw-product.list.messageEmpty')\\\"\\n                        >\\n                    </template>\\n                </sw-empty-state>\\n            </template>\\n            {% endblock %}\\n\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_list_content_clone_modal %}\\n        <sw-product-clone-modal\\n            v-if=\\\"cloning\\\"\\n            :product=\\\"product\\\"\\n            @clone-finish=\\\"onDuplicateFinish\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_list_content_variant_modal %}\\n        <sw-product-variant-modal\\n            v-if=\\\"showVariantModal\\\"\\n            :product-entity=\\\"productEntityVariantModal\\\"\\n            @modal-close=\\\"closeVariantModal\\\"\\n        />\\n        {% endblock %}\\n    </template>\\n\\n    \\n    {% block sw_product_list_sidebar %}\\n    <template #sidebar>\\n        <sw-sidebar>\\n            \\n            {% block sw_product_list_sidebar_refresh %}\\n            <sw-sidebar-item\\n                icon=\\\"regular-undo\\\"\\n                :title=\\\"$tc('sw-product.list.titleSidebarItemRefresh')\\\"\\n                @click=\\\"onRefresh\\\"\\n            />\\n            {% endblock %}\\n\\n            <sw-sidebar-filter-panel\\n                entity=\\\"product\\\"\\n                :store-key=\\\"storeKey\\\"\\n                :active-filter-number=\\\"activeFilterNumber\\\"\\n                :filters=\\\"listFilters\\\"\\n                :defaults=\\\"defaultFilters\\\"\\n                @criteria-changed=\\\"updateCriteria\\\"\\n            />\\n        </sw-sidebar>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-list.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6215ce7f\", content, true, {});"],"sourceRoot":""}