{"version":3,"sources":["webpack:///./src/module/sw-flow/component/modals/sw-flow-set-order-state-modal/index.js","webpack:///./src/module/sw-flow/component/modals/sw-flow-set-order-state-modal/sw-flow-set-order-state-modal.html.twig"],"names":["_Shopware","Shopware","Component","Mixin","Criteria","Data","mapState","getComponentHelper","template","inject","mixins","getByName","props","sequence","type","Object","required","data","paymentOptions","deliveryOptions","orderOptions","config","order","order_delivery","order_transaction","force_transition","computed","_objectSpread","stateMachineStateRepository","this","repositoryFactory","create","stateMachineStateCriteria","criteria","addSorting","field","addAssociation","addFilter","equalsAny","created","createdComponent","methods","_this$sequence","_this$sequence2","stateMachineState","length","generateOptions","getAllStates","_this","search","then","State","commit","buildTransitionOptions","stateMachineName","allTransitions","filter","entry","stateMachine","technicalName","map","state","id","name","translated","onClose","$emit","onAddAction","createNotificationError","message","$tc"],"mappings":"stBAEA,IAAAA,EAA6BC,SAArBC,EAASF,EAATE,UAAWC,EAAKH,EAALG,MACXC,EAAaH,SAASI,KAAtBD,SACAE,EAAaJ,EAAUK,qBAAvBD,SAMO,WACXE,SCXW,sqGDaXC,OAAQ,CACJ,qBAGJC,OAAQ,CACJP,EAAMQ,UAAU,iBAGpBC,MAAO,CACHC,SAAU,CACNC,KAAMC,OACNC,UAAU,IAIlBC,KAAI,WACA,MAAO,CACHC,eAAgB,GAChBC,gBAAiB,GACjBC,aAAc,GACdC,OAAQ,CACJC,MAAO,GACPC,eAAgB,GAChBC,kBAAmB,GACnBC,kBAAkB,KAK9BC,SAAQC,EAAA,CACJC,4BAA2B,WACvB,OAAOC,KAAKC,kBAAkBC,OAAO,wBAGzCC,0BAAyB,WACrB,IAAMC,EAAW,IAAI7B,EAAS,EAAG,MAUjC,OATA6B,EAASC,WAAW,CAAEC,MAAO,OAAQb,MAAO,QAC5CW,EAASG,eAAe,gBACxBH,EAASI,UACLjC,EAASkC,UACL,iDACA,CAAC,cAAe,0BAA2B,0BAI5CL,IAGR3B,EAAS,cAAe,CAAC,uBAGhCiC,QAAO,WACHV,KAAKW,oBAGTC,QAAS,CACLD,iBAAgB,WAAI,IAADE,EAAAC,EACfd,KAAKR,OAAsB,QAAbqB,EAAAb,KAAKhB,gBAAQ,IAAA6B,GAAbA,EAAerB,OAAMM,EAAA,GAAqB,QAArBgB,EAAQd,KAAKhB,gBAAQ,IAAA8B,OAAA,EAAbA,EAAetB,QAAWQ,KAAKR,OAErEQ,KAAKe,kBAAkBC,OAGxBhB,KAAKiB,gBAAgBjB,KAAKe,mBAF1Bf,KAAKkB,gBAMbA,aAAY,WAAI,IAADC,EAAA,KACX,OAAOnB,KAAKD,4BAA4BqB,OAAOpB,KAAKG,2BAC/CkB,MAAK,SAAAjC,GACF+B,EAAKF,gBAAgB7B,GACrBhB,SAASkD,MAAMC,OAAO,mCAAoCnC,OAItE6B,gBAAe,SAAC7B,GACZY,KAAKX,eAAiBW,KAAKwB,uBACvB,0BACApC,GAGJY,KAAKV,gBAAkBU,KAAKwB,uBACxB,uBACApC,GAGJY,KAAKT,aAAeS,KAAKwB,uBACrB,cACApC,IAIRoC,uBAAsB,SAACC,EAAkBC,GAKrC,OAJgBA,EAAeC,QAAO,SAACC,GACnC,OAAOA,EAAMC,aAAaC,gBAAkBL,KAGjCM,KAAI,SAACC,GAChB,MAAO,CACHC,GAAID,EAAMF,cACVI,KAAMF,EAAMG,WAAWD,UAKnCE,QAAO,WACHpC,KAAKqC,MAAM,gBAGfC,YAAW,WACP,GAAKtC,KAAKR,OAAOC,OAAUO,KAAKR,OAAOE,gBAAmBM,KAAKR,OAAOG,kBAAtE,CAOA,IAAMX,EAAQc,IAAA,GACPE,KAAKhB,UAAQ,IAChBQ,OAAQQ,KAAKR,SAGjBQ,KAAKqC,MAAM,iBAAkBrD,QAXzBgB,KAAKuC,wBAAwB,CACzBC,QAASxC,KAAKyC,IAAI","file":"static/js/098e7f7adf60acdcc991.js","sourcesContent":["import template from './sw-flow-set-order-state-modal.html.twig';\n\nconst { Component, Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { mapState } = Component.getComponentHelper();\n\n/**\n * @private\n * @package services-settings\n */\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        sequence: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            paymentOptions: [],\n            deliveryOptions: [],\n            orderOptions: [],\n            config: {\n                order: '',\n                order_delivery: '',\n                order_transaction: '',\n                force_transition: false,\n            },\n        };\n    },\n\n    computed: {\n        stateMachineStateRepository() {\n            return this.repositoryFactory.create('state_machine_state');\n        },\n\n        stateMachineStateCriteria() {\n            const criteria = new Criteria(1, null);\n            criteria.addSorting({ field: 'name', order: 'ASC' });\n            criteria.addAssociation('stateMachine');\n            criteria.addFilter(\n                Criteria.equalsAny(\n                    'state_machine_state.stateMachine.technicalName',\n                    ['order.state', 'order_transaction.state', 'order_delivery.state'],\n                ),\n            );\n\n            return criteria;\n        },\n\n        ...mapState('swFlowState', ['stateMachineState']),\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.config = this.sequence?.config ? { ...this.sequence?.config } : this.config;\n\n            if (!this.stateMachineState.length) {\n                this.getAllStates();\n            } else {\n                this.generateOptions(this.stateMachineState);\n            }\n        },\n\n        getAllStates() {\n            return this.stateMachineStateRepository.search(this.stateMachineStateCriteria)\n                .then(data => {\n                    this.generateOptions(data);\n                    Shopware.State.commit('swFlowState/setStateMachineState', data);\n                });\n        },\n\n        generateOptions(data) {\n            this.paymentOptions = this.buildTransitionOptions(\n                'order_transaction.state',\n                data,\n            );\n\n            this.deliveryOptions = this.buildTransitionOptions(\n                'order_delivery.state',\n                data,\n            );\n\n            this.orderOptions = this.buildTransitionOptions(\n                'order.state',\n                data,\n            );\n        },\n\n        buildTransitionOptions(stateMachineName, allTransitions) {\n            const entries = allTransitions.filter((entry) => {\n                return entry.stateMachine.technicalName === stateMachineName;\n            });\n\n            return entries.map((state) => {\n                return {\n                    id: state.technicalName,\n                    name: state.translated.name,\n                };\n            });\n        },\n\n        onClose() {\n            this.$emit('modal-close');\n        },\n\n        onAddAction() {\n            if (!this.config.order && !this.config.order_delivery && !this.config.order_transaction) {\n                this.createNotificationError({\n                    message: this.$tc('sw-flow.modals.status.messageNoStatusError'),\n                });\n                return;\n            }\n\n            const sequence = {\n                ...this.sequence,\n                config: this.config,\n            };\n\n            this.$emit('process-finish', sequence);\n        },\n    },\n};\n","export default \"\\n{% block sw_flow_set_order_state_modal %}\\n<sw-modal\\n    class=\\\"sw-flow-set-order-state-modal\\\"\\n    :title=\\\"$tc('sw-flow.modals.status.titleSetStatus')\\\"\\n    :closable=\\\"false\\\"\\n    @modal-close=\\\"onClose\\\"\\n>\\n    \\n    {% block sw_flow_set_order_state_modal_content %}\\n    \\n    {% block sw_flow_set_order_state_modal_payment_status %}\\n    <sw-select-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"config.order_transaction\\\"\\n        {% else %}\\n        v-model=\\\"config.order_transaction\\\"\\n        {% endif %}\\n        class=\\\"sw-flow-set-order-state-modal__payment-status\\\"\\n        :options=\\\"paymentOptions\\\"\\n        :label=\\\"$tc('sw-flow.modals.status.labelPaymentStatus')\\\"\\n        :placeholder=\\\"$tc('sw-flow.modals.status.placeholderPaymentStatus')\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_set_order_state_modal_delivery_status %}\\n    <sw-select-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"config.order_delivery\\\"\\n        {% else %}\\n        v-model=\\\"config.order_delivery\\\"\\n        {% endif %}\\n        class=\\\"sw-flow-set-order-state-modal__delivery-status\\\"\\n        :options=\\\"deliveryOptions\\\"\\n        :label=\\\"$tc('sw-flow.modals.status.labelDeliveryStatus')\\\"\\n        :placeholder=\\\"$tc('sw-flow.modals.status.placeholderDeliveryStatus')\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_set_order_state_modal_order_status %}\\n    <sw-select-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"config.order\\\"\\n        {% else %}\\n        v-model=\\\"config.order\\\"\\n        {% endif %}\\n        class=\\\"sw-flow-set-order-state-modal__order-status\\\"\\n        :options=\\\"orderOptions\\\"\\n        :label=\\\"$tc('sw-flow.modals.status.labelOrderStatus')\\\"\\n        :placeholder=\\\"$tc('sw-flow.modals.status.placeholderOrderStatus')\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_set_order_state_modal_force_transition %}\\n    <sw-checkbox-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"config.force_transition\\\"\\n        {% else %}\\n        v-model=\\\"config.force_transition\\\"\\n        {% endif %}\\n        class=\\\"sw-flow-set-order-state-modal__force-transition\\\"\\n        :label=\\\"$tc('sw-flow.modals.status.forceTransition')\\\"\\n        :help-text=\\\"$tc('sw-flow.modals.status.forceTransitionHelpText')\\\"\\n    />\\n    {% endblock %}\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_set_order_state_modal_footer %}\\n    <template #modal-footer>\\n        \\n        {% block sw_flow_set_order_state_modal_footer_cancel_button %}\\n        <sw-button\\n            class=\\\"sw-flow-set-order-state-modal__cancel-button\\\"\\n            size=\\\"small\\\"\\n            @click=\\\"onClose\\\"\\n        >\\n            {{ $tc('global.default.cancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_set_order_state_modal_footer_save_button %}\\n        <sw-button\\n            class=\\\"sw-flow-set-order-state-modal__save-button\\\"\\n            variant=\\\"primary\\\"\\n            size=\\\"small\\\"\\n            @click=\\\"onAddAction\\\"\\n        >\\n            {{ sequence.id ? $tc('sw-flow.modals.buttonSaveAction') : $tc('sw-flow.modals.buttonAddAction') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n</sw-modal>\\n{% endblock %}\\n\";"],"sourceRoot":""}