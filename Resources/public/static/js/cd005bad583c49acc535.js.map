{"version":3,"sources":["webpack:///./src/module/sw-customer/view/sw-customer-detail-base/sw-customer-detail-base.html.twig","webpack:///./src/module/sw-customer/view/sw-customer-detail-base/index.js"],"names":["Criteria","Shopware","Data","template","inject","props","customer","type","Object","required","customerEditMode","Boolean","default","isLoading","data","customerCustomFieldSets","computed","customFieldSetRepository","this","repositoryFactory","create","customFieldSetCriteria","criteria","addFilter","equals","getAssociation","addSorting","naturalSorting","created","createdComponent","methods","_this","State","commit","id","search","then","customFieldSets"],"mappings":"4HAAe,ICMPA,EAAaC,SAASC,KAAtBF,SAGO,WACXG,SDVW,yyECYXC,OAAQ,CAAC,qBAETC,MAAO,CACHC,SAAU,CACNC,KAAMC,OACNC,UAAU,GAGdC,iBAAkB,CACdH,KAAMI,QACNF,UAAU,EACVG,SAAS,GAGbC,UAAW,CACPN,KAAMI,QACNF,UAAU,EACVG,SAAS,IAIjBE,KAAI,WACA,MAAO,CACHC,wBAAyB,OAIjCC,SAAU,CACNC,yBAAwB,WACpB,OAAOC,KAAKC,kBAAkBC,OAAO,qBAGzCC,uBAAsB,WAClB,IAAMC,EAAW,IAAItB,EAAS,EAAG,IAOjC,OALAsB,EACKC,UAAUvB,EAASwB,OAAO,uBAAwB,aACvDF,EAASG,eAAe,gBACnBC,WAAW1B,EAAS2B,eAAe,+BAEjCL,IAIfM,QAAO,WACHV,KAAKW,oBAGTC,QAAS,CACLD,iBAAgB,WAAI,IAADE,EAAA,KACf9B,SAAS+B,MAAMC,OAAO,8BAA+Bf,KAAKZ,SAAS4B,GAAK,CAAChB,KAAKZ,SAAS4B,IAAM,IAE7FhB,KAAKD,yBAAyBkB,OAAOjB,KAAKG,wBACrCe,MAAK,SAACC,GACHN,EAAKhB,wBAA0BsB","file":"static/js/cd005bad583c49acc535.js","sourcesContent":["export default \"\\n{% block sw_customer_detail_base %}\\n<div class=\\\"sw-customer-detail-base\\\">\\n    \\n    {% block sw_customer_detail_base_info_holder %}\\n    <div class=\\\"sw-customer-detail-base__info-holder\\\">\\n\\n        \\n        {% block sw_customer_detail_base_info_card %}\\n        <sw-customer-card\\n            :title=\\\"$tc('sw-customer.detailBase.labelAccountCard')\\\"\\n            :customer=\\\"customer\\\"\\n            :edit-mode=\\\"customerEditMode\\\"\\n            :is-loading=\\\"isLoading\\\"\\n        >\\n            \\n            {% block sw_customer_detail_base_info_metadata %}\\n            <sw-customer-base-info\\n                :customer=\\\"customer\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :customer-edit-mode=\\\"customerEditMode\\\"\\n            />\\n            {% endblock %}\\n        </sw-customer-card>\\n        {% endblock %}\\n\\n        \\n        {% block sw_customer_detail_base_default_addresses_card %}\\n        <sw-card\\n            v-if=\\\"customer.defaultShippingAddress || customer.defaultBillingAddress\\\"\\n            :title=\\\"$tc('sw-customer.detailBase.labelAddressesCard')\\\"\\n            position-identifier=\\\"sw-customer-detail-base-default-addresses\\\"\\n            class=\\\"sw-customer-detail-base__default-addresses\\\"\\n            :is-loading=\\\"customer.isLoading\\\"\\n        >\\n            \\n            {% block sw_customer_detail_base_default_addresses %}\\n            <template #grid>\\n                <sw-customer-default-addresses\\n                    :customer-edit-mode=\\\"customerEditMode\\\"\\n                    :customer=\\\"customer\\\"\\n                />\\n            </template>\\n            {% endblock %}\\n        </sw-card>\\n        {% endblock %}\\n\\n        \\n        {% block sw_customer_detail_custom_field_sets %}\\n        <sw-card\\n            v-if=\\\"!!customerCustomFieldSets && customerCustomFieldSets.length > 0\\\"\\n            position-identifier=\\\"sw-customer-detail-base-custom-field-sets\\\"\\n            :title=\\\"$tc('sw-settings-custom-field.general.mainMenuItemGeneral')\\\"\\n            :is-loading=\\\"customer.isLoading\\\"\\n        >\\n            <sw-custom-field-set-renderer\\n                :entity=\\\"customer\\\"\\n                :disabled=\\\"!customerEditMode\\\"\\n                :sets=\\\"customerCustomFieldSets\\\"\\n            />\\n        </sw-card>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","import template from './sw-customer-detail-base.html.twig';\n\n/**\n * @package checkout\n */\n\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    props: {\n        customer: {\n            type: Object,\n            required: true,\n        },\n\n        customerEditMode: {\n            type: Boolean,\n            required: true,\n            default: false,\n        },\n\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            customerCustomFieldSets: null,\n        };\n    },\n\n    computed: {\n        customFieldSetRepository() {\n            return this.repositoryFactory.create('custom_field_set');\n        },\n\n        customFieldSetCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria\n                .addFilter(Criteria.equals('relations.entityName', 'customer'));\n            criteria.getAssociation('customFields')\n                .addSorting(Criteria.naturalSorting('config.customFieldPosition'));\n\n            return criteria;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Shopware.State.commit('shopwareApps/setSelectedIds', this.customer.id ? [this.customer.id] : []);\n\n            this.customFieldSetRepository.search(this.customFieldSetCriteria)\n                .then((customFieldSets) => {\n                    this.customerCustomFieldSets = customFieldSets;\n                });\n        },\n    },\n};\n"],"sourceRoot":""}