{"version":3,"sources":["webpack:///./src/module/sw-order/component/sw-order-details-state-card/sw-order-details-state-card.html.twig","webpack:///./src/module/sw-order/component/sw-order-details-state-card/index.js","webpack:///./src/module/sw-order/component/sw-order-details-state-card/sw-order-details-state-card.scss"],"names":["Criteria","Shopware","Data","template","inject","mixins","props","order","type","Object","required","title","String","default","entity","stateLabel","isLoading","Boolean","disabled","data","statesLoading","stateOptions","lastStateChange","currentActionName","showStateChangeModal","stateChangeModalConfirmed","computed","stateMachineStateRepository","this","repositoryFactory","create","stateMachineHistoryRepository","stateMachineStateCriteria","criteria","addSorting","field","addAssociation","addFilter","equals","concat","entityName","stateMachineHistoryCriteria","id","getEntityName","stateName","stateMachineState","translated","name","stateSelectBackgroundStyle","technicalName","stateStyleDataProviderService","getStyle","selectBackgroundStyle","stateTransitionMethod","orderStateMachineService","transitionOrderState","bind","transitionOrderTransactionState","transitionOrderDeliveryState","created","createdComponent","methods","getTransitionOptions","getLastChange","onShowStatusHistory","$emit","_this","Promise","all","search","stateMachineService","getState","then","buildTransitionOptions","transitions","resolve","allTransitions","possibleTransitions","options","map","state","index","forEach","option","transitionToState","filter","transition","toStateName","length","actionName","onStateSelected","stateType","modalConfirmed","createStateChangeErrorNotification","$tc","onLeaveModalClose","onLeaveModalConfirm","docIds","_this2","sendMail","arguments","undefined","documentIds","catch","error","finally","errorMessage","createNotificationError","message","_this3","result","first","content","__esModule","module","i","locals","exports","add"],"mappings":"wIAAe,ICOPA,EAAaC,SAASC,KAAtBF,SAGO,WACXG,SDXW,gyGCaXC,OAAQ,CACJ,MACA,oBACA,2BACA,sBACA,iCAGJC,OAAQ,CACJ,gBAGJC,MAAO,CACHC,MAAO,CACHC,KAAMC,OACNC,UAAU,GAEdC,MAAO,CACHH,KAAMI,OACNF,UAAU,EACVG,QAAS,IAEbC,OAAQ,CACJN,KAAMC,OACNC,UAAU,GAEdK,WAAY,CACRP,KAAMI,OACNF,UAAU,EACVG,QAAS,IAEbG,UAAW,CACPR,KAAMS,QACNP,UAAU,EACVG,SAAS,GAEbK,SAAU,CACNV,KAAMS,QACNP,UAAU,EACVG,SAAS,IAIjBM,KAAI,WACA,MAAO,CACHC,eAAe,EACfC,aAAc,GACdC,gBAAiB,KACjBC,kBAAmB,KACnBC,sBAAsB,EACtBC,2BAA2B,IAInCC,SAAU,CACNC,4BAA2B,WACvB,OAAOC,KAAKC,kBAAkBC,OAAO,wBAGzCC,8BAA6B,WACzB,OAAOH,KAAKC,kBAAkBC,OAAO,0BAGzCE,0BAAyB,WACrB,IAAMC,EAAW,IAAIjC,EAAS,EAAG,MAUjC,OATAiC,EAASC,WAAW,CAAEC,MAAO,OAAQ5B,MAAO,QAC5C0B,EAASG,eAAe,gBACxBH,EAASI,UACLrC,EAASsC,OACL,iDAAiD,GAADC,OAC7CX,KAAKY,WAAU,YAInBP,GAGXQ,4BAA2B,WACvB,IAAMR,EAAW,IAAIjC,EAAS,EAAG,GAOjC,OALAiC,EAASI,UAAUrC,EAASsC,OAAO,cAAeV,KAAKd,OAAO4B,KAC9DT,EAASI,UAAUrC,EAASsC,OAAO,aAAcV,KAAKY,aACtDP,EAASG,eAAe,QACxBH,EAASC,WAAW,CAAEC,MAAO,YAAa5B,MAAO,SAE1C0B,GAGXO,WAAU,WACN,OAAOZ,KAAKd,OAAO6B,iBAGvBC,UAAS,WACL,OAAOhB,KAAKd,OAAO+B,kBAAkBC,WAAWC,MAGpDC,2BAA0B,WACtB,IAAMC,EAAgBrB,KAAKd,OAAO+B,kBAAkBI,cAEpD,OAAOrB,KAAKsB,8BAA8BC,SAAS,GAADZ,OAC3CX,KAAKY,WAAU,UAClBS,GACFG,uBAGNC,sBAAqB,WACjB,OAAQzB,KAAKY,YACT,IAAK,QACD,OAAOZ,KAAK0B,yBAAyBC,qBAAqBC,KAAK5B,KAAK0B,0BACxE,IAAK,oBACD,OAAO1B,KAAK0B,yBAAyBG,gCAAgCD,KAAK5B,KAAK0B,0BACnF,IAAK,iBACD,OAAO1B,KAAK0B,yBAAyBI,6BAA6BF,KAAK5B,KAAK0B,0BAChF,QACI,OAAO,QAKvBK,QAAO,WACH/B,KAAKgC,oBAGTC,QAAS,CACLD,iBAAgB,WACZhC,KAAKkC,uBACLlC,KAAKmC,iBAGTC,oBAAmB,WACfpC,KAAKqC,MAAM,wBAGfH,qBAAoB,WAAI,IAADI,EAAA,KAGnB,OAFAtC,KAAKR,eAAgB,EAEd+C,QAAQC,IAAI,CACfxC,KAAKD,4BAA4B0C,OAAOzC,KAAKI,2BAC7CJ,KAAK0C,oBAAoBC,SAAS3C,KAAKY,WAAYZ,KAAKd,OAAO4B,MAChE8B,MAAK,SAACrD,GAOL,OANA+C,EAAK7C,aAAe6C,EAAKO,uBACrBtD,EAAK,GACLA,EAAK,GAAGA,KAAKuD,aAGjBR,EAAK9C,eAAgB,EACd+C,QAAQQ,cAIvBF,uBAAsB,SAACG,EAAgBC,GACnC,IAAMC,EAAUF,EAAeG,KAAI,SAACC,EAAOC,GACvC,MAAO,CACHrC,UAAWoC,EAAM/B,cACjBP,GAAIuC,EACJlC,KAAMiC,EAAMlC,WAAWC,KACvB7B,UAAU,MAelB,OAXA4D,EAAQI,SAAQ,SAACC,GACb,IAAMC,EAAoBP,EAAoBQ,QAAO,SAACC,GAClD,OAAOA,EAAWC,cAAgBJ,EAAOvC,aAGzCwC,EAAkBI,QAAU,IAC5BL,EAAOjE,UAAW,EAClBiE,EAAOzC,GAAK0C,EAAkB,GAAGK,eAIlCX,GAGXY,gBAAe,SAACC,EAAWF,GACvB,GAAKE,GAAcF,EAKnB,OAAK7D,KAAKgE,oBAOVhE,KAAKH,2BAA4B,IAN7BG,KAAKL,kBAAoBkE,OACzB7D,KAAKJ,sBAAuB,IAN5BI,KAAKiE,mCAAmCjE,KAAKkE,IAAI,2CAczDC,kBAAiB,WACbnE,KAAKH,2BAA4B,EACjCG,KAAKL,kBAAoB,KACzBK,KAAKJ,sBAAuB,GAGhCwE,oBAAmB,SAACC,GAA0B,IAADC,EAAA,KAAjBC,IAAQC,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,KAAAA,UAAA,GAChCxE,KAAKJ,sBAAuB,EAE5BI,KAAKyB,sBACDzB,KAAKd,OAAO4B,GACZd,KAAKL,kBACL,CAAE+E,YAAaL,EAAQE,aACzB3B,MAAK,WAGH,OAFA0B,EAAKnC,gBAEEmC,EAAKpC,0BACbU,MAAK,WACJ0B,EAAKjC,MAAM,iBACZsC,OAAM,SAACC,GACNN,EAAKL,mCAAmCW,MAEvCC,SAAQ,WACLP,EAAKzE,2BAA4B,EACjCyE,EAAK3E,kBAAoB,SAIrCsE,mCAAkC,SAACa,GAC/B9E,KAAK+E,wBAAwB,CACzBC,QAAShF,KAAKkE,IAAI,4CAA8CY,KAIxE3C,cAAa,WAAI,IAAD8C,EAAA,KACZjF,KAAKN,gBAAkB,KACvBM,KAAKG,8BAA8BsC,OAAOzC,KAAKa,6BAA6B+B,MAAK,SAACsC,GAC9ED,EAAKvF,gBAAkBwF,EAAOC,e,4CC7O9C,IAAIC,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQnG,SACnB,iBAAZmG,IAAsBA,EAAU,CAAC,CAACE,EAAOC,EAAIH,EAAS,MAC7DA,EAAQI,SAAQF,EAAOG,QAAUL,EAAQI,SAG/BE,EADH,EAAQ,QAAwEzG,SACzE,WAAYmG,GAAS,EAAM","file":"static/js/0f72eaf9c6f11617bf99.js","sourcesContent":["export default \"\\n{% block sw_order_detail_state_card %}\\n<sw-card\\n    class=\\\"sw-order-detail-state-card\\\"\\n    position-identifier=\\\"sw-order-details-state\\\"\\n    :title=\\\"title\\\"\\n    :is-loading=\\\"isLoading\\\"\\n>\\n\\n    \\n    {% block sw_order_detail_state_card_state %}\\n    <div class=\\\"sw-order-detail-state-card__state\\\">\\n        <sw-container\\n            class=\\\"sw-order-detail-state-card__state-container\\\"\\n            gap=\\\"16px\\\"\\n            columns=\\\"33% auto auto\\\"\\n        >\\n\\n            \\n            {% block sw_order_detail_state_card_state_select %}\\n            <sw-order-state-select-v2\\n                v-tooltip=\\\"{\\n                    message: $tc('sw-privileges.tooltip.warning'),\\n                    disabled: acl.can('order.editor'),\\n                    showOnDisabledElements: true\\n                }\\\"\\n                :transition-options=\\\"stateOptions\\\"\\n                :state-type=\\\"entityName\\\"\\n                rounded-style\\n                :placeholder=\\\"entity.stateMachineState.translated.name\\\"\\n                :label=\\\"stateLabel\\\"\\n                :background-style=\\\"stateSelectBackgroundStyle\\\"\\n                :disabled=\\\"disabled\\\"\\n                :is-loading=\\\"statesLoading\\\"\\n                @state-select=\\\"onStateSelected\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_detail_state_card_state_history_text %}\\n            <div\\n                v-if=\\\"lastStateChange\\\"\\n                class=\\\"sw-order-detail-state-card__state-history-text\\\"\\n            >\\n                <i18n path=\\\"sw-order.stateCard.labelHistory\\\">\\n                    <template #time>\\n                        <sw-time-ago :date=\\\"lastStateChange.createdAt\\\" />\\n                    </template>\\n                    <template #author>\\n                        {{ lastStateChange.user ? lastStateChange.user.firstName + ' ' + lastStateChange.user.lastName : $tc('sw-order.stateCard.labelSystemUser') }}\\n                    </template>\\n                </i18n>\\n            </div>\\n            <div v-else></div>\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_detail_state_card_state_history_button %}\\n            <sw-external-link\\n                class=\\\"sw-order-detail-state-card__state-history-button\\\"\\n                icon=\\\"regular-long-arrow-right\\\"\\n                @click=\\\"onShowStatusHistory\\\"\\n            >\\n                {{ $tc('sw-order.stateCard.labelShowHistoryModal') }}\\n            </sw-external-link>\\n            {% endblock %}\\n\\n        </sw-container>\\n\\n        \\n        {% block sw_order_state_change_card_state_modal %}\\n        <sw-order-state-change-modal\\n            v-if=\\\"showStateChangeModal\\\"\\n            :order=\\\"order\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :technical-name=\\\"''\\\"\\n            @page-leave=\\\"onLeaveModalClose\\\"\\n            @page-leave-confirm=\\\"onLeaveModalConfirm\\\"\\n        />\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_state_change_card_divider %}\\n    <hr class=\\\"sw-order-detail-state-card__divider\\\">\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_state_change_card_content %}\\n    <sw-container\\n        class=\\\"sw-order-detail-state-card__content\\\"\\n        columns=\\\"1fr 1fr\\\"\\n    >\\n        <slot></slot>\\n    </sw-container>\\n    {% endblock %}\\n\\n</sw-card>\\n{% endblock %}\\n\";","import template from './sw-order-details-state-card.html.twig';\nimport './sw-order-details-state-card.scss';\n\n/**\n * @package checkout\n */\n\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'acl',\n        'repositoryFactory',\n        'orderStateMachineService',\n        'stateMachineService',\n        'stateStyleDataProviderService',\n    ],\n\n    mixins: [\n        'notification',\n    ],\n\n    props: {\n        order: {\n            type: Object,\n            required: true,\n        },\n        title: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        entity: {\n            type: Object,\n            required: true,\n        },\n        stateLabel: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            statesLoading: false,\n            stateOptions: [],\n            lastStateChange: null,\n            currentActionName: null,\n            showStateChangeModal: false,\n            stateChangeModalConfirmed: false,\n        };\n    },\n\n    computed: {\n        stateMachineStateRepository() {\n            return this.repositoryFactory.create('state_machine_state');\n        },\n\n        stateMachineHistoryRepository() {\n            return this.repositoryFactory.create('state_machine_history');\n        },\n\n        stateMachineStateCriteria() {\n            const criteria = new Criteria(1, null);\n            criteria.addSorting({ field: 'name', order: 'ASC' });\n            criteria.addAssociation('stateMachine');\n            criteria.addFilter(\n                Criteria.equals(\n                    'state_machine_state.stateMachine.technicalName',\n                    `${this.entityName}.state`,\n                ),\n            );\n\n            return criteria;\n        },\n\n        stateMachineHistoryCriteria() {\n            const criteria = new Criteria(1, 1);\n\n            criteria.addFilter(Criteria.equals('entityId.id', this.entity.id));\n            criteria.addFilter(Criteria.equals('entityName', this.entityName));\n            criteria.addAssociation('user');\n            criteria.addSorting({ field: 'createdAt', order: 'DESC' });\n\n            return criteria;\n        },\n\n        entityName() {\n            return this.entity.getEntityName();\n        },\n\n        stateName() {\n            return this.entity.stateMachineState.translated.name;\n        },\n\n        stateSelectBackgroundStyle() {\n            const technicalName = this.entity.stateMachineState.technicalName;\n\n            return this.stateStyleDataProviderService.getStyle(\n                `${this.entityName}.state`,\n                technicalName,\n            ).selectBackgroundStyle;\n        },\n\n        stateTransitionMethod() {\n            switch (this.entityName) {\n                case 'order':\n                    return this.orderStateMachineService.transitionOrderState.bind(this.orderStateMachineService);\n                case 'order_transaction':\n                    return this.orderStateMachineService.transitionOrderTransactionState.bind(this.orderStateMachineService);\n                case 'order_delivery':\n                    return this.orderStateMachineService.transitionOrderDeliveryState.bind(this.orderStateMachineService);\n                default:\n                    return null;\n            }\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.getTransitionOptions();\n            this.getLastChange();\n        },\n\n        onShowStatusHistory() {\n            this.$emit('show-status-history');\n        },\n\n        getTransitionOptions() {\n            this.statesLoading = true;\n\n            return Promise.all([\n                this.stateMachineStateRepository.search(this.stateMachineStateCriteria),\n                this.stateMachineService.getState(this.entityName, this.entity.id),\n            ]).then((data) => {\n                this.stateOptions = this.buildTransitionOptions(\n                    data[0],\n                    data[1].data.transitions,\n                );\n\n                this.statesLoading = false;\n                return Promise.resolve();\n            });\n        },\n\n        buildTransitionOptions(allTransitions, possibleTransitions) {\n            const options = allTransitions.map((state, index) => {\n                return {\n                    stateName: state.technicalName,\n                    id: index,\n                    name: state.translated.name,\n                    disabled: true,\n                };\n            });\n\n            options.forEach((option) => {\n                const transitionToState = possibleTransitions.filter((transition) => {\n                    return transition.toStateName === option.stateName;\n                });\n\n                if (transitionToState.length >= 1) {\n                    option.disabled = false;\n                    option.id = transitionToState[0].actionName;\n                }\n            });\n\n            return options;\n        },\n\n        onStateSelected(stateType, actionName) {\n            if (!stateType || !actionName) {\n                this.createStateChangeErrorNotification(this.$tc('sw-order.stateCard.labelErrorNoAction'));\n                return;\n            }\n\n            if (!this.modalConfirmed) {\n                this.currentActionName = actionName;\n                this.showStateChangeModal = true;\n\n                return;\n            }\n\n            this.stateChangeModalConfirmed = false;\n        },\n\n        onLeaveModalClose() {\n            this.stateChangeModalConfirmed = false;\n            this.currentActionName = null;\n            this.showStateChangeModal = false;\n        },\n\n        onLeaveModalConfirm(docIds, sendMail = true) {\n            this.showStateChangeModal = false;\n\n            this.stateTransitionMethod(\n                this.entity.id,\n                this.currentActionName,\n                { documentIds: docIds, sendMail },\n            ).then(() => {\n                this.getLastChange();\n\n                return this.getTransitionOptions();\n            }).then(() => {\n                this.$emit('save-edits');\n            }).catch((error) => {\n                this.createStateChangeErrorNotification(error);\n            })\n                .finally(() => {\n                    this.stateChangeModalConfirmed = false;\n                    this.currentActionName = null;\n                });\n        },\n\n        createStateChangeErrorNotification(errorMessage) {\n            this.createNotificationError({\n                message: this.$tc('sw-order.stateCard.labelErrorStateChange') + errorMessage,\n            });\n        },\n\n        getLastChange() {\n            this.lastStateChange = null;\n            this.stateMachineHistoryRepository.search(this.stateMachineHistoryCriteria).then((result) => {\n                this.lastStateChange = result.first();\n            });\n        },\n    },\n\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-order-details-state-card.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4bc941c0\", content, true, {});"],"sourceRoot":""}