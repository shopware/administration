{"version":3,"sources":["webpack:///./src/module/sw-flow/component/modals/sw-flow-app-action-modal/sw-flow-app-action-modal.scss","webpack:///./src/module/sw-flow/component/modals/sw-flow-app-action-modal/index.js","webpack:///./src/module/sw-flow/component/modals/sw-flow-app-action-modal/sw-flow-app-action-modal.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Mixin","ShopwareError","Classes","template","inject","mixins","getByName","props","sequence","type","Object","required","data","config","fields","errors","computed","actionLabel","_this$sequence","_this$sequence$propsA","_this$sequence$propsA2","_this$sequence2","_this$sequence2$props","this","propsAppFlowAction","translated","label","appBadge","_this$sequence3","_this$sequence3$props","_this$sequence3$props2","app","currentLocale","State","get","headline","_this$sequence4","_this$sequence4$props","_this$sequence4$props2","_this$sequence5","_this$sequence5$props","paragraph","_this$sequence6","_this$sequence6$props","_this$sequence6$props2","_this$sequence7","_this$sequence7$props","description","created","createdComponent","methods","_this$sequence8","_this","getFields","entries","_objectSpread","forEach","_ref","_ref2","_slicedToArray","key","configValue","_typeof","undefined","value","onChange","event","field","handleValid","isValid","_this2","_this2$config$field$n","val","name","keys","length","_value","_value2","_value2$value","$delete","$set","code","onSave","_this$sequence9","_this$sequence9$props","_this$sequence9$props2","active","buildConfig","$emit","onClose","_this3","_this3$config$field$n","_this$sequence$propsA3","_this4","convertDefaultValue","defaultValue","push","includes","parseInt","getConfig","placeholder","placeHolder","disabled","helpText","componentName","zIndex","colorOutput","concat","options","_ref3","_objHelpText$this$cur","objHelpText","JSON","parse","stringify","Context","fallbackLocale"],"mappings":"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","file":"static/js/6e616c038f7a995a9fe6.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-flow-app-action-modal.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"cf35466a\", content, true, {});","import template from './sw-flow-app-action-modal.html.twig';\nimport './sw-flow-app-action-modal.scss';\n\nconst { Mixin, Classes: { ShopwareError } } = Shopware;\n\n/**\n * @private\n * @package services-settings\n */\nexport default {\n    template,\n\n    inject: ['acl'],\n\n    mixins: [\n        Mixin.getByName('placeholder'),\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        sequence: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            config: {},\n            fields: [],\n            errors: {},\n        };\n    },\n\n    computed: {\n        actionLabel() {\n            return this.sequence?.propsAppFlowAction?.translated?.label || this.sequence?.propsAppFlowAction?.label;\n        },\n\n        appBadge() {\n            return this.sequence?.propsAppFlowAction?.app?.label;\n        },\n\n        currentLocale() {\n            return Shopware.State.get('session').currentLocale;\n        },\n\n        headline() {\n            return this.sequence?.propsAppFlowAction?.translated?.headline\n                || this.sequence?.propsAppFlowAction?.headline;\n        },\n\n        paragraph() {\n            return this.sequence?.propsAppFlowAction?.translated?.description\n                || this.sequence?.propsAppFlowAction?.description;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.getFields();\n            if (!this.sequence?.config) {\n                return;\n            }\n\n            Object.entries({ ...this.sequence.config }).forEach(([key, configValue]) => {\n                this.config[key] = (typeof configValue === 'object' && configValue.value !== undefined)\n                    ? configValue.value\n                    : configValue;\n            });\n        },\n\n        onChange(event, field) {\n            this.handleValid(field, event);\n        },\n\n        isValid() {\n            this.errors = {};\n            this.fields.forEach(field => {\n                const val = this.config[field.name] ?? null;\n                this.handleValid(field, val);\n            });\n\n            return Object.keys(this.errors).length === 0;\n        },\n\n        handleValid(field, val) {\n            let value = val;\n            if (typeof value === 'object' && (value?.length === 0 || value?.value?.length === 0)) {\n                value = null;\n            }\n\n            if (field.required && !value && typeof value !== 'boolean') {\n                this.$delete(this.config, [field.name]);\n                this.$set(this.errors, field.name, new ShopwareError({\n                    code: 'c1051bb4-d103-4f74-8988-acbcafc7fdc3',\n                }));\n                return;\n            }\n\n            this.$delete(this.errors, [field.name]);\n        },\n\n        onSave() {\n            if (!this.isValid() || !this.sequence?.propsAppFlowAction?.app?.active) return;\n\n            const config = this.buildConfig();\n            const data = {\n                ...this.sequence,\n                config,\n            };\n            this.$emit('process-finish', data);\n            this.onClose();\n        },\n\n        buildConfig() {\n            const data = {};\n            this.fields.forEach(field => {\n                if (this.config[field.name]?.length !== 0 && this.config[field.name] !== null) {\n                    data[field.name] = this.config[field.name];\n                }\n            });\n\n            return data;\n        },\n\n        onClose() {\n            this.$emit('modal-close');\n        },\n\n        getFields() {\n            this.sequence.propsAppFlowAction?.config.forEach((config) => {\n                this.config[config.name] = this.convertDefaultValue(config.type, config.defaultValue);\n                this.fields.push(config);\n                this.$delete(this.errors, config.name);\n            });\n        },\n\n        convertDefaultValue(type, value) {\n            if (value === undefined) {\n                return null;\n            }\n\n            if (['int', 'float'].includes(type)) {\n                return parseInt(value, 10);\n            }\n\n            if (['bool', 'checkbox'].includes(type)) {\n                return !!value;\n            }\n\n            if (['date', 'datetime', 'time'].includes(type)) {\n                return null;\n            }\n\n            return value;\n        },\n\n        getConfig(field) {\n            const config = {\n                label: field.label,\n                placeholder: field.placeHolder,\n                disabled: field.disabled,\n                required: field.required,\n                helpText: this.helpText(field),\n            };\n\n            if (field.type === 'colorpicker') {\n                config.componentName = 'sw-colorpicker';\n                config.zIndex = 1000;\n                config.colorOutput = 'hex';\n\n                return config;\n            }\n\n            if (field.type === 'text-editor') {\n                config.componentName = 'sw-text-editor';\n\n                return config;\n            }\n\n            if (['single-select', 'multi-select'].includes(field.type)) {\n                config.componentName = `sw-${field.type}`;\n                config.options = field.options;\n            }\n\n            return config;\n        },\n\n        helpText(field) {\n            if (field.helpText === undefined) {\n                return null;\n            }\n\n            const objHelpText = JSON.parse(JSON.stringify(field.helpText));\n\n            return objHelpText[this.currentLocale] ?? objHelpText[Shopware.Context.app.fallbackLocale] ?? null;\n        },\n    },\n};\n","export default \"\\n{% block sw_flow_app_action_modal %}\\n<sw-modal\\n    class=\\\"sw-flow-app-action-modal\\\"\\n    @modal-close=\\\"onClose\\\"\\n>\\n    <template #modal-header>\\n        \\n        {% block sw_flow_app_action_modal_header %}\\n        <div class=\\\"sw-flow-app-action-modal__header\\\">\\n            {{ actionLabel }}\\n            <span class=\\\"sw-flow-app-action-modal__app-badge\\\">\\n                {{ appBadge }}\\n            </span>\\n        </div>\\n        {% endblock %}\\n    </template>\\n\\n    \\n    {% block sw_flow_app_action_modal_content %}\\n    \\n    {% block sw_flow_app_action_modal_headcontent %}\\n    <div\\n        v-if=\\\"headline || paragraph\\\"\\n        class=\\\"sw-flow-app-action-modal__headcontent\\\"\\n    >\\n        \\n        {% block sw_flow_app_action_modal_headline %}\\n        <div\\n            v-if=\\\"headline\\\"\\n            class=\\\"sw-flow-app-action-modal__headline\\\"\\n        >\\n            {{ headline }}\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_app_action_modal_paragraph %}\\n        <div\\n            v-if=\\\"paragraph\\\"\\n            class=\\\"sw-flow-app-action-modal__paragraph\\\"\\n        >\\n            {{ paragraph }}\\n        </div>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n    <sw-form-field-renderer\\n        v-for=\\\"field in fields\\\"\\n        :key=\\\"field.name\\\"\\n        v-model=\\\"config[field.name]\\\"\\n        :type=\\\"field.type\\\"\\n        :config=\\\"getConfig(field)\\\"\\n        :error=\\\"errors[field.name]\\\"\\n        @update=\\\"onChange($event, field)\\\"\\n    />\\n    {% endblock %}\\n    <template #modal-footer>\\n        \\n        {% block sw_flow_app_action_modal_footer_cancel_button %}\\n        <sw-button\\n            class=\\\"sw-flow-app-action-modal__cancel-button\\\"\\n            size=\\\"small\\\"\\n            @click=\\\"onClose\\\"\\n        >\\n            {{ $tc('global.default.cancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_app_action_modal_footer_save_button %}\\n        <sw-button\\n            class=\\\"sw-flow-app-action-modal__save-button\\\"\\n            variant=\\\"primary\\\"\\n            size=\\\"small\\\"\\n            @click=\\\"onSave\\\"\\n        >\\n            {{ $tc('sw-flow.modals.buttonSaveAction') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n</sw-modal>\\n{% endblock %}\\n\";"],"sourceRoot":""}