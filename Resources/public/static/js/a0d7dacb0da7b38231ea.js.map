{"version":3,"sources":["webpack:///./src/module/sw-extension/page/sw-extension-my-extensions-listing/index.js","webpack:///./src/module/sw-extension/page/sw-extension-my-extensions-listing/sw-extension-my-extensions-listing.html.twig","webpack:///./src/module/sw-extension/page/sw-extension-my-extensions-listing/sw-extension-my-extensions-listing.scss"],"names":["mapState","Shopware","Component","getComponentHelper","template","inject","data","filterByActiveState","sortingOption","computed","_objectSpread","isAppUrlReachable","state","app","config","settings","appUrlReachable","isLoading","State","get","myExtensions","loading","extensionList","byTypeFilteredExtensions","this","filterExtensionsByType","sortedExtensions","sortExtensions","filterExtensionsByActiveState","extensionListPaginated","begin","page","limit","extensionListSearched","slice","_this","filter","extension","searchTerm","term","toLowerCase","label","name","includes","isAppRoute","$route","isThemeRoute","total","length","Number","query","set","newLimit","updateRouteQuery","newPage","undefined","newTerm","skeletonVariant","assetFilter","Filter","getByName","watch","updateList","mounted","mountedComponent","methods","shopwareExtensionService","updateExtensionData","openStore","$router","push","openThemesStore","arguments","routeQuery","route","params","Utils","types","isEmpty","replace","changePage","_ref","extensions","_this2","isTheme","sort","firstExtension","secondExtension","localeCompare","sensitivity","updatedAt","firstExtensionDate","Date","date","secondExtensionDate","changeSortingOption","value","changeActiveState","active","content","__esModule","default","module","i","locals","exports","add"],"mappings":"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","file":"static/js/a0d7dacb0da7b38231ea.js","sourcesContent":["import template from './sw-extension-my-extensions-listing.html.twig';\nimport './sw-extension-my-extensions-listing.scss';\n\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n * @private\n */\nexport default {\n    template,\n\n    inject: ['shopwareExtensionService'],\n\n    data() {\n        return {\n            filterByActiveState: false,\n            sortingOption: 'updated-at',\n        };\n    },\n\n    computed: {\n        ...mapState('context', {\n            isAppUrlReachable: state => state.app.config.settings.appUrlReachable,\n        }),\n\n        isLoading() {\n            const state = Shopware.State.get('shopwareExtensions');\n\n            return state.myExtensions.loading;\n        },\n\n        myExtensions() {\n            return Shopware.State.get('shopwareExtensions').myExtensions.data;\n        },\n\n        extensionList() {\n            const byTypeFilteredExtensions = this.filterExtensionsByType(this.myExtensions);\n            const sortedExtensions = this.sortExtensions(byTypeFilteredExtensions, this.sortingOption);\n\n            if (this.filterByActiveState) {\n                return this.filterExtensionsByActiveState(sortedExtensions);\n            }\n\n            return sortedExtensions;\n        },\n\n        extensionListPaginated() {\n            const begin = (this.page - 1) * this.limit;\n\n            return this.extensionListSearched\n                .slice(begin, begin + this.limit);\n        },\n\n        extensionListSearched() {\n            return this.extensionList\n                .filter(extension => {\n                    const searchTerm = this.term && this.term.toLowerCase();\n                    if (!this.term) {\n                        return true;\n                    }\n\n                    const label = extension.label || '';\n                    const name = extension.name || '';\n\n                    return label.toLowerCase().includes(searchTerm) ||\n                        name.toLowerCase().includes(searchTerm);\n                });\n        },\n\n        isAppRoute() {\n            return this.$route.name === 'sw.extension.my-extensions.listing.app';\n        },\n\n        isThemeRoute() {\n            return this.$route.name === 'sw.extension.my-extensions.listing.theme';\n        },\n\n        total() {\n            return this.extensionListSearched.length || 0;\n        },\n\n        limit: {\n            get() {\n                return Number(this.$route.query.limit) || 25;\n            },\n            set(newLimit) {\n                this.updateRouteQuery({ limit: newLimit });\n            },\n        },\n\n        page: {\n            get() {\n                return Number(this.$route.query.page) || 1;\n            },\n            set(newPage) {\n                this.updateRouteQuery({ page: newPage });\n            },\n        },\n\n        term: {\n            get() {\n                return this.$route.query.term || undefined;\n            },\n\n            set(newTerm) {\n                this.updateRouteQuery({\n                    term: newTerm,\n                    page: 1,\n                });\n            },\n        },\n\n        skeletonVariant() {\n            if (this.isThemeRoute) {\n                return 'extension-themes';\n            }\n\n            return 'extension-apps';\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        '$route.name'() {\n            this.updateList();\n            this.filterByActiveState = false;\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.updateList();\n            this.updateRouteQuery();\n        },\n\n        updateList() {\n            this.shopwareExtensionService.updateExtensionData();\n        },\n\n        openStore() {\n            this.$router.push({\n                name: 'sw.extension.store.listing',\n            });\n        },\n\n        openThemesStore() {\n            this.$router.push({\n                name: 'sw.extension.store.listing.theme',\n            });\n        },\n\n        updateRouteQuery(query = {}) {\n            const routeQuery = this.$route.query;\n            const limit = query.limit || this.$route.query.limit;\n            const page = query.page || this.$route.query.page;\n            const term = query.term || this.$route.query.term;\n\n            // Create new route\n            const route = {\n                name: this.$route.name,\n                params: this.$route.params,\n                query: {\n                    limit: limit || 25,\n                    page: page || 1,\n                    term: term || undefined,\n                },\n            };\n\n            // If query is empty then replace route, otherwise push\n            if (Shopware.Utils.types.isEmpty(routeQuery)) {\n                this.$router.replace(route);\n            } else {\n                this.$router.push(route);\n            }\n        },\n\n        changePage({ page, limit }) {\n            this.updateRouteQuery({ page, limit });\n        },\n\n        filterExtensionsByType(extensions) {\n            return extensions.filter(extension => {\n                // app route and no theme\n                if (this.isAppRoute && !extension.isTheme) {\n                    return true;\n                }\n\n                // theme route and theme\n                if (this.isThemeRoute && extension.isTheme) {\n                    return true;\n                }\n\n                return false;\n            });\n        },\n\n        sortExtensions(extensions, sortingOption) {\n            return extensions.sort((firstExtension, secondExtension) => {\n                if (sortingOption === 'name-asc') {\n                    return firstExtension.label.localeCompare(secondExtension.label, { sensitivity: 'base' });\n                }\n\n                if (sortingOption === 'name-desc') {\n                    return firstExtension.label.localeCompare(secondExtension.label, { sensitivity: 'base' }) * -1;\n                }\n\n                if (sortingOption === 'updated-at') {\n                    if (firstExtension.updatedAt === null && secondExtension.updatedAt !== null) {\n                        return 1;\n                    }\n\n                    if (firstExtension.updatedAt !== null && secondExtension.updatedAt === null) {\n                        return -1;\n                    }\n\n                    if (secondExtension.updatedAt === null && firstExtension.updatedAt === null) {\n                        return 0;\n                    }\n\n                    const firstExtensionDate = new Date(firstExtension.updatedAt.date);\n                    const secondExtensionDate = new Date(secondExtension.updatedAt.date);\n\n                    if (firstExtensionDate > secondExtensionDate) {\n                        return -1;\n                    }\n\n                    if (firstExtensionDate < secondExtensionDate) {\n                        return 1;\n                    }\n\n                    if (firstExtensionDate === secondExtensionDate) {\n                        return 0;\n                    }\n                }\n\n                return 0;\n            });\n        },\n\n        changeSortingOption(value) {\n            this.sortingOption = value;\n        },\n\n        changeActiveState(value) {\n            this.filterByActiveState = value;\n        },\n\n        filterExtensionsByActiveState(extensions) {\n            return extensions.filter(extension => {\n                return extension.active;\n            });\n        },\n    },\n};\n","export default \"<div class=\\\"sw-extension-my-extensions-listing\\\">\\n    <sw-skeleton\\n        v-if=\\\"isLoading\\\"\\n        :variant=\\\"skeletonVariant\\\"\\n    />\\n\\n    <div\\n        v-else\\n        class=\\\"sw-extension-my-extensions-listing__listing-grid\\\"\\n    >\\n        <sw-alert\\n            v-if=\\\"!isAppUrlReachable\\\"\\n            class=\\\"sw-extension-my-extensions-listing__app-url-warning\\\"\\n            variant=\\\"warning\\\"\\n            :title=\\\"$tc('sw-app.component.sw-app-wrong-app-url-modal.title')\\\"\\n        >\\n\\n            <template #default>\\n                <div>\\n                    {{ $tc('sw-app.component.sw-app-wrong-app-url-modal.explanation') }}\\n                </div>\\n                <div>\\n                    {{ $tc('sw-app.component.sw-app-wrong-app-url-modal.textGetSupport') }}\\n                </div>\\n            </template>\\n\\n            <template #actions>\\n                <sw-button\\n                    class=\\\"sw-app-wrong-app-url-modal__content-link-button\\\"\\n                    variant=\\\"ghost\\\"\\n                    :link=\\\"$tc('sw-app.component.sw-app-wrong-app-url-modal.linkToDocsArticle')\\\"\\n                >\\n                    {{ $tc('sw-app.component.sw-app-wrong-app-url-modal.labelLearnMoreButton') }}\\n                </sw-button>\\n            </template>\\n\\n        </sw-alert>\\n        <sw-meteor-card\\n            v-if=\\\"!extensionListPaginated.length && !filterByActiveState\\\"\\n            class=\\\"sw-extension-my-extensions-listing__empty-state\\\"\\n        >\\n            <img\\n                :src=\\\"assetFilter('administration/static/img/empty-states/extensions-empty-state.svg')\\\"\\n                alt=\\\"\\\"\\n            >\\n\\n            <h3 v-if=\\\"isThemeRoute\\\">\\n                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.themes.titleEmptyState') }}\\n            </h3>\\n            <h3 v-else>\\n                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.apps.titleEmptyState') }}\\n            </h3>\\n\\n            <p v-if=\\\"isThemeRoute\\\">\\n                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.themes.textEmptyState') }}\\n            </p>\\n            <p v-else>\\n                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.apps.textEmptyState') }}\\n            </p>\\n\\n            <sw-button\\n                variant=\\\"ghost\\\"\\n                @click=\\\"isThemeRoute ? openThemesStore() : openStore()\\\"\\n            >\\n                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.btnOpenStore') }}\\n            </sw-button>\\n        </sw-meteor-card>\\n\\n        <template v-else>\\n            <div class=\\\"sw-extension-my-extensions-listing__container\\\">\\n                <sw-extension-my-extensions-listing-controls\\n                    @update:active-state=\\\"changeActiveState\\\"\\n                    @update:sorting-option=\\\"changeSortingOption\\\"\\n                />\\n\\n                <sw-meteor-card\\n                    v-if=\\\"!extensionListPaginated.length && filterByActiveState\\\"\\n                    class=\\\"sw-extension-my-extensions-listing__empty-state\\\"\\n                >\\n                    <img\\n                        :src=\\\"assetFilter('administration/static/img/empty-states/extensions-empty-state.svg')\\\"\\n                        alt=\\\"\\\"\\n                    >\\n\\n                    <h3 v-if=\\\"isThemeRoute\\\">\\n                        {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.themes.noActivePlugins') }}\\n                    </h3>\\n                    <h3 v-else>\\n                        {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.apps.noActivePlugins') }}\\n                    </h3>\\n                </sw-meteor-card>\\n\\n                <template v-else>\\n                    <template\\n                        v-for=\\\"entry in extensionListPaginated\\\"\\n                        {% if VUE3 %}\\n                        :key=\\\"entry.name\\\"\\n                        {% endif %}\\n                    >\\n                        <component\\n                            :is=\\\"entry.storeLicense ? 'sw-extension-card-bought' : 'sw-self-maintained-extension-card'\\\"\\n                            {% if VUE2 %}\\n                            :key=\\\"entry.name\\\"\\n                            {% endif %}\\n                            :extension=\\\"entry\\\"\\n                            @update-list=\\\"updateList\\\"\\n                        />\\n                    </template>\\n\\n                    <sw-pagination\\n                        :total=\\\"total\\\"\\n                        :limit=\\\"limit\\\"\\n                        :page=\\\"page\\\"\\n                        @page-change=\\\"changePage\\\"\\n                    />\\n                </template>\\n            </div>\\n        </template>\\n    </div>\\n</div>\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-extension-my-extensions-listing.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"a2779582\", content, true, {});"],"sourceRoot":""}