{"version":3,"sources":["webpack:///./src/module/sw-settings-shipping/page/sw-settings-shipping-list/sw-settings-shipping-list.scss","webpack:///./src/module/sw-settings-shipping/page/sw-settings-shipping-list/index.js","webpack:///./src/module/sw-settings-shipping/page/sw-settings-shipping-list/sw-settings-shipping-list.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Mixin","Criteria","Data","template","inject","mixins","getByName","data","shippingMethods","isLoading","sortBy","sortDirection","skeletonItemAmount","showDeleteModal","searchConfigEntity","metaInfo","title","this","$createTitle","computed","shippingRepository","repositoryFactory","create","columns","property","label","inlineEdit","routerLink","allowResize","primary","align","listingCriteria","criteria","term","setTerm","addSorting","sort","shippingCostTaxOptions","$tc","value","methods","getList","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","addQueryScores","sent","entitySearchable","total","abrupt","freshSearchTerm","resetSorting","search","then","items","finally","stop","onInlineEditSave","item","_this2","name","translated","entityRepository","save","createNotificationSuccess","message","catch","createNotificationError","onDelete","id","onConfirmDelete","_this3","find","onCloseDeleteModal","delete","onChangeLanguage","languageId","State","commit","shippingTaxTypeLabel","taxName","tax"],"mappings":"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","file":"static/js/71a02f5c9056a540b80e.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-shipping-list.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1c2e46a3\", content, true, {});","import template from './sw-settings-shipping-list.html.twig';\nimport './sw-settings-shipping-list.scss';\n\nconst { Mixin, Data: { Criteria } } = Shopware;\n\n/**\n * @package checkout\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl'],\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            shippingMethods: null,\n            isLoading: false,\n            sortBy: 'name',\n            sortDirection: 'ASC',\n            skeletonItemAmount: 3,\n            showDeleteModal: false,\n            searchConfigEntity: 'shipping_method',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        shippingRepository() {\n            return this.repositoryFactory.create('shipping_method');\n        },\n\n        columns() {\n            return [{\n                property: 'name',\n                label: 'sw-settings-shipping.list.columnName',\n                inlineEdit: 'string',\n                routerLink: 'sw.settings.shipping.detail',\n                allowResize: true,\n                primary: true,\n            }, {\n                property: 'description',\n                label: 'sw-settings-shipping.list.columnDescription',\n                inlineEdit: 'string',\n                allowResize: true,\n            }, {\n                property: 'taxType',\n                label: 'sw-settings-shipping.list.columnTaxType',\n                inlineEdit: 'string',\n                allowResize: true,\n            }, {\n                property: 'active',\n                label: 'sw-settings-shipping.list.columnActive',\n                inlineEdit: 'boolean',\n                allowResize: true,\n                align: 'center',\n            }, {\n                property: 'position',\n                label: 'sw-settings-shipping.list.columnPosition',\n                inlineEdit: 'number',\n                allowResize: true,\n                align: 'center',\n            }];\n        },\n\n        listingCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            if (this.term) {\n                criteria.setTerm(this.term);\n            }\n\n            criteria.addSorting(\n                Criteria.sort('name', 'ASC'),\n            );\n\n            return criteria;\n        },\n\n        shippingCostTaxOptions() {\n            return [{\n                label: this.$tc('sw-settings-shipping.shippingCostOptions.auto'),\n                value: 'auto',\n            }, {\n                label: this.$tc('sw-settings-shipping.shippingCostOptions.highest'),\n                value: 'highest',\n            }, {\n                label: this.$tc('sw-settings-shipping.shippingCostOptions.fixed'),\n                value: 'fixed',\n            }];\n        },\n    },\n\n    methods: {\n        async getList() {\n            this.isLoading = true;\n\n            const criteria = await this.addQueryScores(this.term, this.listingCriteria);\n            if (!this.entitySearchable) {\n                this.isLoading = false;\n                this.total = 0;\n\n                return;\n            }\n\n            if (this.freshSearchTerm) {\n                criteria.resetSorting();\n            }\n\n            this.shippingRepository.search(criteria).then((items) => {\n                this.total = items.total;\n                this.shippingMethods = items;\n\n                return items;\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onInlineEditSave(item) {\n            this.isLoading = true;\n            const name = item.name || item.translated.name;\n\n            return this.entityRepository.save(item)\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-settings-shipping.list.messageSaveSuccess', 0, { name }),\n                    });\n                }).catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-shipping.list.messageSaveError', 0, { name }),\n                    });\n                }).finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        onDelete(id) {\n            this.showDeleteModal = id;\n        },\n\n        onConfirmDelete(id) {\n            const name = this.shippingMethods.find((item) => item.id === id).name;\n\n            this.onCloseDeleteModal();\n            this.shippingRepository.delete(id)\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-settings-shipping.list.messageDeleteSuccess', 0, { name }),\n                    });\n                }).catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-shipping.list.messageDeleteError', 0, { name }),\n                    });\n                }).finally(() => {\n                    this.showDeleteModal = null;\n                    this.getList();\n                });\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onChangeLanguage(languageId) {\n            Shopware.State.commit('context/setApiLanguageId', languageId);\n            this.getList();\n        },\n\n        shippingTaxTypeLabel(taxName) {\n            if (!taxName) {\n                return '';\n            }\n\n            const tax = this.shippingCostTaxOptions.find((i) => taxName === i.value) || '';\n\n            return tax?.label;\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_shipping_index %}\\n<sw-page class=\\\"sw-settings-shipping-list\\\">\\n\\n    \\n    {% block sw_settings_shipping_list_search_bar %}\\n    <template #search-bar>\\n        <sw-search-bar\\n            initial-search-type=\\\"shipping_method\\\"\\n            :placeholder=\\\"$tc('sw-settings-shipping.general.placeholderSearchBar')\\\"\\n            :initial-search=\\\"term\\\"\\n            @search=\\\"onSearch\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_shipping_list_smart_bar_header %}\\n    <template #smart-bar-header>\\n        \\n        {% block sw_settings_shipping_list_smart_bar_header_title %}\\n        <h2>\\n            \\n            {% block sw_settings_shipping_list_smart_bar_header_title_text %}\\n            {{ $tc('sw-settings.index.title') }} <sw-icon\\n                name=\\\"regular-chevron-right-xs\\\"\\n                small\\n            /> {{ $tc('sw-settings-shipping.list.textHeadline') }}\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_shipping_list_smart_bar_header_amount %}\\n            <span\\n                v-if=\\\"!isLoading\\\"\\n                class=\\\"sw-page__smart-bar-amount\\\"\\n            >\\n                ({{ total }})\\n            </span>\\n            {% endblock %}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_shipping_list_smart_bar_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_settings_shipping_list_smart_bar_actions_add %}\\n        <sw-button\\n            :router-link=\\\"{ name: 'sw.settings.shipping.create' }\\\"\\n            :disabled=\\\"!acl.can('shipping.creator')\\\"\\n            variant=\\\"primary\\\"\\n        >\\n            {{ $tc('sw-settings-shipping.list.buttonAddShippingMethod') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_shipping_list_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch @on-change=\\\"onChangeLanguage\\\" />\\n    </template>\\n    {% endblock %}\\n\\n    <template #content>\\n        \\n        {% block sw_settings_shipping_list_content %}\\n        <div class=\\\"sw-settings-shipping-list__content\\\">\\n            \\n            {% block sw_settings_shipping_list_grid %}\\n            <sw-entity-listing\\n                v-if=\\\"entitySearchable\\\"\\n                ref=\\\"swSettingsTaxGrid\\\"\\n                :items=\\\"shippingMethods\\\"\\n                :columns=\\\"columns\\\"\\n                :repository=\\\"shippingRepository\\\"\\n                :sort-by=\\\"currentSortBy\\\"\\n                :sort-direction=\\\"sortDirection\\\"\\n                :full-page=\\\"false\\\"\\n                detail-route=\\\"sw.settings.shipping.detail\\\"\\n                :show-selection=\\\"false\\\"\\n                :show-settings=\\\"true\\\"\\n                :allow-inline-edit=\\\"false\\\"\\n                :allow-edit=\\\"acl.can('shipping.editor')\\\"\\n                :allow-delete=\\\"acl.can('shipping.deleter')\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                @column-sort=\\\"onSortColumn\\\"\\n            >\\n                \\n                {% block sw_setting_shipping_list_grid_columns %}\\n                \\n                {% block sw_settings_shipping_list_grid_columns_active %}\\n                <template\\n                    #column-active=\\\"{ item, isInlineEdit }\\\"\\n                >\\n                    \\n                    {% block sw_settings_shipping_list_grid_columns_active_inline_edit %}\\n                    <template v-if=\\\"isInlineEdit\\\">\\n                        <sw-checkbox-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"item.active\\\"\\n                            {% else %}\\n                            v-model=\\\"item.active\\\"\\n                            {% endif %}\\n                        />\\n                    </template>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_settings_shipping_list_grid_columns_active_content %}\\n                    <template v-else>\\n                        <sw-icon\\n                            v-if=\\\"item.active\\\"\\n                            name=\\\"regular-checkmark-xs\\\"\\n                            small\\n                            class=\\\"is--active\\\"\\n                        />\\n                        <sw-icon\\n                            v-else\\n                            name=\\\"regular-times-s\\\"\\n                            small\\n                            class=\\\"is--inactive\\\"\\n                        />\\n                    </template>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_shipping_list_grid_columns_tax_type %}\\n                <template #column-taxType=\\\"{ item, isInlineEdit }\\\">\\n                    \\n                    {% block sw_settings_shipping_list_grid_columns_tax_type_inline_edit %}\\n                    <template v-if=\\\"isInlineEdit\\\">\\n                        <sw-single-select\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"item.taxType\\\"\\n                            {% else %}\\n                            v-model=\\\"item.taxType\\\"\\n                            {% endif %}\\n                            required\\n                            show-clearable-button\\n                            size=\\\"small\\\"\\n                            :placeholder=\\\"$tc('sw-settings-shipping.list.placeholderTaxType')\\\"\\n                            :options=\\\"shippingCostTaxOptions\\\"\\n                        />\\n                    </template>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_settings_shipping_list_grid_columns_tax_type_content %}\\n                    <template v-else>\\n                        {{ shippingTaxTypeLabel(item.taxType) }}\\n                    </template>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_shipping_list_grid_columns_actions %}\\n                <template #actions=\\\"{ item }\\\">\\n                    \\n                    {% block sw_settings_shipping_list_grid_columns_actions_edit %}\\n                    <sw-context-menu-item\\n                        :router-link=\\\"{ name: 'sw.settings.shipping.detail', params: { id: item.id, edit: 'edit' }}\\\"\\n                        :disabled=\\\"!acl.can('shipping.editor')\\\"\\n                        class=\\\"sw-settings-shipping-list__edit-action\\\"\\n                    >\\n                        {{ $tc('sw-settings-shipping.list.contextMenuEdit') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_settings_shipping_list_grid_columns_actions_delete %}\\n                    <sw-context-menu-item\\n                        variant=\\\"danger\\\"\\n                        :disabled=\\\"!acl.can('shipping.deleter')\\\"\\n                        @click=\\\"onDelete(item.id)\\\"\\n                    >\\n                        {{ $tc('sw-settings-shipping.list.contextMenuDelete') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n                {% endblock %}\\n                \\n                {% block sw_settings_shipping_list_grid_action_modals %}\\n                <template #action-modals=\\\"{ item }\\\">\\n                    \\n                    {% block sw_settings_shipping_list_delete_modal %}\\n                    <sw-modal\\n                        v-if=\\\"showDeleteModal === item.id\\\"\\n                        :title=\\\"$tc('global.default.warning')\\\"\\n                        variant=\\\"small\\\"\\n                        @modal-close=\\\"onCloseDeleteModal\\\"\\n                    >\\n                        \\n                        {% block sw_settings_shipping_list_delete_modal_confirm_delete_text %}\\n                        <p class=\\\"sw-settings-shipping-list__confirm-delete-text\\\">\\n                            {{ $tc('sw-settings-shipping.list.textDeleteConfirm', 0, { name: item.name }) }}\\n                        </p>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_shipping_list_delete_modal_footer %}\\n                        <template #modal-footer>\\n                            \\n                            {% block sw_settings_shipping_list_delete_modal_cancel %}\\n                            <sw-button\\n                                size=\\\"small\\\"\\n                                @click=\\\"onCloseDeleteModal\\\"\\n                            >\\n                                {{ $tc('sw-settings-shipping.list.buttonCancel') }}\\n                            </sw-button>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_settings_shipping_list_delete_modal_confirm %}\\n                            <sw-button\\n                                variant=\\\"danger\\\"\\n                                size=\\\"small\\\"\\n                                @click=\\\"onConfirmDelete(item.id)\\\"\\n                            >\\n                                {{ $tc('sw-settings-shipping.list.buttonDelete') }}\\n                            </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n            </sw-entity-listing>\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_shipping_list_empty_state %}\\n            <template v-if=\\\"!isLoading && !total\\\">\\n                <sw-empty-state\\n                    v-if=\\\"isValidTerm(term)\\\"\\n                    :title=\\\"$tc('sw-empty-state.messageNoResultTitle')\\\"\\n                >\\n                    <template #default>\\n                        {{ $tc('sw-empty-state.messageNoResultSublineBefore') }}\\n                        <router-link\\n                            class=\\\"sw-empty-state__description-link\\\"\\n                            :to=\\\"{ name: 'sw.profile.index.searchPreferences' }\\\"\\n                        >\\n                            {{ $tc('sw-empty-state.messageNoResultSublineLink') }}\\n                        </router-link>\\n                        {{ $tc('sw-empty-state.messageNoResultSublineAfter') }}\\n                    </template>\\n                </sw-empty-state>\\n\\n                <sw-empty-state\\n                    v-else\\n                    :title=\\\"$tc('sw-settings-shipping.list.messageEmpty')\\\"\\n                />\\n            </template>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n    </template>\\n\\n    \\n    {% block sw_settings_shipping_list_sidebar %}\\n    <template #sidebar>\\n        <sw-sidebar>\\n            \\n            {% block sw_settings_shipping_list_sidebar_refresh %}\\n            <sw-sidebar-item\\n                icon=\\\"regular-undo\\\"\\n                :title=\\\"$tc('sw-settings-shipping.list.titleSidebarItemRefresh')\\\"\\n                @click=\\\"onRefresh\\\"\\n            />\\n            {% endblock %}\\n        </sw-sidebar>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}