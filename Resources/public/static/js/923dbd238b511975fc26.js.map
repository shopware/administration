{"version":3,"sources":["webpack:///./src/app/asyncComponent/media/sw-sidebar-media-item/sw-sidebar-media-item.scss","webpack:///./src/app/asyncComponent/media/sw-sidebar-media-item/index.js","webpack:///./src/app/asyncComponent/media/sw-sidebar-media-item/sw-sidebar-media-item.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Context","Shopware","Criteria","Data","template","inject","props","initialFolderId","type","String","required","isParentLoading","Boolean","disabled","data","isLoading","mediaFolderId","this","mediaItems","subFolders","page","limit","total","term","computed","mediaRepository","repositoryFactory","create","mediaFolderRepository","showMore","itemsLoaded","length","additionalEventListeners","$listeners","watch","initializeContent","getList","created","createdComponent","methods","onSearchTermChange","searchTerm","getSubFolders","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","criteria","folder","wrap","_context","prev","next","addFilter","equals","search","api","sent","abrupt","stop","handleFolderGridItemDelete","handleMediaGridItemDelete","_this2","pages","then","extendList","onLoadMore","_this3","_callee2","searchResult","_context2","getListingCriteria","concat","_this4","_callee3","_context3","addSorting","sort","openContent","$refs","sidebarItem","onNavigateToFolder","folderId"],"mappings":"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","file":"static/js/923dbd238b511975fc26.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-sidebar-media-item.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"9a6828c6\", content, true, {});","import template from './sw-sidebar-media-item.html.twig';\nimport './sw-sidebar-media-item.scss';\n\nconst { Context } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @status ready\n * @description The <u>sw-sidebar-media-item</u> component is used everywhere you need media objects outside the media\n * manager. Use the additional properties to filter the shown media.\n * @package content\n * @example-type code-only\n * @component-example\n * <sw-sidebar-media-item>\n *    <template #context-menu-items=\"media\">\n *       <sw-context-menu-item @click=\"onAddItemToProduct(media.mediaItem)\">\n *          Lorem ipsum dolor sit amet\n *       </sw-context-menu-item>\n *    </template>\n * </sw-sidebar-media-item>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    props: {\n        initialFolderId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        isParentLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            mediaFolderId: this.initialFolderId,\n            mediaItems: [],\n            subFolders: [],\n            page: 1,\n            limit: 25,\n            total: 0,\n            term: '',\n        };\n    },\n\n    computed: {\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        mediaFolderRepository() {\n            return this.repositoryFactory.create('media_folder');\n        },\n\n        showMore() {\n            return this.itemsLoaded < this.total;\n        },\n\n        itemsLoaded() {\n            return this.mediaItems.length;\n        },\n\n        additionalEventListeners() {\n            return this.$listeners;\n        },\n    },\n\n    watch: {\n        initialFolderId() {\n            this.mediaFolderId = this.initialFolderId;\n        },\n\n        mediaFolderId() {\n            this.initializeContent();\n        },\n\n        isParentLoading() {\n            this.getList();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.initializeContent();\n        },\n\n        onSearchTermChange(searchTerm) {\n            this.term = searchTerm;\n            this.page = 1;\n            this.getList();\n        },\n\n        initializeContent() {\n            if (this.disabled) {\n                return;\n            }\n            this.page = 1;\n            this.term = '';\n            this.mediaItems = [];\n            this.getSubFolders();\n            this.getList();\n        },\n\n        async getSubFolders() {\n            const criteria = new Criteria(1, 50);\n            criteria.addFilter(Criteria.equals('parentId', this.mediaFolderId));\n\n            const folder = await this.mediaFolderRepository.search(criteria, Context.api);\n            this.subFolders = folder;\n            return folder;\n        },\n\n        handleFolderGridItemDelete() {\n            this.getSubFolders();\n        },\n\n        handleMediaGridItemDelete() {\n            const pages = this.page;\n            this.page = 1;\n            this.getList().then(() => {\n                while (this.page < pages) {\n                    this.page += 1;\n                    this.extendList();\n                }\n            });\n        },\n\n        onLoadMore() {\n            this.page += 1;\n            this.extendList();\n        },\n\n        async extendList() {\n            const criteria = this.getListingCriteria();\n\n            const searchResult = await this.mediaRepository.search(criteria, Context.api);\n            this.mediaItems = this.mediaItems.concat(searchResult);\n\n            return this.mediaItems;\n        },\n\n        async getList() {\n            if (this.isParentLoading === true) {\n                return null;\n            }\n\n            this.isLoading = true;\n\n            const criteria = this.getListingCriteria();\n\n            this.mediaItems = await this.mediaRepository.search(criteria, Context.api);\n            this.total = this.mediaItems.total;\n            this.isLoading = false;\n\n            return this.mediaItems;\n        },\n\n        getListingCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            if (!this.term.length) {\n                criteria.addFilter(Criteria.equals('mediaFolderId', this.mediaFolderId));\n            }\n\n            if (this.term) {\n                criteria.term = this.term;\n            }\n\n            criteria.addSorting(\n                Criteria.sort('uploadedAt', 'DESC'),\n            );\n\n            return criteria;\n        },\n\n        openContent() {\n            this.$refs.sidebarItem.openContent();\n        },\n\n        onNavigateToFolder(folderId) {\n            this.mediaFolderId = folderId;\n        },\n    },\n};\n","export default \"\\n{% block sw_sidebar_media_item %}\\n<sw-sidebar-item\\n    ref=\\\"sidebarItem\\\"\\n    class=\\\"sw-sidebar-media-item\\\"\\n    icon=\\\"regular-image\\\"\\n    :title=\\\"$tc('global.sw-sidebar-media-item.title')\\\"\\n    :disabled=\\\"disabled\\\"\\n    v-on=\\\"additionalEventListeners\\\"\\n>\\n\\n    \\n    {% block sw_sidebar_media_item_content %}\\n    <div class=\\\"sw-sidebar-media-item__content\\\">\\n        \\n        {% block sw_sidebar_media_item_search_field %}\\n        <sw-simple-search-field\\n            v-model=\\\"term\\\"\\n            @search-term-change=\\\"onSearchTermChange\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_sidebar_media_item_folder_navigation %}\\n        <sw-media-breadcrumbs\\n            v-if=\\\"!term.length\\\"\\n            {% if VUE3 %}\\n            v-model:currentFolderId=\\\"mediaFolderId\\\"\\n            {% else %}\\n            v-model=\\\"mediaFolderId\\\"\\n            {% endif %}\\n            small\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_sidebar_media_item_media_item_list %}\\n        \\n        {% block sw_sidebar_media_item_media_item_list_folder_item %}\\n        \\n        <sw-media-folder-item\\n            v-for=\\\"folder in subFolders\\\"\\n            v-if=\\\"!term.length\\\"\\n            :key=\\\"folder.id\\\"\\n            :item=\\\"folder\\\"\\n            :show-selection-indicator=\\\"false\\\"\\n            :show-context-menu-button=\\\"true\\\"\\n            :selected=\\\"false\\\"\\n            :is-list=\\\"true\\\"\\n            @media-item-click=\\\"onNavigateToFolder(folder.id)\\\"\\n            @media-folder-delete=\\\"handleFolderGridItemDelete\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_sidebar_media_item_media_item_list_media_item %}\\n        <sw-media-media-item\\n            v-for=\\\"mediaItem in mediaItems\\\"\\n            :key=\\\"mediaItem.id\\\"\\n            v-draggable=\\\"{ dragGroup: 'media', data: { mediaItem } }\\\"\\n            :item=\\\"mediaItem\\\"\\n            :show-selection-indicator=\\\"false\\\"\\n            :show-context-menu-button=\\\"true\\\"\\n            :selected=\\\"false\\\"\\n            :is-list=\\\"true\\\"\\n            @media-item-delete=\\\"handleMediaGridItemDelete\\\"\\n        >\\n\\n            \\n            {% block sw_sidebar_media_item_context_items %}\\n            <slot\\n                name=\\\"context-menu-items\\\"\\n                :media-item=\\\"mediaItem\\\"\\n            ></slot>\\n        {% endblock %}\\n        </sw-media-media-item>\\n        {% endblock %}\\n\\n        \\n        {% block sw_sidebar_media_item_load_more_button %}\\n        <sw-button\\n            v-if=\\\"showMore\\\"\\n            size=\\\"small\\\"\\n            block\\n            class=\\\"sw-sidebar-media-item__load-more-button\\\"\\n            @click=\\\"onLoadMore\\\"\\n        >\\n\\n            {{ $tc('global.sw-sidebar-media-item.labelLoadMore') }}\\n        </sw-button>\\n        {% endblock %}\\n        {% endblock %}\\n\\n        \\n        {% block sw_sidebar_media_item_loader %}\\n        <sw-loader v-if=\\\"isLoading\\\" />\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n</sw-sidebar-item>\\n{% endblock %}\\n\";"],"sourceRoot":""}