{"version":3,"sources":["webpack:///./src/module/sw-dashboard/page/sw-dashboard-index/index.js","webpack:///./src/module/sw-dashboard/page/sw-dashboard-index/sw-dashboard-index.html.twig","webpack:///./src/module/sw-dashboard/page/sw-dashboard-index/sw-dashboard-index.scss"],"names":["Shopware","Component","wrapComponentConfig","template","data","cachedHeadlineGreetingKey","metaInfo","title","this","$createTitle","computed","welcomeMessage","greetingName","$tc","replace","welcomeSubline","getGreetingTimeKey","currentUser","State","get","firstName","created","createdComponent","methods","_this$cachedHeadlineG","ExtensionAPI","publishData","id","path","scope","type","arguments","length","undefined","translateKey","concat","greetings","getGreetings","hourNow","Date","getHours","greetingTimes","Object","keys","map","entry","parseInt","sort","a","b","reverse","greetingTime","find","time","greetingIndex","Math","floor","random","_i18nMessages$this$$i","_i18nMessages$this$$i2","_i18nMessages$this$$i3","_i18nMessages$this$$i4","_i18nMessages$this$$i5","_i18nMessages$this$$i6","i18nMessages","$i18n","messages","localeGreetings","locale","introduction","fallbackGreetings","fallbackLocale","content","__esModule","default","module","i","locals","exports","add"],"mappings":"sIAQeA,mBAASC,UAAUC,oBAAoB,CAClDC,SCTW,6hJDWXC,KAAI,WACA,MAAO,CACHC,0BAA2B,OAInCC,SAAQ,WACJ,MAAO,CACHC,MAAOC,KAAKC,iBAIpBC,SAAU,CACNC,eAAc,WACV,IAAMC,EAAeJ,KAAKI,aACpBD,EAAiBH,KAAKK,IACxBL,KAAKH,0BACL,EACA,CAAEO,iBAON,OAAKA,EAIED,EAHIA,EAAeG,QAAQ,QAAS,KAM/CC,eAAc,WACV,OAAOP,KAAKK,IAAIL,KAAKQ,mBAAmB,wBAG5CJ,aAAY,WACR,IAAQK,EAAgBjB,SAASkB,MAAMC,IAAI,WAAnCF,YAOR,OAAOA,aAAW,EAAXA,EAAaG,YAAa,OAIzCC,QAAO,WACHb,KAAKc,oBAGTC,QAAS,CACLD,iBAAgB,WAAI,IAADE,EACfxB,SAASyB,aAAaC,YAAY,CAC9BC,GAAI,sCACJC,KAAM,iBACNC,MAAOrB,OAEXR,SAASyB,aAAaC,YAAY,CAC9BC,GAAI,2CACJC,KAAM,sBACNC,MAAOrB,OAGXA,KAAKH,0BAA0D,QAAjCmB,EAAGhB,KAAKH,iCAAyB,IAAAmB,IAAIhB,KAAKQ,mBAAmB,oBAU/FA,mBAAkB,WAA4B,IAA3Bc,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,kBAChBG,EAAY,6BAAAC,OAAgCL,GAC5CM,EAAY5B,KAAK6B,aAAaP,GAC9BQ,GAAU,IAAIC,MAAOC,WAE3B,QAAkBP,IAAdG,EACA,MAAO,GAKX,IAAMK,EAAgBC,OAAOC,KAAKP,GAC7BQ,KAAI,SAAAC,GAAK,OAAIC,SAASD,EAAM/B,QAAQ,IAAK,IAAK,OAC9CiC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAIC,KACnBC,UAGCC,EAAeV,EAAcW,MAAK,SAAAC,GAAI,OAAIf,GAAWe,MAASZ,EAAc,GAC5Ea,EAAgBC,KAAKC,MAAMD,KAAKE,SAAWrB,EAAU,GAADD,OAAIgB,EAAY,MAAKnB,QAE/E,MAAM,GAANG,OAAUD,EAAY,KAAAC,OAAIgB,EAAY,MAAAhB,OAAKmB,EAAa,MAG5DjB,aAAY,WAA4B,IAADqB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA1BjC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,kBACViC,EAAexD,KAAKyD,MAAMC,SAE1BC,EAAkBH,SAAiC,QAArBN,EAAZM,EAAexD,KAAKyD,MAAMG,eAAO,IAAAV,GAAkB,QAAlBC,EAAjCD,EAAoC,uBAAe,IAAAC,GAAc,QAAdC,EAAnDD,EAAqDU,oBAAY,IAAAT,OAArD,EAAZA,EAAoE9B,GACtFwC,EAAoBN,SAAyC,QAA7BH,EAAZG,EAAexD,KAAKyD,MAAMM,uBAAe,IAAAV,GAAkB,QAAlBC,EAAzCD,EAA4C,uBAAe,IAAAC,GAAc,QAAdC,EAA3DD,EAA6DO,oBAAY,IAAAN,OAA7D,EAAZA,EAA4EjC,GAEtG,OAAOqC,UAAmBG,O,4CEhHtC,IAAIE,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM","file":"static/js/4a9452b706f100007bc0.js","sourcesContent":["import template from './sw-dashboard-index.html.twig';\nimport './sw-dashboard-index.scss';\n\n/**\n * @package services-settings\n *\n * @private\n */\nexport default Shopware.Component.wrapComponentConfig({\n    template,\n\n    data() {\n        return {\n            cachedHeadlineGreetingKey: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        welcomeMessage() {\n            const greetingName = this.greetingName;\n            const welcomeMessage = this.$tc(\n                this.cachedHeadlineGreetingKey,\n                1,\n                { greetingName },\n            );\n\n            // in the headline we want to greet the user by his firstname\n            // if his first name is not available, we remove the personalized greeting part\n            // but we want to make sure the punctuation like `.`, `!` or `?` is kept\n            // for example \"Still awake, ?\" -> \"Still awake?\"â€¦\n            if (!greetingName) {\n                return welcomeMessage.replace(/\\,\\s*/, '');\n            }\n\n            return welcomeMessage;\n        },\n\n        welcomeSubline() {\n            return this.$tc(this.getGreetingTimeKey('daytimeWelcomeText'));\n        },\n\n        greetingName() {\n            const { currentUser } = Shopware.State.get('session');\n\n            // if currentUser?.firstName returns a loose falsy value\n            // like `\"\"`, `0`, `false`, `null`, `undefined`\n            // we want to use `null` in the ongoing process chain,\n            // otherwise we would need to take care of `\"\"` and `null`\n            // or `undefined` in tests and other places\n            return currentUser?.firstName || null;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-dashboard-detail__todayOrderData',\n                path: 'todayOrderData',\n                scope: this,\n            });\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-dashboard-detail__statisticDateRanges',\n                path: 'statisticDateRanges',\n                scope: this,\n            });\n\n            this.cachedHeadlineGreetingKey = this.cachedHeadlineGreetingKey ?? this.getGreetingTimeKey('daytimeHeadline');\n        },\n\n        /**\n         * getGreetingTimeKey reads through the existing dictionary and returns a localtime aware\n         * `$tc ()` compatible String. The timebased dictionary keys look like `5h` or `11h` or `16h`\n         * and contains an array with different greeting messages.\n         * @param {String} type either 'daytimeHeadline' or 'daytimeWelcomeText'\n         * @returns {String}\n         */\n        getGreetingTimeKey(type = 'daytimeHeadline') {\n            const translateKey = `sw-dashboard.introduction.${type}`;\n            const greetings = this.getGreetings(type);\n            const hourNow = new Date().getHours();\n\n            if (greetings === undefined) {\n                return '';\n            }\n\n            // to find the right timeslot, we user array.find() which will stop after first match\n            // for that reason the greetingTimes must be ordered from latest to earliest hour\n            const greetingTimes = Object.keys(greetings)\n                .map(entry => parseInt(entry.replace('h', ''), 10))\n                .sort((a, b) => a - b)\n                .reverse();\n\n            /* find the current time slot */\n            const greetingTime = greetingTimes.find(time => hourNow >= time) || greetingTimes[0];\n            const greetingIndex = Math.floor(Math.random() * greetings[`${greetingTime}h`].length);\n\n            return `${translateKey}.${greetingTime}h[${greetingIndex}]`;\n        },\n\n        getGreetings(type = 'daytimeHeadline') {\n            const i18nMessages = this.$i18n.messages;\n\n            const localeGreetings = i18nMessages?.[this.$i18n.locale]?.['sw-dashboard']?.introduction?.[type];\n            const fallbackGreetings = i18nMessages?.[this.$i18n.fallbackLocale]?.['sw-dashboard']?.introduction?.[type];\n\n            return localeGreetings ?? fallbackGreetings;\n        },\n    },\n});\n","export default \"\\n{% block sw_dashboard_index %}\\n<sw-page\\n    class=\\\"sw-dashboard-index\\\"\\n    :show-smart-bar=\\\"false\\\"\\n>\\n    \\n    {% block sw_dashboard_index_content %}\\n    <template #content>\\n        <sw-card-view class=\\\"sw-dashboard-index__content\\\">\\n\\n            \\n            {% block sw_dashboard_index_content_intro_card %}\\n            \\n            {% block sw_dashboard_index_content_intro_content %}\\n            <div class=\\\"sw-dashboard-index__welcome-text\\\">\\n                \\n                {% block sw_dashboard_index_content_intro %}\\n                \\n                {% block sw_dashboard_index_content_intro_content_headline %}\\n                <h1 class=\\\"sw-dashboard-index__welcome-title\\\">\\n                    {{ welcomeMessage }}\\n                </h1>\\n                {% endblock %}\\n\\n                \\n                {% block sw_dashboard_index_content_intro_welcome_message %}\\n                <p class=\\\"sw-dashboard-index__welcome-message\\\">\\n                    {{ welcomeSubline }}\\n                </p>\\n                {% endblock %}\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n            {% endblock %}\\n\\n            <sw-usage-data-consent-banner :can-be-hidden=\\\"true\\\" />\\n\\n            \\n            {% block sw_dashboard_index_content_info_grid %}\\n            <div class=\\\"sw-dashboard-index__card-grid\\\">\\n                \\n                {% block sw_dashboard_index_content_info_grid_inner %}\\n\\n                \\n                {% block sw_dashboard_index_content_info__grid_inner_welcome_card %}\\n                <div class=\\\"sw-dashboard-index__card sw-dashboard-index__card--bg-checklist\\\">\\n                    \\n                    {% block sw_dashboard_index_content_info_grid_welcome_card_content %}\\n                    \\n                    {% block sw_dashboard_index_content_info_grid_welcome_headline %}\\n                    <h2 class=\\\"sw-dashboard-index__card-title\\\">\\n                        {{ $tc('sw-dashboard.helpcard.headline') }}\\n                    </h2>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_dashboard_index_content_info_grid_welcome_link_list %}\\n                    <ul class=\\\"sw-dashboard-index__card-list\\\">\\n                        <li\\n                            v-for=\\\"(key, index) in ['helpcenter','takeOffTip','getToKnowSales']\\\"\\n                            :key=\\\"`helpcardContent-${index}`\\\"\\n                            class=\\\"sw-dashboard-index__card-list-item\\\"\\n                        >\\n                            <sw-external-link :href=\\\"$tc(`sw-dashboard.helpcard.${key}Link`)\\\">\\n                                {{ $tc(`sw-dashboard.helpcard.${key}`) }}\\n                            </sw-external-link>\\n                        </li>\\n                    </ul>\\n                    {% endblock %}\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n\\n                \\n                {% block sw_dashboard_index_content_grid_info_inner_feedback_card %}\\n                <div class=\\\"sw-dashboard-index__card sw-dashboard-index__card--dimmed\\\">\\n                    \\n                    {% block sw_dashboard_index_content_info_grid_feedback_card_content %}\\n\\n                    \\n                    {% block sw_dashboard_index_content_feedback_headline %}\\n                    <h2 class=\\\"sw-dashboard-index__card-title\\\">\\n                        {{ $tc('sw-dashboard.feedbackCard.headline') }}\\n                    </h2>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_dashboard_index_content_feedback_text %}\\n                    <p class=\\\"sw-dashboard-index__card-text\\\">\\n                        {{ $tc('sw-dashboard.feedbackCard.text') }}\\n                    </p>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_dashboard_index_content_feedback_link %}\\n                    <sw-external-link\\n                        class=\\\"sw-dashboard-index__card-button\\\"\\n                        :href=\\\"$tc('sw-dashboard.feedbackCard.feedbackLink')\\\"\\n                    >\\n                        {{ $tc('sw-dashboard.feedbackCard.feedback') }}\\n                    </sw-external-link>\\n                    {% endblock %}\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n\\n            <sw-dashboard-statistics />\\n\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-dashboard-index.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"34aedbb9\", content, true, {});"],"sourceRoot":""}