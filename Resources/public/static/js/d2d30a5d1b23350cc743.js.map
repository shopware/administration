{"version":3,"sources":["webpack:///./src/module/sw-order/component/sw-order-create-initial-modal/sw-order-create-initial-modal.scss","webpack:///./src/module/sw-order/component/sw-order-create-initial-modal/index.ts","webpack:///./src/module/sw-order/component/sw-order-create-initial-modal/sw-order-create-initial-modal.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Component","State","Mixin","Service","wrapComponentConfig","template","mixins","getByName","data","productItems","promotionCodes","isLoading","isProductGridLoading","disabledAutoPromotion","shippingCosts","context","currencyId","paymentMethodId","shippingMethodId","languageId","billingAddressId","shippingAddressId","computed","salesChannelId","_this$customer$salesC","_this$customer","this","customer","salesChannelContext","get","currency","cart","isCustomerActive","getters","promotionCodeItems","map","code","type","LineItemType","PROMOTION","referencedId","cartDelivery","_this$cart","deliveries","watch","value","_value$customer$activ","_value$customer","_value$customer$activ2","_value$customer$activ3","_value$customer2","_value$customer2$acti","_objectSpread","languageIdChain","shippingMethod","id","paymentMethod","activeBillingAddress","activeShippingAddress","methods","onCloseModal","_this","token","cancelCart","then","$emit","onPreviewOrder","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this2$cartDelivery","_this2$cartDelivery$s","promises","wrap","_context","prev","next","push","updateOrderContext","disableAutoAppliedPromotions","length","addPromotionCodes","totalPrice","modifyShippingCost","Promise","all","sent","finish","stop","onSaveItem","item","_this3","_callee2","_context2","dispatch","contextToken","_this$customer2","items","updatePromotion","promotions","onRemoveItems","lineItemKeys","_this4","_callee3","_context3","updateAutoPromotionToggle","updateShippingCost","additionalParams","disableAutomaticPromotions","commit","amount","_this$customer3","_this$cartDelivery","resolve","positiveAmount","Math","abs","unitPrice","_this5"],"mappings":"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","file":"static/js/d2d30a5d1b23350cc743.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-order-create-initial-modal.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2d54f924\", content, true, {});","import type { Entity } from '@shopware-ag/admin-extension-sdk/es/data/_internals/Entity';\nimport template from './sw-order-create-initial-modal.html.twig';\nimport './sw-order-create-initial-modal.scss';\n\nimport type {\n    Cart,\n    LineItem,\n    SalesChannelContext,\n    ContextSwitchParameters,\n    CartDelivery,\n} from '../../order.types';\n\nimport { LineItemType } from '../../order.types';\n\nconst { Component, State, Mixin, Service } = Shopware;\n\ninterface PromotionCodeItem {\n    type: string,\n    referencedId: string,\n}\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default Component.wrapComponentConfig({\n    template,\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('cart-notification'),\n    ],\n\n    data(): {\n        isLoading: boolean,\n        isProductGridLoading: boolean,\n        disabledAutoPromotion: boolean,\n        promotionCodes: string[],\n        productItems: LineItem[],\n        context: ContextSwitchParameters,\n        shippingCosts: number|null,\n        } {\n        return {\n            productItems: [],\n            promotionCodes: [],\n            isLoading: false,\n            isProductGridLoading: false,\n            disabledAutoPromotion: false,\n            shippingCosts: null,\n            context: {\n                currencyId: '',\n                paymentMethodId: '',\n                shippingMethodId: '',\n                languageId: '',\n                billingAddressId: '',\n                shippingAddressId: '',\n            },\n        };\n    },\n\n    computed: {\n        salesChannelId(): string {\n            return this.customer?.salesChannelId ?? '';\n        },\n\n        salesChannelContext(): SalesChannelContext {\n            return State.get('swOrder').context;\n        },\n\n        currency(): Entity<'currency'> {\n            return this.salesChannelContext.currency;\n        },\n\n        cart(): Cart {\n            return State.get('swOrder').cart;\n        },\n\n\n        customer(): Entity<'customer'>|null {\n            return State.get('swOrder').customer;\n        },\n\n        isCustomerActive(): boolean {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-member-access\n            return State.getters['swOrder/isCustomerActive'];\n        },\n\n        promotionCodeItems(): PromotionCodeItem[] {\n            return this.promotionCodes.map(code => {\n                return {\n                    type: LineItemType.PROMOTION,\n                    referencedId: code,\n                };\n            });\n        },\n\n        cartDelivery(): CartDelivery | null {\n            return this.cart?.deliveries[0] as CartDelivery | null;\n        },\n    },\n\n    watch: {\n        salesChannelContext(value: SalesChannelContext): void {\n            // Update context after switching customer successfully\n            this.context = {\n                ...this.context,\n                currencyId: value.context.currencyId,\n                languageId: value.context.languageIdChain[0],\n                shippingMethodId: value.shippingMethod.id,\n                paymentMethodId: value.paymentMethod.id,\n                // eslint-disable-next-line max-len\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n                billingAddressId: value.customer?.activeBillingAddress?.id ?? '',\n                // eslint-disable-next-line max-len\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n                shippingAddressId: value.customer?.activeShippingAddress?.id ?? '',\n            };\n        },\n    },\n\n    methods: {\n        onCloseModal(): void {\n            if (!this.customer || !this.cart.token) {\n                this.$emit('modal-close');\n                return;\n            }\n\n            void this.cancelCart().then(() => {\n                this.$emit('modal-close');\n            });\n        },\n\n        async onPreviewOrder(): Promise<void> {\n            const promises = [];\n\n            this.isLoading = true;\n\n            promises.push(this.updateOrderContext());\n\n            if (this.disabledAutoPromotion) {\n                promises.push(this.disableAutoAppliedPromotions());\n            }\n\n            if (this.promotionCodes.length) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                promises.push(this.addPromotionCodes());\n            }\n\n            if (this.shippingCosts !== null\n                && this.shippingCosts !== this.cartDelivery?.shippingCosts?.totalPrice) {\n                promises.push(this.modifyShippingCost(this.shippingCosts));\n            }\n\n            try {\n                const responses = await Promise.all(promises);\n                if (responses) {\n                    this.$emit('order-preview');\n                }\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        async onSaveItem(item: LineItem): Promise<void> {\n            this.isProductGridLoading = true;\n\n            try {\n                await State.dispatch('swOrder/saveLineItem', {\n                    salesChannelId: this.salesChannelId,\n                    contextToken: this.cart.token,\n                    item,\n                });\n            } finally {\n                this.isProductGridLoading = false;\n            }\n        },\n\n        addPromotionCodes(): Promise<void> {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return State.dispatch('swOrder/saveMultipleLineItems', {\n                salesChannelId: this.customer?.salesChannelId,\n                contextToken: this.cart.token,\n                items: this.promotionCodeItems,\n            });\n        },\n\n        updatePromotion(promotions: string[]): void {\n            this.promotionCodes = promotions;\n        },\n\n        async onRemoveItems(lineItemKeys: string[]): Promise<void> {\n            this.isProductGridLoading = true;\n\n            try {\n                await State.dispatch('swOrder/removeLineItems', {\n                    salesChannelId: this.salesChannelId,\n                    contextToken: this.cart.token,\n                    lineItemKeys: lineItemKeys,\n                });\n            } finally {\n                this.isProductGridLoading = false;\n            }\n        },\n\n        updateAutoPromotionToggle(value: boolean): void {\n            this.disabledAutoPromotion = value;\n        },\n\n        updateShippingCost(value: number): void {\n            this.shippingCosts = value;\n        },\n\n        updateOrderContext(): Promise<void> {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return State.dispatch('swOrder/updateOrderContext', {\n                context: this.context,\n                salesChannelId: this.salesChannelId,\n                contextToken: this.cart.token,\n            });\n        },\n\n        disableAutoAppliedPromotions(): Promise<void> {\n            const additionalParams = { salesChannelId: this.salesChannelId };\n\n            return Service('cartStoreService').disableAutomaticPromotions(this.cart.token, additionalParams)\n                .then(() => {\n                    State.commit('swOrder/setDisabledAutoPromotion', true);\n                });\n        },\n\n        modifyShippingCost(amount: number): Promise<void> {\n            if (!this.cartDelivery) {\n                return Promise.resolve();\n            }\n\n            const positiveAmount = Math.abs(amount);\n            this.cartDelivery.shippingCosts.unitPrice = positiveAmount;\n            this.cartDelivery.shippingCosts.totalPrice = positiveAmount;\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return State.dispatch('swOrder/modifyShippingCosts', {\n                salesChannelId: this.customer?.salesChannelId,\n                contextToken: this.cart.token,\n                shippingCosts: this.cartDelivery?.shippingCosts,\n            });\n        },\n\n        cancelCart(): Promise<void> {\n            return State.dispatch('swOrder/cancelCart', {\n                salesChannelId: this.salesChannelId,\n                contextToken: this.cart.token,\n            }).then(() => {\n                this.$emit('modal-close');\n            });\n        },\n    },\n});\n","export default \"\\n{% block sw_order_create_modal %}\\n<sw-modal\\n    class=\\\"sw-order-create-initial-modal\\\"\\n    :closable=\\\"false\\\"\\n    :title=\\\"$tc('sw-order.initialModal.titleNewOrder')\\\"\\n    variant=\\\"large\\\"\\n    @modal-close=\\\"onCloseModal\\\"\\n>\\n    <template #default>\\n        \\n        {% block sw_order_create_modal_tabs %}\\n        <sw-tabs\\n            class=\\\"sw-order-create-initial-modal__tabs\\\"\\n            default-item=\\\"customer\\\"\\n            position-identifier=\\\"sw-order-create-initial-modal\\\"\\n        >\\n            <template #default=\\\"{ active }\\\">\\n                \\n                {% block sw_order_create_modal_tabs_customer %}\\n                <sw-tabs-item\\n                    class=\\\"sw-order-create-initial-modal__tab-customer\\\"\\n                    name=\\\"customer\\\"\\n                    :active-tab=\\\"active\\\"\\n                >\\n                    {{ $tc('sw-order.initialModal.tabCustomer') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_create_modal_tabs_products %}\\n                <sw-tabs-item\\n                    class=\\\"sw-order-create-initial-modal__tab-product\\\"\\n                    name=\\\"products\\\"\\n                    :active-tab=\\\"active\\\"\\n                    :disabled=\\\"!customer\\\"\\n                >\\n                    {{ $tc('sw-order.initialModal.tabProducts') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_create_modal_tabs_options %}\\n                <sw-tabs-item\\n                    class=\\\"sw-order-create-initial-modal__tab-options\\\"\\n                    name=\\\"options\\\"\\n                    :active-tab=\\\"active\\\"\\n                    :disabled=\\\"!customer\\\"\\n                >\\n                    {{ $tc('sw-order.initialModal.tabOptions') }}\\n                </sw-tabs-item>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_create_modal_tabs_extension %}{% endblock %}\\n            </template>\\n\\n            <template #content=\\\"{ active }\\\">\\n                \\n                {% block sw_order_create_modal_tabs_content %}\\n                <div class=\\\"sw-order-create-initial-modal__content\\\">\\n                    \\n                    {% block sw_order_create_modal_tabs_content_customer %}\\n                    <sw-order-customer-grid\\n                        v-show=\\\"active === 'customer'\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_order_create_modal_tabs_content_products %}\\n                    <sw-order-line-items-grid-sales-channel\\n                        v-show=\\\"active === 'products'\\\"\\n                        :is-loading=\\\"isProductGridLoading\\\"\\n                        :sales-channel-id=\\\"salesChannelId\\\"\\n                        :cart=\\\"cart\\\"\\n                        :currency=\\\"currency\\\"\\n                        :is-customer-active=\\\"isCustomerActive\\\"\\n                        @on-save-item=\\\"onSaveItem\\\"\\n                        @on-remove-items=\\\"onRemoveItems\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_order_create_modal_tabs_content_options %}\\n                    <sw-order-create-options\\n                        v-if=\\\"active === 'options'\\\"\\n                        :disabled=\\\"!customer\\\"\\n                        :disabled-auto-promotion=\\\"disabledAutoPromotion\\\"\\n                        :promotion-codes=\\\"promotionCodes\\\"\\n                        :context=\\\"context\\\"\\n                        @promotions-change=\\\"updatePromotion\\\"\\n                        @auto-promotion-toggle=\\\"updateAutoPromotionToggle\\\"\\n                        @shipping-cost-change=\\\"updateShippingCost\\\"\\n                    />\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n            </template>\\n        </sw-tabs>\\n        {% endblock %}\\n    </template>\\n\\n    <template #modal-footer>\\n        \\n        {% block sw_order_create_modal_footer_modal_footer_cancel %}\\n        <sw-button\\n            class=\\\"sw-order-create-initial-modal__button-cancel\\\"\\n            size=\\\"small\\\"\\n            @click=\\\"onCloseModal\\\"\\n        >\\n            {{ $tc('global.default.cancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_create_modal_footer_modal_footer_preview_order %}\\n        <sw-button\\n            class=\\\"sw-order-create-initial-modal__button-preview\\\"\\n            size=\\\"small\\\"\\n            variant=\\\"primary\\\"\\n            :disabled=\\\"!customer\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            @click=\\\"onPreviewOrder\\\"\\n        >\\n            {{ $tc('sw-order.initialModal.buttonPreviewOrder') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n\\n</sw-modal>\\n{% endblock %}\\n\";"],"sourceRoot":""}