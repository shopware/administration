{"version":3,"sources":["webpack:///./src/module/sw-sales-channel/component/sw-sales-channel-modal-grid/index.js","webpack:///./src/module/sw-sales-channel/component/sw-sales-channel-modal-grid/sw-sales-channel-modal-grid.html.twig","webpack:///./src/module/sw-sales-channel/component/sw-sales-channel-modal-grid/sw-sales-channel-modal-grid.scss"],"names":["Defaults","Shopware","Criteria","Data","template","inject","props","productStreamsExist","type","Boolean","required","default","productStreamsLoading","addChannelAction","Object","data","salesChannelTypes","isLoading","total","computed","salesChannelTypeRepository","this","repositoryFactory","create","created","createdComponent","methods","_this","context","_objectSpread","Context","api","languageId","State","get","search","then","response","onAddChannel","id","$emit","onOpenDetail","detailType","find","salesChannelType","isProductComparisonSalesChannelType","salesChannelTypeId","productComparisonTypeId","content","__esModule","module","i","locals","exports","add"],"mappings":"yvBAOA,IAAQA,EAAaC,SAAbD,SACAE,EAAaD,SAASE,KAAtBD,SAGO,WACXE,SCZW,yqGDcXC,OAAQ,CAAC,qBAETC,MAAO,CACHC,oBAAqB,CACjBC,KAAMC,QACNC,UAAU,EAGVC,SAAS,GAGbC,sBAAuB,CACnBJ,KAAMC,QACNC,UAAU,EACVC,SAAS,GAGbE,iBAAkB,CACdL,KAAMM,OACNJ,UAAU,IAIlBK,KAAI,WACA,MAAO,CACHC,kBAAmB,GACnBC,WAAW,EACXC,MAAO,IAIfC,SAAU,CACNC,2BAA0B,WACtB,OAAOC,KAAKC,kBAAkBC,OAAO,wBAI7CC,QAAO,WACHH,KAAKI,oBAGTC,QAAS,CACLD,iBAAgB,WAAI,IAADE,EAAA,KACfN,KAAKJ,WAAY,EACjB,IAAMW,EAAOC,IAAA,GAAQ5B,SAAS6B,QAAQC,KAAG,IAAEC,WAAY/B,SAASgC,MAAMC,IAAI,WAAWF,aACrFX,KAAKD,2BAA2Be,OAAO,IAAIjC,EAAS,EAAG,KAAM0B,GAASQ,MAAK,SAACC,GACxEV,EAAKT,MAAQmB,EAASnB,MACtBS,EAAKX,kBAAoBqB,EACzBV,EAAKV,WAAY,MAIzBqB,aAAY,SAACC,GACTlB,KAAKmB,MAAM,mBAAoBD,IAGnCE,aAAY,SAACF,GACT,IAAMG,EAAarB,KAAKL,kBAAkB2B,MAAK,SAAAC,GAAgB,OAAIA,EAAiBL,KAAOA,KAC3FlB,KAAKmB,MAAM,mBAAoBE,IAGnCG,oCAAmC,SAACC,GAChC,OAAOA,IAAuB9C,EAAS+C,4B,qBEzEnD,IAAIC,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQrC,SACnB,iBAAZqC,IAAsBA,EAAU,CAAC,CAACE,EAAOC,EAAIH,EAAS,MAC7DA,EAAQI,SAAQF,EAAOG,QAAUL,EAAQI,SAG/BE,EADH,EAAQ,QAAwE3C,SACzE,WAAYqC,GAAS,EAAM","file":"static/js/da597c272782b58576ab.js","sourcesContent":["/**\n * @package buyers-experience\n */\n\nimport template from './sw-sales-channel-modal-grid.html.twig';\nimport './sw-sales-channel-modal-grid.scss';\n\nconst { Defaults } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    props: {\n        productStreamsExist: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        productStreamsLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        addChannelAction: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            salesChannelTypes: [],\n            isLoading: false,\n            total: 0,\n        };\n    },\n\n    computed: {\n        salesChannelTypeRepository() {\n            return this.repositoryFactory.create('sales_channel_type');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n            const context = { ...Shopware.Context.api, languageId: Shopware.State.get('session').languageId };\n            this.salesChannelTypeRepository.search(new Criteria(1, 500), context).then((response) => {\n                this.total = response.total;\n                this.salesChannelTypes = response;\n                this.isLoading = false;\n            });\n        },\n\n        onAddChannel(id) {\n            this.$emit('grid-channel-add', id);\n        },\n\n        onOpenDetail(id) {\n            const detailType = this.salesChannelTypes.find(salesChannelType => salesChannelType.id === id);\n            this.$emit('grid-detail-open', detailType);\n        },\n\n        isProductComparisonSalesChannelType(salesChannelTypeId) {\n            return salesChannelTypeId === Defaults.productComparisonTypeId;\n        },\n    },\n};\n","export default \"\\n{% block sw_sales_channel_modal_grid %}\\n<sw-grid\\n    v-if=\\\"!isLoading\\\"\\n    class=\\\"sw-sales-channel-modal-grid\\\"\\n    :items=\\\"salesChannelTypes\\\"\\n    :selectable=\\\"false\\\"\\n    :header=\\\"false\\\"\\n    :table=\\\"true\\\"\\n>\\n    <template\\n        #columns=\\\"{ item }\\\"\\n    >\\n        \\n        {% block sw_sales_channel_grid_columns %}\\n        \\n        {% block sw_sales_channel_grid_columns_icon %}\\n        <sw-grid-column\\n            flex=\\\"85px\\\"\\n            data-index=\\\"icon\\\"\\n            class=\\\"sw-sales-channel-modal-grid__icon-column\\\"\\n            label=\\\"icon\\\"\\n        >\\n            <span\\n                class=\\\"sw-sales-channel-modal-grid__icon\\\"\\n                role=\\\"button\\\"\\n                tabindex=\\\"0\\\"\\n                @click=\\\"onOpenDetail(item.id)\\\"\\n                @keydown.enter=\\\"onOpenDetail(item.id)\\\"\\n            >\\n                <sw-icon\\n                    v-if=\\\"item.iconName\\\"\\n                    :name=\\\"item.iconName\\\"\\n                />\\n            </span>\\n        </sw-grid-column>\\n        {% endblock %}\\n\\n        \\n        {% block sw_sales_channel_grid_columns_content %}\\n        <sw-grid-column\\n            flex=\\\"minmax(150px, 1fr)\\\"\\n            data-index=\\\"content\\\"\\n            label=\\\"content\\\"\\n        >\\n            <div class=\\\"sw-sales-channel-modal-grid__item-content\\\">\\n                <h3\\n                    class=\\\"sw-sales-channel-modal-grid__item-name\\\"\\n                    role=\\\"button\\\"\\n                    tabindex=\\\"0\\\"\\n                    @click=\\\"onOpenDetail(item.id)\\\"\\n                    @keydown.enter=\\\"onOpenDetail(item.id)\\\"\\n                >{{ item.translated.name }}</h3>\\n                <div\\n                    class=\\\"sw-sales-channel-modal-grid__item-description\\\"\\n                    role=\\\"button\\\"\\n                    tabindex=\\\"0\\\"\\n                    @click=\\\"onOpenDetail(item.id)\\\"\\n                    @keydown.enter=\\\"onOpenDetail(item.id)\\\"\\n                >{{ item.translated.description }}</div>\\n            </div>\\n        </sw-grid-column>\\n        {% endblock %}\\n\\n        \\n        {% block sw_sales_channel_grid_columns_actions %}\\n        <sw-grid-column\\n            flex=\\\"auto\\\"\\n            align=\\\"center\\\"\\n            data-index=\\\"actions\\\"\\n            class=\\\"sw-sales-channel-modal-grid__actions\\\"\\n            label=\\\"actions\\\"\\n        >\\n            <sw-button\\n                v-tooltip=\\\"{\\n                    message: $tc('sw-sales-channel.modal.messageNoProductStreams'),\\n                    showOnDisabledElements: true,\\n                    disabled: !addChannelAction.disabled(item.id)\\n                }\\\"\\n                class=\\\"sw-sales-channel-modal__add-channel-action\\\"\\n                size=\\\"small\\\"\\n                variant=\\\"primary\\\"\\n                :is-loading=\\\"addChannelAction.loading(item.id)\\\"\\n                :disabled=\\\"addChannelAction.disabled(item.id)\\\"\\n                @click=\\\"onAddChannel(item.id)\\\"\\n            >\\n                {{ $tc('sw-sales-channel.modal.buttonAddChannel') }}\\n            </sw-button>\\n        </sw-grid-column>\\n        {% endblock %}\\n        {% endblock %}\\n    </template>\\n</sw-grid>\\n\\n\\n{% block sw_sales_channel_modal_grid_loader %}\\n<sw-loader v-else />\\n    {% endblock %}\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-sales-channel-modal-grid.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"444e8491\", content, true, {});"],"sourceRoot":""}