{"version":3,"sources":["webpack:///./src/app/asyncComponent/media/sw-image-slider/index.js","webpack:///./src/app/asyncComponent/media/sw-image-slider/sw-image-slider.html.twig","webpack:///./src/app/asyncComponent/media/sw-image-slider/sw-image-slider.scss"],"names":["Filter","Shopware","template","props","images","type","Array","required","canvasWidth","Number","default","validator","value","canvasHeight","gap","elementPadding","navigationType","String","includes","enableDescriptions","Boolean","overflow","rewind","bordered","rounded","autoWidth","itemPerPage","initialIndex","arrowStyle","buttonStyle","displayMode","data","currentPageNumber","currentItemIndex","computed","totalPage","Math","ceil","this","length","remainder","buttonList","_this","filter","image","index","wrapperStyles","width","concat","componentStyles","containerStyles","offset","overflowX","margin","scrollableContainerStyles","transform","itemWidth","translateAmount","imageStyles","objectFit","buttonClasses","showButtons","showArrows","watch","immediate","handler","onSetCurrentItem","methods","setCurrentPageNumber","pageNumber","isImageObject","_typeof","hasValidDescription","hasOwnProperty","description","getImage","link","src","URL","e","getByName","imageAlt","$tc","total","goToPreviousImage","max","$emit","goToNextImage","min","elementClasses","elementStyles","_objectSpread","cursor","height","padding","borderStyles","imageClasses","borderBottomLeftRadius","borderBottomRightRadius","floor","isHiddenItem","content","__esModule","module","i","locals","exports","add"],"mappings":"iZAGA,IAAQA,EAAWC,SAAXD,OA2BO,WACXE,SC/BW,y5HDiCXC,MAAO,CACHC,OAAQ,CACJC,KAAMC,MACNC,UAAU,GAGdC,YAAa,CACTH,KAAMI,OACNF,UAAU,EACVG,QAAS,EACTC,UAAS,SAACC,GACN,OAAOA,GAAS,IAIxBC,aAAc,CACVR,KAAMI,OACNF,UAAU,EACVG,QAAS,EACTC,UAAS,SAACC,GACN,OAAOA,GAAS,IAIxBE,IAAK,CACDT,KAAMI,OACNF,UAAU,EACVG,QAAS,GACTC,UAAS,SAACC,GACN,OAAOA,GAAS,IAIxBG,eAAgB,CACZV,KAAMI,OACNF,UAAU,EACVG,QAAS,EACTC,UAAS,SAACC,GACN,OAAOA,GAAS,IAIxBI,eAAgB,CACZX,KAAMY,OACNV,UAAU,EACVG,QAAS,QACTC,UAAS,SAACC,GACN,MAAO,CAAC,QAAS,SAAU,OAAOM,SAASN,KAInDO,mBAAoB,CAChBd,KAAMe,QACNb,UAAU,EACVG,SAAS,GAGbW,SAAU,CACNhB,KAAMY,OACNV,UAAU,EACVG,QAAS,SACTC,UAAS,SAACC,GACN,MAAO,CAAC,SAAU,WAAWM,SAASN,KAI9CU,OAAQ,CACJjB,KAAMe,QACNb,UAAU,EACVG,SAAS,GAGba,SAAU,CACNlB,KAAMe,QACNb,UAAU,EAGVG,SAAS,GAGbc,QAAS,CACLnB,KAAMe,QACNb,UAAU,EAGVG,SAAS,GAGbe,UAAW,CACPpB,KAAMe,QACNb,UAAU,EACVG,SAAS,GAGbgB,YAAa,CACTrB,KAAMI,OACNF,UAAU,EACVG,QAAS,GAGbiB,aAAc,CACVtB,KAAMI,OACNF,UAAU,EACVG,QAAS,GAGbkB,WAAY,CACRvB,KAAMY,OACNV,UAAU,EACVG,QAAS,SACTC,UAAS,SAACC,GACN,MAAO,CAAC,SAAU,UAAW,QAAQM,SAASN,KAItDiB,YAAa,CACTxB,KAAMY,OACNV,UAAU,EACVG,QAAS,UACTC,UAAS,SAACC,GACN,MAAO,CAAC,SAAU,UAAW,QAAQM,SAASN,KAItDkB,YAAa,CACTzB,KAAMY,OACNV,UAAU,EACVG,QAAS,QACTC,UAAS,SAACC,GACN,MAAO,CAAC,UAAW,QAAS,QAAQM,SAASN,MAKzDmB,KAAI,WACA,MAAO,CACHC,kBAAmB,EACnBC,iBAAkB,IAI1BC,SAAU,CACNC,UAAS,WACL,OAAOC,KAAKC,KAAMC,KAAKlC,OAAOmC,OAAUD,KAAKZ,cAGjDc,UAAS,WACL,OAAOF,KAAKlC,OAAOmC,OAASD,KAAKZ,aAGrCe,WAAU,WAAI,IAADC,EAAA,KACT,OAAyB,IAArBJ,KAAKZ,YACEY,KAAKlC,OAGTkC,KAAKlC,OAAOuC,QAAO,SAACC,EAAOC,GAC9B,OAAOA,EAAQH,EAAKhB,aAAgB,MAI5CoB,cAAa,WACT,MAAO,CACHC,MAAOT,KAAK9B,YAAW,GAAAwC,OAAMV,KAAK9B,YAAW,MAAO,SAI5DyC,gBAAe,WACX,MAAO,CACHF,MAAOT,KAAKb,UAAY,OAAM,GAAAuB,OAAM,IAAMV,KAAKlC,OAAOmC,OAAM,OAIpEW,gBAAe,WACX,IAAMC,EAA6B,YAApBb,KAAKV,WAA2B,IAAM,EAKrD,MAAO,CACHmB,MALUT,KAAK9B,YAAW,GAAAwC,OACvBV,KAAK9B,YAAc2C,EAAM,qBAAAH,OACXG,EAAM,OAIvBC,UAAWd,KAAKjB,SAChBgC,OAA4B,YAApBf,KAAKV,WAA2B,SAAW,IAI3D0B,0BAAyB,WACrB,GAAyB,IAArBhB,KAAKZ,aACiB,IAAnBY,KAAKE,WACLF,KAAKlC,OAAOmC,QAAUD,KAAKZ,YAC9B,MAAO,CACHqB,MAAM,GAADC,OAAsB,IAAjBV,KAAKH,UAAe,KAC9BrB,IAAI,GAADkC,OAAKV,KAAKxB,IAAG,MAChByC,UAAU,eAADP,OAAkBV,KAAKN,kBAAoBM,KAAKH,UAAa,IAAG,OAIjF,IAAMqB,EAAY,IAAMlB,KAAKlC,OAAOmC,OAC9BkB,EAAmBnB,KAAKN,oBAAsBM,KAAKH,UAAY,IAC7DG,KAAKN,kBAAoB,GAAKM,KAAKZ,YAAcY,KAAKE,WAAagB,EACpElB,KAAKN,kBAAoBM,KAAKZ,YAAe8B,EAEpD,MAAO,CACHT,MAAM,GAADC,OAAgE,KAA1DV,KAAKH,UAAY,EAAIG,KAAKE,UAAYF,KAAKZ,aAAkB,KACxEZ,IAAI,GAADkC,OAAKV,KAAKxB,IAAG,MAChByC,UAAU,eAADP,OAAiBS,EAAe,QAIjDC,YAAW,WACP,MAAO,CACHC,UAAWrB,KAAKR,cAIxB8B,cAAa,WACT,MAAO,CAAE,oBAA0C,WAArBtB,KAAKT,cAGvCgC,YAAW,WACP,OAAOvB,KAAKlC,OAAOmC,QAAU,GACtBD,KAAKlC,OAAOmC,OAASD,KAAKZ,aAC1B,CAAC,SAAU,OAAOR,SAASoB,KAAKtB,iBAG3C8C,WAAU,WACN,OAAOxB,KAAKlC,OAAOmC,OAASD,KAAKZ,aAC1B,CAAC,QAAS,OAAOR,SAASoB,KAAKtB,kBAI9C+C,MAAO,CACHpC,aAAc,CACVqC,WAAW,EACXC,QAAO,SAACrD,GACJ0B,KAAK4B,iBAAiBtD,MAKlCuD,QAAS,CACLC,qBAAoB,SAACC,GACjB/B,KAAKN,kBAAoBqC,GAG7BC,cAAa,SAAC1B,GACV,MAAwB,WAAjB2B,IAAO3B,IAGlB4B,oBAAmB,SAAC5B,GAChB,OAAON,KAAKnB,oBACRmB,KAAKgC,cAAc1B,IACnBA,EAAM6B,eAAe,gBACrB7B,EAAM8B,YAAYnC,QAAU,GAGpCoC,SAAQ,SAAC/B,GACL,IAAMgC,EAAOtC,KAAKgC,cAAc1B,GAASA,EAAMiC,IAAMjC,EAErD,IAEI,IAAIkC,IAAIF,GACV,MAAOG,GACL,OAAO/E,EAAOgF,UAAU,QAAjBhF,CAA0B4E,GAGrC,OAAOA,GAGXK,SAAQ,SAACpC,GACL,OAAOP,KAAK4C,IAAI,2BAA4B,EAAG,CAC3CrC,MAAOA,EAAQ,EACfsC,MAAO7C,KAAKlC,OAAOmC,UAI3B6C,kBAAiB,WACb9C,KAAKN,kBAAqBM,KAAKhB,QAAqC,IAA3BgB,KAAKN,kBACxCM,KAAKH,UAAY,EACjBC,KAAKiD,IAAI/C,KAAKN,kBAAoB,EAAG,GAElB,IAArBM,KAAKZ,cACLY,KAAKL,iBAAmBK,KAAKN,kBAC7BM,KAAKgD,MAAM,eAAgBhD,KAAKN,qBAIxCuD,cAAa,WACTjD,KAAKN,kBAAqBM,KAAKhB,QAAUgB,KAAKN,oBAAsBM,KAAKH,UAAY,EAC/E,EACAC,KAAKoD,IAAIlD,KAAKN,kBAAoB,EAAGM,KAAKH,UAAY,GAEnC,IAArBG,KAAKZ,cACLY,KAAKL,iBAAmBK,KAAKN,kBAC7BM,KAAKgD,MAAM,eAAgBhD,KAAKN,qBAIxCyD,eAAc,SAAC5C,GACX,MAAO,CACH,CAAE,aAAcA,IAAUP,KAAKL,kBAAoBK,KAAKZ,YAAc,GACtE,CAAE,eAAgBY,KAAKf,UACvB,CAAE,cAAee,KAAKd,WAI9BkE,cAAa,SAAC9C,EAAOC,GACjB,O,iWAAA8C,CAAA,CACIC,OAAQ/C,IAAUP,KAAKL,iBAAmB,UAAY,UACtD4D,OAAQvD,KAAKzB,aAAY,GAAAmC,OAAMV,KAAKzB,aAAY,MAAO,OACvDiF,QAASxD,KAAKvB,eAAc,GAAAiC,OAAMV,KAAKvB,eAAc,MAAO,GACzDuB,KAAKyD,aAAanD,KAI7BoD,aAAY,SAACnD,GACT,MAAO,CACH,aAAcA,IAAUP,KAAKL,iBAC7B,iBAAkBK,KAAKb,YAI/BsE,aAAY,SAACnD,GACT,OAAKN,KAAKkC,oBAAoB5B,GAIvB,CACHqD,uBAAwB,EACxBC,wBAAyB,GALlB,IASfhC,iBAAgB,SAACrB,GACTA,IAAUP,KAAKL,mBAInBK,KAAKN,kBAAoBI,KAAK+D,MAAMtD,EAAQP,KAAKZ,aACjDY,KAAKL,iBAAmBY,EACxBP,KAAKgD,MAAM,eAAgBzC,KAG/BuD,aAAY,SAACvD,GACT,OAAyB,IAArBP,KAAKZ,YACEmB,IAAUP,KAAKL,iBAGtBK,KAAKN,oBAAsBM,KAAKH,UAAY,EACrCU,EAAQP,KAAKlC,OAAOmC,OAASD,KAAKZ,YAGtCY,KAAKN,kBAAoBM,KAAKZ,YAAcmB,GAC5CA,IAAUP,KAAKN,kBAAoB,GAAKM,KAAKZ,gB,qBE9XhE,IAAI2E,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQ3F,SACnB,iBAAZ2F,IAAsBA,EAAU,CAAC,CAACE,EAAOC,EAAIH,EAAS,MAC7DA,EAAQI,SAAQF,EAAOG,QAAUL,EAAQI,SAG/BE,EADH,EAAQ,QAAwEjG,SACzE,WAAY2F,GAAS,EAAM,K","file":"static/js/29e9f10c46ff6e833037.js","sourcesContent":["import template from './sw-image-slider.html.twig';\nimport './sw-image-slider.scss';\n\nconst { Filter } = Shopware;\n\n/**\n * @description Renders an image slider with possible image descriptions\n * @status ready\n * @package content\n * @example-type static\n * @component-example\n * <sw-image-slider\n *     :images=\"[\n *         {\n *             src: 'https://www.shopware.com/media/unknown/29/03/ce/shopware_logo_white_on_blue.svg',\n *             description: 'This Image is awesome!'\n *         },\n *         'https://www.shopware.com/media/image/5e/98/6d/small-differentiator-illustration-01.png',\n *         {\n *             src: 'https://www.shopware.com/media/image/72/44/fd/image-material.jpg',\n *         }\n *     ]\"\n *     :canvas-width=\"600\"\n *     :canvas-height=\"300\"\n *     overflow=\"visible\"\n *     navigation-type=\"all\"\n *     enable-descriptions\n * ></sw-image-slider>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    props: {\n        images: {\n            type: Array,\n            required: true,\n        },\n\n        canvasWidth: {\n            type: Number,\n            required: false,\n            default: 0,\n            validator(value) {\n                return value >= 0;\n            },\n        },\n\n        canvasHeight: {\n            type: Number,\n            required: false,\n            default: 0,\n            validator(value) {\n                return value >= 0;\n            },\n        },\n\n        gap: {\n            type: Number,\n            required: false,\n            default: 20,\n            validator(value) {\n                return value >= 0;\n            },\n        },\n\n        elementPadding: {\n            type: Number,\n            required: false,\n            default: 0,\n            validator(value) {\n                return value >= 0;\n            },\n        },\n\n        navigationType: {\n            type: String,\n            required: false,\n            default: 'arrow',\n            validator(value) {\n                return ['arrow', 'button', 'all'].includes(value);\n            },\n        },\n\n        enableDescriptions: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        overflow: {\n            type: String,\n            required: false,\n            default: 'hidden',\n            validator(value) {\n                return ['hidden', 'visible'].includes(value);\n            },\n        },\n\n        rewind: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        bordered: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        rounded: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        autoWidth: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        itemPerPage: {\n            type: Number,\n            required: false,\n            default: 1,\n        },\n\n        initialIndex: {\n            type: Number,\n            required: false,\n            default: 0,\n        },\n\n        arrowStyle: {\n            type: String,\n            required: false,\n            default: 'inside',\n            validator(value) {\n                return ['inside', 'outside', 'none'].includes(value);\n            },\n        },\n\n        buttonStyle: {\n            type: String,\n            required: false,\n            default: 'outside',\n            validator(value) {\n                return ['inside', 'outside', 'none'].includes(value);\n            },\n        },\n\n        displayMode: {\n            type: String,\n            required: false,\n            default: 'cover',\n            validator(value) {\n                return ['contain', 'cover', 'none'].includes(value);\n            },\n        },\n    },\n\n    data() {\n        return {\n            currentPageNumber: 0,\n            currentItemIndex: 0,\n        };\n    },\n\n    computed: {\n        totalPage() {\n            return Math.ceil((this.images.length) / this.itemPerPage);\n        },\n\n        remainder() {\n            return this.images.length % this.itemPerPage;\n        },\n\n        buttonList() {\n            if (this.itemPerPage === 1) {\n                return this.images;\n            }\n\n            return this.images.filter((image, index) => {\n                return index % this.itemPerPage === 0;\n            });\n        },\n\n        wrapperStyles() {\n            return {\n                width: this.canvasWidth ? `${this.canvasWidth}px` : '100%',\n            };\n        },\n\n        componentStyles() {\n            return {\n                width: this.autoWidth ? 'auto' : `${100 / this.images.length}%`,\n            };\n        },\n\n        containerStyles() {\n            const offset = this.arrowStyle === 'outside' ? 112 : 0;\n            const width = this.canvasWidth ?\n                `${this.canvasWidth - offset}px`\n                : `calc(100% - ${offset}px)`;\n\n            return {\n                width,\n                overflowX: this.overflow,\n                margin: this.arrowStyle === 'outside' ? '0 56px' : 0,\n            };\n        },\n\n        scrollableContainerStyles() {\n            if (this.itemPerPage === 1\n                || this.remainder === 0\n                || this.images.length <= this.itemPerPage) {\n                return {\n                    width: `${this.totalPage * 100}%`,\n                    gap: `${this.gap}px`,\n                    transform: `translateX(-${(this.currentPageNumber / this.totalPage) * 100}%)`,\n                };\n            }\n\n            const itemWidth = 100 / this.images.length;\n            const translateAmount = (this.currentPageNumber === this.totalPage - 1)\n                ? ((this.currentPageNumber - 1) * this.itemPerPage + this.remainder) * itemWidth\n                : (this.currentPageNumber * this.itemPerPage) * itemWidth;\n\n            return {\n                width: `${(this.totalPage - 1 + this.remainder / this.itemPerPage) * 100}%`,\n                gap: `${this.gap}px`,\n                transform: `translateX(-${translateAmount}%)`,\n            };\n        },\n\n        imageStyles() {\n            return {\n                objectFit: this.displayMode,\n            };\n        },\n\n        buttonClasses() {\n            return { 'is--button-inside': this.buttonStyle === 'inside' };\n        },\n\n        showButtons() {\n            return this.images.length >= 2\n                && this.images.length > this.itemPerPage\n                && ['button', 'all'].includes(this.navigationType);\n        },\n\n        showArrows() {\n            return this.images.length > this.itemPerPage\n                && ['arrow', 'all'].includes(this.navigationType);\n        },\n    },\n\n    watch: {\n        initialIndex: {\n            immediate: true,\n            handler(value) {\n                this.onSetCurrentItem(value);\n            },\n        },\n    },\n\n    methods: {\n        setCurrentPageNumber(pageNumber) {\n            this.currentPageNumber = pageNumber;\n        },\n\n        isImageObject(image) {\n            return typeof image === 'object';\n        },\n\n        hasValidDescription(image) {\n            return this.enableDescriptions &&\n                this.isImageObject(image) &&\n                image.hasOwnProperty('description') &&\n                image.description.length >= 1;\n        },\n\n        getImage(image) {\n            const link = this.isImageObject(image) ? image.src : image;\n\n            try {\n                // eslint-disable-next-line no-new\n                new URL(link);\n            } catch (e) {\n                return Filter.getByName('asset')(link);\n            }\n\n            return link;\n        },\n\n        imageAlt(index) {\n            return this.$tc('sw-image-slider.imageAlt', 0, {\n                index: index + 1,\n                total: this.images.length,\n            });\n        },\n\n        goToPreviousImage() {\n            this.currentPageNumber = (this.rewind && this.currentPageNumber === 0)\n                ? this.totalPage - 1\n                : Math.max(this.currentPageNumber - 1, 0);\n\n            if (this.itemPerPage === 1) {\n                this.currentItemIndex = this.currentPageNumber;\n                this.$emit('image-change', this.currentPageNumber);\n            }\n        },\n\n        goToNextImage() {\n            this.currentPageNumber = (this.rewind && this.currentPageNumber === this.totalPage - 1)\n                ? 0\n                : Math.min(this.currentPageNumber + 1, this.totalPage - 1);\n\n            if (this.itemPerPage === 1) {\n                this.currentItemIndex = this.currentPageNumber;\n                this.$emit('image-change', this.currentPageNumber);\n            }\n        },\n\n        elementClasses(index) {\n            return [\n                { 'is--active': index === this.currentItemIndex && this.itemPerPage > 1 },\n                { 'is--bordered': this.bordered },\n                { 'is--rounded': this.rounded },\n            ];\n        },\n\n        elementStyles(image, index) {\n            return {\n                cursor: index === this.currentItemIndex ? 'default' : 'pointer',\n                height: this.canvasHeight ? `${this.canvasHeight}px` : '100%',\n                padding: this.elementPadding ? `${this.elementPadding}px` : 0,\n                ...this.borderStyles(image),\n            };\n        },\n\n        imageClasses(index) {\n            return {\n                'is--active': index === this.currentItemIndex,\n                'is--auto-width': this.autoWidth,\n            };\n        },\n\n        borderStyles(image) {\n            if (!this.hasValidDescription(image)) {\n                return {};\n            }\n\n            return {\n                borderBottomLeftRadius: 0,\n                borderBottomRightRadius: 0,\n            };\n        },\n\n        onSetCurrentItem(index) {\n            if (index === this.currentItemIndex) {\n                return;\n            }\n\n            this.currentPageNumber = Math.floor(index / this.itemPerPage);\n            this.currentItemIndex = index;\n            this.$emit('image-change', index);\n        },\n\n        isHiddenItem(index) {\n            if (this.itemPerPage === 1) {\n                return index !== this.currentItemIndex;\n            }\n\n            if (this.currentPageNumber === this.totalPage - 1) {\n                return index < this.images.length - this.itemPerPage;\n            }\n\n            return this.currentPageNumber * this.itemPerPage > index\n                || index >= (this.currentPageNumber + 1) * this.itemPerPage;\n        },\n    },\n};\n","export default \"\\n{% block sw_image_slider %}\\n<div\\n    v-if=\\\"images.length > 0\\\"\\n    class=\\\"sw-image-slider\\\"\\n    :style=\\\"wrapperStyles\\\"\\n>\\n\\n    \\n    {% block sw_image_slider_image_container %}\\n    <div\\n        class=\\\"sw-image-slider__image-container\\\"\\n        :style=\\\"containerStyles\\\"\\n    >\\n\\n        \\n        {% block sw_image_slider_image_container_scrollable %}\\n        <div\\n            class=\\\"sw-image-slider__image-scrollable\\\"\\n            :style=\\\"scrollableContainerStyles\\\"\\n        >\\n\\n            \\n            {% block sw_image_slider_images %}\\n            <div\\n                v-for=\\\"(image, index) in images\\\"\\n                :key=\\\"index\\\"\\n                class=\\\"sw-image-slider__element-wrapper\\\"\\n                :aria-hidden=\\\"isHiddenItem(index)\\\"\\n                :style=\\\"componentStyles\\\"\\n            >\\n\\n                \\n                {% block sw_image_slider_image_images_container %}\\n                <div\\n                    class=\\\"sw-image-slider__element-container\\\"\\n                    :class=\\\"elementClasses(index)\\\"\\n                    :style=\\\"elementStyles(image, index)\\\"\\n                    role=\\\"button\\\"\\n                    tabindex=\\\"0\\\"\\n                    @click=\\\"onSetCurrentItem(index)\\\"\\n                    @keydown.enter=\\\"onSetCurrentItem(index)\\\"\\n                >\\n\\n                    \\n                    {% block sw_image_slider_image %}\\n                    <img\\n                        class=\\\"sw-image-slider__element-image\\\"\\n                        :class=\\\"imageClasses(index)\\\"\\n                        :style=\\\"[borderStyles(image), imageStyles]\\\"\\n                        :src=\\\"getImage(image)\\\"\\n                        :alt=\\\"imageAlt(index)\\\"\\n                    >\\n                {% endblock %}\\n                </div>\\n                {% endblock %}\\n\\n                \\n                {% block sw_image_slider_element_description %}\\n                <div\\n                    v-if=\\\"hasValidDescription(image)\\\"\\n                    class=\\\"sw-image-slider__element-description\\\"\\n                    :style=\\\"componentStyles\\\"\\n                >\\n                    {{ image.description }}\\n                </div>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_image_slider_image_container_arrows %}\\n        <template v-if=\\\"showArrows\\\">\\n\\n            \\n            {% block sw_image_slider_image_container_arrow_left %}\\n            <div\\n                class=\\\"sw-image-slider__arrow arrow-left\\\"\\n                role=\\\"button\\\"\\n                tabindex=\\\"0\\\"\\n                @click=\\\"goToPreviousImage\\\"\\n                @keydown.enter=\\\"goToPreviousImage\\\"\\n            >\\n                <sw-icon name=\\\"regular-chevron-left\\\" />\\n            </div>\\n            {% endblock %}\\n\\n            \\n            {% block sw_image_slider_image_container_arrow_right %}\\n            <div\\n                class=\\\"sw-image-slider__arrow arrow-right\\\"\\n                role=\\\"button\\\"\\n                tabindex=\\\"0\\\"\\n                @click=\\\"goToNextImage\\\"\\n                @keydown.enter=\\\"goToNextImage\\\"\\n            >\\n                <sw-icon name=\\\"regular-chevron-right\\\" />\\n            </div>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_image_slider_button_container %}\\n    <div\\n        v-if=\\\"showButtons\\\"\\n        class=\\\"sw-image-slider__buttons\\\"\\n        :class=\\\"buttonClasses\\\"\\n    >\\n\\n        \\n        {% block sw_image_slider_buttons %}\\n        <button\\n            v-for=\\\"(item, index) in buttonList\\\"\\n            :key=\\\"index\\\"\\n            class=\\\"sw-image-slider__buttons-element\\\"\\n            :class=\\\"{ 'is--active': index === currentPageNumber }\\\"\\n            @click=\\\"setCurrentPageNumber(index)\\\"\\n        >\\n            {{ imageAlt(index) }}\\n        </button>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-image-slider.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4d0d672a\", content, true, {});"],"sourceRoot":""}