(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[41973],{55003:function(){},41973:function(e,n,i){"use strict";i.r(n),i.d(n,{default:function(){return o}}),i(14098);let{Mixin:t}=Shopware,{moveItem:l,object:{cloneDeep:s}}=Shopware.Utils,a=Shopware.Data.Criteria;var o={template:'\n{% block sw_cms_element_image_slider_config %}\n<div class="sw-cms-el-config-image-slider">\n    \n    {% block sw_cms_element_image_slider_config_tabs %}\n    <sw-tabs\n        position-identifier="sw-cms-element-config-image-slider"\n        class="sw-cms-el-config-image-slider__tabs"\n        default-item="content"\n    >\n        <template #default="{ active }">\n            \n            {% block sw_cms_element_image_slider_config_tab_content %}\n            <sw-tabs-item\n                :title="$tc(\'sw-cms.elements.general.config.tab.content\')"\n                name="content"\n                :active-tab="active"\n            >\n                {{ $tc(\'sw-cms.elements.general.config.tab.content\') }}\n            </sw-tabs-item>\n            {% endblock %}\n            \n            {% block sw_cms_element_image_slider_config_tab_options %}\n            <sw-tabs-item\n                :title="$tc(\'sw-cms.elements.general.config.tab.settings\')"\n                name="settings"\n                :active-tab="active"\n            >\n                {{ $tc(\'sw-cms.elements.general.config.tab.settings\') }}\n            </sw-tabs-item>\n            {% endblock %}\n        </template>\n\n        <template\n            #content="{ active }"\n        >\n            \n            {% block sw_cms_element_image_slider_config_content %}\n            <sw-container\n                v-if="active === \'content\'"\n                class="sw-cms-el-config-image-slider__tab-content"\n            >\n                \n                {% block sw_cms_element_image_slider_config_media_selection %}\n                <sw-media-list-selection-v2\n                    :entity-media-items="mediaItems"\n                    :entity="entity"\n                    :upload-tag="uploadTag"\n                    :default-folder-name="defaultFolderName"\n                    @upload-finish="onImageUpload"\n                    @item-remove="onItemRemove"\n                    @open-sidebar="onOpenMediaModal"\n                    @item-sort="onItemSort"\n                />\n                {% endblock %}\n\n                \n                {% block sw_cms_element_image_slider_config_media_modal %}\n                <sw-media-modal-v2\n                    v-if="mediaModalIsOpen"\n                    variant="full"\n                    :caption="$tc(\'sw-cms.elements.general.config.caption.mediaUpload\')"\n                    :entity-context="cmsPageState.entityName"\n                    :initial-folder-id="cmsPageState.defaultMediaFolderId"\n                    @media-upload-remove-image="onItemRemove"\n                    @media-modal-selection-change="onMediaSelectionChange"\n                    @modal-close="onCloseMediaModal"\n                />\n                {% endblock %}\n            </sw-container>\n            {% endblock %}\n\n            \n            {% block sw_cms_element_image_slider_config_settings %}\n            <sw-container\n                v-if="active === \'settings\'"\n                class="sw-cms-el-config-image-slider__tab-settings"\n            >\n                <div class="sw-cms-el-config-image-slider__settings-options">\n\n                    \n                    {% block sw_cms_element_image_gallery_config_settings_display_mode %}\n                    <div class="sw-cms-el-config-image-slider__setting-option">\n\n                        \n                        {% block sw_cms_element_image_gallery_config_settings_display_mode_select %}\n                        <sw-select-field\n                            v-model:value="element.config.displayMode.value"\n                            :label="$tc(\'sw-cms.elements.general.config.label.displayMode\')"\n                            class="sw-cms-el-config-image-slider__setting-display-mode"\n                            @update:value="onChangeDisplayMode"\n                        >\n                            <option value="standard">\n                                {{ $tc(\'sw-cms.elements.general.config.label.displayModeStandard\') }}\n                            </option>\n                            <option value="cover">\n                                {{ $tc(\'sw-cms.elements.general.config.label.displayModeCover\') }}\n                            </option>\n                            <option value="contain">\n                                {{ $tc(\'sw-cms.elements.general.config.label.displayModeContain\') }}\n                            </option>\n                        </sw-select-field>\n                        {% endblock %}\n\n                        \n                        {% block sw_cms_element_image_gallery_config_settings_min_height %}\n                        <sw-text-field\n                            v-model:value="element.config.minHeight.value"\n                            :label="$tc(\'sw-cms.elements.image.config.label.minHeight\')"\n                            :placeholder="$tc(\'sw-cms.elements.image.config.label.minHeight\')"\n                            :help-text="$tc(\'sw-cms.elements.image.config.label.minHeightHelpText\')"\n                            :disabled="element.config.displayMode.value !== \'cover\'"\n                            @update:value="onChangeMinHeight"\n                        />\n                        {% endblock %}\n\n                        \n                        {% block sw_cms_element_image_gallery_config_settings_vertical_align %}\n                        <sw-select-field\n                            v-model:value="element.config.verticalAlign.value"\n                            :label="$tc(\'sw-cms.elements.general.config.label.verticalAlign\')"\n                            :placeholder="$tc(\'sw-cms.elements.general.config.label.verticalAlign\')"\n                            :disabled="element.config.displayMode.value === \'cover\'"\n                        >\n                            <option value="flex-start">\n                                {{ $tc(\'sw-cms.elements.general.config.label.verticalAlignTop\') }}\n                            </option>\n                            <option value="center">\n                                {{ $tc(\'sw-cms.elements.general.config.label.verticalAlignCenter\') }}\n                            </option>\n                            <option value="flex-end">\n                                {{ $tc(\'sw-cms.elements.general.config.label.verticalAlignBottom\') }}\n                            </option>\n                        </sw-select-field>\n                        {% endblock %}\n                    </div>\n                    {% endblock %}\n\n                    \n                    {% block sw_cms_element_image_slider_config_settings_navigation %}\n                    <div class="sw-cms-el-config-image-slider__setting-navigations sw-cms-el-config-image-slider__setting-option">\n                        <div class="sw-cms-el-config-image-slider__settings-navigation">\n\n                            \n                            {% block sw_cms_element_image_slider_config_settings_navigation_arrow_position %}\n                            <sw-select-field\n                                v-model:value="element.config.navigationArrows.value"\n                                :label="$tc(\'sw-cms.elements.imageSlider.config.label.navigationArrows\')"\n                                @update:value="emitUpdateEl"\n                            >\n\n                                <option :value="null">\n                                    {{ $tc(\'sw-cms.elements.imageSlider.config.label.navigationPositionNone\') }}\n                                </option>\n                                <option value="inside">\n                                    {{ $tc(\'sw-cms.elements.imageSlider.config.label.navigationPositionInside\') }}\n                                </option>\n                                <option value="outside">\n                                    {{ $tc(\'sw-cms.elements.imageSlider.config.label.navigationPositionOutside\') }}\n                                </option>\n                            </sw-select-field>\n                            {% endblock %}\n                        </div>\n\n                        <div class="sw-cms-el-config-image-slider__settings-navigation">\n\n                            \n                            {% block sw_cms_element_image_slider_config_settings_navigation_dots_position %}\n                            <sw-select-field\n                                v-model:value="element.config.navigationDots.value"\n                                :label="$tc(\'sw-cms.elements.imageSlider.config.label.navigationDots\')"\n                                @update:value="emitUpdateEl"\n                            >\n\n                                <option :value="null">\n                                    {{ $tc(\'sw-cms.elements.imageSlider.config.label.navigationPositionNone\') }}\n                                </option>\n                                <option value="inside">\n                                    {{ $tc(\'sw-cms.elements.imageSlider.config.label.navigationPositionInside\') }}\n                                </option>\n                                <option value="outside">\n                                    {{ $tc(\'sw-cms.elements.imageSlider.config.label.navigationPositionOutside\') }}\n                                </option>\n                            </sw-select-field>\n                            {% endblock %}\n                        </div>\n                    </div>\n                    {% endblock %}\n\n                    <div class="sw-cms-el-config-image-slider__setting-slide">\n                        <sw-switch-field\n                            v-model:value="element.config.autoSlide.value"\n                            class="sw-cms-el-config-image-slider__setting-auto-slide"\n                            :label="$tc(\'sw-cms.elements.general.config.label.autoSlide\')"\n                            :help-text="$tc(\'sw-cms.elements.general.config.helpText.autoSlide\')"\n                            @update:value="onChangeAutoSlide"\n                        />\n                    </div>\n\n                    <div class="sw-cms-el-config-image-slider__setting-option">\n                        <div class="sw-cms-el-config-image-slider__setting-delay">\n                            <sw-number-field\n                                v-model:value="element.config.autoplayTimeout.value"\n                                class="sw-cms-el-config-image-slider__setting-delay-slide"\n                                number-type="int"\n                                :min="0"\n                                :max="9999999"\n                                :disabled="!showSlideConfig"\n                                :label="$tc(\'sw-cms.elements.general.config.label.autoplayTimeout\')"\n                                :placeholder="$tc(\'sw-cms.elements.general.config.label.autoplayTimeout\')"\n                                :help-text="$tc(\'sw-cms.elements.general.config.helpText.autoplayTimeout\')"\n                            />\n                        </div>\n                        <div class="sw-cms-el-config-image-slider__setting-speed">\n                            <sw-number-field\n                                v-model:value="element.config.speed.value"\n                                class="sw-cms-el-config-image-slider__setting-speed-slide"\n                                number-type="int"\n                                :min="0"\n                                :max="9999999"\n                                :disabled="!showSlideConfig"\n                                :label="$tc(\'sw-cms.elements.general.config.label.speed\')"\n                                :placeholder="$tc(\'sw-cms.elements.general.config.label.speed\')"\n                                :help-text="$tc(\'sw-cms.elements.general.config.helpText.speed\')"\n                            />\n                        </div>\n                    </div>\n\n                    \n                    {% block sw_cms_element_image_slider_config_settings_links %}\n                    <div class="sw-cms-el-config-image-slider__settings-links sw-cms-el-config-image-slider__setting-option">\n                        <div\n                            v-for="(sliderItem, index) in items"\n                            :key="index"\n                            class="sw-cms-el-config-image-slider__settings-link"\n                        >\n\n                            \n                            {% block sw_cms_element_image_slider_config_settings_link_url %}\n                            <sw-text-field\n                                :key="sliderItem.mediaId"\n                                v-model:value="sliderItem.url"\n                                class="sw-cms-el-config-image-slider__settings-link-input"\n                                :name="sliderItem.mediaUrl"\n                                :label="$tc(\'sw-cms.elements.image.config.label.linkTo\')"\n                                :placeholder="$tc(\'sw-cms.elements.image.config.placeholder.enterUrl\')"\n                            >\n                                <template #prefix>\n                                    <img\n                                        v-if="sliderItem.mediaUrl"\n                                        class="sw-cms-el-config-image-slider__settings-link-prefix"\n                                        :src="sliderItem.mediaUrl"\n                                        alt=""\n                                    >\n                                </template>\n                            </sw-text-field>\n                            {% endblock %}\n\n                            \n                            {% block sw_cms_element_image_slider_config_settings_link_target %}\n                            <sw-switch-field\n                                v-model:value="sliderItem.newTab"\n                                class="sw-cms-el-config-image-slider__settings-link-tab"\n                                :name="sliderItem.mediaId"\n                                :label="$tc(\'sw-cms.elements.image.config.label.linkNewTab\')"\n                            />\n                            {% endblock %}\n                        </div>\n                    </div>\n                    {% endblock %}\n                </div>\n            </sw-container>\n            {% endblock %}\n        </template>\n    </sw-tabs>\n    {% endblock %}\n</div>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[t.getByName("cms-element")],data(){return{mediaModalIsOpen:!1,initialFolderId:null,entity:this.element,mediaItems:[],showSlideConfig:!1}},computed:{uploadTag(){return`cms-element-media-config-${this.element.id}`},mediaRepository(){return this.repositoryFactory.create("media")},defaultFolderName(){return this.cmsPageState.pageEntityName},items(){return this.element.config&&this.element.config.sliderItems&&this.element.config.sliderItems.value?this.element.config.sliderItems.value:[]},speedDefault(){return this.cmsService.getCmsElementConfigByName("image-slider").defaultConfig.speed.value},autoplayTimeoutDefault(){return this.cmsService.getCmsElementConfigByName("image-slider").defaultConfig.autoplayTimeout.value}},created(){this.createdComponent()},methods:{async createdComponent(){if(this.initElementConfig("image-slider"),this.element.config.autoSlide?.value&&(this.showSlideConfig=!0),"default"!==this.element.config.sliderItems.source&&this.element.config.sliderItems.value.length>0){let e=this.element.config.sliderItems.value.map(e=>e.mediaId),n=new a(1,25);n.setIds(e);let i=await this.mediaRepository.search(n);this.mediaItems=e.map(e=>i.get(e))}},onImageUpload(e){let n=this.element.config.sliderItems;"default"===n.source&&(n.value=[],n.source="static"),n.value.push({mediaUrl:e.url,mediaId:e.id,url:null,newTab:!1}),this.mediaItems.push(e),this.updateMediaDataValue(),this.emitUpdateEl()},onItemRemove(e,n){let i=e.id,{value:t}=this.element.config.sliderItems;this.element.config.sliderItems.value=t.filter((e,t)=>e.mediaId!==i||t!==n),this.mediaItems=this.mediaItems.filter((e,t)=>e.id!==i||t!==n),this.updateMediaDataValue(),this.emitUpdateEl()},onCloseMediaModal(){this.mediaModalIsOpen=!1},onMediaSelectionChange(e){let n=this.element.config.sliderItems;"default"===n.source&&(n.value=[],n.source="static"),e.forEach(e=>{this.element.config.sliderItems.value.push({mediaUrl:e.url,mediaId:e.id,url:null,newTab:!1})}),this.mediaItems.push(...e),this.updateMediaDataValue(),this.emitUpdateEl()},onItemSort(e,n){l(this.mediaItems,e.position,n.position),l(this.element.config.sliderItems.value,e.position,n.position),this.updateMediaDataValue(),this.emitUpdateEl()},updateMediaDataValue(){if(this.element.config.sliderItems.value){let e=s(this.element.config.sliderItems.value);e.forEach(e=>{this.mediaItems.forEach(n=>{e.mediaId===n.id&&(e.media=n)})}),this.element.data?this.$set(this.element.data,"sliderItems",e):this.$set(this.element,"data",{sliderItems:e})}},onOpenMediaModal(){this.mediaModalIsOpen=!0},onChangeMinHeight(e){this.element.config.minHeight.value=null===e?"":e,this.$emit("element-update",this.element)},onChangeAutoSlide(e){this.showSlideConfig=e,e||(this.element.config.autoplayTimeout.value=this.autoplayTimeoutDefault,this.element.config.speed.value=this.speedDefault)},onChangeDisplayMode(e){"cover"===e&&(this.element.config.verticalAlign.value=null),this.$emit("element-update",this.element)},emitUpdateEl(){this.$emit("element-update",this.element)}}}},14098:function(e,n,i){var t=i(55003);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[e.id,t,""]]),t.locals&&(e.exports=t.locals),i(45346).Z("2e76dcf9",t,!0,{})}}]);