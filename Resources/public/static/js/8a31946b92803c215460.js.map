{"version":3,"sources":["webpack:///./src/module/sw-cms/component/sw-cms-slot/sw-cms-slot.scss","webpack:///./src/module/sw-cms/component/sw-cms-slot/index.js","webpack:///./src/module/sw-cms/component/sw-cms-slot/sw-cms-slot.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","deepCopyObject","Shopware","Utils","object","template","inject","props","element","type","Object","required","active","Boolean","disabled","data","showElementSettings","showElementSelection","elementNotFound","computed","slotElementId","this","id","cmsServiceState","cmsService","getCmsServiceState","elementConfig","elementRegistry","cmsElements","_this","currentPageType","State","get","blocks","entries","getCmsElementRegistry","filter","_ref","name","_slicedToArray","isElementAllowedInPageType","fromEntries","groupedCmsElements","_this2","result","elements","values","sort","a","b","localeCompare","favorites","cmsElementFavorites","isFavorite","nonFavorites","length","push","title","items","componentClasses","componentClass","concat","slot","_defineProperty","cmsSlotSettingsClasses","_this$elementConfig","_this$element","defaultConfig","locked","tooltipDisabled","_this$elementConfig2","disabledConfigInfoTextKey","message","$tc","mounted","mountedComponent","methods","_this3","setTimeout","onSettingsButtonClick","_this$elementConfig3","_this$element2","onCloseSettingsModal","childComponent","$refs","elementComponentRef","handleUpdateContent","onElementButtonClick","onCloseElementModal","onSelectElement","defaultData","config","onToggleElementFavorite","elementName","update","elementInElementGroup","elementGroup"],"mappings":"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","file":"static/js/8a31946b92803c215460.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-cms-slot.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"04e0e3f9\", content, true, {});","import template from './sw-cms-slot.html.twig';\nimport './sw-cms-slot.scss';\n\nconst { deepCopyObject } = Shopware.Utils.object;\n\n/**\n * @private since v6.5.0\n * @package buyers-experience\n */\nexport default {\n    template,\n\n    inject: [\n        'cmsService',\n        'cmsElementFavorites',\n    ],\n\n    props: {\n        element: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            },\n        },\n\n        active: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            showElementSettings: false,\n            showElementSelection: false,\n            elementNotFound: false,\n        };\n    },\n\n    computed: {\n        slotElementId() {\n            return this.element.id;\n        },\n\n        cmsServiceState() {\n            return this.cmsService.getCmsServiceState();\n        },\n\n        elementConfig() {\n            return this.cmsServiceState.elementRegistry[this.element.type];\n        },\n\n        cmsElements() {\n            const currentPageType = Shopware.State.get('cmsPageState').currentPageType;\n\n            const blocks = Object.entries(this.cmsService.getCmsElementRegistry())\n                .filter(([name]) => this.cmsService.isElementAllowedInPageType(name, currentPageType));\n\n            return Object.fromEntries(blocks);\n        },\n\n        groupedCmsElements() {\n            const result = [];\n            const elements = Object.values(this.cmsElements).sort((a, b) => a.name.localeCompare(b.name));\n            const favorites = elements.filter(element => this.cmsElementFavorites.isFavorite(element.name));\n            const nonFavorites = elements.filter(element => !this.cmsElementFavorites.isFavorite(element.name));\n\n            if (favorites.length) {\n                result.push({\n                    title: 'sw-cms.elements.general.switch.groups.favorites',\n                    items: favorites,\n                });\n            }\n\n            result.push({\n                title: 'sw-cms.elements.general.switch.groups.all',\n                items: nonFavorites,\n            });\n\n            return result;\n        },\n\n        componentClasses() {\n            const componentClass = `sw-cms-slot-${this.element.slot}`;\n\n            return {\n                'is--disabled': this.disabled,\n                [componentClass]: !!this.element.slot,\n            };\n        },\n\n        cmsSlotSettingsClasses() {\n            if (this.elementConfig?.defaultConfig && !this.element?.locked) {\n                return null;\n            }\n\n            return 'is--disabled';\n        },\n\n        tooltipDisabled() {\n            if (this.elementConfig?.disabledConfigInfoTextKey) {\n                return {\n                    message: this.$tc(this.elementConfig.disabledConfigInfoTextKey),\n                    disabled: !!this.elementConfig.defaultConfig && !this.element.locked,\n                };\n            }\n\n            return {\n                message: this.$tc('sw-cms.elements.general.config.tab.settings'),\n                disabled: true,\n            };\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            // Show a \"Not found\" error after 10 seconds, when no element has been found\n            setTimeout(() => {\n                if (!this.elementConfig) {\n                    this.elementNotFound = true;\n                }\n            }, 10000);\n        },\n\n        onSettingsButtonClick() {\n            if (!this.elementConfig?.defaultConfig || this.element?.locked) {\n                return;\n            }\n\n            this.showElementSettings = true;\n        },\n\n        onCloseSettingsModal() {\n            const childComponent = this.$refs.elementComponentRef;\n\n            if (childComponent && childComponent.handleUpdateContent) {\n                childComponent.handleUpdateContent();\n            }\n\n            this.showElementSettings = false;\n        },\n\n        onElementButtonClick() {\n            this.showElementSelection = true;\n        },\n\n        onCloseElementModal() {\n            this.showElementSelection = false;\n        },\n        onSelectElement(element) {\n            this.element.data = deepCopyObject(element?.defaultData || {});\n            this.element.config = deepCopyObject(element?.defaultConfig || {});\n            this.element.type = element.name;\n            this.element.locked = false;\n            this.showElementSelection = false;\n        },\n\n        onToggleElementFavorite(elementName) {\n            this.cmsElementFavorites.update(!this.cmsElementFavorites.isFavorite(elementName), elementName);\n        },\n\n        elementInElementGroup(element, elementGroup) {\n            if (elementGroup === 'favorite') {\n                return this.cmsElementFavorites.isFavorite(element.name);\n            }\n\n            return true;\n        },\n    },\n};\n","export default \"\\n{% block sw_cms_slot %}\\n<div\\n    :id=\\\"slotElementId\\\"\\n    class=\\\"sw-cms-slot\\\"\\n    :class=\\\"componentClasses\\\"\\n>\\n\\n    \\n    {% block sw_cms_slot_content %}\\n\\n    \\n    {% block sw_cms_slot_content_component %}\\n    <component\\n        :is=\\\"elementConfig.component\\\"\\n        v-if=\\\"elementConfig && elementConfig.component\\\"\\n        {% if VUE3 %}\\n        v-model:element=\\\"element\\\"\\n        {% else %}\\n        v-model=\\\"element\\\"\\n        {% endif %}\\n        :element-data=\\\"elementConfig\\\"\\n        :disabled=\\\"disabled\\\"\\n    />\\n    {% endblock %}\\n\\n    {# This is just a quick inline design which needs to be refactored for a real design implementation #}\\n    <div\\n        v-else-if=\\\"elementNotFound\\\"\\n        class=\\\"sw-cms-slot__element-not-found\\\"\\n        style=\\\"\\n            width: 100%;\\n            min-height: 250px;\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n            background-color: #fbe5ea;\\n            border: 1px solid #de294c;\\n            border-radius: 4px;\\n            gap: 16px;\\n        \\\"\\n    >\\n        <sw-icon\\n            name=\\\"regular-exclamation-circle\\\"\\n            color=\\\"#de294c\\\"\\n        />\\n\\n        <div>\\n            <p style=\\\"color: #de294c;\\\">\\n                <strong>Element could not be load</strong>\\n            </p>\\n            <p style=\\\"color: #de294c; margin-top: 6px;\\\">\\n                Please try again or select another element.\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div v-else>\\n        <sw-skeleton-bar style=\\\"width: 100%; min-height: 250px;\\\" />\\n    </div>\\n\\n    \\n    {% block sw_cms_slot_content_preview_overlay %}\\n    <div\\n        v-if=\\\"!active\\\"\\n        class=\\\"sw-cms-slot__preview-overlay\\\"\\n    ></div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_slot_content_overlay %}\\n    <div\\n        v-if=\\\"active\\\"\\n        class=\\\"sw-cms-slot__overlay\\\"\\n    >\\n        \\n        {% block sw_cms_slot_content_overlay_content %}\\n        <div class=\\\"sw-cms-slot__actions\\\">\\n            \\n            {% block sw_cms_slot_content_overlay_action_settings %}\\n            <div\\n                v-tooltip.bottom=\\\"tooltipDisabled\\\"\\n                class=\\\"sw-cms-slot__settings-action\\\"\\n                :class=\\\"cmsSlotSettingsClasses\\\"\\n                role=\\\"button\\\"\\n                tabindex=\\\"0\\\"\\n                @click=\\\"onSettingsButtonClick\\\"\\n                @keydown.enter=\\\"onSelectElement(element.name)\\\"\\n            >\\n                <sw-icon\\n                    name=\\\"regular-cog\\\"\\n                    size=\\\"16\\\"\\n                />\\n            </div>\\n            {% endblock %}\\n\\n            \\n            {% block sw_cms_slot_content_overlay_action_swap %}\\n            <div\\n                v-if=\\\"elementConfig?.removable !== false\\\"\\n                class=\\\"sw-cms-slot__element-action\\\"\\n                role=\\\"button\\\"\\n                tabindex=\\\"0\\\"\\n                @click=\\\"onElementButtonClick\\\"\\n                @keydown.enter=\\\"onSelectElement(element.name)\\\"\\n            >\\n                <sw-icon\\n                    name=\\\"regular-repeat\\\"\\n                    size=\\\"16\\\"\\n                />\\n            </div>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_slot_content_settings_modal %}\\n    <sw-modal\\n        v-if=\\\"showElementSettings\\\"\\n        class=\\\"sw-cms-slot__config-modal\\\"\\n        variant=\\\"large\\\"\\n        :title=\\\"$tc('sw-cms.detail.title.elementSettingsModal')\\\"\\n        @modal-close=\\\"onCloseSettingsModal\\\"\\n    >\\n        \\n        {% block sw_cms_slot_content_settings_modal_component %}\\n        <component\\n            :is=\\\"elementConfig.configComponent\\\"\\n            ref=\\\"elementComponentRef\\\"\\n            {% if VUE3 %}\\n            v-model:element=\\\"element\\\"\\n            {% else %}\\n            v-model=\\\"element\\\"\\n            {% endif %}\\n            :element-data=\\\"elementConfig\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_cms_slot_content_settings_modal_footer %}\\n        <template #modal-footer>\\n            \\n            {% block sw_cms_slot_content_settings_modal_action_confirm %}\\n            <sw-button\\n                variant=\\\"primary\\\"\\n                @click=\\\"onCloseSettingsModal\\\"\\n            >\\n                {{ $tc('sw-cms.detail.label.buttonElementSettingsConfirm') }}\\n            </sw-button>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n    </sw-modal>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_slot_content_element_modal %}\\n    <sw-modal\\n        v-if=\\\"showElementSelection\\\"\\n        :title=\\\"$tc('sw-cms.detail.title.elementChangeModal')\\\"\\n        @modal-close=\\\"onCloseElementModal\\\"\\n    >\\n        \\n        {% block sw_cms_slot_content_element_modal_selection %}\\n        <div class=\\\"sw-cms-slot__modal-container\\\">\\n            \\n            {% block sw_cms_slot_content_element_modal_selection_groups %}\\n            <sw-sidebar-collapse\\n                v-for=\\\"cmsElementGroup in groupedCmsElements\\\"\\n                :key=\\\"cmsElementGroup.title\\\"\\n                expand-on-loading\\n                expand-chevron-direction=\\\"up\\\"\\n            >\\n                <template #header>\\n                    {{ $tc(cmsElementGroup.title) }}\\n                </template>\\n\\n                <template #content>\\n                    <div class=\\\"sw-cms-slot__element-selection\\\">\\n                        \\n                        {% block sw_cms_slot_content_element_modal_selection_element %}\\n                        <template\\n                            v-for=\\\"element in cmsElementGroup.items\\\"\\n                            {% if VUE3 %}\\n                            :key=\\\"element.name\\\"\\n                            {% endif %}\\n                        >\\n                            <div\\n                                v-if=\\\"!element.hidden && element.previewComponent\\\"\\n                                {% if VUE2 %}\\n                                :key=\\\"element.name\\\"\\n                                {% endif %}\\n                                class=\\\"element-selection__element-wrapper\\\"\\n                            >\\n                                <div class=\\\"element-selection__element\\\">\\n                                    \\n                                    {% block sw_cms_slot_content_element_modal_selection_element_component %}\\n                                    <component\\n                                        :is=\\\"element.previewComponent\\\"\\n                                        class=\\\"sw-cms-slot__element-preview\\\"\\n                                        :element-data=\\\"element\\\"\\n                                    />\\n                                    {% endblock %}\\n\\n                                    \\n                                    {% block sw_cms_slot_content_element_modal_selection_element_overlay %}\\n                                    <div\\n                                        class=\\\"element-selection__overlay element-selection__overlay-action-select\\\"\\n                                        role=\\\"button\\\"\\n                                        tabindex=\\\"0\\\"\\n                                        @click=\\\"onSelectElement(element)\\\"\\n                                        @keydown.enter=\\\"onSelectElement(element)\\\"\\n                                    >\\n                                        <sw-icon\\n                                            name=\\\"regular-repeat\\\"\\n                                            size=\\\"28\\\"\\n                                        />\\n                                    </div>\\n                                    {% endblock %}\\n\\n                                    \\n                                    {% block sw_cms_slot_content_element_modal_selection_element_overlay_favorite %}\\n                                    <div\\n                                        class=\\\"element-selection__overlay element-selection__overlay-action-favorite\\\"\\n                                        role=\\\"button\\\"\\n                                        tabindex=\\\"0\\\"\\n                                        @click=\\\"onToggleElementFavorite(element.name)\\\"\\n                                        @keydown.enter=\\\"onToggleElementFavorite(element.name)\\\"\\n                                    >\\n                                        <sw-icon\\n                                            v-if=\\\"cmsElementFavorites.isFavorite(element.name)\\\"\\n                                            name=\\\"solid-heart\\\"\\n                                            size=\\\"28\\\"\\n                                        />\\n                                        <sw-icon\\n                                            v-else\\n                                            name=\\\"regular-heart\\\"\\n                                            size=\\\"28\\\"\\n                                        />\\n                                    </div>\\n                                {% endblock %}\\n                                </div>\\n\\n                                \\n                                {% block sw_cms_slot_content_element_modal_selection_element_label %}\\n                                <span class=\\\"element-selection__label\\\">{{ $tc(element.label) }}</span>\\n                            {% endblock %}\\n                            </div>\\n                        </template>\\n                        {% endblock %}\\n                    </div>\\n                </template>\\n            </sw-sidebar-collapse>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_cms_slot_content_element_modal_footer %}\\n        <template #modal-footer>\\n\\n            \\n            {% block sw_cms_slot_content_element_modal_action_abort %}\\n            <sw-button @click=\\\"onCloseElementModal\\\">\\n                {{ $tc('sw-cms.detail.label.buttonElementChangeAbort') }}\\n            </sw-button>\\n            {% endblock %}\\n        </template>\\n        {% endblock %}\\n    </sw-modal>\\n    {% endblock %}\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}