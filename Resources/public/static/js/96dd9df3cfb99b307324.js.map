{"version":3,"sources":["webpack:///./src/module/sw-product-stream/page/sw-product-stream-detail/index.js","webpack:///./src/module/sw-product-stream/page/sw-product-stream-detail/sw-product-stream-detail.html.twig","webpack:///./src/module/sw-product-stream/page/sw-product-stream-detail/sw-product-stream-detail.scss"],"names":["_Shopware","Shopware","Mixin","Context","mapPropertyErrors","Component","getComponentHelper","Criteria","Data","template","inject","provide","productCustomFields","this","beforeRouteLeave","to","from","next","showModalPreview","$nextTick","mixins","getByName","shortcuts","ESCAPE","props","productStreamId","type","String","required","default","data","isLoading","customFieldsLoading","isSaveSuccessful","productStream","productStreamFilters","productStreamFiltersTree","deletedProductStreamFilters","languageId","customFieldSets","metaInfo","title","$createTitle","identifier","computed","_objectSpread","placeholder","productStreamRepository","repositoryFactory","create","productStreamFiltersRepository","filters","entity","source","customFieldSetRepository","tooltipSave","acl","can","message","$tc","appearance","showOnDisabledElements","systemKey","$device","getSystemKey","concat","tooltipCancel","isSystemLanguage","api","systemLanguageId","nameRequired","showCustomFields","length","watch","immediate","handler","_this","loadEntityData","then","createProductStream","created","createdComponent","methods","ExtensionAPI","publishData","id","path","scope","getProductCustomFields","loadCustomFieldSets","_this2","customFieldDataProviderService","getCustomFieldSets","sets","_this3","_this4","get","loadFilters","_this5","collection","arguments","undefined","filterCriteria","addFilter","equals","search","productFilter","total","Promise","resolve","nextCriteria","fromCriteria","criteria","page","context","nextFilters","push","apply","_toConsumableArray","abortOnLanguageChange","hasChanges","saveOnLanguageChange","onSave","onChangeLanguage","_this6","onDuplicate","_this7","behavior","cloneChildren","overwrites","name","translated","clone","route","params","$router","catch","createNotificationError","_this8","isNew","saveProductStream","showErrorNotification","save","syncProductStreamFilters","_this9","sync","syncDeleted","onCancel","openModalPreview","closeModalPreview","_this10","customFieldsCriteria","loadingPromises","singleCriteria","addAssociation","forEach","customFieldSet","set","customFields","reduce","acc","customField","mapCustomFieldType","value","label","getCustomFieldLabel","Object","assign","all","getInlineSnippet","config","format","updateFilterTree","_ref","conditions","deletedIds","getNoPermissionsTooltip","role","showDelay","disabled","content","__esModule","module","i","locals","exports","add"],"mappings":"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","file":"static/js/96dd9df3cfb99b307324.js","sourcesContent":["/*\n * @package business-ops\n */\n\nimport template from './sw-product-stream-detail.html.twig';\nimport './sw-product-stream-detail.scss';\n\nconst { Mixin, Context } = Shopware;\nconst { mapPropertyErrors } = Shopware.Component.getComponentHelper();\nconst { Criteria } = Shopware.Data;\n\n/**\n * @private\n */\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'productStreamConditionService', 'acl', 'customFieldDataProviderService'],\n\n    provide() {\n        return {\n            productCustomFields: this.productCustomFields,\n        };\n    },\n\n    beforeRouteLeave(to, from, next) {\n        if (this.showModalPreview) {\n            this.showModalPreview = false;\n            this.$nextTick(() => next());\n            return;\n        }\n\n        next();\n    },\n\n    mixins: [\n        Mixin.getByName('placeholder'),\n        Mixin.getByName('notification'),\n        Mixin.getByName('discard-detail-page-changes')('productStream'),\n        Mixin.getByName('sw-inline-snippet'),\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': 'onSave',\n        ESCAPE: 'onCancel',\n    },\n\n    props: {\n        productStreamId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            customFieldsLoading: false,\n            isSaveSuccessful: false,\n            productStream: null,\n            productStreamFilters: null,\n            productStreamFiltersTree: null,\n            deletedProductStreamFilters: [],\n            productCustomFields: {},\n            showModalPreview: false,\n            languageId: null,\n            customFieldSets: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        identifier() {\n            return this.placeholder(this.productStream, 'name');\n        },\n\n        productStreamRepository() {\n            return this.repositoryFactory.create('product_stream');\n        },\n\n        productStreamFiltersRepository() {\n            if (!this.productStream) {\n                return null;\n            }\n\n            return this.repositoryFactory.create(\n                this.productStream.filters.entity,\n                this.productStream.filters.source,\n            );\n        },\n\n        customFieldSetRepository() {\n            return this.repositoryFactory.create('custom_field_set');\n        },\n\n        tooltipSave() {\n            if (!this.acl.can('product_stream.editor')) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    appearance: 'dark',\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        tooltipCancel() {\n            return {\n                message: 'ESC',\n                appearance: 'light',\n            };\n        },\n\n        isSystemLanguage() {\n            return this.languageId === Context.api.systemLanguageId;\n        },\n\n        nameRequired() {\n            return this.isSystemLanguage;\n        },\n\n        ...mapPropertyErrors('productStream', ['name']),\n\n        showCustomFields() {\n            return this.productStream && this.customFieldSets && this.customFieldSets.length > 0;\n        },\n    },\n\n    watch: {\n        productStreamId: {\n            immediate: true,\n            handler() {\n                if (!this.productStreamId) {\n                    this.createProductStream();\n                    return;\n                }\n\n                this.isLoading = true;\n                this.loadEntityData(this.productStreamId).then(() => {\n                    this.isLoading = false;\n                });\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-product-stream-detail__productStream',\n                path: 'productStream',\n                scope: this,\n            });\n            this.languageId = Context.api.languageId;\n            if (this.productStreamId) {\n                this.getProductCustomFields();\n            }\n            this.loadCustomFieldSets();\n        },\n\n        loadCustomFieldSets() {\n            this.customFieldDataProviderService.getCustomFieldSets('product_stream').then((sets) => {\n                this.customFieldSets = sets;\n            });\n        },\n\n        createProductStream() {\n            this.getProductCustomFields().then(() => {\n                Context.api.languageId = Context.api.systemLanguageId;\n                this.productStream = this.productStreamRepository.create(Context.api);\n                this.productStreamFilters = this.productStream.filters;\n            });\n        },\n\n        loadEntityData(productStreamId) {\n            return this.productStreamRepository.get(productStreamId, Context.api).then((productStream) => {\n                this.productStream = productStream;\n                return this.loadFilters();\n            });\n        },\n\n        loadFilters(collection = null) {\n            if (collection === null) {\n                const filterCriteria = new Criteria(1, 25);\n                filterCriteria.addFilter(Criteria.equals('productStreamId', this.productStreamId));\n\n                return this.productStreamFiltersRepository.search(filterCriteria, Context.api).then((productFilter) => {\n                    return this.loadFilters(productFilter);\n                });\n            }\n\n            if (collection.length >= collection.total) {\n                this.productStreamFilters = collection;\n                return Promise.resolve();\n            }\n\n            const nextCriteria = Criteria.fromCriteria(collection.criteria);\n            nextCriteria.page += 1;\n\n            return this.productStreamFiltersRepository.search(nextCriteria, collection.context).then((nextFilters) => {\n                collection.push(...nextFilters);\n                collection.criteria = nextFilters.criteria;\n                collection.total = nextFilters.total;\n\n                return this.loadFilters(collection);\n            });\n        },\n\n        abortOnLanguageChange() {\n            return this.productStreamRepository.hasChanges(this.productStream);\n        },\n\n        saveOnLanguageChange() {\n            return this.onSave();\n        },\n\n        onChangeLanguage(languageId) {\n            this.languageId = languageId;\n\n            this.isLoading = true;\n            this.loadEntityData(this.productStream.id).then(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onDuplicate() {\n            return this.onSave().then(() => {\n                const behavior = {\n                    cloneChildren: true,\n                    overwrites: {\n                        // eslint-disable-next-line max-len\n                        name: `${this.productStream.name || this.productStream.translated.name} ${this.$tc('global.default.copy')}`,\n                    },\n                };\n\n                this.isLoading = true;\n\n                return this.productStreamRepository.clone(this.productStream.id, Shopware.Context.api, behavior)\n                    .then((clone) => {\n                        const route = { name: 'sw.product.stream.detail', params: { id: clone.id } };\n\n                        this.$router.push(route);\n                    }).catch(() => {\n                        this.isLoading = false;\n\n                        this.createNotificationError({\n                            message: this.$tc('global.notification.unspecifiedSaveErrorMessage'),\n                        });\n                    });\n            });\n        },\n\n        onSave() {\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            if (this.productStream.isNew()) {\n                this.productStream.filters = this.productStreamFiltersTree;\n                return this.saveProductStream()\n                    .then(() => {\n                        this.$router.push({ name: 'sw.product.stream.detail', params: { id: this.productStream.id } });\n                        this.isSaveSuccessful = true;\n                    })\n                    .catch(() => {\n                        this.showErrorNotification();\n                        this.isLoading = false;\n                    });\n            }\n\n            return this.productStreamRepository.save(this.productStream, Context.api)\n                .then(this.syncProductStreamFilters)\n                .then(() => {\n                    return this.loadEntityData(this.productStream.id);\n                })\n                .then(() => {\n                    this.isSaveSuccessful = true;\n                    this.isLoading = false;\n                })\n                .catch(() => {\n                    this.isLoading = false;\n                    this.showErrorNotification();\n                });\n        },\n\n        showErrorNotification() {\n            this.createNotificationError({\n                message: this.$tc(\n                    'global.notification.notificationSaveErrorMessageRequiredFieldsInvalid',\n                ),\n            });\n        },\n\n        saveProductStream() {\n            return this.productStreamRepository.save(this.productStream, Context.api);\n        },\n\n        syncProductStreamFilters() {\n            return this.productStreamFiltersRepository.sync(this.productStreamFiltersTree, Context.api)\n                .then(() => {\n                    if (this.deletedProductStreamFilters.length > 0) {\n                        return this.productStreamFiltersRepository\n                            .syncDeleted(this.deletedProductStreamFilters, Context.api)\n                            .then(() => {\n                                this.deletedProductStreamFilters = [];\n                            });\n                    }\n\n                    return Promise.resolve();\n                });\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'sw.product.stream.index' });\n        },\n\n        openModalPreview() {\n            this.showModalPreview = true;\n        },\n        closeModalPreview() {\n            this.showModalPreview = false;\n        },\n\n        getProductCustomFields() {\n            this.customFieldsLoading = true;\n            const customFieldsCriteria = new Criteria(1, null);\n            customFieldsCriteria.addFilter(Criteria.equals('relations.entityName', 'product'));\n\n            const loadingPromises = [];\n            return this.customFieldSetRepository.search(customFieldsCriteria, Context.api).then((customFieldSets) => {\n                const singleCriteria = new Criteria(1, null);\n                singleCriteria\n                    .addAssociation('customFields')\n                    .addAssociation('relations');\n\n\n                customFieldSets.forEach((customFieldSet) => {\n                    loadingPromises.push(\n                        this.customFieldSetRepository.get(customFieldSet.id, Context.api, singleCriteria).then(set => {\n                            const customFields = set.customFields\n                                .reduce((acc, customField) => {\n                                    acc[customField.name] = this.mapCustomFieldType({\n                                        type: customField.type,\n                                        value: `customFields.${customField.name}`,\n                                        label: this.getCustomFieldLabel(customField),\n                                    });\n                                    return acc;\n                                }, {});\n                            Object.assign(this.productCustomFields, customFields);\n                        }),\n                    );\n                });\n\n                Promise.all(loadingPromises).then(() => {\n                    this.customFieldsLoading = false;\n                });\n            });\n        },\n\n        getCustomFieldLabel(customField) {\n            return this.getInlineSnippet(customField.config.label) || customField.name;\n        },\n\n        mapCustomFieldType(customField) {\n            switch (customField.type) {\n                case 'bool':\n                    customField.type = 'boolean';\n                    break;\n                case 'html':\n                case 'text':\n                    customField.type = 'string';\n                    break;\n                case 'date':\n                    customField.type = 'string';\n                    customField.format = 'date-time';\n                    break;\n                default:\n                    break;\n            }\n            return customField;\n        },\n\n        updateFilterTree({ conditions, deletedIds }) {\n            this.productStreamFiltersTree = conditions;\n            this.deletedProductStreamFilters = [\n                ...this.deletedProductStreamFilters,\n                ...deletedIds,\n            ];\n        },\n\n        getNoPermissionsTooltip(role, showOnDisabledElements = true) {\n            return {\n                showDelay: 300,\n                message: this.$tc('sw-privileges.tooltip.warning'),\n                appearance: 'dark',\n                showOnDisabledElements,\n                disabled: this.acl.can(role),\n            };\n        },\n    },\n};\n","export default \"\\n{% block sw_product_stream_detail %}\\n<sw-page class=\\\"sw-product-stream-detail\\\">\\n    \\n    {% block sw_product_stream_detail_header %}\\n    <template #smart-bar-header>\\n        <h2 v-if=\\\"productStream\\\">\\n            {{ productStream.name }}\\n        </h2>\\n        <h2\\n            v-else\\n            class=\\\"sw-product-stream-detail__empty-title\\\"\\n        >\\n            {{ placeholder(productStream, 'name', $tc('sw-product-stream.detail.textHeadline')) }}\\n        </h2>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_stream_detail_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_product_stream_detail_actions_abort %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"tooltipCancel\\\"\\n            :disabled=\\\"isLoading\\\"\\n            @click=\\\"onCancel\\\"\\n        >\\n            {{ $tc('sw-product-stream.detail.buttonCancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        <sw-button-group\\n            v-tooltip.bottom=\\\"{\\n                message: $tc('sw-privileges.tooltip.warning'),\\n                disabled: acl.can('product_stream.editor'),\\n                showOnDisabledElements: true\\n            }\\\"\\n            class=\\\"sw-product-stream-detail__save-button-group\\\"\\n            :split-button=\\\"true\\\"\\n        >\\n            \\n            {% block sw_product_stream_detail_actions_save %}\\n            <sw-button-process\\n                {% if VUE3 %}\\n                v-model:processSuccess=\\\"isSaveSuccessful\\\"\\n                {% else %}\\n                v-model=\\\"isSaveSuccessful\\\"\\n                {% endif %}\\n                v-tooltip.bottom=\\\"tooltipSave\\\"\\n                class=\\\"sw-product-stream-detail__save-action\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :disabled=\\\"!acl.can('product_stream.editor')\\\"\\n                variant=\\\"primary\\\"\\n                @click.prevent=\\\"onSave\\\"\\n            >\\n                {{ $tc('sw-product-stream.detail.buttonSave') }}\\n            </sw-button-process>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_stream_detail_actions_save_context_menu %}\\n            <sw-context-button>\\n                <template #button>\\n                    <sw-button\\n                        class=\\\"sw-product-stream-detail__button-context-menu\\\"\\n                        square\\n                        variant=\\\"primary\\\"\\n                        :disabled=\\\"isLoading || !acl.can('product_stream.editor')\\\"\\n                    >\\n                        <sw-icon name=\\\"regular-chevron-down-xs\\\" />\\n                    </sw-button>\\n                </template>\\n\\n                \\n                {% block sw_product_stream_detail_actions_save_context_menu_actions %}\\n                \\n                {% block sw_product_stream_detail_actions_duplicate %}\\n                <sw-context-menu-item\\n                    class=\\\"sw-product-stream-detail__save-duplicate-action\\\"\\n                    :disabled=\\\"!acl.can('product_stream.creator') || !acl.can('product_stream.editor')\\\"\\n                    @click=\\\"onDuplicate\\\"\\n                >\\n                    {{ $tc('sw-product.detail.buttonSaveDuplicate') }}\\n                </sw-context-menu-item>\\n                {% endblock %}\\n                {% endblock %}\\n            </sw-context-button>\\n            {% endblock %}\\n        </sw-button-group>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_stream_detail_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch\\n            :save-changes-function=\\\"saveOnLanguageChange\\\"\\n            :abort-change-function=\\\"abortOnLanguageChange\\\"\\n            :disabled=\\\"!productStreamId\\\"\\n            @on-change=\\\"onChangeLanguage\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_stream_detail_content %}\\n    <template #content>\\n        <sw-card-view>\\n            <template v-if=\\\"isLoading || customFieldsLoading\\\">\\n                <sw-skeleton variant=\\\"detail-bold\\\" />\\n                <sw-skeleton />\\n            </template>\\n\\n            <template v-else>\\n\\n                \\n                {% block sw_product_stream_detail_content_language_info %}\\n                <sw-language-info\\n                    :entity-description=\\\"placeholder(productStream, 'name', $tc('sw-product-stream.detail.textHeadline'))\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_stream_detail_basic_info %}\\n                <sw-card\\n                    position-identifier=\\\"sw-product-stream-detail-basic-info\\\"\\n                    :large=\\\"true\\\"\\n                    :title=\\\"$tc('sw-product-stream.detail.titleCard')\\\"\\n                >\\n                    \\n                    {% block sw_product_basic_form_name_field %}\\n                    <sw-text-field\\n                        v-if=\\\"productStream\\\"\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"productStream.name\\\"\\n                        {% else %}\\n                        v-model=\\\"productStream.name\\\"\\n                        {% endif %}\\n                        v-tooltip.bottom=\\\"getNoPermissionsTooltip('product_stream.editor')\\\"\\n                        :label=\\\"$tc('sw-product-stream.detail.labelName')\\\"\\n                        :validation=\\\"nameRequired\\\"\\n                        :required=\\\"isSystemLanguage\\\"\\n                        :placeholder=\\\"placeholder(productStream, 'name', $tc('sw-product-stream.detail.placeholderName'))\\\"\\n                        :error=\\\"productStreamNameError\\\"\\n                        :disabled=\\\"!acl.can('product_stream.editor')\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_product_basic_form_description_field %}\\n                    <sw-textarea-field\\n                        v-if=\\\"productStream\\\"\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"productStream.description\\\"\\n                        {% else %}\\n                        v-model=\\\"productStream.description\\\"\\n                        {% endif %}\\n                        v-tooltip.bottom=\\\"getNoPermissionsTooltip('product_stream.editor')\\\"\\n                        :label=\\\"$tc('sw-product-stream.detail.labelDescription')\\\"\\n                        :placeholder=\\\"placeholder(productStream, 'description', $tc('sw-product-stream.detail.placeholderDescription'))\\\"\\n                        :disabled=\\\"!acl.can('product_stream.editor')\\\"\\n                    />\\n                    {% endblock %}\\n                </sw-card>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_stream_detail_filter %}\\n                <sw-card\\n                    :large=\\\"true\\\"\\n                    position-identifier=\\\"sw-product-stream-detail-filter\\\"\\n                    class=\\\"sw-product-stream-detail__condition_container\\\"\\n                    :class=\\\"{ 'is--disabled': !acl.can('product_stream.editor') }\\\"\\n                    :title=\\\"$tc('sw-product-stream.detail.titleFilter')\\\"\\n                >\\n                    \\n                    {% block sw_product_stream_detail_filter_tree %}\\n                    <sw-condition-tree\\n                        v-if=\\\"productStream\\\"\\n                        :initial-conditions=\\\"productStreamFilters\\\"\\n                        :condition-repository=\\\"productStreamFiltersRepository\\\"\\n                        :condition-data-provider-service=\\\"productStreamConditionService\\\"\\n                        child-association-field=\\\"queries\\\"\\n                        association-field=\\\"productStreamId\\\"\\n                        :association-value=\\\"productStream.id\\\"\\n                        :root-condition=\\\"null\\\"\\n                        :disabled=\\\"!acl.can('product_stream.editor')\\\"\\n                        @conditions-changed=\\\"updateFilterTree\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_product_stream_detail_filter_preview_button %}\\n                    <sw-button\\n                        class=\\\"sw-product-stream-detail__open_modal_preview\\\"\\n                        @click.prevent=\\\"openModalPreview\\\"\\n                    >\\n                        {{ $tc('sw-product-stream.detail.buttonOpenPreview') }}\\n                    </sw-button>\\n                    {% endblock %}\\n                </sw-card>\\n                {% endblock %}\\n\\n                \\n                {% block sw_prouct_stream_detail_preview_modal %}\\n                <sw-product-stream-modal-preview\\n                    v-if=\\\"showModalPreview\\\"\\n                    ref=\\\"modalPreview\\\"\\n                    :filters=\\\"productStreamFiltersTree\\\"\\n                    @modal-close=\\\"closeModalPreview\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_prouct_stream_detail_custom_field_sets %}\\n                <sw-card\\n                    v-if=\\\"showCustomFields\\\"\\n                    position-identifier=\\\"sw-product-stream-detail-custom-field-sets\\\"\\n                    :large=\\\"true\\\"\\n                    :title=\\\"$tc('sw-settings-custom-field.general.mainMenuItemGeneral')\\\"\\n                >\\n                    <sw-custom-field-set-renderer\\n                        :entity=\\\"productStream\\\"\\n                        :disabled=\\\"!acl.can('product_stream.editor')\\\"\\n                        :sets=\\\"customFieldSets\\\"\\n                    />\\n                </sw-card>\\n                {% endblock %}\\n            </template>\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-stream-detail.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7201b040\", content, true, {});"],"sourceRoot":""}