(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[57034],{610048:function(){},157034:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return l}}),n(587731);let{Mixin:s,Data:{Criteria:i}}=Shopware;var l={template:'\n{% block sw_settings_snippet_set_list %}\n<sw-page class="sw-settings-snippet-set-list">\n    \n    {% block sw_settings_snippet_set_list_search_bar %}\n    <template #search-bar>\n        <sw-search-bar\n            :initial-search-type="$tc(\'sw-settings-snippet.general.searchBarTitleSets\')"\n            :placeholder="$tc(\'sw-settings-snippet.general.placeholderSearchBarSets\')"\n            :initial-search="term"\n            @search="onSearch"\n        />\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_snippet_set_list_smart_bar_header %}\n    <template #smart-bar-header>\n        \n        {% block sw_settings_snippet_set_list_smart_bar_header_title %}\n        <h2>\n            \n            {% block sw_settings_snippet_set_list_smart_bar_header_title_text %}\n            {{ $tc(\'sw-settings.index.title\') }}\n            <sw-icon\n                name="regular-chevron-right-xs"\n                small\n            />\n            {{ $tc(\'sw-settings-snippet.general.mainMenuItemGeneral\') }}\n            {% endblock %}\n        </h2>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_snippet_set_list_card %}\n    <template #content>\n        <sw-card-view>\n            \n            {% block sw_settings_snippet_set_list_card_title %}\n            <sw-card position-identifier="sw-settings-snippet-set-list-title">\n                <h3>{{ $tc(\'sw-settings-snippet.setList.title\') }}</h3>\n                <p>{{ $tc(\'sw-settings-snippet.setList.description\') }}</p>\n            </sw-card>\n            {% endblock %}\n\n            \n            {% block sw_settings_snippet_set_list_card_list %}\n            <sw-card\n                position-identifier="sw-settings-snippet-set-list-card-list"\n                :is-loading="isLoading"\n                :title="$tc(\'sw-settings-snippet.setList.cardTitle\')"\n            >\n                \n                {% block sw_settings_snippet_set_list_card_list_container %}\n                <sw-container columns="1fr">\n                    <sw-card-section divider="bottom">\n                        \n                        {% block sw_settings_snippet_set_list_card_list_container_header %}\n                        <div class="sw-settings-snippet-set-list__actions">\n                            \n                            {% block sw_settings_snippet_set_list_card_list_container_header_btn_export %}\n                            <sw-button\n                                v-if="false"\n                                size="small"\n                                variant="ghost"\n                                disabled\n                            >\n                                {{ $tc(\'sw-settings-snippet.setList.buttonExport\') }}\n                            </sw-button>\n                            {% endblock %}\n\n                            \n                            {% block sw_settings_snippet_set_list_card_list_container_header_btn_edit_set %}\n                            <sw-button\n                                v-tooltip="getNoPermissionsTooltip(\'snippet.editor\')"\n                                class="sw-settings-snippet-set-list__edit-set-action"\n                                size="small"\n                                variant="primary"\n                                :disabled="!acl.can(\'snippet.editor\') || !snippetsEditable || undefined"\n                                @click="onEditSnippetSets"\n                            >\n                                {{ $tc(\'sw-settings-snippet.setList.buttonEditSet\') }}\n                            </sw-button>\n                            {% endblock %}\n\n                            \n                            {% block sw_settings_snippet_set_list_card_list_container_header_btn_split %}\n                            <sw-button-group\n                                v-tooltip="getNoPermissionsTooltip(\'snippet.creator\', false)"\n                                class="sw-settings-snippet-set-list__action-split"\n                                split-button\n                            >\n                                \n                                {% block sw_settings_snippet_set_list_card_list_container_header_btn_add_set %}\n                                <sw-button\n                                    class="sw-settings-snippet-set-list__action-add"\n                                    size="small"\n                                    variant="ghost"\n                                    :disabled="!acl.can(\'snippet.creator\') || undefined"\n                                    @click="onAddSnippetSet"\n                                >\n                                    {{ $tc(\'sw-settings-snippet.setList.buttonAddSet\') }}\n                                </sw-button>\n                                {% endblock %}\n\n                                \n                                {% block sw_settings_snippet_set_list_card_list_btn_copy_split %}\n                                <sw-context-button\n                                    headline="hi"\n                                    :disabled="!acl.can(\'snippet.creator\') || undefined"\n                                >\n\n                                    \n                                    {% block sw_settings_snippet_set_list_card_btn_copy %}\n                                    <template #button>\n                                        <sw-button\n                                            class="sw-settings-snippet-set-list__action-context-menu"\n                                            size="small"\n                                            variant="ghost"\n                                            :disabled="!acl.can(\'snippet.creator\') || undefined"\n                                            square\n                                        >\n                                            \n                                            {% block sw_settings_snippet_set_list_card_btn_copy_icon %}\n                                            <sw-icon\n                                                name="regular-chevron-down-xs"\n                                                size="16"\n                                            />\n                                            {% endblock %}\n                                        </sw-button>\n                                    </template>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_settings_snippet_set_list_card_copy_context_menu %}\n                                    <sw-context-menu-item variant="headline">\n                                        {{ $tc(\'sw-settings-snippet.setList.splitButtonDuplicateContent\') }}\n                                    </sw-context-menu-item>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_settings_snippet_set_list_card_copy_context_divider %}\n                                    <sw-context-menu-divider />\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_settings_snippet_set_list_card_copy_context_menu_items %}\n                                    <sw-context-menu-item\n                                        v-for="set in snippetSets"\n                                        :key="set.id"\n                                        @click="onClone(set.id)"\n                                    >\n                                        {{ set.name }}\n                                    </sw-context-menu-item>\n                                    {% endblock %}\n                                </sw-context-button>\n                                {% endblock %}\n                            </sw-button-group>\n                            {% endblock %}\n                        </div>\n                        {% endblock %}\n                    </sw-card-section>\n                </sw-container>\n                {% endblock %}\n\n                \n                {% block sw_settings_snippet_set_list_card_list_grid %}\n                <template #grid>\n                    <sw-grid\n                        ref="snippetSetList"\n                        :items="snippetSets"\n                        :sort-direction="sortDirection"\n                        :sort-by="sortBy"\n                        :selectable="acl.can(\'snippet.editor\')"\n                        :allow-inline-edit="acl.can(\'snippet.editor\')"\n                        table\n                        @inline-edit-finish="onInlineEditSave"\n                        @inline-edit-cancel="onInlineEditCancel"\n                        @sw-grid-select-item="onSelectionChanged"\n                        @sw-grid-select-all="onSelectionChanged"\n                        @sort-column="onSortColumn"\n                    >\n                        \n                        {% block sw_settings_snippet_set_list_card_list_grid_template %}\n                        <template\n                            #columns="{ item }"\n                        >\n                            \n                            {% block sw_settings_snippet_set_list_card_list_grid_column_name %}\n                            <sw-grid-column\n                                flex="minmax(200px, 1fr)"\n                                class="sw-settings-snippet-set__column-name"\n                                :label="$tc(\'sw-settings-snippet.setList.columnName\')"\n                                data-index="name"\n                                editable\n                                truncate\n                                sortable\n                            >\n\n                                \n                                {% block sw_settings_snippet_set_list_card_list_grid_column_name_link %}\n                                <router-link :to="{ name: \'sw.settings.snippet.list\', query: { ids: [item.id] } }">\n                                    {{ item.name }}\n                                </router-link>\n                                {% endblock %}\n\n                                \n                                {% block sw_settings_snippet_set_list_card_list_grid_column_name_editor %}\n                                <template #inline-edit>\n                                    <sw-text-field\n                                        ref="nameEditor"\n                                        v-model:value="item.name"\n                                        name="sw-field--item-name"\n                                        :placeholder="$tc(\'sw-settings-snippet.setList.placeholderName\')"\n                                    />\n                                </template>\n                                {% endblock %}\n                            </sw-grid-column>\n                            {% endblock %}\n\n                            \n                            {% block sw_settings_snippet_set_list_card_list_grid_column_changed %}\n                            <sw-grid-column\n                                flex="1fr"\n                                class="sw-settings-snippet-set-file__column-changed-at"\n                                sortable\n                                :label="$tc(\'sw-settings-snippet.setList.columnChangedAt\')"\n                                data-index="createdAt"\n                            >\n                                \n                                {% block sw_settings_snippet_set_list_card_list_grid_column_changed_date %}\n                                <div v-if="item.updatedAt">\n                                    {{ dateFilter(item.updatedAt) }}\n                                </div>\n                                <div v-else>\n                                    {{ dateFilter(item.createdAt) }}\n                                </div>\n                                {% endblock %}\n                            </sw-grid-column>\n                            {% endblock %}\n\n                            \n                            {% block sw_settings_snippet_set_list_card_list_grid_column_base_file %}\n                            <sw-grid-column\n                                flex="minmax(200px, 1fr)"\n                                class="sw-settings-snippet-set-file__column-base-file"\n                                sortable\n                                :label="$tc(\'sw-settings-snippet.setList.columnBaseFile\')"\n                                data-index="baseFile"\n                                truncate\n                            >\n                                {{ item.baseFile }}\n\n                                \n                                {% block sw_settings_snippet_set_list_card_list_grid_column_base_file_editor %}\n                                <template #inline-edit>\n                                    <sw-select-field\n                                        v-model:value="item.baseFile"\n                                    >\n                                        <option\n                                            v-for="file in baseFiles"\n                                            :key="file.name"\n                                            :value="file.name"\n                                        >\n                                            {{ file.name }}\n                                        </option>\n                                    </sw-select-field>\n                                </template>\n                                {% endblock %}\n                            </sw-grid-column>\n                            {% endblock %}\n\n                            \n                            {% block sw_settings_snippet_set_list_card_list_grid_column_base_action %}\n                            <sw-grid-column\n                                flex="100px"\n                                align="center"\n                            >\n                                \n                                {% block sw_settings_snippet_set_list_card_list_grid_column_base_action_buttons %}\n                                <sw-context-button>\n                                    \n                                    {% block sw_settings_snippet_set_list_card_list_grid_column_base_action_btn_edit %}\n                                    <sw-context-menu-item\n                                        class="sw-setting-snippet-set-list__edit-action"\n                                        :router-link="{ name: \'sw.settings.snippet.list\', query: { ids: [item.id] } }"\n                                    >\n                                        {{ contextMenuEditSnippet }}\n                                    </sw-context-menu-item>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_settings_snippet_set_list_card_list_grid_column_base_action_btn_clone %}\n                                    <sw-context-menu-item\n                                        v-tooltip.left="getNoPermissionsTooltip(\'snippet.editor\')"\n                                        :disabled="!acl.can(\'snippet.creator\') || undefined"\n                                        @click="onClone(item.id)"\n                                    >\n                                        {{ $tc(\'sw-settings-snippet.setList.contextMenuClone\') }}\n                                    </sw-context-menu-item>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_settings_snippet_set_list_card_list_grid_column_base_action_btn_delete %}\n                                    <sw-context-menu-item\n                                        v-tooltip.left="getNoPermissionsTooltip(\'snippet.deleter\')"\n                                        variant="danger"\n                                        :disabled="!acl.can(\'snippet.deleter\') || undefined"\n                                        @click="onDeleteSet(item.id)"\n                                    >\n                                        {{ $tc(\'sw-settings-snippet.setList.contextMenuDelete\') }}\n                                    </sw-context-menu-item>\n                                    {% endblock %}\n                                </sw-context-button>\n                                {% endblock %}\n                            </sw-grid-column>\n                            {% endblock %}\n\n                            \n                            {% block sw_settings_snippet_set_list_columns_delete_modal %}\n                            <sw-modal\n                                v-if="showDeleteModal === item.id"\n                                :title="$tc(\'global.default.warning\')"\n                                variant="small"\n                                @modal-close="onCloseDeleteModal"\n                            >\n                                \n                                {% block sw_settings_snippet_set_list_delete_modal_confirm_delete_text %}\n                                <p class="sw-settings-snippet-set-list__confirm-delete-text">\n                                    {{ $tc(\'sw-settings-snippet.setList.textDeleteConfirm\', 0, { name: item.name }) }}\n                                </p>\n                                {% endblock %}\n\n                                \n                                {% block sw_settings_snippet_set_list_delete_modal_footer %}\n                                <template #modal-footer>\n                                    \n                                    {% block sw_settings_snippet_set_list_delete_modal_cancel %}\n                                    <sw-button\n                                        size="small"\n                                        @click="onCloseDeleteModal"\n                                    >\n                                        {{ $tc(\'sw-settings-snippet.setList.buttonCancel\') }}\n                                    </sw-button>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_settings_snippet_set_list_delete_modal_confirm %}\n                                    <sw-button\n                                        variant="danger"\n                                        size="small"\n                                        @click="onConfirmDelete(item.id)"\n                                    >\n                                        {{ $tc(\'sw-settings-snippet.setList.buttonDelete\') }}\n                                    </sw-button>\n                                    {% endblock %}\n                                </template>\n                                {% endblock %}\n                            </sw-modal>\n                            {% endblock %}\n\n                            \n                            {% block sw_settings_snippet_set_list_columns_clone_modal %}\n                            <sw-modal\n                                v-if="showCloneModal === item.id"\n                                :title="$tc(\'sw-settings-snippet.setList.modalTitleClone\')"\n                                variant="small"\n                                @modal-close="closeCloneModal"\n                            >\n                                \n                                {% block sw_settings_snippet_set_list_clone_modal_confirm_delete_text %}\n                                <p class="sw-settings-snippet-set-list__confirm-delete-text">\n                                    {{ $tc(\'sw-settings-snippet.setList.textCloneConfirm\', 0, { name: item.name }) }}\n                                </p>\n                                {% endblock %}\n\n                                \n                                {% block sw_settings_snippet_set_list_clone_modal_footer %}\n                                <template #modal-footer>\n                                    \n                                    {% block sw_settings_snippet_set_list_clone_modal_cancel %}\n                                    <sw-button\n                                        size="small"\n                                        @click="closeCloneModal"\n                                    >\n                                        {{ $tc(\'sw-settings-snippet.setList.buttonCancel\') }}\n                                    </sw-button>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_settings_snippet_set_list_clone_modal_confirm %}\n                                    <sw-button\n                                        variant="primary"\n                                        size="small"\n                                        @click="onConfirmClone(item.id)"\n                                    >\n                                        {{ $tc(\'sw-settings-snippet.setList.buttonClone\') }}\n                                    </sw-button>\n                                    {% endblock %}\n                                </template>\n                                {% endblock %}\n                            </sw-modal>\n                            {% endblock %}\n                        </template>\n                        {% endblock %}\n\n                        \n                        {% block sw_settings_snippet_set_list_card_list_grid_pagination %}\n                        <template #pagination>\n                            \n                            {% block sw_settings_snippet_set_list_card_list_grid_pagination_bar %}\n                            <sw-pagination\n                                :offset="offset"\n                                :limit="limit"\n                                :total="total"\n                                :total-visible="7"\n                                :page="page"\n                                @page-change="onPageChange"\n                            />\n                            {% endblock %}\n                        </template>\n                        {% endblock %}\n                    </sw-grid>\n                </template>\n                {% endblock %}\n            </sw-card>\n            {% endblock %}\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["snippetSetService","repositoryFactory","acl","feature"],mixins:[s.getByName("sw-settings-list")],data(){return{isLoading:!1,entityName:"snippetSet",sortBy:"name",sortDirection:"ASC",offset:0,baseFiles:[],snippetSets:[],showDeleteModal:!1,showCloneModal:!1,snippetsEditable:!1,selection:{}}},metaInfo(){return{title:this.$createTitle()}},computed:{snippetSetRepository(){return this.repositoryFactory.create("snippet_set")},snippetSetCriteria(){let t=new i(this.page,this.limit);return t.addSorting(i.sort("name","ASC")),this.term&&t.setTerm(this.term),t},contextMenuEditSnippet(){return this.acl.can("snippet.editor")?this.$tc("global.default.edit"):this.$tc("global.default.view")},dateFilter(){return Shopware.Filter.getByName("date")}},methods:{getList(){return this.isLoading=!0,this.loadBaseFiles().then(()=>this.snippetSetRepository.search(this.snippetSetCriteria).then(t=>{this.total=t.total,this.snippetSets=t,this.isLoading=!1}))},loadBaseFiles(){return this.snippetSetService.getBaseFiles().then(t=>{this.baseFiles=t.items})},onAddSnippetSet(){let t=this.snippetSetRepository.create();t.baseFile=Object.values(this.baseFiles)[0].name,0===this.snippetSets.splice(0,0,t).length&&this.$nextTick(()=>{let e=this.$refs.snippetSetList.$children.find(e=>("AsyncComponentWrapper"===e.$options.name&&(e=e?.$children[0]),e?.item!==void 0&&e.item.id===t.id));return!!e&&("AsyncComponentWrapper"===e.$options.name&&(e=e.$children[0]),e.isEditingActive=!0,!0)})},onInlineEditSave(t){this.isLoading=!0;let e=Object.values(this.baseFiles).find(e=>e.name===t.baseFile);e&&null!==e.iso?(t.iso=e.iso,this.snippetSetRepository.save(t).then(()=>{this.createInlineSuccessNote(t.name)}).catch(()=>{this.createInlineErrorNote(t.name),this.getList()}).finally(()=>{this.isLoading=!1})):(this.isLoading=!1,this.createInlineErrorNote(t.name),this.getList())},onEditSnippetSets(){if(!this.snippetsEditable){this.createNotEditableErrorNote();return}let t=Object.keys(this.snippetSelection);this.$router.push({name:"sw.settings.snippet.list",query:{ids:t}})},onSelectionChanged(t){this.snippetSelection=t,this.snippetSelectionCount=Object.keys(t).length,this.snippetsEditable=this.snippetSelectionCount>=1},onInlineEditCancel(){this.getList()},onDeleteSet(t){this.showDeleteModal=t},onConfirmDelete(t){return this.showDeleteModal=!1,this.snippetSetRepository.delete(t).then(()=>{this.getList(),this.createDeleteSuccessNote()}).catch(()=>{this.onCloseDeleteModal(),this.createDeleteErrorNote()})},onClone(t){this.showCloneModal=t},closeCloneModal(){this.showCloneModal=!1},async onConfirmClone(t){this.isLoading=!0;try{let e=await this.snippetSetRepository.clone(t),n=await this.snippetSetRepository.get(e.id);if(!n)return;n.name=`${n.name} ${this.$tc("sw-settings-snippet.general.copyName")}`;let s=n.name,i=t=>t.name===n.name,l=1;for(;this.snippetSets.some(i);)l+=1,n.name=`${s} (${l})`;try{await this.snippetSetRepository.save(n),this.createCloneSuccessNote()}catch{await this.snippetSetRepository.delete(n.id),this.createCloneErrorNote()}finally{this.getList()}}catch{this.createCloneErrorNote()}finally{this.isLoading=!1,this.closeCloneModal()}},createDeleteSuccessNote(){this.createNotificationSuccess({message:this.$tc("sw-settings-snippet.setList.deleteNoteSuccessMessage")})},createDeleteErrorNote(){this.createNotificationError({message:this.$tc("sw-settings-snippet.setList.deleteNoteErrorMessage")})},createInlineSuccessNote(t){this.createNotificationSuccess({message:this.$tc("sw-settings-snippet.setList.inlineEditSuccessMessage",0,{name:t})})},createInlineErrorNote(t){this.createNotificationError({message:this.$tc("sw-settings-snippet.setList.inlineEditErrorMessage",null!==t,{name:t})})},createCloneSuccessNote(){this.createNotificationSuccess({message:this.$tc("sw-settings-snippet.setList.cloneSuccessMessage")})},createCloneErrorNote(){this.createNotificationError({message:this.$tc("sw-settings-snippet.setList.cloneErrorMessage")})},createNotEditableErrorNote(){this.createNotificationError({message:this.$tc("sw-settings-snippet.setList.notEditableNoteErrorMessage")})},getNoPermissionsTooltip(t,e=!0){return{showDelay:300,appearance:"dark",showOnDisabledElements:e,disabled:this.acl.can(t),message:this.$tc("sw-privileges.tooltip.warning")}}}}},587731:function(t,e,n){var s=n(610048);s.__esModule&&(s=s.default),"string"==typeof s&&(s=[[t.id,s,""]]),s.locals&&(t.exports=s.locals),n(745346).Z("c9142886",s,!0,{})}}]);