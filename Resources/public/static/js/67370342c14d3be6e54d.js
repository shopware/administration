(this.webpackJsonpAdministration=this.webpackJsonpAdministration||[]).push([[651],{"0bAJ":function(t,e,a){"use strict";a.r(e);var i=Shopware.Context,n=Shopware.Data,s=n.Criteria,o=n.EntityCollection;e.default={template:'\n{% block sw_settings_tax_rule_type_individual_states %}\n<sw-entity-multi-select\n    v-if="individualStates && taxRule.countryId"\n    :label="$tc(\'sw-settings-tax.taxRuleCard.labelStates\')"\n    :placeholder="$tc(\'sw-settings-tax.taxRuleCard.placeholderStates\')"\n    :criteria="exclusionCriteria"\n    :entity-collection="individualStates"\n    {% if VUE3 %}\n    @update:entity-collection="onChange"\n    {% else %}\n    @change="onChange"\n    {% endif %}\n/>\n{% endblock %}\n',inject:["repositoryFactory"],props:{taxRule:{type:Object,required:!0}},data:function(){return{individualStates:null}},computed:{exclusionCriteria:function(){var t=new s(1,25);return t.addFilter(s.equals("countryId",this.taxRule.countryId)),t},stateRepository:function(){return this.repositoryFactory.create("country_state")}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var t=this;if(this.taxRule.data&&this.taxRule.data.states&&this.taxRule.data.states.length){var e=new s(1,25);e.setIds(this.taxRule.data.states),this.stateRepository.search(e,i.api).then((function(e){t.individualStates=e}))}else this.taxRule.data={states:[]},this.individualStates=new o(this.stateRepository.route,this.stateRepository.entityName,i.api)},onChange:function(t){this.individualStates=t,this.taxRule.data.states=t.getIds()}}}}}]);
//# sourceMappingURL=67370342c14d3be6e54d.js.map