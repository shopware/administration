{"version":3,"sources":["webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-configurator/sw-product-variants-configurator-selection/sw-product-variants-configurator-selection.scss","webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-configurator/sw-product-variants-configurator-selection/sw-product-variants-configurator-selection.html.twig","webpack:///./src/module/sw-product/component/sw-product-variants/sw-product-variants-configurator/sw-product-variants-configurator-selection/index.js"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","template","inject","mixins","getByName","props","product","type","Object","required","computed","configuratorSettingsRepository","this","repositoryFactory","create","configuratorSettings","entity","source","created","createdComponent","methods","addOptionCount","_this","groups","forEach","group","optionCount","options","filter","configurator","option","groupId","id","isDeleted","$set","length","$emit","selectOptions","grid","selectAll","preventSelection","selectItem","onOptionSelect","selection","item","exists","find","optionId","remove","newOption"],"mappings":"+HAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAA8EL,SAC/E,WAAYF,GAAS,EAAM,K,mDCT7B,ICOPQ,EAAUC,SAAVD,MAGO,WACXE,SDXW,s+BCaXC,OAAQ,CAAC,qBAETC,OAAQ,CACJJ,EAAMK,UAAU,iBAGpBC,MAAO,CACHC,QAAS,CACLC,KAAMC,OACNC,UAAU,IAIlBC,SAAU,CACNC,+BAA8B,WAE1B,OAAOC,KAAKC,kBAAkBC,OAC1BF,KAAKN,QAAQS,qBAAqBC,OAClCJ,KAAKN,QAAQS,qBAAqBE,UAK9CC,QAAO,WACHN,KAAKO,oBAGTC,QAAS,CAKLC,eAAc,WAAI,IAADC,EAAA,KACbV,KAAKW,OAAOC,SAAQ,SAACC,GACjB,IAAMC,EAAcJ,EAAKK,QAAQC,QAAO,SAACC,GAErC,OAAOA,EAAaC,OAAOC,UAAYN,EAAMO,KAAOH,EAAaI,aAIrEX,EAAKY,KAAKT,EAAO,cAAeC,EAAYS,WAGhDvB,KAAKwB,MAAM,kBAGfC,cAAa,SAACC,GACVA,EAAKC,WAAU,GAEf3B,KAAK4B,kBAAmB,EACxB5B,KAAKe,QAAQH,SAAQ,SAACK,GACdA,EAAaC,QACbQ,EAAKG,YAAYZ,EAAaI,UAAWJ,EAAaC,WAI9DlB,KAAK4B,kBAAmB,GAG5BE,eAAc,SAACC,EAAWC,GACtB,IAAIhC,KAAK4B,iBAAT,CAIA,IAAMK,EAASjC,KAAKe,QAAQmB,MAAK,SAAAnD,GAAC,OAAIA,EAAEoD,WAAaH,EAAKZ,MAE1D,GAAIa,EAGA,OAFAjC,KAAKe,QAAQqB,OAAOH,EAAOb,SAC3BpB,KAAKS,iBAIT,IAAM4B,EAAYrC,KAAKD,+BAA+BG,SACtDmC,EAAUF,SAAWH,EAAKZ,GAC1BiB,EAAUnB,OAASc,EAEnBhC,KAAKe,QAAQ7B,IAAImD,GAEjBrC,KAAKS","file":"static/js/724fc1f743903cb38c59.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-variants-configurator-selection.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1df2826e\", content, true, {});","export default \"\\n{% block sw_property_search_field %}\\n<div class=\\\"sw-property-search__toolbar sw-product-variants-configurator-selection__toolbar\\\">\\n    <slot name=\\\"toolbar\\\">\\n        <div class=\\\"sw-property-search__search-field-container\\\">\\n            <slot name=\\\"toolbar-search-field\\\">\\n                \\n                {% block sw_product_variants_configurator_selection_search_field %}\\n                <sw-simple-search-field\\n                    ref=\\\"searchField\\\"\\n                    v-model=\\\"searchTerm\\\"\\n                    size=\\\"small\\\"\\n                    variant=\\\"form\\\"\\n                    class=\\\"sw-property-search__search-field sw-product-variants-configurator-selection-search__search-field\\\"\\n                    :placeholder=\\\"$tc('sw-property-search.placeholderSearch')\\\"\\n                    @focus=\\\"onFocusSearch\\\"\\n                    @input=\\\"onSearchOptions\\\"\\n                />\\n                {% endblock %}\\n            </slot>\\n        </div>\\n    </slot>\\n</div>\\n{% endblock %}\\n\";","/*\n * @package inventory\n */\n\nimport template from './sw-product-variants-configurator-selection.html.twig';\nimport './sw-product-variants-configurator-selection.scss';\n\nconst { Mixin } = Shopware;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        product: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    computed: {\n        configuratorSettingsRepository() {\n            // get configuratorSettingsRepository\n            return this.repositoryFactory.create(\n                this.product.configuratorSettings.entity,\n                this.product.configuratorSettings.source,\n            );\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        /**\n         * Important: options = configurators\n         * Reason: Is extended from sw-property-search\n         */\n        addOptionCount() {\n            this.groups.forEach((group) => {\n                const optionCount = this.options.filter((configurator) => {\n                    // check if option belongs to group\n                    return configurator.option.groupId === group.id && !configurator.isDeleted;\n                });\n\n                // set reactive\n                this.$set(group, 'optionCount', optionCount.length);\n            });\n\n            this.$emit('option-select');\n        },\n\n        selectOptions(grid) {\n            grid.selectAll(false);\n\n            this.preventSelection = true;\n            this.options.forEach((configurator) => {\n                if (configurator.option) {\n                    grid.selectItem(!configurator.isDeleted, configurator.option);\n                }\n            });\n\n            this.preventSelection = false;\n        },\n\n        onOptionSelect(selection, item) {\n            if (this.preventSelection) {\n                return;\n            }\n\n            const exists = this.options.find(i => i.optionId === item.id);\n\n            if (exists) {\n                this.options.remove(exists.id);\n                this.addOptionCount();\n                return;\n            }\n\n            const newOption = this.configuratorSettingsRepository.create();\n            newOption.optionId = item.id;\n            newOption.option = item;\n\n            this.options.add(newOption);\n\n            this.addOptionCount();\n        },\n    },\n};\n"],"sourceRoot":""}