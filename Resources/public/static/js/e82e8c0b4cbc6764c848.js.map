{"version":3,"sources":["webpack:///./src/module/sw-settings-tax/page/sw-settings-tax-provider-detail/sw-settings-tax-provider-detail.scss","webpack:///./src/module/sw-settings-tax/page/sw-settings-tax-provider-detail/sw-settings-tax-provider-detail.html.twig","webpack:///./src/module/sw-settings-tax/page/sw-settings-tax-provider-detail/index.ts"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Component","Mixin","Criteria","Data","wrapComponentConfig","template","inject","mixins","getByName","props","taxProviderId","type","String","required","data","taxProvider","undefined","isLoading","isSaveSuccessful","metaInfo","title","this","$createTitle","computed","label","_this$taxProvider","_this$taxProvider$tra","translated","name","taxProviderRepository","repositoryFactory","create","allowSave","acl","can","ruleFilter","criteria","addFilter","multi","contains","equals","addSorting","sort","hasIdentifier","_this$taxProvider2","identifier","positionIdentifier","_this$taxProvider3","concat","created","createdComponent","methods","loadTaxProvider","_this","get","then","Promise","resolve","onSave","_this2","save","catch","createNotificationError","message","$tc","onCancel","$router","push","onSaveRule","ruleId","availabilityRuleId","onDismissRule"],"mappings":"iIAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,mDCT7B,ICOfQ,EAA6BC,SAArBC,EAASF,EAATE,UAAWC,EAAKH,EAALG,MACXC,EAAaH,SAASI,KAAtBD,SAOOF,YAAUI,oBAAoB,CACzCC,SDhBW,g7ICkBXC,OAAQ,CACJ,oBACA,OAGJC,OAAQ,CACJN,EAAMO,UAAU,iBAGpBC,MAAO,CACHC,cAAe,CACXC,KAAMC,OACNC,UAAU,EACVrB,QAAS,KAIjBsB,KAAI,WAKA,MAAO,CACHC,iBAAaC,EACbC,WAAW,EACXC,kBAAkB,IAI1BC,SAAQ,WACJ,MAAO,CACHC,MAAOC,KAAKC,iBAIpBC,SAAU,CACNC,MAAK,WAAY,IAADC,EAAAC,EACZ,OAAuB,QAAhBD,EAAAJ,KAAKN,mBAAW,IAAAU,GAAY,QAAZC,EAAhBD,EAAkBE,kBAAU,IAAAD,OAAZ,EAAhBA,EAA8BE,OAAQ,IAGjDC,sBAAqB,WACjB,OAAOR,KAAKS,kBAAkBC,OAAO,iBAGzCC,UAAS,WACL,OAAOX,KAAKY,IAAIC,IAAI,eAGxBC,WAAU,WACN,IAAMC,EAAW,IAAIlC,EAAS,EAAG,IAYjC,OAVAkC,EAASC,UAAUnC,EAASoC,MACxB,KACA,CACIpC,EAASqC,SAAS,yBAA0B,gBAC5CrC,EAASsC,OAAO,mBAAoB,SAI5CJ,EAASK,WAAWvC,EAASwC,KAAK,OAAQ,OAAO,IAE1CN,GAGXO,cAAa,WAAa,IAADC,EACrB,QAAyB,QAAjBA,EAACvB,KAAKN,mBAAW,IAAA6B,IAAhBA,EAAkBC,aAG/BC,mBAAkB,WAAwB,IAADC,EACrC,IAAK1B,KAAKsB,cACN,MAAO,GAGX,IAAME,GAA6B,QAAhBE,EAAA1B,KAAKN,mBAAW,IAAAgC,OAAA,EAAhBA,EAAkBF,aAAc,GAEnD,MAAM,8CAANG,OAAqDH,KAI7DI,QAAO,WACH5B,KAAK6B,oBAGTC,QAAS,CACLD,iBAAgB,WACP7B,KAAK+B,mBAGdA,gBAAe,WAAmB,IAADC,EAAA,KAG7B,OAFAhC,KAAKJ,WAAY,EAEbI,KAAKX,cACEW,KAAKQ,sBAAsByB,IAAIjC,KAAKX,eAAe6C,MAAK,SAACxC,GAC5DsC,EAAKtC,YAAcA,EACnBsC,EAAKpC,WAAY,MAIzBI,KAAKJ,WAAY,EAEVuC,QAAQC,YAGnBC,OAAM,WAAmB,IAADC,EAAA,KAIpB,OAHAtC,KAAKH,kBAAmB,EACxBG,KAAKJ,WAAY,EAEZI,KAAKN,YAIHM,KAAKQ,sBAAsB+B,KAAKvC,KAAKN,aAAawC,MAAK,WAG1D,OAFAI,EAAKzC,kBAAmB,EAEjByC,EAAKP,qBACbS,OAAM,WAELF,EAAKG,wBAAwB,CACzBC,QAASJ,EAAKK,IAAI,6CAGtBL,EAAK1C,WAAY,KAbVuC,QAAQC,WAiBvBQ,SAAQ,WACC5C,KAAK6C,QAAQC,KAAK,CAAEvC,KAAM,2BAGnCwC,WAAU,SAACC,GACFhD,KAAKN,cAIVM,KAAKN,YAAYuD,mBAAqBD,IAG1CE,cAAa,WACJlD,KAAKN,cAIVM,KAAKN,YAAYuD,wBAAqBtD","file":"static/js/e82e8c0b4cbc6764c848.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-tax-provider-detail.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6cf46218\", content, true, {});","export default \"\\n{% block sw_settings_tax_provider %}\\n<sw-page class=\\\"sw-settings-tax-tax-provider-detail\\\">\\n    <template #smart-bar-header>\\n        <h2 v-if=\\\"label\\\">\\n            {{ label }}\\n        </h2>\\n        <h2 v-else>\\n            {{ $tc('sw-settings-tax.taxProviderDetail.textHeadline') }}\\n        </h2>\\n    </template>\\n\\n    <template #smart-bar-actions>\\n        <sw-button\\n            v-tooltip.bottom=\\\"{ message: 'ESC', appearance: 'light' }\\\"\\n            :disabled=\\\"isLoading\\\"\\n            @click=\\\"onCancel\\\"\\n        >\\n            {{ $tc('global.default.cancel') }}\\n        </sw-button>\\n\\n        <sw-button-process\\n            {% if VUE3 %}\\n            v-model:processSuccess=\\\"isSaveSuccessful\\\"\\n            {% else %}\\n            v-model=\\\"isSaveSuccessful\\\"\\n            {% endif %}\\n            class=\\\"sw-settings-tax-tax-provider-detail__save-action\\\"\\n            variant=\\\"primary\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :disabled=\\\"isLoading || !allowSave\\\"\\n            @click.prevent=\\\"onSave\\\"\\n        >\\n            {{ $tc('global.default.save') }}\\n        </sw-button-process>\\n    </template>\\n\\n    <template #content>\\n        <sw-card-view>\\n            <template v-if=\\\"isLoading\\\">\\n                <sw-skeleton />\\n                <sw-skeleton />\\n            </template>\\n\\n            <template v-else>\\n                <sw-alert\\n                    class=\\\"sw-settings-tax-tax-provider-detail-info\\\"\\n                    :title=\\\"$tc('sw-settings-tax.taxProviderDetail.infoTitle')\\\"\\n                    variant=\\\"info\\\"\\n                >\\n                    {{ $tc('sw-settings-tax.taxProviderDetail.infoText') }}\\n                </sw-alert>\\n\\n                <sw-card\\n                    position-identifier=\\\"sw-settings-tax-tax-provider-detail-settings\\\"\\n                    :title=\\\"$tc('sw-settings-tax.taxProviderDetail.cardTitleSettings')\\\"\\n                    :is-loading=\\\"isLoading\\\"\\n                >\\n                    <sw-container\\n                        columns=\\\"5fr 1fr\\\"\\n                        gap=\\\"0px 30px\\\"\\n                    >\\n                        <sw-number-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"taxProvider.priority\\\"\\n                            {% else %}\\n                            v-model=\\\"taxProvider.priority\\\"\\n                            {% endif %}\\n                            class=\\\"sw-settings-tax-tax-provider-detail__field-priority\\\"\\n                            :disabled=\\\"true\\\"\\n                            :label=\\\"$tc('sw-settings-tax.taxProviderDetail.labelPriority')\\\"\\n                        />\\n\\n                        <sw-switch-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"taxProvider.active\\\"\\n                            {% else %}\\n                            v-model=\\\"taxProvider.active\\\"\\n                            {% endif %}\\n                            class=\\\"sw-settings-tax-tax-provider-detail__field-active\\\"\\n                            :disabled=\\\"!acl.can('tax.editor')\\\"\\n                            :label=\\\"$tc('sw-settings-tax.taxProviderDetail.labelActive')\\\"\\n                        />\\n                    </sw-container>\\n                </sw-card>\\n\\n                <sw-card\\n                    position-identifier=\\\"sw-settings-tax-tax-provider-detail-availability\\\"\\n                    :title=\\\"$tc('sw-settings-tax.taxProviderDetail.cardTitleAvailability')\\\"\\n                    :is-loading=\\\"isLoading\\\"\\n                >\\n                    <sw-select-rule-create\\n                        v-if=\\\"!isLoading\\\"\\n                        class=\\\"sw-settings-tax-tax-provider-detail__field-availability-rule\\\"\\n                        :disabled=\\\"!acl.can('tax.editor')\\\"\\n                        :rule-id=\\\"taxProvider.availabilityRuleId\\\"\\n                        :rule-filter=\\\"ruleFilter\\\"\\n                        :placeholder=\\\"$tc('sw-settings-tax.taxProviderDetail.placeholderAvailabilityRule')\\\"\\n                        rule-aware-group-key=\\\"taxProvider\\\"\\n                        @save-rule=\\\"onSaveRule\\\"\\n                        @dismiss-rule=\\\"onDismissRule\\\"\\n                    />\\n                </sw-card>\\n\\n                <sw-extension-component-section\\n                    v-if=\\\"hasIdentifier\\\"\\n                    :position-identifier=\\\"positionIdentifier\\\"\\n                />\\n            </template>\\n        </sw-card-view>\\n    </template>\\n</sw-page>\\n{% endblock %}\\n\";","import type { Entity } from '@shopware-ag/admin-extension-sdk/es/data/_internals/Entity';\nimport type { MetaInfo } from 'vue-meta';\nimport type Repository from 'src/core/data/repository.data';\nimport type CriteriaType from 'src/core/data/criteria.data';\nimport template from './sw-settings-tax-provider-detail.html.twig';\nimport './sw-settings-tax-provider-detail.scss';\n\nconst { Component, Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package checkout\n *\n * @private\n */\nexport default Component.wrapComponentConfig({\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        taxProviderId: {\n            type: String,\n            required: false,\n            default: '',\n        },\n    },\n\n    data(): {\n            isLoading: boolean,\n            isSaveSuccessful: boolean,\n            taxProvider?: Entity<'tax_provider'> | undefined,\n            } {\n        return {\n            taxProvider: undefined,\n            isLoading: false,\n            isSaveSuccessful: false,\n        };\n    },\n\n    metaInfo(): MetaInfo {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        label(): string {\n            return this.taxProvider?.translated?.name || '';\n        },\n\n        taxProviderRepository(): Repository<'tax_provider'> {\n            return this.repositoryFactory.create('tax_provider');\n        },\n\n        allowSave(): boolean {\n            return this.acl.can('tax.editor');\n        },\n\n        ruleFilter(): CriteriaType {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(Criteria.multi(\n                'OR',\n                [\n                    Criteria.contains('rule.moduleTypes.types', 'tax_provider'),\n                    Criteria.equals('rule.moduleTypes', null),\n                ],\n            ));\n\n            criteria.addSorting(Criteria.sort('name', 'ASC', false));\n\n            return criteria;\n        },\n\n        hasIdentifier(): boolean {\n            return !!this.taxProvider?.identifier;\n        },\n\n        positionIdentifier(): string | undefined {\n            if (!this.hasIdentifier) {\n                return '';\n            }\n\n            const identifier = this.taxProvider?.identifier || '';\n\n            return `sw-settings-tax-tax-provider-detail-custom-${identifier}`;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent(): void {\n            void this.loadTaxProvider();\n        },\n\n        loadTaxProvider(): Promise<void> {\n            this.isLoading = true;\n\n            if (this.taxProviderId) {\n                return this.taxProviderRepository.get(this.taxProviderId).then((taxProvider) => {\n                    this.taxProvider = taxProvider as Entity<'tax_provider'>;\n                    this.isLoading = false;\n                });\n            }\n\n            this.isLoading = false;\n\n            return Promise.resolve();\n        },\n\n        onSave(): Promise<void> {\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            if (!this.taxProvider) {\n                return Promise.resolve();\n            }\n\n            return this.taxProviderRepository.save(this.taxProvider).then(() => {\n                this.isSaveSuccessful = true;\n\n                return this.loadTaxProvider();\n            }).catch(() => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-tax.detail.messageSaveError'),\n                });\n\n                this.isLoading = false;\n            });\n        },\n\n        onCancel(): void {\n            void this.$router.push({ name: 'sw.settings.tax.index' });\n        },\n\n        onSaveRule(ruleId: string): void {\n            if (!this.taxProvider) {\n                return;\n            }\n\n            this.taxProvider.availabilityRuleId = ruleId;\n        },\n\n        onDismissRule(): void {\n            if (!this.taxProvider) {\n                return;\n            }\n\n            this.taxProvider.availabilityRuleId = undefined;\n        },\n    },\n});\n"],"sourceRoot":""}