(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[24398],{924058:function(){},624398:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return o}}),n(170862);let{EntityDefinition:i}=Shopware;var o={template:'\n{% block sw_condition_base %}\n\n{% block sw_product_stream_filter %}\n<div\n    class="sw-product-stream-filter"\n    :class="conditionClasses"\n>\n    \n    {% block sw_product_stream_filter_container %}\n    <div class="sw-product-stream-filter__container">\n        \n        {% block sw_product_stream_filter_selects %}\n        <div class="sw-product-stream-filter__selects">\n            \n            {% block sw_product_stream_filter_fields %}\n            <template\n                v-for="(definition, index) in fieldDefinitions"\n                :key="index"\n            >\n                \n                {% block sw_product_stream_filter_field_select %}\n                <sw-product-stream-field-select\n                    v-bind="{ field: fields[index], definition, index }"\n                    :disabled="!acl.can(\'product_stream.editor\')"\n                    :has-error="hasError"\n                    @field-changed="updateFields"\n                />\n                {% endblock %}\n            </template>\n            {% endblock %}\n\n            \n            {% block sw_product_stream_filter_value %}\n            <sw-product-stream-value\n                v-bind="{ condition, ...lastField }"\n                :disabled="!acl.can(\'product_stream.editor\')"\n                @type-change="changeType"\n                @boolean-change="changeBooleanValue"\n                @empty-change="changeEmptyValue"\n            />\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        \n        {% block sw_product_stream_filter_field_actions %}\n        <sw-context-button\n            v-tooltip="getNoPermissionsTooltip(\'product_stream.editor\', false)"\n            class="sw-product-stream-filter__context-button"\n            :disabled="!acl.can(\'product_stream.editor\')"\n        >\n            \n            {% block sw_product_stream_filter_field_create_before_action %}\n            <sw-context-menu-item\n                class="sw-product-stream-filter__create-before-action"\n                @click="onCreateBefore"\n            >\n                {{ $tc(\'global.sw-condition.condition.createBefore\') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            \n            {% block sw_product_stream_filter_field_create_after_action %}\n            <sw-context-menu-item\n                class="sw-product-stream-filter__create-after-action"\n                @click="onCreateAfter"\n            >\n                {{ $tc(\'global.sw-condition.condition.createAfter\') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            \n            {% block sw_product_stream_filter_field_delete_action %}\n            <sw-context-menu-item\n                variant="danger"\n                @click="onDeleteCondition"\n            >\n                {{ $tc(\'global.default.delete\') }}\n            </sw-context-menu-item>\n            {% endblock %}\n        </sw-context-button>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    \n    {% block sw_product_stream_filter_error %}\n    <sw-field-error :error="currentError" />\n    {% endblock %}\n</div>\n    {% endblock %}\n{% endblock %}\n',inject:["createCondition","insertNodeIntoTree","removeNodeFromTree","productCustomFields","acl","conditionDataProviderService"],computed:{actualCondition(){return"not"===this.condition.type?this.condition.queries[0]:this.condition},fields:{get(){return this.actualCondition.field?this.conditionDataProviderService.allowedJsonAccessors.hasOwnProperty(this.actualCondition.field)||this.isCustomField(this.actualCondition.field)?[this.actualCondition.field]:this.actualCondition.field.split("."):[]},set(t){let e=t.join(".");if(e.match(".$")&&(e=e.substring(0,e.length)),!e){this.actualCondition.field=null;return}this.actualCondition.field=e}},fieldDefinitions(){let t=i.get("product"),e=[t];return this.fields.forEach(n=>{let o=t.getField(n);o&&"association"===o.type&&(t=i.get(o.entity),e.push(t))}),e},lastField(){return this.fieldDefinitions.length>this.fields.length?{fieldName:null,definition:i.get("product")}:{fieldName:this.fields[this.fields.length-1],definition:this.fieldDefinitions[this.fieldDefinitions.length-1]}}},methods:{updateFields({field:t,index:e}){let n=this.fields.slice(0,e);t&&n.push(t),this.changeType({type:null,parameters:null}),this.fields=n},handleWrapForTypeNull(t,e){return(null===t&&"not"===this.condition.type&&this.unwrapNot(this.condition,null),this.conditionDataProviderService.isNegatedType(t)&&"not"!==this.condition.type)?(this.wrapInNot(this.condition,t,e),!1):"not"!==this.condition.type||this.conditionDataProviderService.isNegatedType(t)?"not"===this.condition.type&&this.conditionDataProviderService.isNegatedType(t)?(this.unwrapNot(this.condition,t,e),this.wrapInNot(this.condition,t,e),!1):(this.actualCondition.type=t,!0):(this.unwrapNot(this.condition,t,e),!1)},changeBooleanValue({type:t,value:e}){this.handleWrapForTypeNull(t),"not"===this.condition.type&&(this.condition.queries[0].value="1"),this.condition.value=e},changeEmptyValue({type:t}){this.handleWrapForTypeNull(t),"not"===this.condition.type&&(this.condition.queries[0].value=null),this.condition.value=null},changeType({type:t,parameters:e}){this.handleWrapForTypeNull(t,e)&&(this.actualCondition.parameters=e,this.actualCondition.value=null)},wrapInNot(t,e,n){let{identifier:i}=this.conditionDataProviderService.negateOperator(e),o=this.copyParameters({...t,parameters:n});o.type=i;let s=this.createCondition(o,t.id,0);this.insertNodeIntoTree(this.condition,s),Object.assign(t,{type:"not",field:null,operator:null,value:null,parameters:null})},unwrapNot(t,e,n){let i=t.queries[0],o=this.copyParameters({...i,parameters:n});o.type=e,Object.assign(t,o),this.removeNodeFromTree(this.condition,i)},copyParameters({field:t,type:e,operator:n,parameters:i,value:o}){return{field:t,type:e,operator:n,parameters:i,value:o}},getNoPermissionsTooltip(t,e=!0){return{showDelay:300,message:this.$tc("sw-privileges.tooltip.warning"),appearance:"dark",showOnDisabledElements:e,disabled:this.acl.can(t)}},isCustomField(t){let e=t.replace(/customFields\./,"");return Object.keys(this.productCustomFields).includes(e)}}}},170862:function(t,e,n){var i=n(924058);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals),n(745346).Z("395abe3f",i,!0,{})}}]);