{"version":3,"sources":["webpack:///./src/module/sw-media/component/sidebar/sw-media-folder-info/sw-media-folder-info.scss","webpack:///./src/module/sw-media/component/sidebar/sw-media-folder-info/index.js","webpack:///./src/module/sw-media/component/sidebar/sw-media-folder-info/sw-media-folder-info.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Component","Mixin","Context","mapPropertyErrors","getComponentHelper","template","inject","mixins","getByName","props","mediaFolder","type","Object","required","validator","value","getEntityName","editable","Boolean","computed","_objectSpread","mediaFolderRepository","this","repositoryFactory","create","createdAt","Utils","format","date","nameItemClasses","mediaFolderNameError","methods","onChangeFolderName","newName","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","name","save","api","$emit","stop","quickActionClasses","disabled"],"mappings":"0GAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAA2EL,SAC5E,WAAYF,GAAS,EAAM,K,gtBCN5C,IAAAQ,EAAsCC,SAA9BC,EAASF,EAATE,UAAWC,EAAKH,EAALG,MAAOC,EAAOJ,EAAPI,QAClBC,EAAsBH,EAAUI,qBAAhCD,kBAMO,WACXE,SCXW,gwODaXC,OAAQ,CAAC,oBAAqB,OAE9BC,OAAQ,CACJN,EAAMO,UAAU,8BAGpBC,MAAO,CACHC,YAAa,CACTC,KAAMC,OACNC,UAAU,EACVC,UAAS,SAACC,GACN,MAAiC,iBAA1BA,EAAMC,kBAIrBC,SAAU,CACNN,KAAMO,QACNL,UAAU,EACVrB,SAAS,IAIjB2B,SAAQC,IAAA,CACJC,sBAAqB,WACjB,OAAOC,KAAKC,kBAAkBC,OAAO,iBAGzCC,UAAS,WACL,OAAO1B,SAAS2B,MAAMC,OAAOC,KAAKN,KAAKZ,YAAYe,aAGpDtB,EAAkB,cAAe,CAAC,UAAQ,IAE7C0B,gBAAe,WACX,MAAO,CACH,eAAgBP,KAAKQ,yBAKjCC,QAAS,CACCC,mBAAkB,SAACC,GAAU,IAADC,EAAA,YAAAC,IAAAC,IAAAC,MAAA,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OAAhCR,EAAKxB,YAAYiC,KAAOV,EAAQO,EAAAE,KAAA,EAC1BR,EAAKb,sBAAsBuB,KAAKV,EAAKxB,YAAaR,EAAQ2C,KAAK,KAAD,EACpEX,EAAKY,MAAM,wBAAwB,wBAAAN,EAAAO,UAAAT,MAHLH,IAMlCa,mBAAkB,SAACC,GACf,MAAO,CAAC,gCAAiC,CACrC,0CAA2CA","file":"static/js/ad511858f4cbdaa5294d.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-media-folder-info.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"084282c8\", content, true, {});","import template from './sw-media-folder-info.html.twig';\nimport './sw-media-folder-info.scss';\n\nconst { Component, Mixin, Context } = Shopware;\nconst { mapPropertyErrors } = Component.getComponentHelper();\n\n/**\n * @package buyers-experience\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl'],\n\n    mixins: [\n        Mixin.getByName('media-sidebar-modal-mixin'),\n    ],\n\n    props: {\n        mediaFolder: {\n            type: Object,\n            required: true,\n            validator(value) {\n                return value.getEntityName() === 'media_folder';\n            },\n        },\n\n        editable: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    computed: {\n        mediaFolderRepository() {\n            return this.repositoryFactory.create('media_folder');\n        },\n\n        createdAt() {\n            return Shopware.Utils.format.date(this.mediaFolder.createdAt);\n        },\n\n        ...mapPropertyErrors('mediaFolder', ['name']),\n\n        nameItemClasses() {\n            return {\n                'has--error': !!this.mediaFolderNameError,\n            };\n        },\n    },\n\n    methods: {\n        async onChangeFolderName(newName) {\n            this.mediaFolder.name = newName;\n            await this.mediaFolderRepository.save(this.mediaFolder, Context.api);\n            this.$emit('media-folder-renamed');\n        },\n\n        quickActionClasses(disabled) {\n            return ['sw-media-sidebar__quickaction', {\n                'sw-media-sidebar__quickaction--disabled': disabled,\n            }];\n        },\n    },\n};\n","export default \"\\n{% block sw_media_folder_info %}\\n<div class=\\\"sw-media-folder-info\\\">\\n    \\n    {% block sw_media_quickinfo_folder_quickactions %}\\n    <sw-media-collapse\\n        v-if=\\\"editable\\\"\\n        :title=\\\"$tc('sw-media.sidebar.sections.actions')\\\"\\n        :expand-on-loading=\\\"true\\\"\\n    >\\n\\n        \\n        {% block sw_media_quickinfo_folder_quickactions_content %}\\n        <template #content>\\n            <ul class=\\\"sw-media-sidebar__quickactions-list\\\">\\n                \\n                {% block sw_media_quickinfo_folder_quickactions_move %}\\n                <li\\n                    v-tooltip=\\\"{\\n                        message: $tc('sw-privileges.tooltip.warning'),\\n                        disabled: acl.can('media.editor'),\\n                        showOnDisabledElements: true\\n                    }\\\"\\n                    class=\\\"quickaction--move\\\"\\n                    :class=\\\"quickActionClasses(!acl.can('media.editor'))\\\"\\n                    role=\\\"button\\\"\\n                    tabindex=\\\"0\\\"\\n                    @click=\\\"openModalMove\\\"\\n                    @keydown.enter=\\\"openModalMove\\\"\\n                >\\n                    <sw-icon\\n                        class=\\\"sw-media-sidebar__quickactions-icon\\\"\\n                        small\\n                        name=\\\"regular-file-export\\\"\\n                    />\\n                    {{ $tc('sw-media.sidebar.actions.move') }}\\n                </li>\\n                {% endblock %}\\n\\n                \\n                {% block sw_media_quickinfo_folder_quickactions_settings %}\\n                <li\\n                    class=\\\"sw-media-sidebar__quickaction quickaction--settings\\\"\\n                    role=\\\"button\\\"\\n                    tabindex=\\\"0\\\"\\n                    @click=\\\"openFolderSettings\\\"\\n                    @keydown.enter=\\\"openFolderSettings\\\"\\n                >\\n                    <sw-icon\\n                        class=\\\"sw-media-sidebar__quickactions-icon\\\"\\n                        small\\n                        name=\\\"regular-cog\\\"\\n                    />\\n                    {{ $tc('sw-media.sidebar.actions.settings') }}\\n                </li>\\n                {% endblock %}\\n\\n                \\n                {% block sw_media_quickinfo_folder_quickactions_dissolve %}\\n                <li\\n                    v-tooltip=\\\"{\\n                        message: $tc('sw-privileges.tooltip.warning'),\\n                        disabled: acl.can('media.editor'),\\n                        showOnDisabledElements: true\\n                    }\\\"\\n                    class=\\\"quickaction--dissolve\\\"\\n                    :class=\\\"quickActionClasses(!acl.can('media.editor'))\\\"\\n                    role=\\\"button\\\"\\n                    tabindex=\\\"0\\\"\\n                    @click=\\\"openFolderDissolve\\\"\\n                    @keydown.enter=\\\"openFolderDissolve\\\"\\n                >\\n                    <sw-icon\\n                        class=\\\"sw-media-sidebar__quickactions-icon\\\"\\n                        small\\n                        name=\\\"regular-spinner-star\\\"\\n                    />\\n                    {{ $tc('sw-media.sidebar.actions.dissolve') }}\\n                </li>\\n                {% endblock %}\\n\\n                \\n                {% block sw_media_quickinfo_folder_quickactions_delete %}\\n                <li\\n                    v-tooltip=\\\"{\\n                        message: $tc('sw-privileges.tooltip.warning'),\\n                        disabled: acl.can('media.deleter'),\\n                        showOnDisabledElements: true\\n                    }\\\"\\n                    class=\\\"quickaction--delete is--danger\\\"\\n                    :class=\\\"quickActionClasses(!acl.can('media.deleter'))\\\"\\n                    role=\\\"button\\\"\\n                    tabindex=\\\"0\\\"\\n                    @click=\\\"openModalDelete\\\"\\n                    @keydown.enter=\\\"openModalDelete\\\"\\n                >\\n                    <sw-icon\\n                        class=\\\"sw-media-sidebar__quickactions-icon is--danger\\\"\\n                        small\\n                        name=\\\"regular-trash\\\"\\n                    />\\n                    {{ $tc('sw-media.sidebar.actions.delete') }}\\n                </li>\\n                {% endblock %}\\n            </ul>\\n        </template>\\n        {% endblock %}\\n    </sw-media-collapse>\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_quickinfo_folder_metadata %}\\n    <sw-media-collapse\\n        :expand-on-loading=\\\"true\\\"\\n        :title=\\\"$tc('sw-media.sidebar.sections.metadata')\\\"\\n    >\\n\\n        \\n        {% block sw_media_quickinfo_folder_metadata_content %}\\n        <template #content>\\n            <dl class=\\\"sw-media-sidebar__metadata-list\\\">\\n                \\n                {% block sw_media_quickinfo_folder_metadata_content_base %}\\n                <sw-media-quickinfo-metadata-item\\n                    class=\\\"sw-media-quickinfo-metadata-name\\\"\\n                    :class=\\\"nameItemClasses\\\"\\n                    :label-name=\\\"$tc('sw-media.sidebar.metadata.name')\\\"\\n                    :truncated=\\\"false\\\"\\n                >\\n                    <sw-confirm-field\\n                        v-if=\\\"editable\\\"\\n                        ref=\\\"inlineEditFieldName\\\"\\n                        :disabled=\\\"!acl.can('media.creator')\\\"\\n                        compact\\n                        :value=\\\"mediaFolder.name\\\"\\n                        :error=\\\"mediaFolderNameError\\\"\\n                        @input=\\\"onChangeFolderName\\\"\\n                    />\\n                    <template v-else>\\n                        {{ mediaFolder.name }}\\n                    </template>\\n                </sw-media-quickinfo-metadata-item>\\n\\n                <sw-media-quickinfo-metadata-item\\n                    class=\\\"sw-media-quickinfo-metadata-createdAt\\\"\\n                    :label-name=\\\"$tc('sw-media.sidebar.metadata.createdAt')\\\"\\n                >\\n                    {{ createdAt }}\\n                </sw-media-quickinfo-metadata-item>\\n                {% endblock %}\\n            </dl>\\n        </template>\\n        {% endblock %}\\n    </sw-media-collapse>\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_folder_info_settings_modal %}\\n    <sw-media-modal-folder-settings\\n        v-if=\\\"showFolderSettings\\\"\\n        :disabled=\\\"!acl.can('media.editor')\\\"\\n        :media-folder-id=\\\"mediaFolder.id\\\"\\n        @media-settings-modal-save=\\\"closeFolderSettings\\\"\\n        @media-settings-modal-close=\\\"closeFolderSettings\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_folder_info_dissolve_modal %}\\n    <sw-media-modal-folder-dissolve\\n        v-if=\\\"showFolderDissolve\\\"\\n        :items-to-dissolve=\\\"[mediaFolder]\\\"\\n        @media-folder-dissolve-modal-dissolve=\\\"onFolderDissolved\\\"\\n        @media-folder-dissolve-modal-close=\\\"closeFolderDissolve\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_folder_info_move_modal %}\\n    <sw-media-modal-move\\n        v-if=\\\"showModalMove\\\"\\n        :items-to-move=\\\"[mediaFolder]\\\"\\n        @media-move-modal-close=\\\"closeModalMove\\\"\\n        @media-move-modal-items-move=\\\"onFolderMoved\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_folder_info_modal_delete %}\\n    <sw-media-modal-delete\\n        v-if=\\\"showModalDelete\\\"\\n        :items-to-delete=\\\"[mediaFolder]\\\"\\n        @media-delete-modal-close=\\\"closeModalDelete\\\"\\n        @media-delete-modal-items-delete=\\\"deleteSelectedItems\\\"\\n    />\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}