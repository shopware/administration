{"version":3,"sources":["webpack:///./src/module/sw-cms/component/sw-cms-block/sw-cms-block.html.twig","webpack:///./src/module/sw-cms/component/sw-cms-block/index.js","webpack:///./src/module/sw-cms/component/sw-cms-block/sw-cms-block.scss"],"names":["_Shopware","Shopware","Filter","State","template","inject","props","block","type","Object","required","default","active","Boolean","disabled","hasWarnings","hasErrors","data","backgroundUrl","isCollapsed","computed","customBlockClass","_this$block","_this$block$cssClass","errorCssClasses","this","cssClass","split","reduce","accumulator","className","blockStyles","backgroundMedia","id","concat","url","assetFilter","backgroundColor","backgroundMediaMode","blockPadding","marginTop","marginBottom","marginLeft","marginRight","overlayClasses","toolbarClasses","getByName","isVisible","view","get","currentCmsDeviceView","visibility","desktop","tablet","mobile","toggleButtonText","$tc","expandedClass","created","createdComponent","methods","onBlockOverlayClick","locked","$emit","toggleVisibility","content","__esModule","module","i","locals","exports","add"],"mappings":"6JAAe,ICOfA,EAA0BC,SAAlBC,EAAMF,EAANE,OAAQC,EAAKH,EAALG,MAGD,WACXC,SDXW,w/BCaXC,OAAQ,CAAC,cAETC,MAAO,CACHC,MAAO,CACHC,KAAMC,OACNC,UAAU,EACVC,QAAO,WACH,MAAO,KAIfC,OAAQ,CACJJ,KAAMK,QACNH,UAAU,EACVC,SAAS,GAGbG,SAAU,CACNN,KAAMK,QACNH,UAAU,EACVC,SAAS,GAGbI,YAAa,CACTP,KAAMK,QACNH,UAAU,EACVC,SAAS,GAGbK,UAAW,CACPR,KAAMK,QACNH,UAAU,EACVC,SAAS,IAIjBM,KAAI,WACA,MAAO,CACHC,cAAe,KACfC,aAAa,IAIrBC,SAAU,CACNC,iBAAgB,WAAI,IAADC,EAAAC,EACTC,EAAkB,CACpB,gBAAiBC,KAAKT,WAAaS,KAAKV,YACxC,aAAcU,KAAKT,WAGvB,OAAKS,KAAKlB,MAAMmB,SAIC,QAAjBJ,EAAOG,KAAKlB,aAAK,IAAAe,GAAU,QAAVC,EAAVD,EAAYI,gBAAQ,IAAAH,OAAV,EAAVA,EAAsBI,MAAM,KAAKC,QAAO,SAACC,EAAaC,GAGzD,OAFAD,EAAYC,IAAa,EAElBD,IACRL,GAPQA,GAUfO,YAAW,WACP,IAAIC,EAAkB,KAUtB,OARIP,KAAKlB,MAAMyB,kBAEPA,EADAP,KAAKlB,MAAMyB,gBAAgBC,GACZ,QAAAC,OAAWT,KAAKlB,MAAMyB,gBAAgBG,IAAG,MAEzC,QAAAD,OAAWT,KAAKW,YAAYX,KAAKlB,MAAMyB,gBAAgBG,KAAI,OAI3E,CACH,mBAAoBV,KAAKlB,MAAM8B,iBAAmB,cAClD,mBAAoBL,EACpB,kBAAmBP,KAAKlB,MAAM+B,sBAItCC,aAAY,WACR,MAAO,CACH,cAAed,KAAKlB,MAAMiC,WAAa,MACvC,iBAAkBf,KAAKlB,MAAMkC,cAAgB,MAC7C,eAAgBhB,KAAKlB,MAAMmC,YAAc,MACzC,gBAAiBjB,KAAKlB,MAAMoC,aAAe,QAInDC,eAAc,WACV,MAAO,CACH,aAAcnB,KAAKb,SAI3BiC,eAAc,WACV,MAAO,CACH,aAAcpB,KAAKb,SAI3BwB,YAAW,WACP,OAAOlC,EAAO4C,UAAU,UAG5BC,UAAS,WACL,IAAMC,EAAO7C,EAAM8C,IAAI,gBAAgBC,qBAEvC,MAAiB,YAATF,IAAuBvB,KAAKlB,MAAM4C,WAAWC,SACvC,qBAATJ,IAAgCvB,KAAKlB,MAAM4C,WAAWE,QAC7C,WAATL,IAAsBvB,KAAKlB,MAAM4C,WAAWG,QAGrDC,iBAAgB,WACZ,OAAO9B,KAAK+B,IAAI,wDAAyD/B,KAAKN,cAGlFsC,cAAa,WACT,MAAO,CACH,eAAgBhC,KAAKsB,YAActB,KAAKN,eAKpDuC,QAAO,WACHjC,KAAKkC,oBAGTC,QAAS,CACLD,iBAAgB,WACPlC,KAAKlB,MAAM+B,sBACZb,KAAKlB,MAAM+B,oBAAsB,UAIzCuB,oBAAmB,WACVpC,KAAKlB,MAAMuD,QACZrC,KAAKsC,MAAM,wBAInBC,iBAAgB,WACZvC,KAAKN,aAAeM,KAAKN,gB,qBCvJrC,IAAI8C,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQtD,SACnB,iBAAZsD,IAAsBA,EAAU,CAAC,CAACE,EAAOC,EAAIH,EAAS,MAC7DA,EAAQI,SAAQF,EAAOG,QAAUL,EAAQI,SAG/BE,EADH,EAAQ,QAAwE5D,SACzE,WAAYsD,GAAS,EAAM","file":"static/js/a62d6062e1a7a8059cdb.js","sourcesContent":["export default \"\\n{% block sw_cms_block %}\\n<div\\n    class=\\\"sw-cms-block\\\"\\n    :class=\\\"customBlockClass\\\"\\n    :style=\\\"blockStyles\\\"\\n>\\n    <sw-cms-visibility-toggle\\n        v-if=\\\"isVisible\\\"\\n        :text=\\\"toggleButtonText\\\"\\n        :is-collapsed=\\\"isCollapsed\\\"\\n        :class=\\\"expandedClass\\\"\\n        @toggle=\\\"toggleVisibility\\\"\\n    />\\n    \\n    {% block sw_cms_block_content %}\\n    <div\\n        v-if=\\\"!isCollapsed || !isVisible\\\"\\n        class=\\\"sw-cms-block__content\\\"\\n        :class=\\\"expandedClass\\\"\\n        :style=\\\"blockPadding\\\"\\n    >\\n        <slot>\\n        \\n        {% block sw_cms_block_slot_default %}{% endblock %}\\n        </slot>\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_cms_block_overlay %}\\n    <div\\n        v-if=\\\"!disabled\\\"\\n        class=\\\"sw-cms-block__config-overlay\\\"\\n        :class=\\\"overlayClasses\\\"\\n        role=\\\"button\\\"\\n        tabindex=\\\"0\\\"\\n        @click=\\\"onBlockOverlayClick\\\"\\n        @keydown.enter=\\\"onBlockOverlayClick\\\"\\n    ></div>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","import template from './sw-cms-block.html.twig';\nimport './sw-cms-block.scss';\n\n/**\n * @package buyers-experience\n */\n\nconst { Filter, State } = Shopware;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['cmsService'],\n\n    props: {\n        block: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            },\n        },\n\n        active: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        hasWarnings: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        hasErrors: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            backgroundUrl: null,\n            isCollapsed: true,\n        };\n    },\n\n    computed: {\n        customBlockClass() {\n            const errorCssClasses = {\n                'has--warning': !this.hasErrors && this.hasWarnings,\n                'has--error': this.hasErrors,\n            };\n\n            if (!this.block.cssClass) {\n                return errorCssClasses;\n            }\n\n            return this.block?.cssClass?.split(' ').reduce((accumulator, className) => {\n                accumulator[className] = true;\n\n                return accumulator;\n            }, errorCssClasses);\n        },\n\n        blockStyles() {\n            let backgroundMedia = null;\n\n            if (this.block.backgroundMedia) {\n                if (this.block.backgroundMedia.id) {\n                    backgroundMedia = `url(\"${this.block.backgroundMedia.url}\")`;\n                } else {\n                    backgroundMedia = `url('${this.assetFilter(this.block.backgroundMedia.url)}')`;\n                }\n            }\n\n            return {\n                'background-color': this.block.backgroundColor || 'transparent',\n                'background-image': backgroundMedia,\n                'background-size': this.block.backgroundMediaMode,\n            };\n        },\n\n        blockPadding() {\n            return {\n                'padding-top': this.block.marginTop || '0px',\n                'padding-bottom': this.block.marginBottom || '0px',\n                'padding-left': this.block.marginLeft || '0px',\n                'padding-right': this.block.marginRight || '0px',\n            };\n        },\n\n        overlayClasses() {\n            return {\n                'is--active': this.active,\n            };\n        },\n\n        toolbarClasses() {\n            return {\n                'is--active': this.active,\n            };\n        },\n\n        assetFilter() {\n            return Filter.getByName('asset');\n        },\n\n        isVisible() {\n            const view = State.get('cmsPageState').currentCmsDeviceView;\n\n            return (view === 'desktop' && !this.block.visibility.desktop) ||\n                (view === 'tablet-landscape' && !this.block.visibility.tablet) ||\n                (view === 'mobile' && !this.block.visibility.mobile);\n        },\n\n        toggleButtonText() {\n            return this.$tc('sw-cms.sidebar.contentMenu.visibilityBlockTextButton', !this.isCollapsed);\n        },\n\n        expandedClass() {\n            return {\n                'is--expanded': this.isVisible && !this.isCollapsed,\n            };\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (!this.block.backgroundMediaMode) {\n                this.block.backgroundMediaMode = 'cover';\n            }\n        },\n\n        onBlockOverlayClick() {\n            if (!this.block.locked) {\n                this.$emit('block-overlay-click');\n            }\n        },\n\n        toggleVisibility() {\n            this.isCollapsed = !this.isCollapsed;\n        },\n    },\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-cms-block.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2d673c52\", content, true, {});"],"sourceRoot":""}