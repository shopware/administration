(this.webpackJsonpAdministration=this.webpackJsonpAdministration||[]).push([[193],{"F0+B":function(e,n,t){},Ljht:function(e,n,t){var i=t("F0+B");i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,t("ydqr").default)("3a268a81",i,!0,{})},OKsi:function(e,n,t){"use strict";t.r(n);t("Ljht");var i=Shopware.Mixin;n.default={template:'\n{% block sw_cms_element_text %}\n<div class="sw-cms-el-text">\n    <div\n        v-if="element.config.content.source === \'mapped\'"\n        class="sw-cms-el-text__mapping-preview content-editor"\n        v-html="$sanitize(demoValue)"\n    ></div>\n\n    <sw-text-editor\n        v-else\n        v-model="element.config.content.value"\n        :disabled="disabled"\n        :vertical-align="element.config.verticalAlign.value"\n        :allow-inline-data-mapping="true"\n        :is-inline-edit="true"\n        sanitize-input\n        enable-transparent-background\n        @blur="onBlur"\n        @input="onInput"\n    />\n</div>\n{% endblock %}\n',mixins:[i.getByName("cms-element")],data:function(){return{editable:!0,demoValue:""}},watch:{cmsPageState:{deep:!0,handler:function(){this.updateDemoValue()}},"element.config.content.source":{handler:function(){this.updateDemoValue()}}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.initElementConfig("text")},updateDemoValue:function(){"mapped"===this.element.config.content.source&&(this.demoValue=this.getDemoValue(this.element.config.content.value))},onBlur:function(e){this.emitChanges(e)},onInput:function(e){this.emitChanges(e)},emitChanges:function(e){e!==this.element.config.content.value&&(this.element.config.content.value=e,this.$emit("element-update",this.element))}}}}}]);