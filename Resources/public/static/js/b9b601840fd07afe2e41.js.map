{"version":3,"sources":["webpack:///./src/module/sw-property/page/sw-property-detail/sw-property-detail.html.twig","webpack:///./src/module/sw-property/page/sw-property-detail/index.js","webpack:///./src/module/sw-property/page/sw-property-detail/sw-property-detail.scss"],"names":["Mixin","Shopware","Criteria","Data","template","inject","mixins","getByName","shortcuts","active","this","acl","can","method","ESCAPE","props","groupId","type","String","default","data","propertyGroup","isLoading","isSaveSuccessful","customFieldSets","metaInfo","title","$createTitle","identifier","computed","placeholder","optionRepository","repositoryFactory","create","options","entity","source","propertyRepository","tooltipSave","message","$tc","disabled","showOnDisabledElements","systemKey","$device","getSystemKey","concat","appearance","tooltipCancel","defaultCriteria","criteria","page","limit","addAssociation","setTerm","term","useNaturalSorting","sortBy","showCustomFields","length","watch","loadEntityData","created","createdComponent","methods","ExtensionAPI","publishData","id","path","scope","loadCustomFieldSets","_this","get","Context","api","then","currentGroup","catch","_this2","customFieldDataProviderService","getCustomFieldSets","sets","saveFinish","saveOnLanguageChange","onSave","abortOnLanguageChange","hasChanges","onChangeLanguage","_this3","save","exception","createNotificationError","onCancel","$router","push","name","content","__esModule","module","i","locals","exports","add"],"mappings":"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","file":"static/js/b9b601840fd07afe2e41.js","sourcesContent":["export default \"\\n{% block sw_property_detail %}\\n<sw-page class=\\\"sw-property-detail\\\">\\n\\n    \\n    {% block sw_property_detail_smart_bar_header %}\\n    <template #smart-bar-header>\\n\\n        \\n        {% block sw_property_detail_smart_bar_header_title %}\\n        <h2>{{ placeholder(propertyGroup, 'name', $tc('sw-property.detail.textHeadline')) }}</h2>\\n        {% endblock %}\\n\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_property_detail_smart_bar_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_property_detail_smart_bar_actions_cancel %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"tooltipCancel\\\"\\n            class=\\\"sw-property-detail__back-action\\\"\\n            :disabled=\\\"isLoading\\\"\\n            @click=\\\"onCancel\\\"\\n        >\\n            {{ $tc('sw-property.detail.buttonCancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_property_detail_smart_bar_actions_save %}\\n        <sw-button-process\\n            v-tooltip=\\\"tooltipSave\\\"\\n            class=\\\"sw-property-detail__save-action\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :process-success=\\\"isSaveSuccessful\\\"\\n            :disabled=\\\"isLoading || !acl.can('property.editor')\\\"\\n            variant=\\\"primary\\\"\\n            {% if VUE3 %}\\n            @update:process-success=\\\"saveFinish\\\"\\n            {% else %}\\n            @process-finish=\\\"saveFinish\\\"\\n            {% endif %}\\n            @click.prevent=\\\"onSave\\\"\\n        >\\n            {{ $tc('sw-property.detail.buttonSave') }}\\n        </sw-button-process>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_property_detail_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch\\n            :save-changes-function=\\\"saveOnLanguageChange\\\"\\n            :abort-change-function=\\\"abortOnLanguageChange\\\"\\n            :save-permission=\\\"acl.can('property.editor')\\\"\\n            @on-change=\\\"onChangeLanguage\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_property_detail_content %}\\n    <template #content>\\n        <sw-card-view>\\n            <template v-if=\\\"isLoading\\\">\\n                <sw-skeleton variant=\\\"detail-bold\\\" />\\n                <sw-skeleton />\\n            </template>\\n\\n            {# v-show is used here as underlying components influence the loading state and v-if would destroy this behaviour #}\\n            <div v-show=\\\"!isLoading\\\">\\n\\n                \\n                {% block sw_property_detail_content_language_info %}\\n                <sw-language-info\\n                    :entity-description=\\\"placeholder(propertyGroup, 'name', $tc('sw-property.detail.textHeadline'))\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_property_detail_content_detail_base %}\\n                <sw-property-detail-base\\n                    v-if=\\\"propertyGroup\\\"\\n                    :property-group=\\\"propertyGroup\\\"\\n                    :allow-edit=\\\"acl.can('property.editor')\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_property_detail_content_option_list %}\\n                <sw-property-option-list\\n                    v-if=\\\"propertyGroup\\\"\\n                    ref=\\\"optionListing\\\"\\n                    :is-loading=\\\"isLoading\\\"\\n                    :option-repository=\\\"optionRepository\\\"\\n                    :property-group=\\\"propertyGroup\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_property_detail_custom_field_sets %}\\n                <sw-card\\n                    v-if=\\\"showCustomFields\\\"\\n                    position-identifier=\\\"sw-property-detail\\\"\\n                    :title=\\\"$tc('sw-settings-custom-field.general.mainMenuItemGeneral')\\\"\\n                >\\n                    <sw-custom-field-set-renderer\\n                        :entity=\\\"propertyGroup\\\"\\n                        :disabled=\\\"!acl.can('property.editor')\\\"\\n                        :sets=\\\"customFieldSets\\\"\\n                    />\\n                </sw-card>\\n                {% endblock %}\\n            </div>\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";","/*\n * @package inventory\n */\n\nimport template from './sw-property-detail.html.twig';\nimport './sw-property-detail.scss';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'customFieldDataProviderService',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('placeholder'),\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': {\n            active() {\n                return this.acl.can('product.editor');\n            },\n            method: 'onSave',\n        },\n        ESCAPE: 'onCancel',\n    },\n\n    props: {\n        groupId: {\n            type: String,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            propertyGroup: null,\n            isLoading: false,\n            isSaveSuccessful: false,\n            customFieldSets: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        identifier() {\n            return this.placeholder(this.propertyGroup, 'name');\n        },\n\n        optionRepository() {\n            return this.repositoryFactory.create(\n                this.propertyGroup.options.entity,\n                this.propertyGroup.options.source,\n            );\n        },\n\n        propertyRepository() {\n            return this.repositoryFactory.create('property_group');\n        },\n\n        tooltipSave() {\n            if (!this.acl.can('property.editor')) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.acl.can('property.editor'),\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        tooltipCancel() {\n            return {\n                message: 'ESC',\n                appearance: 'light',\n            };\n        },\n\n        defaultCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n            criteria.addAssociation('options');\n            criteria.setTerm(this.term);\n\n            return criteria;\n        },\n\n        useNaturalSorting() {\n            return this.sortBy === 'property.name';\n        },\n\n        showCustomFields() {\n            return this.propertyGroup && this.customFieldSets && this.customFieldSets.length > 0;\n        },\n    },\n\n    watch: {\n        groupId() {\n            this.loadEntityData();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Shopware.ExtensionAPI.publishData({\n                id: 'sw-property-group-detail__propertyGroup',\n                path: 'propertyGroup',\n                scope: this,\n            });\n            this.loadEntityData();\n            this.loadCustomFieldSets();\n        },\n\n        loadEntityData() {\n            this.isLoading = true;\n\n            this.propertyRepository.get(this.groupId, Shopware.Context.api, this.defaultCriteria)\n                .then((currentGroup) => {\n                    this.propertyGroup = currentGroup;\n                    this.isLoading = false;\n                }).catch(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        loadCustomFieldSets() {\n            this.customFieldDataProviderService.getCustomFieldSets('property_group').then((sets) => {\n                this.customFieldSets = sets;\n            });\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        saveOnLanguageChange() {\n            return this.onSave();\n        },\n\n        abortOnLanguageChange() {\n            return this.propertyRepository.hasChanges(this.propertyGroup);\n        },\n\n        onChangeLanguage() {\n            this.loadEntityData();\n        },\n\n        onSave() {\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            return this.propertyRepository.save(this.propertyGroup).then(() => {\n                this.loadEntityData();\n                this.isLoading = false;\n                this.isSaveSuccessful = true;\n            }).catch((exception) => {\n                this.createNotificationError({\n                    message: this.$tc('sw-property.detail.messageSaveError'),\n                });\n                this.isLoading = false;\n                throw exception;\n            });\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'sw.property.index' });\n        },\n    },\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-property-detail.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4fecd780\", content, true, {});"],"sourceRoot":""}