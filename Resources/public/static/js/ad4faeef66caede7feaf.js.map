{"version":3,"sources":["webpack:///./src/module/sw-extension/page/sw-extension-config/index.ts","webpack:///./src/module/sw-extension/page/sw-extension-config/sw-extension-config.html.twig","webpack:///./src/module/sw-extension/page/sw-extension-config/sw-extension-config.scss"],"names":["Mixin","Shopware","Component","wrapComponentConfig","template","beforeRouteEnter","to","from","next","vm","fromLink","inject","mixins","getByName","props","namespace","type","String","required","data","salesChannelId","extension","computed","domain","concat","this","myExtensions","State","get","defaultThemeAsset","Filter","image","_this$extension","_this$extension2","icon","iconRaw","extensionLabel","_this$extension$label","_this$extension3","label","created","createdComponent","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$myExtensions$fi","wrap","_context","prev","length","shopwareExtensionService","updateExtensionData","find","ext","name","stop","onSave","_this2","_callee2","_context2","$refs","systemConfig","saveAll","createNotificationSuccess","message","$tc","t0","createNotificationError","content","__esModule","default","module","i","locals","exports","add"],"mappings":"4KAKQA,G,UAAUC,SAAVD,OAYOC,mBAASC,UAAUC,oBAAoB,CAClDC,SClBW,srDDoBXC,iBAAgB,SAACC,EAAIC,EAAMC,GACvBA,GAAK,SAACC,GAEFA,EAAGC,SAAWH,MAItBI,OAAQ,CACJ,4BAGJC,OAAQ,CACJZ,EAAMa,UAAU,iBAGpBC,MAAO,CACHC,UAAW,CACPC,KAAMC,OACNC,UAAU,IAIlBC,KAAI,WACA,MAAO,CACHC,eAAgB,KAChBC,UAAW,KACXX,SAAU,OAIlBY,SAAU,CACNC,OAAM,WACF,MAAM,GAANC,OAAUC,KAAKV,UAAS,YAG5BW,aAAY,WACR,OAAOzB,SAAS0B,MAAMC,IAAI,sBAAsBF,aAAaP,MAGjEU,kBAAiB,WACb,OAAO5B,SAAS6B,OAAOjB,UAAU,QAA1BZ,CAAmC,8DAG9C8B,MAAK,WAAY,IAADC,EAAAC,EACZ,OAAkB,QAAlBD,EAAIP,KAAKJ,iBAAS,IAAAW,GAAdA,EAAgBE,KACTT,KAAKJ,UAAUa,KAGR,QAAlBD,EAAIR,KAAKJ,iBAAS,IAAAY,GAAdA,EAAgBE,QACV,0BAANX,OAAiCC,KAAKJ,UAAUc,SAG7CV,KAAKI,mBAGhBO,eAAc,WAAY,IAADC,EAAAC,EACrB,OAA4B,QAA5BD,EAAqB,QAArBC,EAAOb,KAAKJ,iBAAS,IAAAiB,OAAA,EAAdA,EAAgBC,aAAK,IAAAF,IAAIZ,KAAKV,YAI7CyB,QAAO,WACEf,KAAKgB,oBAGdC,QAAS,CACCD,iBAAgB,WAAmB,IAADE,EAAA,YAAAC,IAAAC,IAAAC,MAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA1C,MAAA,UAC/BmC,EAAKjB,aAAa0B,OAAO,CAADF,EAAA1C,KAAA,eAAA0C,EAAA1C,KAAA,EACnBmC,EAAKU,yBAAyBC,sBAAsB,KAAD,EAG7DX,EAAKtB,UAEH,QAFY2B,EAAGL,EAAKjB,aAAa6B,MAAK,SAACC,GACrC,OAAOA,EAAIC,OAASd,EAAK5B,oBAC3B,IAAAiC,IAAI,KAAK,wBAAAE,EAAAQ,UAAAX,MAPyBH,IAUlCe,OAAM,WAAmB,IAADC,EAAA,YAAAhB,IAAAC,IAAAC,MAAA,SAAAe,IAAA,OAAAhB,IAAAI,MAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAtD,MAAA,cAAAsD,EAAAX,KAAA,EAAAW,EAAAtD,KAAA,EAIhBoD,EAAKG,MAAMC,aAAaC,UAAU,KAAD,EAEvCL,EAAKM,0BAA0B,CAC3BC,QAASP,EAAKQ,IAAI,yEACnBN,EAAAtD,KAAA,eAAAsD,EAAAX,KAAA,EAAAW,EAAAO,GAAAP,EAAA,SAEHF,EAAKU,wBAAwB,CACzBH,QAAOL,EAAAO,KACR,wBAAAP,EAAAJ,UAAAG,EAAA,iBAZmBjB,Q,uBE5FtC,IAAI2B,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K","file":"static/js/ad4faeef66caede7feaf.js","sourcesContent":["import type { Route } from 'vue-router';\nimport type { Extension } from '../../service/extension-store-action.service';\nimport template from './sw-extension-config.html.twig';\nimport './sw-extension-config.scss';\n\nconst { Mixin } = Shopware;\n\ntype ComponentData = {\n    salesChannelId: string|null,\n    extension: Extension|null,\n    fromLink: Route|null,\n}\n\n/**\n * @package services-settings\n * @private\n */\nexport default Shopware.Component.wrapComponentConfig({\n    template,\n\n    beforeRouteEnter(to, from, next) {\n        next((vm) => {\n            // @ts-expect-error\n            vm.fromLink = from;\n        });\n    },\n\n    inject: [\n        'shopwareExtensionService',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        namespace: {\n            type: String,\n            required: true,\n        },\n    },\n\n    data(): ComponentData {\n        return {\n            salesChannelId: null,\n            extension: null,\n            fromLink: null,\n        };\n    },\n\n    computed: {\n        domain(): string {\n            return `${this.namespace}.config`;\n        },\n\n        myExtensions(): Extension[] {\n            return Shopware.State.get('shopwareExtensions').myExtensions.data;\n        },\n\n        defaultThemeAsset(): string {\n            return Shopware.Filter.getByName('asset')('administration/static/img/theme/default_theme_preview.jpg');\n        },\n\n        image(): string {\n            if (this.extension?.icon) {\n                return this.extension.icon;\n            }\n\n            if (this.extension?.iconRaw) {\n                return `data:image/png;base64, ${this.extension.iconRaw}`;\n            }\n\n            return this.defaultThemeAsset;\n        },\n\n        extensionLabel(): string {\n            return this.extension?.label ?? this.namespace;\n        },\n    },\n\n    created() {\n        void this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent(): Promise<void> {\n            if (!this.myExtensions.length) {\n                await this.shopwareExtensionService.updateExtensionData();\n            }\n\n            this.extension = this.myExtensions.find((ext) => {\n                return ext.name === this.namespace;\n            }) ?? null;\n        },\n\n        async onSave(): Promise<void> {\n            try {\n                // @ts-expect-error\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                await this.$refs.systemConfig.saveAll();\n\n                this.createNotificationSuccess({\n                    message: this.$tc('sw-extension-store.component.sw-extension-config.messageSaveSuccess'),\n                });\n            } catch (err) {\n                this.createNotificationError({\n                    message: err as string,\n                });\n            }\n        },\n    },\n});\n","export default \"<sw-meteor-page\\n    class=\\\"sw-extension-config\\\"\\n    :from-link=\\\"fromLink\\\"\\n>\\n    <template #smart-bar-icon>\\n        <sw-extension-icon\\n            class=\\\"sw-extension-config__extension-icon\\\"\\n            :src=\\\"image\\\"\\n            :alt=\\\"$tc('sw-extension-store.component.sw-extension-config.imageDescription', 0, { extensionName: extensionLabel})\\\"\\n        />\\n    </template>\\n\\n    <template #smart-bar-header>\\n        {{ extensionLabel }}\\n    </template>\\n\\n    <template\\n        v-if=\\\"extension\\\"\\n        #smart-bar-header-meta\\n    >\\n        <span v-if=\\\"extension.producerWebsite && extension.producerName\\\">\\n            {{ $tc('sw-extension-store.component.sw-extension-config.labelBy') }}\\n\\n            <sw-external-link\\n                small\\n                :href=\\\"extension.producerWebsite\\\"\\n                class=\\\"sw-extension-config__producer-link\\\"\\n            >\\n                {{ extension.producerName }}\\n            </sw-external-link>\\n        </span>\\n\\n        <span v-else-if=\\\"extension.producerName\\\">\\n            {{ $tc('sw-extension-store.component.sw-extension-config.labelBy') }} {{ extension.producerName }}\\n        </span>\\n    </template>\\n\\n    <template #smart-bar-actions>\\n        <sw-button\\n            variant=\\\"primary\\\"\\n            class=\\\"sw-extension-config__save-action\\\"\\n            @click.prevent=\\\"onSave\\\"\\n        >\\n            {{ $tc('global.default.save') }}\\n        </sw-button>\\n    </template>\\n\\n    <template #default>\\n        <sw-system-config\\n            ref=\\\"systemConfig\\\"\\n            :domain=\\\"domain\\\"\\n            sales-channel-switchable\\n            :sales-channel-id=\\\"salesChannelId\\\"\\n        />\\n    </template>\\n</sw-meteor-page>\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-extension-config.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1ca3f653\", content, true, {});"],"sourceRoot":""}