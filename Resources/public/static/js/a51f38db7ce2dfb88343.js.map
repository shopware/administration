{"version":3,"sources":["webpack:///./src/module/sw-settings-tax/component/sw-settings-tax-provider-sorting-modal/sw-settings-tax-provider-sorting-modal.scss","webpack:///./src/module/sw-settings-tax/component/sw-settings-tax-provider-sorting-modal/sw-settings-tax-provider-sorting-modal.html.twig","webpack:///./src/module/sw-settings-tax/component/sw-settings-tax-provider-sorting-modal/index.ts"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Component","Mixin","wrapComponentConfig","template","inject","mixins","getByName","props","taxProviders","type","Array","required","data","isSaving","originalTaxProviders","this","sortedTaxProviders","computed","taxProviderRepository","repositoryFactory","create","methods","closeModal","$emit","applyChanges","_this","map","taxProvider","index","priority","length","saveAll","then","createNotificationSuccess","message","$tc","catch","createNotificationError","onSort","sortedItems"],"mappings":"wGAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,mDCT7B,ICOfQ,EAA6BC,SAArBC,EAASF,EAATE,UAAWC,EAAKH,EAALG,MAOJD,YAAUE,oBAAoB,CACzCC,SDfW,0lECiBXC,OAAQ,CACJ,MACA,qBAGJC,OAAQ,CACJJ,EAAMK,UAAU,iBAGpBC,MAAO,CACHC,aAAc,CACVC,KAAMC,MACNC,UAAU,IAIlBC,KAAI,WAKA,MAAO,CACHC,UAAU,EACVC,qBAAsBC,KAAKP,aAC3BQ,mBAAoBD,KAAKP,eAIjCS,SAAU,CACNC,sBAAqB,WACjB,OAAOH,KAAKI,kBAAkBC,OAAO,kBAI7CC,QAAS,CACLC,WAAU,WACNP,KAAKQ,MAAM,gBAGfC,aAAY,WAAU,IAADC,EAAA,KACjBV,KAAKF,UAAW,EAEhBE,KAAKC,mBAAmBU,KAAI,SAACC,EAAqCC,GAE9D,OADAD,EAAYE,SAAWJ,EAAKT,mBAAmBc,OAASF,EACjDD,KAGXZ,KAAKG,sBAAsBa,QAAQhB,KAAKC,oBACnCgB,MAAK,WACFP,EAAKZ,UAAW,EAChBY,EAAKF,MAAM,eACXE,EAAKF,MAAM,cAEXE,EAAKQ,0BAA0B,CAC3BC,QAAST,EAAKU,IAAI,sEAGzBC,OAAM,WACHX,EAAKY,wBAAwB,CACzBH,QAAST,EAAKU,IAAI,qEAKlCG,OAAM,SAACC,GACHxB,KAAKC,mBAAqBuB,O","file":"static/js/a51f38db7ce2dfb88343.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-tax-provider-sorting-modal.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"69428099\", content, true, {});","export default \"<sw-modal\\n    class=\\\"sw-settings-tax-provider-sorting-modal\\\"\\n    :title=\\\"$tc('sw-settings-tax.list.taxProvider.sorting-modal.modalTitle')\\\"\\n    @modal-close=\\\"closeModal\\\"\\n>\\n    <template #body>\\n        <div class=\\\"sw-modal__body sw-settings-tax-provider-sorting-modal__subtitle\\\">\\n            {{ $tc('sw-settings-tax.list.taxProvider.sorting-modal.subTitle') }}\\n        </div>\\n\\n        <div class=\\\"sw-modal__body\\\">\\n            <sw-sortable-list\\n                class=\\\"sw-settings-tax-provider-sorting-modal__tax-provider-list\\\"\\n                :items=\\\"sortedTaxProviders\\\"\\n                @items-sorted=\\\"onSort\\\"\\n            >\\n                <template #item=\\\"{ item: taxProvider }\\\">\\n                    <div\\n                        class=\\\"sw-settings-tax-provider-sorting-modal__tax-provider-list-item\\\"\\n                        :class=\\\"!taxProvider.active ? 'is--disabled' : ''\\\"\\n                    >\\n                        <sw-icon\\n                            class=\\\"sw-settings-tax-provider-sorting-modal__tax-provider-list-item__action\\\"\\n                            name=\\\"regular-grip-vertical\\\"\\n                        />\\n\\n                        <div class=\\\"sw-settings-tax-provider-sorting-modal__tax-provider-list-item__name\\\">\\n                            {{ taxProvider.translated.name }}\\n                        </div>\\n                    </div>\\n                </template>\\n            </sw-sortable-list>\\n        </div>\\n    </template>\\n\\n    <template #modal-footer>\\n        <sw-button\\n            class=\\\"sw-settings-tax-provider-sorting-modal__cancel-button\\\"\\n            @click=\\\"closeModal\\\"\\n        >\\n            {{ $tc('global.default.cancel') }}\\n        </sw-button>\\n\\n        <sw-button-process\\n            class=\\\"sw-settings-tax-provider-sorting-modal__save-button\\\"\\n            variant=\\\"primary\\\"\\n            :is-loading=\\\"isSaving\\\"\\n            :disabled=\\\"!acl.can('tax.editor')\\\"\\n            :process-success=\\\"false\\\"\\n            @click=\\\"applyChanges\\\"\\n        >\\n            {{ $tc('global.default.save') }}\\n        </sw-button-process>\\n    </template>\\n</sw-modal>\\n\";","import type { PropType } from 'vue';\nimport type { Entity } from '@shopware-ag/admin-extension-sdk/es/data/_internals/Entity';\nimport type Repository from 'src/core/data/repository.data';\nimport type EntityCollection from '@shopware-ag/admin-extension-sdk/es/data/_internals/EntityCollection';\nimport template from './sw-settings-tax-provider-sorting-modal.html.twig';\nimport './sw-settings-tax-provider-sorting-modal.scss';\n\nconst { Component, Mixin } = Shopware;\n\n/**\n * @package checkout\n *\n * @private\n */\nexport default Component.wrapComponentConfig({\n    template,\n\n    inject: [\n        'acl',\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        taxProviders: {\n            type: Array as unknown as PropType<EntityCollection<'tax_provider'>>,\n            required: true,\n        },\n    },\n\n    data(): {\n            isSaving: boolean,\n            originalTaxProviders: EntityCollection<'tax_provider'>,\n            sortedTaxProviders: EntityCollection<'tax_provider'>,\n            } {\n        return {\n            isSaving: false,\n            originalTaxProviders: this.taxProviders,\n            sortedTaxProviders: this.taxProviders,\n        };\n    },\n\n    computed: {\n        taxProviderRepository(): Repository<'tax_provider'> {\n            return this.repositoryFactory.create('tax_provider');\n        },\n    },\n\n    methods: {\n        closeModal(): void {\n            this.$emit('modal-close');\n        },\n\n        applyChanges(): void {\n            this.isSaving = true;\n\n            this.sortedTaxProviders.map((taxProvider: Entity<'tax_provider'>, index: number) => {\n                taxProvider.priority = this.sortedTaxProviders.length - index;\n                return taxProvider;\n            });\n\n            this.taxProviderRepository.saveAll(this.sortedTaxProviders)\n                .then(() => {\n                    this.isSaving = false;\n                    this.$emit('modal-close');\n                    this.$emit('modal-save');\n\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-settings-tax.list.taxProvider.sorting-modal.saveSuccessful'),\n                    });\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-tax.list.taxProvider.sorting-modal.errorMessage'),\n                    });\n                });\n        },\n\n        onSort(sortedItems: EntityCollection<'tax_provider'>): void {\n            this.sortedTaxProviders = sortedItems;\n        },\n    },\n});\n"],"sourceRoot":""}