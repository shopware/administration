{"version":3,"sources":["webpack:///./src/module/sw-product/component/sw-product-properties/sw-product-properties.scss","webpack:///./src/module/sw-product/component/sw-product-properties/index.js","webpack:///./src/module/sw-product/component/sw-product-properties/sw-product-properties.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Component","Context","_Shopware$Data","Data","Criteria","EntityCollection","_Component$getCompone","getComponentHelper","mapState","mapGetters","template","inject","props","disabled","type","Boolean","required","isAssociation","showInheritanceSwitcher","data","groupIds","properties","isPropertiesLoading","searchTerm","showAddPropertiesModal","newProperties","propertiesAvailable","computed","_objectSpread","propertyGroupRepository","this","repositoryFactory","create","propertyOptionRepository","propertyGroupCriteria","criteria","addSorting","sort","addFilter","equalsAny","setTerm","optionIds","productProperties","getIds","getAssociation","propertyColumns","property","label","sortable","routerLink","_this$product","_this$product$propert","isChild","product","length","parentProduct","assetFilter","Filter","getByName","productHasProperties","_this$product2","id","watch","immediate","handler","newValue","getGroupIds","getProperties","created","createdComponent","methods","checkIfPropertiesExists","_this$product3","reduce","accumulator","_ref","groupId","indexOf","push","_this$product4","_this","Promise","resolve","search","api","then","catch","finally","onDeletePropertyValue","propertyValue","remove","onDeleteProperty","_this2","$refs","entityListing","deleteId","$nextTick","filter","_ref2","forEach","_ref3","resetSelection","onDeleteProperties","_this3","showBulkDeleteModal","selection","Object","values","options","value","onChangeSearchTerm","turnOnAddPropertiesModal","updateNewProperties","$router","name","turnOffAddPropertiesModal","source","entity","context","fromCriteria","total","aggregations","onCancelAddPropertiesModal","onSaveAddPropertiesModal","_this$productProperti","splice","apply","concat","_toConsumableArray","_this4","res"],"mappings":"wGAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,yrBCF5C,IAAAQ,EAA+BC,SAAvBC,EAASF,EAATE,UAAWC,EAAOH,EAAPG,QACnBC,EAAuCH,SAASI,KAAxCC,EAAQF,EAARE,SAAUC,EAAgBH,EAAhBG,iBAClBC,EAAiCN,EAAUO,qBAAnCC,EAAQF,EAARE,SAAUC,EAAUH,EAAVG,WAGH,WACXC,SCbW,yoWDeXC,OAAQ,CAAC,oBAAqB,OAE9BC,MAAO,CACHC,SAAU,CACNC,KAAMC,QACNC,UAAU,EACVxB,SAAS,GAEbyB,cAAe,CACXH,KAAMC,QACNC,UAAU,EAEVxB,SAAS,GAEb0B,wBAAyB,CACrBJ,KAAMC,QACNC,UAAU,EAEVxB,SAAS,IAIjB2B,KAAI,WACA,MAAO,CACHC,SAAU,GACVC,WAAY,GACZC,qBAAqB,EACrBC,WAAY,KACZC,wBAAwB,EACxBC,cAAe,GACfC,qBAAqB,IAI7BC,SAAQC,MAAA,CACJC,wBAAuB,WACnB,OAAOC,KAAKC,kBAAkBC,OAAO,mBAIzCC,yBAAwB,WACpB,OAAOH,KAAKC,kBAAkBC,OAAO,0BAGzCE,sBAAqB,WACjB,IAAMC,EAAW,IAAI/B,EAAS,EAAG,IAEjC+B,EAASC,WACLhC,EAASiC,KAAK,OAAQ,OAAO,IAEjCF,EAASG,UACLlC,EAASmC,UAAU,KAAMT,KAAKV,WAG9BU,KAAKP,YACLY,EAASK,QAAQV,KAAKP,YAG1B,IAAMkB,EAAYX,KAAKY,kBAAkBC,SAKzC,OAHAR,EAASS,eAAe,WAAWN,UAAUlC,EAASmC,UAAU,KAAME,IACtEN,EAASG,UAAUlC,EAASmC,UAAU,aAAcE,IAE7CN,GAGXU,gBAAe,WACX,MAAO,CACH,CACIC,SAAU,OACVC,MAAO,uCACPC,UAAU,EACVC,WAAY,sBAEhB,CACIH,SAAU,SACVC,MAAO,oCACPC,UAAU,MAKnBxC,EAAS,kBAAmB,CAC3B,UACA,mBAGDC,EAAW,kBAAmB,CAC7B,YACA,aACF,IAEFiC,kBAAiB,WAAI,IAADQ,EAAAC,EAChB,OAAOrB,KAAKsB,UAAuB,QAAZF,EAAApB,KAAKuB,eAAO,IAAAH,GAAY,QAAZC,EAAZD,EAAc7B,kBAAU,IAAA8B,OAAZ,EAAZA,EAA0BG,SAAU,EACrDxB,KAAKyB,cAAclC,WACnBS,KAAKuB,QAAQhC,YAGvBmC,YAAW,WACP,OAAOzD,SAAS0D,OAAOC,UAAU,UAGrCC,qBAAoB,WAAI,IAADC,EACnB,OAAmB,QAAZA,EAAA9B,KAAKuB,eAAO,IAAAO,OAAA,EAAZA,EAAcC,KAAM/B,KAAKV,SAASkC,OAAS,KAI1DQ,MAAO,CACHpB,kBAAmB,CACfqB,WAAW,EACXC,QAAO,SAACC,GACCA,IAGLnC,KAAKoC,cACLpC,KAAKqC,oBAKjBC,QAAO,WACHtC,KAAKuC,oBAGTC,QAAS,CACLD,iBAAgB,WACZvC,KAAKyC,2BAGTL,YAAW,WAAI,IAADM,EACO,QAAbA,EAAC1C,KAAKuB,eAAO,IAAAmB,GAAZA,EAAcX,KAInB/B,KAAKV,SAAWU,KAAKY,kBAAkB+B,QAAO,SAACC,EAAWC,GAAmB,IAAfC,EAAOD,EAAPC,QAK1D,OAJIF,EAAYG,QAAQD,GAAW,GAC/BF,EAAYI,KAAKF,GAGdF,IACR,MAGPP,cAAa,WAAI,IAADY,EAAAC,EAAA,KACZ,OAAiB,QAAbD,EAACjD,KAAKuB,eAAO,IAAA0B,IAAZA,EAAclB,IAAM/B,KAAKV,SAASkC,QAAU,GAC7CxB,KAAKT,WAAa,GAClBS,KAAKP,WAAa,KACX0D,QAAQC,YAGnBpD,KAAKR,qBAAsB,EACpBQ,KAAKD,wBAAwBsD,OAAOrD,KAAKI,sBAAuBjC,EAAQmF,KAC1EC,MAAK,SAAChE,GACH2D,EAAK3D,WAAaA,KAErBiE,OAAM,WACHN,EAAK3D,WAAa,MAErBkE,SAAQ,WACLP,EAAK1D,qBAAsB,OAIvCkE,sBAAqB,SAACC,GAClB3D,KAAKY,kBAAkBgD,OAAOD,EAAc5B,KAGhD8B,iBAAgB,SAAC7C,GAAW,IAAD8C,EAAA,KACvB9D,KAAK+D,MAAMC,cAAcC,SAAW,KAEpCjE,KAAKkE,WAAU,WACXJ,EAAKlD,kBACAuD,QAAO,SAAAC,GACJ,OADcA,EAAPtB,UACY9B,EAASe,MAE/BsC,SAAQ,SAAAC,GAAa,IAAVvC,EAAEuC,EAAFvC,GACR+B,EAAKlD,kBAAkBgD,OAAO7B,MAGtC+B,EAAKC,MAAMC,cAAcO,qBAIjCC,mBAAkB,WAAI,IAADC,EAAA,KACjBzE,KAAK+D,MAAMC,cAAcU,qBAAsB,EAE/C1E,KAAKkE,WAAU,WACX,IAAM3E,EAAUO,EAAA,GAAQ2E,EAAKV,MAAMC,cAAcW,WAEjDC,OAAOC,OAAOtF,GAAY8E,SAAQ,SAACrD,GAC/BA,EAAS8D,QAAQT,SAAQ,SAACU,GACtBN,EAAK7D,kBAAkBgD,OAAOmB,EAAMhD,UAG5C0C,EAAKV,MAAMC,cAAcO,qBAIjCS,mBAAkB,SAACvF,GAEf,OADAO,KAAKP,WAAaA,EACXO,KAAKqC,iBAGhB4C,yBAAwB,WACfjF,KAAKJ,qBAGNI,KAAKkF,sBACLlF,KAAKN,wBAAyB,GAH9BM,KAAKmF,QAAQnC,KAAK,CAAEoC,KAAM,uBAOlCC,0BAAyB,WACrBrF,KAAKN,wBAAyB,EAC9BM,KAAKkF,uBAGTA,oBAAmB,WACflF,KAAKL,cAAgB,IAAIpB,EACrByB,KAAKY,kBAAkB0E,OACvBtF,KAAKY,kBAAkB2E,OACvBvF,KAAKY,kBAAkB4E,QACvBlH,EAASmH,aAAazF,KAAKY,kBAAkBP,UAC7CL,KAAKY,kBACLZ,KAAKY,kBAAkB8E,MACvB1F,KAAKY,kBAAkB+E,eAI/BC,2BAA0B,WACtB5F,KAAKqF,6BAGTQ,yBAAwB,SAAClG,GAAgB,IAADmG,EACpC9F,KAAKqF,4BAED1F,EAAc6B,QAAU,IAI5BsE,EAAA9F,KAAKY,mBAAkBmF,OAAMC,MAAAF,EAAA,CAAC,EAAG9F,KAAKY,kBAAkBY,QAAMyE,OAAAC,IAAKvG,MAGvE8C,wBAAuB,WAAI,IAAD0D,EAAA,KACtBnG,KAAKG,yBAAyBkD,OAAO,IAAI/E,EAAS,EAAG,IAAIiF,MAAK,SAAC6C,GAC3DD,EAAKvG,oBAAsBwG,EAAIV,MAAQ","file":"static/js/dc8c2bcdb6c53a3186f0.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-properties.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"b830b1f8\", content, true, {});","/*\n * @package inventory\n */\n\nimport template from './sw-product-properties.html.twig';\nimport './sw-product-properties.scss';\n\nconst { Component, Context } = Shopware;\nconst { Criteria, EntityCollection } = Shopware.Data;\nconst { mapState, mapGetters } = Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl'],\n\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        isAssociation: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n        showInheritanceSwitcher: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n    },\n\n    data() {\n        return {\n            groupIds: [],\n            properties: [],\n            isPropertiesLoading: false,\n            searchTerm: null,\n            showAddPropertiesModal: false,\n            newProperties: [],\n            propertiesAvailable: true,\n        };\n    },\n\n    computed: {\n        propertyGroupRepository() {\n            return this.repositoryFactory.create('property_group');\n        },\n\n\n        propertyOptionRepository() {\n            return this.repositoryFactory.create('property_group_option');\n        },\n\n        propertyGroupCriteria() {\n            const criteria = new Criteria(1, 10);\n\n            criteria.addSorting(\n                Criteria.sort('name', 'ASC', false),\n            );\n            criteria.addFilter(\n                Criteria.equalsAny('id', this.groupIds),\n            );\n\n            if (this.searchTerm) {\n                criteria.setTerm(this.searchTerm);\n            }\n\n            const optionIds = this.productProperties.getIds();\n\n            criteria.getAssociation('options').addFilter(Criteria.equalsAny('id', optionIds));\n            criteria.addFilter(Criteria.equalsAny('options.id', optionIds));\n\n            return criteria;\n        },\n\n        propertyColumns() {\n            return [\n                {\n                    property: 'name',\n                    label: 'sw-product.properties.columnProperty',\n                    sortable: false,\n                    routerLink: 'sw.property.detail',\n                },\n                {\n                    property: 'values',\n                    label: 'sw-product.properties.columnValue',\n                    sortable: false,\n                },\n            ];\n        },\n\n        ...mapState('swProductDetail', [\n            'product',\n            'parentProduct',\n        ]),\n\n        ...mapGetters('swProductDetail', [\n            'isLoading',\n            'isChild',\n        ]),\n\n        productProperties() {\n            return this.isChild && this.product?.properties?.length <= 0\n                ? this.parentProduct.properties\n                : this.product.properties;\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n\n        productHasProperties() {\n            return this.product?.id && this.groupIds.length > 0;\n        },\n    },\n\n    watch: {\n        productProperties: {\n            immediate: true,\n            handler(newValue) {\n                if (!newValue) {\n                    return;\n                }\n                this.getGroupIds();\n                this.getProperties();\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.checkIfPropertiesExists();\n        },\n\n        getGroupIds() {\n            if (!this.product?.id) {\n                return;\n            }\n\n            this.groupIds = this.productProperties.reduce((accumulator, { groupId }) => {\n                if (accumulator.indexOf(groupId) < 0) {\n                    accumulator.push(groupId);\n                }\n\n                return accumulator;\n            }, []);\n        },\n\n        getProperties() {\n            if (!this.product?.id || this.groupIds.length <= 0) {\n                this.properties = [];\n                this.searchTerm = null;\n                return Promise.resolve();\n            }\n\n            this.isPropertiesLoading = true;\n            return this.propertyGroupRepository.search(this.propertyGroupCriteria, Context.api)\n                .then((properties) => {\n                    this.properties = properties;\n                })\n                .catch(() => {\n                    this.properties = [];\n                })\n                .finally(() => {\n                    this.isPropertiesLoading = false;\n                });\n        },\n\n        onDeletePropertyValue(propertyValue) {\n            this.productProperties.remove(propertyValue.id);\n        },\n\n        onDeleteProperty(property) {\n            this.$refs.entityListing.deleteId = null;\n\n            this.$nextTick(() => {\n                this.productProperties\n                    .filter(({ groupId }) => {\n                        return groupId === property.id;\n                    })\n                    .forEach(({ id }) => {\n                        this.productProperties.remove(id);\n                    });\n\n                this.$refs.entityListing.resetSelection();\n            });\n        },\n\n        onDeleteProperties() {\n            this.$refs.entityListing.showBulkDeleteModal = false;\n\n            this.$nextTick(() => {\n                const properties = { ...this.$refs.entityListing.selection };\n\n                Object.values(properties).forEach((property) => {\n                    property.options.forEach((value) => {\n                        this.productProperties.remove(value.id);\n                    });\n                });\n                this.$refs.entityListing.resetSelection();\n            });\n        },\n\n        onChangeSearchTerm(searchTerm) {\n            this.searchTerm = searchTerm;\n            return this.getProperties();\n        },\n\n        turnOnAddPropertiesModal() {\n            if (!this.propertiesAvailable) {\n                this.$router.push({ name: 'sw.property.index' });\n            } else {\n                this.updateNewProperties();\n                this.showAddPropertiesModal = true;\n            }\n        },\n\n        turnOffAddPropertiesModal() {\n            this.showAddPropertiesModal = false;\n            this.updateNewProperties();\n        },\n\n        updateNewProperties() {\n            this.newProperties = new EntityCollection(\n                this.productProperties.source,\n                this.productProperties.entity,\n                this.productProperties.context,\n                Criteria.fromCriteria(this.productProperties.criteria),\n                this.productProperties,\n                this.productProperties.total,\n                this.productProperties.aggregations,\n            );\n        },\n\n        onCancelAddPropertiesModal() {\n            this.turnOffAddPropertiesModal();\n        },\n\n        onSaveAddPropertiesModal(newProperties) {\n            this.turnOffAddPropertiesModal();\n\n            if (newProperties.length <= 0) {\n                return;\n            }\n\n            this.productProperties.splice(0, this.productProperties.length, ...newProperties);\n        },\n\n        checkIfPropertiesExists() {\n            this.propertyOptionRepository.search(new Criteria(1, 1)).then((res) => {\n                this.propertiesAvailable = res.total > 0;\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_product_properties %}\\n<sw-inherit-wrapper\\n    v-if=\\\"properties\\\"\\n    {% if VUE3 %}\\n    v-model:value=\\\"product.properties\\\"\\n    {% else %}\\n    v-model=\\\"product.properties\\\"\\n    {% endif %}\\n    class=\\\"sw-product-properties\\\"\\n    :is-association=\\\"isAssociation\\\"\\n    :disabled=\\\"disabled\\\"\\n    :inherited-value=\\\"parentProduct.properties\\\"\\n>\\n    <template #content=\\\"{ isInherited, isInheritField, restoreInheritance, removeInheritance }\\\">\\n        \\n        {% block sw_product_properties_card %}\\n        <sw-card\\n            class=\\\"sw-product-properties__card\\\"\\n            :class=\\\"{\\n                'is--inherited': isInherited,\\n                'is--disabled': disabled,\\n            }\\\"\\n            position-identifier=\\\"sw-product-properties\\\"\\n            :is-loading=\\\"isLoading\\\"\\n        >\\n            <template #title>\\n                \\n                {% block sw_product_properties_card_title %}\\n                <div\\n                    class=\\\"sw-card__title\\\"\\n                    :class=\\\"{ 'is--inherited': isInherited }\\\"\\n                >\\n                    \\n                    {% block sw_product_properties_card_title_icon %}\\n                    <sw-inheritance-switch\\n                        v-if=\\\"isInheritField && showInheritanceSwitcher\\\"\\n                        class=\\\"sw-inherit-wrapper__inheritance-icon\\\"\\n                        :is-inherited=\\\"isInherited\\\"\\n                        :disabled=\\\"!acl.can('product.editor')\\\"\\n                        @inheritance-restore=\\\"restoreInheritance\\\"\\n                        @inheritance-remove=\\\"removeInheritance\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_product_properties_card_title_text %}\\n                    {{ $tc('sw-product.properties.cardTitle') }}\\n                    {% endblock %}\\n                </div>\\n                {% endblock %}\\n            </template>\\n\\n            <template\\n                v-if=\\\"productHasProperties\\\"\\n                #grid\\n            >\\n                \\n                {% block sw_product_properties_filled_state %}\\n                <sw-container rows=\\\"auto auto\\\">\\n                    \\n                    {% block sw_product_properties_filled_state_header %}\\n                    <sw-card-section\\n                        secondary\\n                        divider=\\\"bottom\\\"\\n                    >\\n                        <sw-container\\n                            columns=\\\"1fr auto\\\"\\n                            gap=\\\"0 15px\\\"\\n                        >\\n                            \\n                            {% block sw_product_properties_filled_state_header_form_control %}\\n                            <sw-simple-search-field\\n                                v-model=\\\"searchTerm\\\"\\n                                variant=\\\"form\\\"\\n                                size=\\\"small\\\"\\n                                :placeholder=\\\"$tc('sw-product.properties.placeholderSearchAddedProperties')\\\"\\n                                :disabled=\\\"isPropertiesLoading\\\"\\n                                @search-term-change=\\\"onChangeSearchTerm\\\"\\n                            />\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_product_properties_filled_state_header_button %}\\n                            <sw-button\\n                                v-tooltip=\\\"{\\n                                    message: $tc('sw-privileges.tooltip.warning'),\\n                                    disabled: acl.can('product.editor'),\\n                                    showOnDisabledElements: true\\n                                }\\\"\\n                                class=\\\"sw-product-properties__button-add-property\\\"\\n                                variant=\\\"ghost\\\"\\n                                size=\\\"small\\\"\\n                                :disabled=\\\"!acl.can('product.editor')\\\"\\n                                @click=\\\"turnOnAddPropertiesModal\\\"\\n                            >\\n                                {{ $tc('sw-product.properties.buttonAddProperty') }}\\n                            </sw-button>\\n                            {% endblock %}\\n                        </sw-container>\\n                    </sw-card-section>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_product_properties_filled_state_body_filled_state %}\\n                    <sw-entity-listing\\n                        v-if=\\\"properties.length > 0\\\"\\n                        ref=\\\"entityListing\\\"\\n                        class=\\\"sw-product-properties__list\\\"\\n                        detail-route=\\\"sw.property.detail\\\"\\n                        identifier=\\\"sw-product-properties-list\\\"\\n                        plain-appearance\\n                        :items=\\\"properties\\\"\\n                        :data-source=\\\"properties\\\"\\n                        :columns=\\\"propertyColumns\\\"\\n                        :repository=\\\"propertyGroupRepository\\\"\\n                        :full-page=\\\"false\\\"\\n                        :show-settings=\\\"false\\\"\\n                        :allow-column-edit=\\\"false\\\"\\n                        :allow-inline-edit=\\\"false\\\"\\n                        :allow-view=\\\"acl.can('product.viewer')\\\"\\n                        :allow-edit=\\\"acl.can('property.editor')\\\"\\n                        :allow-delete=\\\"acl.can('product.deleter')\\\"\\n                    >\\n                        <template #column-values=\\\"{ item }\\\">\\n                            \\n                            {% block sw_product_properties_filled_state_body_filled_state_column_values %}\\n                            <div\\n                                v-for=\\\"option in item.options\\\"\\n                                :key=\\\"option.id\\\"\\n                                class=\\\"sw-product-properties-list__column-values\\\"\\n                            >\\n                                <sw-label\\n                                    size=\\\"medium\\\"\\n                                    :dismissable=\\\"acl.can('product.deleter')\\\"\\n                                    @dismiss=\\\"onDeletePropertyValue(option)\\\"\\n                                >\\n                                    {{ option.translated.name }}\\n                                </sw-label>\\n                            </div>\\n                            {% endblock %}\\n                        </template>\\n\\n                        <template #delete-modal-delete-item=\\\"{ item }\\\">\\n                            \\n                            {% block sw_product_properties_filled_state_body_filled_state_delete_modal_delete_item %}\\n                            <sw-button\\n                                variant=\\\"danger\\\"\\n                                size=\\\"small\\\"\\n                                @click=\\\"onDeleteProperty(item)\\\"\\n                            >\\n                                {{ $tc('global.default.delete') }}\\n                            </sw-button>\\n                            {% endblock %}\\n                        </template>\\n\\n                        <template #bulk-modal-delete-items>\\n                            \\n                            {% block sw_product_properties_filled_state_body_filled_state_bulk_modal_delete_items %}\\n                            <sw-button\\n                                variant=\\\"danger\\\"\\n                                size=\\\"small\\\"\\n                                @click=\\\"onDeleteProperties\\\"\\n                            >\\n                                {{ $tc('global.default.delete') }}\\n                            </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    </sw-entity-listing>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_product_properties_filled_state_body_empty_state %}\\n                    <sw-empty-state\\n                        v-if=\\\"properties.length <= 0\\\"\\n                        class=\\\"sw-product-properties__empty-state has--no-search-result\\\"\\n                        :absolute=\\\"false\\\"\\n                        :show-description=\\\"false\\\"\\n                        :title=\\\"$tc('sw-product.properties.titleEmptyStateList')\\\"\\n                    >\\n                        <template #icon>\\n                            \\n                            {% block sw_product_properties_filled_state_body_empty_state_image %}\\n                            <img\\n                                :src=\\\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\\\"\\n                                :alt=\\\"$tc('sw-product.properties.titleEmptyStateList')\\\"\\n                            >\\n                            {% endblock %}\\n                        </template>\\n                    </sw-empty-state>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_product_properties_filled_state_body_loading_state %}\\n                    <sw-loader v-if=\\\"isPropertiesLoading\\\" />\\n                    {% endblock %}\\n                </sw-container>\\n                {% endblock %}\\n            </template>\\n\\n            \\n            {% block sw_product_properties_empty_state %}\\n            <sw-empty-state\\n                v-if=\\\"!productHasProperties\\\"\\n                class=\\\"sw-product-properties__empty-state has--no-properties\\\"\\n                :absolute=\\\"false\\\"\\n                :show-description=\\\"false\\\"\\n                :title=\\\"$tc('sw-product.properties.titleEmptyState')\\\"\\n            >\\n                <template #icon>\\n                    \\n                    {% block sw_product_properties_empty_state_image %}\\n                    <img\\n                        :src=\\\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\\\"\\n                        :alt=\\\"$tc('sw-product.properties.titleEmptyState')\\\"\\n                    >\\n                    {% endblock %}\\n                </template>\\n\\n                <template #actions>\\n                    \\n                    {% block sw_product_properties_empty_state_button %}\\n                    <sw-button\\n                        v-tooltip=\\\"{\\n                            message: $tc('sw-privileges.tooltip.warning'),\\n                            disabled: acl.can('product.editor'),\\n                            showOnDisabledElements: true\\n                        }\\\"\\n                        variant=\\\"ghost\\\"\\n                        :disabled=\\\"!acl.can('product.editor')\\\"\\n                        @click=\\\"turnOnAddPropertiesModal\\\"\\n                    >\\n                        {{ $tc('sw-product.properties.buttonAddProperties') }}\\n                    </sw-button>\\n                    {% endblock %}\\n                </template>\\n            </sw-empty-state>\\n            {% endblock %}\\n        </sw-card>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_properties_add_properties_modal %}\\n        <sw-product-add-properties-modal\\n            v-if=\\\"showAddPropertiesModal\\\"\\n            :new-properties=\\\"newProperties\\\"\\n            :properties-available=\\\"propertiesAvailable\\\"\\n            @modal-cancel=\\\"onCancelAddPropertiesModal\\\"\\n            @modal-save=\\\"onSaveAddPropertiesModal\\\"\\n        />\\n        {% endblock %}\\n    </template>\\n</sw-inherit-wrapper>\\n{% endblock %}\\n\";"],"sourceRoot":""}