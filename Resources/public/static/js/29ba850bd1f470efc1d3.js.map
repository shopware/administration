{"version":3,"sources":["webpack:///./src/module/sw-extension/component/sw-ratings/sw-extension-rating-stars/sw-extension-rating-stars.scss","webpack:///./src/module/sw-extension/component/sw-ratings/sw-extension-rating-stars/index.js","webpack:///./src/module/sw-extension/component/sw-ratings/sw-extension-rating-stars/sw-extension-rating-stars.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","template","inject","model","prop","event","props","editable","type","Boolean","required","size","Number","rating","data","maxRating","ratingValue","computed","editableClass","this","sizeValue","defaultSizeForEditable","starSize","width","concat","scaleFactor","partialStarSize","partialStarWidth","watch","value","created","createdComponent","methods","colorClass","key","addRating","feature","isActive","$emit","showPartialStar","Math","ceil"],"mappings":"+HAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAA2EL,SAC5E,WAAYF,GAAS,EAAM,K,mDCF7B,WACXQ,SCRW,yoDDUXC,OAAQ,CAAC,WAETC,MAAO,CACHC,KAAM,SACNC,MAAO,kBAGXC,MAAO,CACHC,SAAU,CACNC,KAAMC,QACNC,UAAU,EACVf,SAAS,GAEbgB,KAAM,CACFH,KAAMI,OACNF,UAAU,EACVf,QAAS,GAEbkB,OAAQ,CACJL,KAAMI,OACNF,UAAU,EACVf,QAAS,IAIjBmB,KAAI,WACA,MAAO,CACHC,UAAW,EACXC,YAAa,OAIrBC,SAAU,CACNC,cAAa,WACT,MAAO,CACH,yCAA0CC,KAAKZ,WAIvDa,UAAS,WAEL,OAAOD,KAAKZ,UAA0B,IAAdY,KAAKR,KAAaQ,KAAKE,uBAAyBF,KAAKR,MAGjFW,SAAQ,WACJ,MAAO,CACHC,MAAM,GAADC,OAAKL,KAAKC,UAAYD,KAAKM,YAAW,QAInDC,gBAAe,WACX,MAAM,GAANF,OAAUL,KAAKC,UAAS,OAG5BO,iBAAgB,WACZ,MAAM,GAANH,OAAWL,KAAKH,YAAc,EAAK,IAAG,MAG1CK,uBAAsB,WAClB,OAAO,IAGXI,YAAW,WACP,OAAO,OAIfG,MAAO,CACHf,OAAM,SAACgB,GACHV,KAAKH,YAAca,IAI3BC,QAAO,WACHX,KAAKY,oBAGTC,QAAS,CACLD,iBAAgB,WACZZ,KAAKH,YAAcG,KAAKN,QAG5BoB,WAAU,SAACC,GACP,MAAO,CAEH,4CAA6Cf,KAAKJ,UAAY,EAAImB,GAAOf,KAAKH,cAItFmB,UAAS,SAACtB,GACDM,KAAKZ,WAKVY,KAAKH,YAAcG,KAAKJ,UAAYF,EAChCM,KAAKiB,QAAQC,SAAS,QACtBlB,KAAKmB,MAAM,gBAAiBnB,KAAKH,aAKrCG,KAAKmB,MAAM,iBAAkBnB,KAAKH,eAGtCuB,gBAAe,SAACL,GACZ,OAAOf,KAAKH,YAAc,GAAM,GAExBG,KAAKJ,UAAYyB,KAAKC,KAAKtB,KAAKH,eAAkBkB","file":"static/js/29ba850bd1f470efc1d3.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-extension-rating-stars.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"08e97599\", content, true, {});","import template from './sw-extension-rating-stars.html.twig';\nimport './sw-extension-rating-stars.scss';\n\n/**\n * @package services-settings\n * @private\n */\nexport default {\n    template,\n\n    inject: ['feature'],\n\n    model: {\n        prop: 'rating',\n        event: 'rating-changed',\n    },\n\n    props: {\n        editable: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        size: {\n            type: Number,\n            required: false,\n            default: 8,\n        },\n        rating: {\n            type: Number,\n            required: false,\n            default: 0,\n        },\n    },\n\n    data() {\n        return {\n            maxRating: 5,\n            ratingValue: null,\n        };\n    },\n\n    computed: {\n        editableClass() {\n            return {\n                'sw-extension-rating-stars--is-editable': this.editable,\n            };\n        },\n\n        sizeValue() {\n            // 8 is the default value of the property `this.size`\n            return this.editable && this.size === 8 ? this.defaultSizeForEditable : this.size;\n        },\n\n        starSize() {\n            return {\n                width: `${this.sizeValue * this.scaleFactor}px`,\n            };\n        },\n\n        partialStarSize() {\n            return `${this.sizeValue}px`;\n        },\n\n        partialStarWidth() {\n            return `${(this.ratingValue % 1) * 100}%`;\n        },\n\n        defaultSizeForEditable() {\n            return 17;\n        },\n\n        scaleFactor() {\n            return 0.0125 * 20 + 1;\n        },\n    },\n\n    watch: {\n        rating(value) {\n            this.ratingValue = value;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.ratingValue = this.rating;\n        },\n\n        colorClass(key) {\n            return {\n                // subtract because rtl direction is used\n                'sw-extension-rating-stars__star--is-rated': this.maxRating + 1 - key <= this.ratingValue,\n            };\n        },\n\n        addRating(rating) {\n            if (!this.editable) {\n                return;\n            }\n\n            // subtract because rtl direction is used\n            this.ratingValue = this.maxRating - rating;\n            if (this.feature.isActive('VUE3')) {\n                this.$emit('update:rating', this.ratingValue);\n\n                return;\n            }\n\n            this.$emit('rating-changed', this.ratingValue);\n        },\n\n        showPartialStar(key) {\n            return this.ratingValue % 1 !== 0\n                // subtract because rtl direction is used\n                && (this.maxRating - Math.ceil(this.ratingValue)) === key;\n        },\n    },\n};\n","export default \"\\n{% block sw_extension_rating_stars %}\\n<div\\n    class=\\\"sw-extension-rating-stars\\\"\\n    :class=\\\"editableClass\\\"\\n>\\n    \\n    {% block sw_extension_rating_stars_wrapper %}\\n    <div class=\\\"sw-extension-rating-stars__wrapper\\\">\\n        \\n        {% block sw_extension_rating_stars_wrapper_stars %}\\n        <button\\n            v-for=\\\"(ratingValue, key) in maxRating\\\"\\n            :key=\\\"key\\\"\\n            :disabled=\\\"!editable\\\"\\n            class=\\\"sw-extension-rating-stars__star\\\"\\n            :class=\\\"colorClass(key + 1)\\\"\\n            @click=\\\"addRating(key)\\\"\\n        >\\n            \\n            {% block sw_extension_rating_stars_wrapper_stars_full_star %}\\n            <sw-icon\\n                name=\\\"solid-star\\\"\\n                :style=\\\"starSize\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_extension_rating_stars_wrapper_stars_partial_star %}\\n            <span\\n                v-if=\\\"showPartialStar(key)\\\"\\n                class=\\\"sw-extension-rating-stars__partial-star\\\"\\n            >\\n                \\n                {% block sw_extension_rating_stars_wrapper_stars_partial_star_wrapper %}\\n                <span\\n                    class=\\\"sw-extension-rating-stars__partial-star-wrapper\\\"\\n                    :style=\\\"{ width: partialStarWidth }\\\"\\n                >\\n                    <sw-icon\\n                        name=\\\"solid-star\\\"\\n                        :size=\\\"partialStarSize\\\"\\n                    />\\n                </span>\\n                {% endblock %}\\n            </span>\\n            {% endblock %}\\n        </button>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}