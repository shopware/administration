(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[6645],{846300:function(){},906645:function(n,t,i){"use strict";i.r(t),i.d(t,{default:function(){return a}}),i(617977);let{Criteria:s}=Shopware.Data;var a={template:'\n{% block sw_first_run_wizard_data_import %}\n<div class="sw-first-run-wizard-data-import">\n    <sw-container\n        v-if="!isInstallingPlugin"\n        columns="1fr 1fr"\n        gap="24px 0"\n    >\n        <div class="sw-first-run-wizard-data-import__card">\n            <img\n                class="sw-first-run-wizard-data-import__icon-demodata"\n                :src="assetFilter(\'/administration/static/img/first-run-wizard/plugin-demodata-set.svg\')"\n                alt=""\n            >\n            <h5 class="sw-first-run-wizard-data-import__headline">\n                {{ $tc(\'sw-first-run-wizard.dataImport.headlineDemoData\') }}\n            </h5>\n            <p\n                class="sw-first-run-wizard-data-import__message"\n                v-html="$tc(\'sw-first-run-wizard.dataImport.messageDemoData\')"\n            ></p>\n\n            <sw-button-process\n                v-if="notInstalled(\'demodata\')"\n                variant="primary"\n                size="small"\n                :is-loading="isInstallingPlugin"\n                :disabled="isInstallingPlugin"\n                :process-success="pluginInstalledSuccessfully.demodata"\n                class="button-plugin-install"\n                @click="onInstall(\'demodata\')"\n            >\n                {{ $tc(\'sw-first-run-wizard.dataImport.buttonInstallDemoData\') }}\n            </sw-button-process>\n            <div\n                v-else\n                class="plugin-status"\n            >\n                <span class="plugin-installed">\n                    <sw-icon\n                        name="regular-check-circle-s"\n                        size="16"\n                    />\n                    {{ $tc(\'sw-first-run-wizard.general.pluginInstalled\') }}\n                </span>\n            </div>\n        </div>\n\n        <div class="sw-first-run-wizard-data-import__card">\n            <img\n                class="sw-first-run-wizard-data-import__icon-migration"\n                :src="assetFilter(\'/administration/static/img/first-run-wizard/plugin-migration-assistant.svg\')"\n                alt=""\n            >\n            <h5 class="sw-first-run-wizard-import-data__headline">\n                {{ $tc(\'sw-first-run-wizard.dataImport.headlineMigration\') }}\n            </h5>\n            <p\n                class="sw-first-run-wizard-data-import__message"\n                v-html="$tc(\'sw-first-run-wizard.dataImport.messageMigration\')"\n            ></p>\n\n            <sw-button-process\n                v-if="notInstalled(\'migration\')"\n                variant="primary"\n                size="small"\n                :is-loading="isInstallingPlugin"\n                :disabled="isInstallingPlugin"\n                :process-success="pluginInstalledSuccessfully.migration"\n                class="button-plugin-install"\n                @click="onInstall(\'migration\')"\n            >\n                {{ $tc(\'sw-first-run-wizard.dataImport.buttonInstallMigration\') }}\n            </sw-button-process>\n            <div\n                v-else\n                class="plugin-status"\n            >\n                <span class="plugin-installed">\n                    <sw-icon\n                        name="regular-check-circle-s"\n                        size="16"\n                    />\n                    {{ $tc(\'sw-first-run-wizard.general.pluginInstalled\') }}\n                </span>\n            </div>\n        </div>\n    </sw-container>\n\n    <div\n        v-else\n        class="installing-plugin"\n    >\n        <sw-loader size="48px" />\n        <p\n            class="sw-loader-info-text"\n            v-html="$tc(\'sw-first-run-wizard.dataImport.loadingMessage\')"\n        ></p>\n    </div>\n\n    <div\n        v-if="installationError"\n        class="sw-first-run-wizard-plugin-installation__error"\n    >\n        <sw-alert\n            :title="pluginError.title"\n            variant="error"\n            appearance="notification"\n        >\n            {{ pluginError.detail }}\n        </sw-alert>\n    </div>\n</div>\n{% endblock %}\n',inject:["extensionStoreActionService","repositoryFactory"],data(){return{plugins:{demodata:{name:"SwagPlatformDemoData",isInstalled:!1},migration:{name:"SwagMigrationAssistant",isInstalled:!1}},demoDataPluginName:"SwagPlatformDemoData",migrationPluginName:"SwagMigrationAssistant",isPluginAlreadyInstalled:!1,isInstallingPlugin:!1,installationError:!1,pluginError:null,pluginInstalledSuccessfully:{demodata:!1,migration:!1}}},computed:{pluginRepository(){return this.repositoryFactory.create("plugin")},buttonConfig(){return[{key:"skip",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:"sw.first.run.wizard.index.defaults",disabled:this.isInstallingPlugin}]},assetFilter(){return Shopware.Filter.getByName("asset")}},watch:{isInstallingPlugin(){this.updateButtons()}},created(){this.createdComponent()},methods:{createdComponent(){this.updateButtons(),this.setTitle(),this.getInstalledPlugins()},updateButtons(){this.$emit("buttons-update",this.buttonConfig)},setTitle(){this.$emit("frw-set-title",this.$tc("sw-first-run-wizard.dataImport.modalTitle"))},notInstalled(n){return!this.plugins[n].isInstalled},onInstall(n){let t=this.plugins[n];return this.isInstallingPlugin=!0,this.installationError=!1,this.extensionStoreActionService.downloadExtension(t.name).then(()=>this.extensionStoreActionService.installExtension(t.name,"plugin")).then(()=>this.extensionStoreActionService.activateExtension(t.name,"plugin")).then(()=>(this.$emit("extension-activated"),this.isInstallingPlugin=!1,this.plugins[n].isInstalled=!0,!1)).catch(n=>(this.isInstallingPlugin=!1,this.installationError=!0,n.response?.data?.errors&&(this.pluginError=n.response.data.errors.pop()),!0))},getInstalledPlugins(){let n=Object.values(this.plugins).map(n=>n.name),t=new s(1,5);t.addFilter(s.equalsAny("plugin.name",n)),this.pluginRepository.search(t).then(n=>{n.total<1||n.forEach(n=>{if(!n.active||null===n.installedAt)return;let t=this.findPluginKeyByName(n.name);this.plugins[t].isInstalled=!0})})},findPluginKeyByName(n){let[t]=Object.entries(this.plugins).find(([t,i])=>i.name===n?t:"");return t}}}},617977:function(n,t,i){var s=i(846300);s.__esModule&&(s=s.default),"string"==typeof s&&(s=[[n.id,s,""]]),s.locals&&(n.exports=s.locals),i(745346).Z("08d74a39",s,!0,{})}}]);