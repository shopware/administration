{"version":3,"sources":["webpack:///./src/module/sw-category/view/sw-category-detail-custom-entity/index.ts","webpack:///./src/module/sw-category/view/sw-category-detail-custom-entity/sw-category-detail-custom-entity.html.twig","webpack:///./src/module/sw-category/view/sw-category-detail-custom-entity/sw-category-detail-custom-entity.scss"],"names":["Utils","Shopware","EXTENSION_POSTFIX","Component","wrapComponentConfig","template","inject","data","categoryCustomEntityProperty","props","isLoading","type","Boolean","required","default","computed","customEntityAssignments","_this$category","_this$category$extens","this","category","extensions","concat","customEntityColumns","dataIndex","property","label","$tc","State","get","customEntityCriteria","Criteria","addFilter","contains","sortingCriteria","addSorting","sort","assetFilter","Filter","getByName","created","fetchCustomEntityName","methods","onAssignmentChange","_this$category2","categoryExtensions","onEntityChange","id","entity","_entity$name","customEntityTypeId","string","camelCase","name","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$category3","customEntityRepository","customEntity","wrap","_context","prev","next","abrupt","repositoryFactory","create","sent","stop","content","__esModule","module","i","locals","exports","add"],"mappings":"4MAOQA,G,UAAUC,SAAVD,OACFE,EAAoB,eAMXD,mBAASE,UAAUC,oBAAoB,CAClDC,SCfW,s0GDiBXC,OAAQ,CACJ,oBACA,OAGJC,KAAI,WACA,MAAO,CACHC,6BAA8B,KAItCC,MAAO,CACHC,UAAW,CACPC,KAAMC,QACNC,UAAU,EACVC,SAAS,IAIjBC,SAAU,CACNC,wBAAuB,WAAmD,IAADC,EAAAC,EACrE,OAAoB,QAApBD,EAAOE,KAAKC,gBAAQ,IAAAH,GAAY,QAAZC,EAAbD,EAAeI,kBAAU,IAAAH,OAAZ,EAAbA,EAAA,GAAAI,OACCH,KAAKX,8BAA4Bc,OAAGpB,KAIhDqB,oBAAmB,WACf,MAAO,CACH,CACIC,UAAW,gBACXC,SAAU,gBACVC,MAAOP,KAAKQ,IAAI,6DAK5BP,SAAQ,WAEJ,OAAOnB,SAAS2B,MAAMC,IAAI,oBAAoBT,UAGlDU,qBAAoB,WAChB,OAAO,IAAIC,IAAS,EAAG,IAClBC,UAAUD,IAASE,SAAS,QAAS,eAG9CC,gBAAe,WACX,OAAO,IAAIH,IAAS,EAAG,IAClBI,WAAWJ,IAASK,KAAK,gBAAiB,SAGnDC,YAAW,WACP,OAAOpC,SAASqC,OAAOC,UAAU,WAIzCC,QAAO,WACErB,KAAKsB,yBAGdC,QAAS,CACLC,mBAAkB,SAAC3B,GAAmE,IAAD4B,EAC3EC,EAAkC,QAAhBD,EAAGzB,KAAKC,gBAAQ,IAAAwB,OAAA,EAAbA,EAAevB,WACrCwB,IAILA,EAAmB,GAADvB,OAAIH,KAAKX,8BAA4Bc,OAAGpB,IAAuBc,IAGrF8B,eAAc,SAACC,EAAYC,GAAmC,IAADC,EACpD9B,KAAKC,WAIVD,KAAKC,SAAS8B,mBAAqBH,EAEnC5B,KAAKX,6BAA+BR,EAAMmD,OAAOC,UAAsB,QAAbH,EAACD,aAAM,EAANA,EAAQK,YAAI,IAAAJ,IAAI,MAGzER,sBAAqB,WAAmB,IAADa,EAAA,YAAAC,IAAAC,IAAAC,MAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,IAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACvB,QADuBN,EACpCL,EAAKlC,gBAAQ,IAAAuC,GAAbA,EAAeT,mBAAmB,CAADa,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBAIuC,OAAvEN,EAAyBN,EAAKa,kBAAkBC,OAAO,iBAAgBL,EAAAE,KAAA,EAClDL,EAAuB/B,IAAIyB,EAAKlC,SAAS8B,oBAAoB,KAAD,EAArE,GAAZW,EAAYE,EAAAM,KAEA,CAADN,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBAIjBZ,EAAK9C,6BAA+BR,EAAMmD,OAAOC,UAAUS,EAAaR,MAAM,wBAAAU,EAAAO,UAAAZ,MAZrCH,Q,qBE9FrD,IAAIgB,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQzD,SACnB,iBAAZyD,IAAsBA,EAAU,CAAC,CAACE,EAAOC,EAAIH,EAAS,MAC7DA,EAAQI,SAAQF,EAAOG,QAAUL,EAAQI,SAG/BE,EADH,EAAQ,QAAwE/D,SACzE,WAAYyD,GAAS,EAAM","file":"static/js/3303df415de793307a36.js","sourcesContent":["import type { Entity } from '@shopware-ag/admin-extension-sdk/es/data/_internals/Entity';\nimport type EntityCollection from 'src/core/data/entity-collection.data';\n\nimport Criteria from '@shopware-ag/admin-extension-sdk/es/data/Criteria';\nimport template from './sw-category-detail-custom-entity.html.twig';\nimport './sw-category-detail-custom-entity.scss';\n\nconst { Utils } = Shopware;\nconst EXTENSION_POSTFIX = 'SwCategories';\n\n/**\n * @private\n * @package content\n */\nexport default Shopware.Component.wrapComponentConfig({\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    data() {\n        return {\n            categoryCustomEntityProperty: '',\n        };\n    },\n\n    props: {\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    computed: {\n        customEntityAssignments(): EntityCollection<'custom_entity'> | undefined {\n            return this.category?.extensions?.\n                [`${this.categoryCustomEntityProperty}${EXTENSION_POSTFIX}`] as\n                    EntityCollection<'custom_entity'> | undefined;\n        },\n\n        customEntityColumns(): { dataIndex: string; property: string, label: string }[] {\n            return [\n                {\n                    dataIndex: 'cmsAwareTitle',\n                    property: 'cmsAwareTitle',\n                    label: this.$tc('sw-category.base.customEntity.instanceAssignment.title'),\n                },\n            ];\n        },\n\n        category(): Entity<'category'> | null {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            return Shopware.State.get('swCategoryDetail').category as Entity<'category'> | null;\n        },\n\n        customEntityCriteria(): Criteria {\n            return new Criteria(1, 10)\n                .addFilter(Criteria.contains('flags', 'cms-aware'));\n        },\n\n        sortingCriteria(): Criteria {\n            return new Criteria(1, 10)\n                .addSorting(Criteria.sort('cmsAwareTitle', 'ASC'));\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    created(): void {\n        void this.fetchCustomEntityName();\n    },\n\n    methods: {\n        onAssignmentChange(customEntityAssignments: EntityCollection<'custom_entity'>): void {\n            const categoryExtensions = this.category?.extensions;\n            if (!categoryExtensions) {\n                return;\n            }\n\n            categoryExtensions[`${this.categoryCustomEntityProperty}${EXTENSION_POSTFIX}`] = customEntityAssignments;\n        },\n\n        onEntityChange(id: string, entity?: Entity<'custom_entity'>) {\n            if (!this.category) {\n                return;\n            }\n\n            this.category.customEntityTypeId = id;\n\n            this.categoryCustomEntityProperty = Utils.string.camelCase(entity?.name ?? '');\n        },\n\n        async fetchCustomEntityName(): Promise<void> {\n            if (!this.category?.customEntityTypeId) {\n                return;\n            }\n\n            const customEntityRepository = this.repositoryFactory.create('custom_entity');\n            const customEntity = await customEntityRepository.get(this.category.customEntityTypeId);\n\n            if (!customEntity) {\n                return;\n            }\n\n            this.categoryCustomEntityProperty = Utils.string.camelCase(customEntity.name);\n        },\n    },\n});\n","export default \"<div class=\\\"sw-category-detail-custom-entity\\\">\\n    <template v-if=\\\"category\\\">\\n        <sw-card\\n            v-if=\\\"!Array.isArray(customEntityAssignments)\\\"\\n            :title=\\\"$tc('sw-category.base.customEntity.cardTitle')\\\"\\n            position-identifier=\\\"category-detail-custom-entity\\\"\\n            class=\\\"sw-category-detail-custom-entity__selection-container\\\"\\n        >\\n            <sw-entity-single-select\\n                class=\\\"sw-category-detail-custom-entity__assignment\\\"\\n                :value=\\\"category.customEntityTypeId\\\"\\n                :label=\\\"$tc('sw-category.base.customEntity.assignment.label')\\\"\\n                :help-text=\\\"$tc('sw-category.base.customEntity.assignment.helpText')\\\"\\n                :disabled=\\\"!acl.can('category.editor')\\\"\\n                :criteria=\\\"customEntityCriteria\\\"\\n                entity=\\\"custom_entity\\\"\\n                required\\n                {% if VUE3 %}\\n                @update:value=\\\"onEntityChange\\\"\\n                {% else %}\\n                @change=\\\"onEntityChange\\\"\\n                {% endif %}\\n            />\\n        </sw-card>\\n\\n        <sw-many-to-many-assignment-card\\n            v-else\\n            :entity-collection=\\\"customEntityAssignments\\\"\\n            :title=\\\"$tc('sw-category.base.customEntity.cardTitle')\\\"\\n            :columns=\\\"customEntityColumns\\\"\\n            :local-mode=\\\"category.isNew()\\\"\\n            label-property=\\\"cmsAwareTitle\\\"\\n            :criteria=\\\"sortingCriteria\\\"\\n            :select-label=\\\"$tc('sw-category.base.customEntity.instanceAssignment.label')\\\"\\n            :placeholder=\\\"$tc('sw-category.base.customEntity.instanceAssignment.placeholder')\\\"\\n            {% if VUE3 %}\\n            @update:entity-collection=\\\"onAssignmentChange\\\"\\n            {% else %}\\n            @change=\\\"onAssignmentChange\\\"\\n            {% endif %}\\n        >\\n            <template #prepend-select>\\n                <sw-entity-single-select\\n                    class=\\\"sw-category-detail-custom-entity__assignment\\\"\\n                    :value=\\\"category.customEntityTypeId\\\"\\n                    :label=\\\"$tc('sw-category.base.customEntity.assignment.label')\\\"\\n                    :help-text=\\\"$tc('sw-category.base.customEntity.assignment.helpText')\\\"\\n                    :disabled=\\\"!acl.can('category.editor')\\\"\\n                    :criteria=\\\"customEntityCriteria\\\"\\n                    entity=\\\"custom_entity\\\"\\n                    required\\n                    {% if VUE3 %}\\n                    @update:value=\\\"onEntityChange\\\"\\n                    {% else %}\\n                    @change=\\\"onEntityChange\\\"\\n                    {% endif %}\\n                />\\n            </template>\\n\\n            <template #empty-state>\\n                <sw-empty-state\\n                    :title=\\\"$tc('sw-category.base.customEntity.instanceAssignment.emptyState.title')\\\"\\n                    :absolute=\\\"false\\\"\\n                >\\n                    <template #icon>\\n                        <img\\n                            :src=\\\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\\\"\\n                            alt=\\\"$tc('sw-category.base.customEntity.instanceAssignment.emptyState.title')\\\"\\n                        >\\n                    </template>\\n                </sw-empty-state>\\n            </template>\\n        </sw-many-to-many-assignment-card>\\n    </template>\\n</div>\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-category-detail-custom-entity.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"ceeb9a48\", content, true, {});"],"sourceRoot":""}