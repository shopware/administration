(this.webpackJsonpAdministration=this.webpackJsonpAdministration||[]).push([[318],{ZHXT:function(t,e,n){var s=n("fH45");s.__esModule&&(s=s.default),"string"==typeof s&&(s=[[t.i,s,""]]),s.locals&&(t.exports=s.locals);(0,n("P8hj").default)("0afe234c",s,!0,{})},fH45:function(t,e,n){},nZR8:function(t,e,n){"use strict";n.r(e);var s=n("7yzw"),r=n.n(s),o=n("92Mt"),i=n.n(o),a=(n("ZHXT"),Shopware),c=a.Component,d=a.State,l=a.Mixin,u=a.Context,m=Shopware.Data.Criteria;e.default=c.wrapComponentConfig({template:'\n{% block sw_order_customer_grid %}\n<sw-card\n    class="sw-order-customer-grid"\n    position-identifier="sw-order-customer-grid"\n    :is-loading="isSwitchingCustomer"\n>\n    <template #toolbar>\n        \n        {% block sw_order_customer_grid_toolbar %}\n        <div class="sw-order-customer-grid__toolbar">\n            \n            {% block sw_order_customer_grid_search_input %}\n            <sw-card-filter\n                ref="customerFilter"\n                @sw-card-filter-term-change="onSearch"\n            />\n            {% endblock %}\n\n            \n            {% block sw_order_customer_grid_add_new_customer %}\n            <sw-button\n                class="sw-order-customer-grid__add-customer"\n                variant="ghost"\n                size="small"\n                @click="onShowNewCustomerModal"\n            >\n                {{ $tc(\'sw-order.initialModal.customerGrid.buttonAddNewCustomer\') }}\n            </sw-button>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </template>\n\n    <template #grid>\n        <div\n            class="sw-order-customer-grid__container"\n        >\n            \n            {% block sw_order_customer_grid_content %}\n            <sw-entity-listing\n                class="sw-order-customer-grid__content"\n                :show-selection="false"\n                :show-settings="false"\n                :items="customers"\n                :columns="customerColumns"\n                :repository="customerRepository"\n                :is-loading="isLoading"\n            >\n                \n                {% block sw_order_customer_grid_content_column_select %}\n                <template #column-select="{ item }">\n                    <div class="sw-field__radio-input">\n                        \n                        <input\n                            type="radio"\n                            :checked="isChecked(item)"\n                            @change="onCheckCustomer(item)"\n                        >\n                        <div class="sw-field__radio-state"></div>\n                    </div>\n                </template>\n                {% endblock %}\n\n                \n                {% block sw_order_customer_grid_content_grid_column_name %}\n                <template #column-firstName="{ item }">\n                    <router-link :to="{ name: \'sw.customer.detail\', params: { id: item.id } }">\n                        {{ item.firstName }} {{ item.lastName }}\n                    </router-link>\n                </template>\n                {% endblock %}\n\n                <template #column-salesChannel="{ item }">\n                    {{ item.salesChannel.translated.name }}\n                </template>\n\n                \n                {% block sw_settings_product_feature_set_list_grid_columns_actions %}\n                <template #actions="{ item }">\n                    <sw-context-menu-item\n                        target="_blank"\n                        rel="noopener"\n                        :router-link="{ name: \'sw.customer.detail\', params: { id: item.id } }"\n                    >\n                        {{ $tc(\'sw-order.initialModal.customerGrid.contextOpenButton\') }}\n                    </sw-context-menu-item>\n                </template>\n                {% endblock %}\n            </sw-entity-listing>\n            {% endblock %}\n\n            \n            {% block sw_order_customer_grid_empty_state %}\n            <sw-empty-state\n                v-if="showEmptyState"\n                class="sw-order-customer-grid__empty-state"\n                :show-description="false"\n                :title="emptyTitle"\n            >\n                \n                {% block sw_order_customer_grid_empty_state_icon %}\n                <template #icon>\n                    <img\n                        :src="assetFilter(\'/administration/static/img/empty-states/customer-empty-state.svg\')"\n                        :alt="$tc(\'sw-customer.list.messageEmpty\')"\n                    >\n                </template>\n                {% endblock %}\n            </sw-empty-state>\n            {% endblock %}\n        </div>\n\n        \n        {% block sw_order_customer_grid_new_customer_modal %}\n        <sw-order-new-customer-modal\n            v-if="showNewCustomerModal"\n            @on-select-existing-customer="onAddNewCustomer"\n            @close="showNewCustomerModal = false"\n        />\n        {% endblock %}\n    </template>\n</sw-card>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[l.getByName("listing"),l.getByName("notification")],data:function(){return{customers:null,isLoading:!1,isSwitchingCustomer:!1,showNewCustomerModal:!1,customer:null,disableRouteParams:!0}},computed:{customerData:function(){return d.get("swOrder").customer},customerRepository:function(){return this.repositoryFactory.create("customer")},customerCriteria:function(){var t=new m(this.page,this.limit);return t.addAssociation("salesChannel"),t.addSorting(m.sort("createdAt","DESC")),this.term&&t.setTerm(this.term),t},customerCriterion:function(){var t=new m(1,25);return t.addAssociation("addresses").addAssociation("group").addAssociation("salutation").addAssociation("salesChannel").addAssociation("defaultPaymentMethod").addAssociation("lastPaymentMethod").addAssociation("defaultBillingAddress.country").addAssociation("defaultBillingAddress.countryState").addAssociation("defaultBillingAddress.salutation").addAssociation("defaultShippingAddress.country").addAssociation("defaultShippingAddress.countryState").addAssociation("defaultShippingAddress.salutation").addAssociation("tags"),t},customerColumns:function(){return[{property:"select",label:""},{property:"firstName",dataIndex:"lastName,firstName",label:this.$tc("sw-order.initialModal.customerGrid.columnCustomerName"),primary:!0},{property:"customerNumber",label:this.$tc("sw-order.initialModal.customerGrid.columnCustomerNumber")},{property:"salesChannel",label:this.$tc("sw-order.initialModal.customerGrid.columnSalesChannel")},{property:"email",label:this.$tc("sw-order.initialModal.customerGrid.columnEmailAddress")}]},showEmptyState:function(){return!this.total&&!this.isLoading},emptyTitle:function(){return this.term?this.$tc("sw-order.initialModal.customerGrid.textEmptySearch",0,{name:this.term}):this.$tc("sw-customer.list.messageEmpty")},cart:function(){return d.get("swOrder").cart},assetFilter:function(){return Shopware.Filter.getByName("asset")}},mounted:function(){this.mountedComponent()},methods:{mountedComponent:function(){var t;this.customerData&&(this.$refs.customerFilter.term=null===(t=this.customerData)||void 0===t?void 0:t.customerNumber,this.onCheckCustomer(this.customerData))},getList:function(){var t=this;return this.isLoading=!0,this.customerRepository.search(this.customerCriteria).then((function(e){t.customers=e,t.total=e.total})).finally((function(){t.isLoading=!1}))},onShowNewCustomerModal:function(){this.showNewCustomerModal=!0},isChecked:function(t){var e;return t.id===(null===(e=this.customer)||void 0===e?void 0:e.id)},onCheckCustomer:function(t){this.customer=t,this.handleSelectCustomer(t.id)},createCart:function(t){return d.dispatch("swOrder/createCart",{salesChannelId:t})},setCustomer:function(t){d.dispatch("swOrder/selectExistingCustomer",{customer:t})},handleSelectCustomer:function(t){var e=this;return r()(i.a.mark((function n(){var s,r;return i.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return e.isSwitchingCustomer=!0,n.prev=1,n.next=4,e.customerRepository.get(t,u.api,e.customerCriterion);case 4:if(s=n.sent,e.cart.token){n.next=8;break}return n.next=8,e.createCart(null!==(r=null==s?void 0:s.salesChannelId)&&void 0!==r?r:"");case 8:return e.customer=s,e.setCustomer(s),n.next=12,e.updateCustomerContext();case 12:n.next=17;break;case 14:n.prev=14,n.t0=n.catch(1),e.createNotificationError({message:e.$tc("sw-order.create.messageSwitchCustomerError")});case 17:return n.prev=17,e.isSwitchingCustomer=!1,n.finish(17);case 20:case"end":return n.stop()}}),n,null,[[1,14,17,20]])})))()},onAddNewCustomer:function(t){t&&(this.getList(),this.page=1,this.term="")},updateCustomerContext:function(){var t,e,n=this;return d.dispatch("swOrder/updateCustomerContext",{customerId:null===(t=this.customer)||void 0===t?void 0:t.id,salesChannelId:null===(e=this.customer)||void 0===e?void 0:e.salesChannelId,contextToken:this.cart.token}).then((function(t){200===t.status&&n.getCart()}))},getCart:function(){var t;return d.dispatch("swOrder/getCart",{salesChannelId:null===(t=this.customer)||void 0===t?void 0:t.salesChannelId,contextToken:this.cart.token})}}})}}]);
//# sourceMappingURL=c9a3ad8eb906c2439671.js.map