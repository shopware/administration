{"version":3,"sources":["webpack:///./src/module/sw-import-export/component/profile-wizard/sw-import-export-new-profile-wizard-csv-page/sw-import-export-new-profile-wizard-csv-page.scss","webpack:///./src/module/sw-import-export/component/profile-wizard/sw-import-export-new-profile-wizard-csv-page/sw-import-export-new-profile-wizard-csv-page.html.twig","webpack:///./src/module/sw-import-export/component/profile-wizard/sw-import-export-new-profile-wizard-csv-page/index.js"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","template","inject","mixins","getByName","props","profile","type","Object","required","data","csvFile","created","this","createdComponent","methods","$emit","onFileChange","_this","mapping","Promise","resolve","importExport","getMappingFromTemplate","sourceEntity","delimiter","enclosure","then","transformedMapping","transformMapping","$set","length","createNotificationWarning","message","$tc","duration","catch","error","_error$response","_error$response$data","_error$response$data$","_error$response$data$2","response","errors","code","createNotificationError","map","currentMapping","key","mappedKey"],"mappings":"0GAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAA2EL,SAC5E,WAAYF,GAAS,EAAM,K,mDCT7B,ICMPQ,EAAUC,SAAVD,MAGO,WACXE,SDVW,+gCCYXC,OAAQ,CACJ,oBACA,gBAGJC,OAAQ,CAACJ,EAAMK,UAAU,iBAEzBC,MAAO,CACHC,QAAS,CACLC,KAAMC,OACNC,UAAU,IAIlBC,KAAI,WACA,MAAO,CACHC,QAAS,OAIjBC,QAAO,WACHC,KAAKC,oBAGTC,QAAS,CACLD,iBAAgB,WACZD,KAAKG,MAAM,iBAGfC,aAAY,WAAI,IAADC,EAAA,KACX,OAAqB,OAAjBL,KAAKF,SACLE,KAAKP,QAAQa,QAAU,GACvBN,KAAKG,MAAM,gBACJI,QAAQC,WAGZR,KAAKS,aAAaC,uBACrBV,KAAKF,QACLE,KAAKP,QAAQkB,aACbX,KAAKP,QAAQmB,UACbZ,KAAKP,QAAQoB,WACfC,MAAK,SAACR,GACJ,IAAMS,EAAqBV,EAAKW,iBAAiBV,GAEjDD,EAAKY,KAAKZ,EAAKZ,QAAS,UAAWsB,GACnCV,EAAKF,MAAM,cAEuB,IAA9BY,EAAmBG,QACnBb,EAAKc,0BAA0B,CAC3BC,QAASf,EAAKgB,IAAI,4DAClBC,SAAU,SAGnBC,OAAM,SAACC,GAAW,IAADC,EAAAC,EAAAC,EAAAC,EAChBvB,EAAKZ,QAAQa,QAAU,GACvBD,EAAKF,MAAM,gBACX,IAAIiB,EAAUf,EAAKgB,IAAI,0DAGL,uCADc,QAAjBI,EAAGD,EAAMK,gBAAQ,IAAAJ,GAAM,QAANC,EAAdD,EAAgB5B,YAAI,IAAA6B,GAAQ,QAARC,EAApBD,EAAsBI,cAAM,IAAAH,GAAK,QAALC,EAA5BD,EAA+B,UAAE,IAAAC,OAAnB,EAAdA,EAAmCG,QAEjDX,EAAUf,EAAKgB,IAAI,gEAGvBhB,EAAK2B,wBAAwB,CACzBZ,gBAWZJ,iBAAgB,SAACV,GACb,OAAOA,EAAQ2B,KAAI,SAAAC,GACf,MAAO,CACHC,IAAKD,EAAeC,IACpBC,UAAWF,EAAeE,kB","file":"static/js/fefe2c010e4e6d616053.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-import-export-new-profile-wizard-csv-page.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"ac7c0f62\", content, true, {});","export default \"\\n{% block sw_import_export_new_profile_wizard_csv_page %}\\n<div class=\\\"sw-import-export-new-profile-wizard-csv-page\\\">\\n    \\n    {% block sw_import_export_new_profile_wizard_csv_page_text %}\\n    <p class=\\\"sw-import-export-new-profile-wizard-csv-page__text\\\">\\n        {{ $tc('sw-import-export.profile.csvUploadText') }}\\n    </p>\\n    {% endblock %}\\n\\n    \\n    {% block sw_import_export_new_profile_wizard_csv_page_csv_upload %}\\n    <sw-file-input\\n        {% if VUE3 %}\\n        v-model:value=\\\"csvFile\\\"\\n        {% else %}\\n        v-model=\\\"csvFile\\\"\\n        {% endif %}\\n        :allowed-mime-types=\\\"['text/csv']\\\"\\n        class=\\\"sw-import-export-new-profile-wizard-csv-page__file-upload\\\"\\n        {% if VUE3 %}\\n        @update:value=\\\"onFileChange\\\"\\n        {% else %}\\n        @change=\\\"onFileChange\\\"\\n        {% endif %}\\n    >\\n        <template #caption-label>\\n            {{ $tc('sw-import-export.importer.labelUploadCaption') }}\\n        </template>\\n    </sw-file-input>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","/**\n * @package services-settings\n */\nimport template from './sw-import-export-new-profile-wizard-csv-page.html.twig';\nimport './sw-import-export-new-profile-wizard-csv-page.scss';\n\nconst { Mixin } = Shopware;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'importExport',\n    ],\n\n    mixins: [Mixin.getByName('notification')],\n\n    props: {\n        profile: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            csvFile: null,\n        };\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.$emit('next-disable');\n        },\n\n        onFileChange() {\n            if (this.csvFile === null) {\n                this.profile.mapping = [];\n                this.$emit('next-disable');\n                return Promise.resolve();\n            }\n\n            return this.importExport.getMappingFromTemplate(\n                this.csvFile,\n                this.profile.sourceEntity,\n                this.profile.delimiter,\n                this.profile.enclosure,\n            ).then((mapping) => {\n                const transformedMapping = this.transformMapping(mapping);\n\n                this.$set(this.profile, 'mapping', transformedMapping);\n                this.$emit('next-allow');\n\n                if (transformedMapping.length === 1) {\n                    this.createNotificationWarning({\n                        message: this.$tc('sw-import-export.profile.messageCsvTemplateUploadWarning'),\n                        duration: 10000,\n                    });\n                }\n            }).catch((error) => {\n                this.profile.mapping = [];\n                this.$emit('next-disable');\n                let message = this.$tc('sw-import-export.profile.messageCsvTemplateUploadError');\n\n                const errorCode = error.response?.data?.errors?.[0]?.code;\n                if (errorCode === 'CONTENT__IMPORT_EXPORT_FILE_EMPTY') {\n                    message = this.$tc('sw-import-export.profile.messageCsvTemplateUploadEmptyError');\n                }\n\n                this.createNotificationError({\n                    message,\n                });\n            });\n        },\n\n        /**\n         * Iterates over every mapping and only returns the key and mappedKey of that mapping.\n         * We do this to not populate the database with unnecessary data.\n         * @param mapping\n         * @returns {Array}\n         */\n        transformMapping(mapping) {\n            return mapping.map(currentMapping => {\n                return {\n                    key: currentMapping.key,\n                    mappedKey: currentMapping.mappedKey,\n                };\n            });\n        },\n    },\n};\n"],"sourceRoot":""}