{"version":3,"sources":["webpack:///./src/module/sw-mail-template/component/sw-mail-header-footer-list/sw-mail-header-footer-list.html.twig","webpack:///./src/module/sw-mail-template/component/sw-mail-header-footer-list/index.js"],"names":["Mixin","Shopware","Criteria","Data","template","inject","mixins","getByName","props","searchTerm","type","String","required","default","data","mailHeaderFooters","showDeleteModal","isLoading","computed","mailHeaderFooterRepository","this","repositoryFactory","create","skeletonItemAmount","length","showListing","assetFilter","Filter","watch","getList","methods","onEdit","mailHeaderFooter","id","$router","push","name","params","_this","criteria","page","limit","addAssociation","addSorting","sort","setTerm","search","then","items","total","getListColumns","property","dataIndex","label","allowResize","routerLink","primary","sortable","getSalesChannelsString","item","salesChannels","forEach","salesChannel","concat","translated","onDuplicate","_this2","clone","checkCanBeDeleted","onDelete","_this3","$refs","listing","deleteId","showDeleteErrorNotification","delete","resetSelection","doSearch","getMailHeaderFooterCriteria","addFilter","equalsAny","onMultipleDelete","_this4","selectedMailHeaderFooters","Object","values","selection","map","currentProxy","response","deleteItems","createNotificationError","message","$tc","updateRecords","result"],"mappings":"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","file":"static/js/cff657d7199637f8b7c4.js","sourcesContent":["export default \"\\n{% block sw_mail_header_footer_list_grid %}\\n<sw-card\\n    :title=\\\"$tc('sw-mail-header-footer.list.textMailHeaderFooterOverview')\\\"\\n    position-identifier=\\\"sw-mail-header-footer-list\\\"\\n>\\n\\n    \\n    {% block sw_mail_header_footer_list_grid_empty_state %}\\n    <sw-empty-state\\n        v-if=\\\"!isLoading && !showListing\\\"\\n        :title=\\\"$tc('sw-mail-header-footer.list.emptyStateTitle')\\\"\\n        :subline=\\\"$tc('sw-mail-header-footer.list.emptyStateSubTitle')\\\"\\n        :absolute=\\\"false\\\"\\n    >\\n\\n        \\n        {% block sw_mail_header_footer_list_grid_empty_state_icon %}\\n        <template #icon>\\n            <img\\n                :src=\\\"assetFilter('/administration/static/img/empty-states/settings-empty-state.svg')\\\"\\n                :alt=\\\"$tc('sw-mail-header-footer.list.emptyStateTitle')\\\"\\n            >\\n        </template>\\n        {% endblock %}\\n\\n    </sw-empty-state>\\n    {% endblock %}\\n\\n    \\n    {% block sw_mail_template_list_grid %}\\n    <template #grid>\\n        <sw-entity-listing\\n            v-if=\\\"isLoading || showListing\\\"\\n            id=\\\"mailHeaderFooterGrid\\\"\\n            ref=\\\"listing\\\"\\n            class=\\\"sw-mail-templates-list-grid\\\"\\n            detail-route=\\\"sw.mail.template.detail_head_foot\\\"\\n            identifier=\\\"sw-mail-header-footer-list\\\"\\n            :items=\\\"mailHeaderFooters\\\"\\n            :columns=\\\"getListColumns()\\\"\\n            :repository=\\\"mailHeaderFooterRepository\\\"\\n            :full-page=\\\"false\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :allow-view=\\\"acl.can('mail_templates.viewer')\\\"\\n            :allow-edit=\\\"acl.can('mail_templates.editor')\\\"\\n            :allow-delete=\\\"acl.can('mail_templates.deleter')\\\"\\n            :show-selection=\\\"acl.can('mail_templates.deleter')\\\"\\n            :skeleton-item-amount=\\\"skeletonItemAmount\\\"\\n            @update-records=\\\"updateRecords\\\"\\n        >\\n            <template #column-salesChannels.name=\\\"{ item }\\\">\\n                \\n                {% block sw_mail_template_list_columns_sales_channels_label %}\\n                {{ getSalesChannelsString(item) }}\\n                {% endblock %}\\n            </template>\\n\\n            <template #bulk-modal-delete-items>\\n                <sw-button\\n                    variant=\\\"danger\\\"\\n                    size=\\\"small\\\"\\n                    @click=\\\"onMultipleDelete\\\"\\n                >\\n                    {{ $tc('global.default.delete') }}\\n                </sw-button>\\n            </template>\\n\\n            <template #delete-modal-delete-item=\\\"{ item }\\\">\\n                <sw-button\\n                    variant=\\\"danger\\\"\\n                    size=\\\"small\\\"\\n                    @click=\\\"onDelete(item)\\\"\\n                >\\n                    {{ $tc('global.default.delete') }}\\n                </sw-button>\\n            </template>\\n\\n            <template #more-actions=\\\"{ item }\\\">\\n                \\n                {% block sw_mail_header_footer_list_grid_columns_actions_duplicate %}\\n                <sw-context-menu-item\\n                    class=\\\"sw-mail-header-footer-list-grid__duplicate-action\\\"\\n                    :disabled=\\\"!acl.can('mail_templates.creator')\\\"\\n                    @click=\\\"onDuplicate(item.id)\\\"\\n                >\\n                    {{ $tc('sw-mail-header-footer.list.contextMenuDuplicate') }}\\n                </sw-context-menu-item>\\n                {% endblock %}\\n            </template>\\n        </sw-entity-listing>\\n    </template>\\n    {% endblock %}\\n\\n</sw-card>\\n{% endblock %}\\n\";","import template from './sw-mail-header-footer-list.html.twig';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl'],\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        searchTerm: {\n            type: String,\n            required: false,\n            default: '',\n        },\n    },\n\n    data() {\n        return {\n            mailHeaderFooters: null,\n            showDeleteModal: null,\n            isLoading: false,\n        };\n    },\n\n    computed: {\n        mailHeaderFooterRepository() {\n            return this.repositoryFactory.create('mail_header_footer');\n        },\n\n        skeletonItemAmount() {\n            return this.mailHeaderFooters && this.mailHeaderFooters.length !== 0 ? this.mailHeaderFooters.length : 3;\n        },\n\n        showListing() {\n            return !!this.mailHeaderFooters && this.mailHeaderFooters.length !== 0;\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        searchTerm() {\n            this.getList();\n        },\n    },\n\n    methods: {\n        onEdit(mailHeaderFooter) {\n            if (mailHeaderFooter?.id) {\n                this.$router.push({\n                    name: 'sw.mail.template.detail_head_foot',\n                    params: {\n                        id: mailHeaderFooter.id,\n                    },\n                });\n            }\n        },\n\n        getList() {\n            this.isLoading = true;\n\n            const criteria = new Criteria(this.page, this.limit);\n            criteria\n                .addAssociation('salesChannels')\n                .addSorting(Criteria.sort('name'));\n\n            if (this.searchTerm) {\n                criteria.setTerm(this.searchTerm);\n            }\n\n            this.mailHeaderFooterRepository.search(criteria).then((items) => {\n                this.total = items.total;\n                this.mailHeaderFooters = items;\n                this.isLoading = false;\n\n                return this.mailHeaderFooters;\n            });\n        },\n\n        getListColumns() {\n            return [{\n                property: 'name',\n                dataIndex: 'name',\n                label: 'sw-mail-header-footer.list.columnName',\n                allowResize: true,\n                routerLink: 'sw.mail.template.detail_head_foot',\n                primary: true,\n            }, {\n                property: 'description',\n                dataIndex: 'description',\n                label: 'sw-mail-header-footer.list.columnDescription',\n                allowResize: true,\n            }, {\n                property: 'salesChannels.name',\n                dataIndex: 'salesChannels.name',\n                label: 'sw-mail-header-footer.list.columnSalesChannels',\n                allowResize: true,\n                sortable: false,\n            }];\n        },\n\n        getSalesChannelsString(item) {\n            if (typeof item.salesChannels === 'undefined') {\n                return '';\n            }\n            let salesChannels = '';\n\n            item.salesChannels.forEach((salesChannel) => {\n                if (salesChannels !== '') {\n                    salesChannels += ', ';\n                }\n                salesChannels += `${salesChannel.translated.name}`;\n            });\n\n            if (item.salesChannels.length >= 5) {\n                salesChannels += '...';\n            }\n\n            return salesChannels;\n        },\n\n        onDuplicate(id) {\n            this.mailHeaderFooterRepository.clone(id).then((mailHeaderFooter) => {\n                this.$router.push(\n                    {\n                        name: 'sw.mail.template.detail_head_foot',\n                        params: { id: mailHeaderFooter.id },\n                    },\n                );\n            });\n        },\n\n        checkCanBeDeleted(mailHeaderFooter) {\n            return !mailHeaderFooter.salesChannels.length;\n        },\n\n        onDelete(item) {\n            this.$refs.listing.deleteId = null;\n\n            if (!this.checkCanBeDeleted(item)) {\n                this.showDeleteErrorNotification(item);\n            }\n\n            return this.mailHeaderFooterRepository.delete(item.id)\n                .then(() => {\n                    this.$refs.listing.resetSelection();\n                    this.$refs.listing.doSearch();\n                });\n        },\n\n        getMailHeaderFooterCriteria(mailHeaderFooter) {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(\n                Criteria.equalsAny('id', mailHeaderFooter),\n            );\n\n            criteria.addAssociation('salesChannels');\n\n            return criteria;\n        },\n\n        onMultipleDelete() {\n            const selectedMailHeaderFooters = Object.values(this.$refs.listing.selection).map(currentProxy => {\n                return currentProxy.id;\n            });\n\n            this.mailHeaderFooterRepository\n                .search(this.getMailHeaderFooterCriteria(selectedMailHeaderFooters))\n                .then(response => {\n                    response.forEach((mailHeaderFooter) => {\n                        if (!this.checkCanBeDeleted(mailHeaderFooter)) {\n                            this.showDeleteErrorNotification(mailHeaderFooter);\n                        }\n                    });\n\n                    this.$refs.listing.deleteItems();\n                });\n        },\n\n        showDeleteErrorNotification(item) {\n            return this.createNotificationError({\n                message: this.$tc('sw-mail-header-footer.list.messageDeleteError', 0, { name: item.name }),\n            });\n        },\n\n        updateRecords(result) {\n            this.mailHeaderFooters = result;\n        },\n    },\n};\n"],"sourceRoot":""}