{"version":3,"sources":["webpack:///./src/module/sw-cms/elements/product-description-reviews/config/index.js","webpack:///./src/module/sw-cms/elements/product-description-reviews/config/sw-cms-el-config-product-description-reviews.html.twig","webpack:///./src/module/sw-cms/elements/product-description-reviews/config/sw-cms-el-config-product-description-reviews.scss"],"names":["Mixin","Shopware","template","inject","mixins","getByName","computed","productRepository","this","repositoryFactory","create","productSelectContext","_objectSpread","Context","api","inheritance","productCriteria","criteria","Criteria","addAssociation","selectedProductCriteria","isProductPage","_this$cmsPageState","_this$cmsPageState$cu","cmsPageState","currentPage","type","created","createdComponent","methods","initElementConfig","onProductChange","productId","_this","get","then","product","element","config","value","$set","data","$emit","content","__esModule","default","module","i","locals","exports","add"],"mappings":"8uBAIA,IAAQA,EAAUC,SAAVD,MAMO,WACXE,SCXW,m/LDaXC,OAAQ,CAAC,qBAETC,OAAQ,CACJJ,EAAMK,UAAU,gBAGpBC,SAAU,CACNC,kBAAiB,WACb,OAAOC,KAAKC,kBAAkBC,OAAO,YAGzCC,qBAAoB,WAChB,OAAAC,IAAA,GACOX,SAASY,QAAQC,KAAG,IACvBC,aAAa,KAIrBC,gBAAe,WACX,IAAMC,EAAW,IAAIC,IAAS,EAAG,IAGjC,OAFAD,EAASE,eAAe,iBAEjBF,GAGXG,wBAAuB,WACnB,IAAMH,EAAW,IAAIC,IAAS,EAAG,IAGjC,OAFAD,EAASE,eAAe,cAEjBF,GAGXI,cAAa,WAAI,IAADC,EAAAC,EACZ,MAAgD,oBAAxB,QAAjBD,EAAAd,KAAKgB,oBAAY,IAAAF,GAAa,QAAbC,EAAjBD,EAAmBG,mBAAW,IAAAF,OAAb,EAAjBA,EAAgCG,QAI/CC,QAAO,WACHnB,KAAKoB,oBAGTC,QAAS,CACLD,iBAAgB,WACZpB,KAAKsB,kBAAkB,gCAG3BC,gBAAe,SAACC,GAAY,IAADC,EAAA,KAClBD,EAKDxB,KAAKD,kBAAkB2B,IACnBF,EACAxB,KAAKG,qBACLH,KAAKY,yBACPe,MAAK,SAACC,GACJH,EAAKI,QAAQC,OAAOF,QAAQG,MAAQP,EACpCC,EAAKO,KAAKP,EAAKI,QAAQI,KAAM,YAAaT,GAC1CC,EAAKO,KAAKP,EAAKI,QAAQI,KAAM,UAAWL,OAX5C5B,KAAK6B,QAAQC,OAAOF,QAAQG,MAAQ,KACpC/B,KAAKgC,KAAKhC,KAAK6B,QAAQI,KAAM,YAAa,MAC1CjC,KAAKgC,KAAKhC,KAAK6B,QAAQI,KAAM,UAAW,OAa5CjC,KAAKkC,MAAM,iBAAkBlC,KAAK6B,a,qBEzE9C,IAAIM,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAA2EL,SAC5E,WAAYF,GAAS,EAAM,K","file":"static/js/6da94782eca8798f48eb.js","sourcesContent":["import Criteria from 'src/core/data/criteria.data';\nimport template from './sw-cms-el-config-product-description-reviews.html.twig';\nimport './sw-cms-el-config-product-description-reviews.scss';\n\nconst { Mixin } = Shopware;\n\n/**\n * @private\n * @package buyers-experience\n */\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('cms-element'),\n    ],\n\n    computed: {\n        productRepository() {\n            return this.repositoryFactory.create('product');\n        },\n\n        productSelectContext() {\n            return {\n                ...Shopware.Context.api,\n                inheritance: true,\n            };\n        },\n\n        productCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addAssociation('options.group');\n\n            return criteria;\n        },\n\n        selectedProductCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addAssociation('properties');\n\n            return criteria;\n        },\n\n        isProductPage() {\n            return this.cmsPageState?.currentPage?.type === 'product_detail';\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.initElementConfig('product-description-reviews');\n        },\n\n        onProductChange(productId) {\n            if (!productId) {\n                this.element.config.product.value = null;\n                this.$set(this.element.data, 'productId', null);\n                this.$set(this.element.data, 'product', null);\n            } else {\n                this.productRepository.get(\n                    productId,\n                    this.productSelectContext,\n                    this.selectedProductCriteria,\n                ).then((product) => {\n                    this.element.config.product.value = productId;\n                    this.$set(this.element.data, 'productId', productId);\n                    this.$set(this.element.data, 'product', product);\n                });\n            }\n\n            this.$emit('element-update', this.element);\n        },\n    },\n};\n","export default \"\\n{% block sw_cms_element_product_description_reviews_config %}\\n<div class=\\\"sw-cms-el-config-product-description-reviews-rating\\\">\\n    \\n    {% block sw_cms_element_product_description_reviews_config_tabs %}\\n    <sw-tabs\\n        position-identifier=\\\"sw-cms-element-product-description-reviews\\\"\\n        class=\\\"sw-cms-el-config-product-description-reviews__tabs\\\"\\n        default-item=\\\"content\\\"\\n    >\\n        <template #default=\\\"{ active }\\\">\\n            \\n            {% block sw_cms_element_product_description_reviews_config_tab_content %}\\n            <sw-tabs-item\\n                name=\\\"content\\\"\\n                :title=\\\"$tc('sw-cms.elements.general.config.tab.content')\\\"\\n                :active-tab=\\\"active\\\"\\n            >\\n                {{ $tc('sw-cms.elements.general.config.tab.content') }}\\n            </sw-tabs-item>\\n            {% endblock %}\\n\\n            \\n            {% block sw_cms_element_product_description_reviews_config_tab_options %}\\n            <sw-tabs-item\\n                name=\\\"options\\\"\\n                :title=\\\"$tc('sw-cms.elements.general.config.tab.options')\\\"\\n                :active-tab=\\\"active\\\"\\n            >\\n                {{ $tc('sw-cms.elements.general.config.tab.options') }}\\n            </sw-tabs-item>\\n            {% endblock %}\\n        </template>\\n\\n        <template #content=\\\"{ active }\\\">\\n            \\n            {% block sw_cms_element_product_description_reviews_config_content %}\\n            <sw-container\\n                v-if=\\\"active === 'content'\\\"\\n                class=\\\"sw-cms-el-config-product-description-reviews-config__tab-content\\\"\\n                :columns=\\\"'minmax(300px, 1fr)'\\\"\\n            >\\n                \\n                {% block sw_cms_element_product_description_reviews_warning %}\\n                <sw-alert\\n                    v-if=\\\"isProductPage\\\"\\n                    class=\\\"sw-cms-el-config-buy-box__warning\\\"\\n                    variant=\\\"info\\\"\\n                >\\n                    {{ $tc('sw-cms.elements.productDescriptionReviews.infoText.descriptionAndReviewsElement') }}\\n                </sw-alert>\\n                {% endblock %}\\n\\n                \\n                {% block sw_cms_element_product_description_reviews_config_product_select %}\\n                <sw-entity-single-select\\n                    v-if=\\\"!isProductPage\\\"\\n                    ref=\\\"cmsProductSelection\\\"\\n                    v-model=\\\"element.config.product.value\\\"\\n                    entity=\\\"product\\\"\\n                    :label=\\\"$tc('sw-cms.elements.productBox.config.label.selection')\\\"\\n                    :placeholder=\\\"$tc('sw-cms.elements.productBox.config.placeholder.selection')\\\"\\n                    :criteria=\\\"productCriteria\\\"\\n                    :context=\\\"productSelectContext\\\"\\n                    show-clearable-button\\n                    {% if VUE3 %}\\n                    @update:value=\\\"onProductChange\\\"\\n                    {% else %}\\n                    @change=\\\"onProductChange\\\"\\n                    {% endif %}\\n                >\\n                    \\n                    {% block sw_entity_single_select_variant_selected_item %}\\n                    <template #selection-label-property=\\\"{ item }\\\">\\n                        <sw-product-variant-info\\n                            :variations=\\\"item.variation\\\"\\n                        >\\n                            {{ item.translated.name || item.name }}\\n                        </sw-product-variant-info>\\n                    </template>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_entity_single_select_variant_result_item %}\\n                    <template #result-item=\\\"{ item, index }\\\">\\n                        <sw-select-result\\n                            v-bind=\\\"{ item, index }\\\"\\n                        >\\n                            \\n                            {% block sw_entity_single_select_base_results_list_result_label %}\\n                            <span class=\\\"sw-select-result__result-item-text\\\">\\n                                <sw-product-variant-info :variations=\\\"item.variation\\\">\\n                                    {{ item.translated.name || item.name }}\\n                                </sw-product-variant-info>\\n                            </span>\\n                            {% endblock %}\\n                        </sw-select-result>\\n                    </template>\\n                    {% endblock %}\\n                </sw-entity-single-select>\\n                {% endblock %}\\n            </sw-container>\\n            {% endblock %}\\n\\n            \\n            {% block sw_cms_el_product_description_rating_config_options %}\\n            <sw-container\\n                v-if=\\\"active === 'options'\\\"\\n                class=\\\"sw-cms-el-config-text__tab-options\\\"\\n            >\\n                \\n                {% block sw_cms_el_product_description_rating_config_options_alignment %}\\n                <sw-select-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"element.config.alignment.value\\\"\\n                    {% else %}\\n                    v-model=\\\"element.config.alignment.value\\\"\\n                    {% endif %}\\n                    :label=\\\"$tc('sw-cms.elements.general.config.label.alignment')\\\"\\n                    :placeholder=\\\"$tc('sw-cms.elements.general.config.label.alignment')\\\"\\n                >\\n                    <option value=\\\"flex-start\\\">\\n                        {{ $tc('sw-cms.elements.general.config.label.verticalAlignTop') }}\\n                    </option>\\n                    <option value=\\\"center\\\">\\n                        {{ $tc('sw-cms.elements.general.config.label.verticalAlignCenter') }}\\n                    </option>\\n                    <option value=\\\"flex-end\\\">\\n                        {{ $tc('sw-cms.elements.general.config.label.verticalAlignBottom') }}\\n                    </option>\\n                </sw-select-field>\\n                {% endblock %}\\n            </sw-container>\\n            {% endblock %}\\n        </template>\\n    </sw-tabs>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-cms-el-config-product-description-reviews.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"746440b8\", content, true, {});"],"sourceRoot":""}