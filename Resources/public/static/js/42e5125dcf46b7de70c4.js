"use strict";(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[30523],{30523:function(t,e,s){s.r(e),s.d(e,{default:function(){return a}});var n=s(64205);let{Mixin:r}=Shopware,{Criteria:i}=Shopware.Data;var a={template:'\n{% block sw_settings_list %}\n\n{% block sw_settings_product_feature_set_index %}\n<sw-page class="sw-settings-product-feature-sets-list">\n\n    \n    {% block sw_settings_product_feature_set_list_search_bar %}\n    <template #search-bar>\n        <sw-search-bar\n            initial-search-type="feature_set"\n            :placeholder="$tc(\'sw-settings-product-feature-sets.general.placeholderSearchBar\')"\n            :initial-search="term"\n            @search="onSearch"\n        />\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_product_feature_set_list_smart_bar_header %}\n    <template #smart-bar-header>\n        \n        {% block sw_settings_product_feature_set_list_smart_bar_header_title %}\n        <h2>\n            \n            {% block sw_settings_product_feature_set_list_smart_bar_header_title_text %}\n            {{ $tc(\'sw-settings.index.title\') }} <sw-icon\n                name="regular-chevron-right-xs"\n                small\n            /> {{ $tc(\'sw-settings-product-feature-sets.list.textHeadline\') }}\n            {% endblock %}\n        </h2>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_product_feature_set_list_smart_bar_actions %}\n    <template #smart-bar-actions>\n        \n        {% block sw_settings_product_feature_set_list_smart_bar_actions_add %}\n        <sw-button\n            :router-link="{ name: \'sw.settings.product.feature.sets.create\' }"\n            :disabled="!acl.can(\'product_feature_sets.creator\')"\n            class="sw-settings-product-feature-sets-list-grid__create-button"\n            variant="primary"\n        >\n            {{ $tc(\'sw-settings-product-feature-sets.list.buttonAddEssentialCharacteristics\') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_settings_product_feature_set_list_smart_bar_language_switch %}\n    <template #language-switch>\n        <sw-language-switch @on-change="onChangeLanguage" />\n    </template>\n    {% endblock %}\n\n    <template #content>\n        \n        {% block sw_settings_product_feature_set_list_content %}\n        <div class="sw-product-feature-sets-list__content">\n\n            <sw-entity-listing\n                v-if="isLoading || productFeatureSets"\n                ref="swSettingsProductFeatureSetsGrid"\n                class="sw-settings-product-feature-sets-list-grid"\n                :items="productFeatureSets"\n                :columns="getProductFeatureSetsColumns()"\n                :repository="productFeatureSetsRepository"\n                detail-route="sw.settings.product.feature.sets.detail"\n                :disable-data-fetching="true"\n                :sort-by="sortBy"\n                :sort-direction="sortDirection"\n                :allow-inline-edit="acl.can(\'product_feature_sets.editor\')"\n                :allow-edit="acl.can(\'product_feature_sets.editor\')"\n                :allow-view="acl.can(\'product_feature_sets.viewer\')"\n                :allow-delete="acl.can(\'product_feature_sets.deleter\')"\n                :is-loading="isLoading"\n                @page-change="onPageChange"\n                @column-sort="onSortColumn"\n                @inline-edit-save="onInlineEditSave"\n            >\n\n                <template #column-features="{ item }">\n                    <span v-if="item.features">\n                        {{ renderFeaturePreview(item.features) }}\n                    </span>\n                </template>\n\n                \n                {% block sw_settings_product_feature_set_list_grid_columns_actions %}\n                <template #actions="{ item }">\n\n                    \n                    {% block sw_settings_product_feature_set_list_grid_columns_actions_edit %}\n                    <sw-context-menu-item\n                        :router-link="{ name: \'sw.settings.product.feature.sets.detail\', params: { id: item.id, edit: \'edit\' }}"\n                        :disabled="!acl.can(\'product_feature_sets.editor\')"\n                        class="sw-product-feature-sets-list__edit-action"\n                    >\n                        {{ $tc(\'sw-settings-product-feature-sets.list.contextMenuEdit\') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    \n                    {% block sw_settings_product_feature_set_list_grid_columns_actions_delete %}\n                    <sw-context-menu-item\n                        :disabled="item.isSystemDefault || !acl.can(\'product_feature_sets.deleter\')"\n                        variant="danger"\n                        class="sw-product-feature-sets-list__delete-action"\n                        @click="onDelete(item.id)"\n                    >\n                        {{ $tc(\'sw-settings-product-feature-sets.list.contextMenuDelete\') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                </template>\n                {% endblock %}\n\n                \n                {% block sw_settings_product_feature_set_list_grid_action_modals %}\n                <template #action-modals="{ item }">\n\n                    \n                    {% block sw_settings_product_feature_set_list_delete_modal %}\n                    <sw-modal\n                        v-if="showDeleteModal"\n                        :title="$tc(\'global.default.warning\')"\n                        variant="small"\n                        @modal-close="onCloseDeleteModal"\n                    >\n\n                        \n                        {% block sw_settings_product_feature_set_list_delete_modal_confirm_delete_text %}\n                        <p class="sw-settings-product-feature-sets-list__confirm-delete-text">\n                            {{ $tc(\'sw-settings-product-feature-sets.list.textDeleteConfirm\', 0, { name: item.name }) }}\n                        </p>\n                        {% endblock %}\n\n                        \n                        {% block sw_settings_product_feature_set_list_delete_modal_footer %}\n                        <template #modal-footer>\n\n                            \n                            {% block sw_settings_product_feature_set_list_delete_modal_cancel %}\n                            <sw-button\n                                size="small"\n                                @click="onCloseDeleteModal"\n                            >\n                                {{ $tc(\'sw-settings-product-feature-sets.list.buttonCancel\') }}\n                            </sw-button>\n                            {% endblock %}\n\n                            \n                            {% block sw_settings_product_feature_set_list_delete_modal_confirm %}\n                            <sw-button\n                                variant="danger"\n                                size="small"\n                                @click="onConfirmDelete(item.id)"\n                            >\n                                {{ $tc(\'sw-settings-product-feature-sets.list.buttonDelete\') }}\n                            </sw-button>\n                            {% endblock %}\n\n                        </template>\n                        {% endblock %}\n                    </sw-modal>\n                    {% endblock %}\n\n                </template>\n                {% endblock %}\n\n            </sw-entity-listing>\n\n        </div>\n        {% endblock %}\n\n    </template>\n\n</sw-page>\n    {% endblock %}\n{% endblock %}\n',inject:["repositoryFactory","acl"],mixins:[r.getByName("listing"),r.getByName("notification")],data(){return{entityName:"product_feature_set",productFeatureSets:null,sortBy:"product_feature_set.name",isLoading:!1,sortDirection:"ASC",naturalSorting:!0,showDeleteModal:!1,translationService:null}},metaInfo(){return{title:this.$createTitle()}},computed:{productFeatureSetsRepository(){return this.repositoryFactory.create("product_feature_set")},propertyGroupRepository(){return this.repositoryFactory.create("property_group")},customFieldRepository(){return this.repositoryFactory.create("custom_field")},featureGridTranslationService(){return null===this.translationService&&(this.translationService=new n.Z(this,this.propertyGroupRepository,this.customFieldRepository)),this.translationService}},methods:{metaInfo(){return{title:this.$createTitle()}},getList(){this.isLoading=!0,this.naturalSorting="name"===this.sortBy;let t=new i(this.page,this.limit);t.setTerm(this.term),t.addSorting(i.sort(this.sortBy,this.sortDirection,this.naturalSorting)),this.productFeatureSetsRepository.search(t).then(t=>(this.total=t.total,this.productFeatureSets=t,t)).then(t=>{let e=t.reduce((t,e)=>(e.features&&e.features.length&&(t=[...t,...e.features||[]]),t),[]);return Promise.all([this.featureGridTranslationService.fetchPropertyGroupEntities(e),this.featureGridTranslationService.fetchCustomFieldEntities(e)])}).then(()=>{this.isLoading=!1})},onChangeLanguage(t){Shopware.State.commit("context/setApiLanguageId",t),this.getList()},onInlineEditSave(t,e){t.then(()=>{this.createNotificationSuccess({message:this.$tc("sw-settings-product-feature-sets.detail.messageSaveSuccess",0,{name:e.name})})}).catch(()=>{this.getList(),this.createNotificationError({message:this.$tc("sw-settings-product-feature-sets.detail.messageSaveError")})})},onDelete(t){this.showDeleteModal=t},onCloseDeleteModal(){this.showDeleteModal=!1},onConfirmDelete(t){return this.showDeleteModal=!1,this.productFeatureSetsRepository.delete(t).then(()=>{this.getList()})},getProductFeatureSetsColumns(){return[{property:"name",inlineEdit:"string",label:"sw-settings-product-feature-sets.list.columnTemplate",routerLink:"sw.settings.product.feature.sets.detail",allowResize:!0,primary:!0},{property:"description",inlineEdit:"string",label:"sw-settings-product-feature-sets.list.columnDescription",allowResize:!0},{property:"features",label:"sw-settings-product-feature-sets.list.columnValues",allowResize:!0}]},renderFeaturePreview(t){if(!t.length)return null;let e=t.slice(0,4).map(t=>this.featureGridTranslationService.getNameTranslation(t)).join(", ");return t.length>4?`${e}, ...`:e}}}},64205:function(t,e,s){s.d(e,{Z:function(){return r}});let{Criteria:n}=Shopware.Data;class r{constructor(t,e,s){this.component=t,this.propertyGroupRepository=e,this.customFieldRepository=s,this.entities={property:[],customField:[]}}fetchPropertyGroupEntities(t){return this._fetchEntities(t,"property","id",this.propertyGroupRepository)}fetchCustomFieldEntities(t){return this._fetchEntities(t,"customField","name",this.customFieldRepository)}_fetchEntities(t,e,s,r){if(!t||t.length<1)return Promise.resolve();let i=t.filter(t=>t.type===e).map(t=>t[s]);if(i.length<1)return Promise.resolve();let a=new n(1,25);return a.addFilter(n.equalsAny(s,i)),r.search(a,Shopware.Context.api).then(t=>{this.entities[e]=t})}getNameTranslation(t){if("product"===t.type)return this.component.$tc(`sw-settings-product-feature-sets.modal.label.${t.name}`);if("property"===t.type)return this.entities.property.filter(e=>e.id===t.id).map(t=>t.translated.name).pop();if("customField"===t.type){let e=Shopware.State.get("session").currentLocale,s=Shopware.Context.app.fallbackLocale;return this.entities.customField.filter(e=>e.name===t.name).map(t=>t.config.label[e]||t.config.label[s]).pop()}return"referencePrice"===t.type?this.component.$tc("sw-settings-product-feature-sets.modal.label.referencePrice"):""}getTypeTranslation(t){return"product"===t.type?this.component.$tc("sw-settings-product-feature-sets.modal.textProductInfoLabel"):"property"===t.type?this.component.$tc("sw-settings-product-feature-sets.modal.textPropertyLabel"):"customField"===t.type?this.component.$tc("sw-settings-product-feature-sets.modal.textCustomFieldLabel"):"referencePrice"===t.type?this.component.$tc("sw-settings-product-feature-sets.modal.textReferencePriceLabel"):""}}}}]);