{"version":3,"sources":["webpack:///./src/module/sw-settings-currency/page/sw-settings-currency-detail/sw-settings-currency-detail.scss","webpack:///./src/module/sw-settings-currency/page/sw-settings-currency-detail/index.js","webpack:///./src/module/sw-settings-currency/page/sw-settings-currency-detail/sw-settings-currency-detail.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","cloneDeep","Shopware","Utils","object","Mixin","Criteria","Data","mapPropertyErrors","Component","getComponentHelper","template","inject","mixins","getByName","props","currencyId","type","String","required","shortcuts","active","this","acl","can","method","ESCAPE","data","currency","isLoading","currencyCountryLoading","isSaveSuccessful","currentCurrencyCountry","currencyCountryRoundings","searchTerm","customFieldSets","metaInfo","title","$createTitle","identifier","computed","_objectSpread","placeholder","currencyRepository","repositoryFactory","create","currencyCountryRoundingRepository","countryRoundings","entity","source","tooltipSave","message","$tc","disabled","showOnDisabledElements","systemKey","$device","getSystemKey","concat","appearance","tooltipCancel","currencyCountryColumns","property","label","sortable","visible","currencyCountryRoundingCriteria","criteria","addAssociation","setTerm","addSorting","sort","emptyStateText","id","isNew","showCustomFields","length","watch","createdComponent","created","methods","feature","isActive","$route","params","Promise","all","loadEntityData","loadCustomFieldSets","State","commit","itemRounding","decimals","interval","roundForNet","totalRounding","resolve","_this","get","then","loadCurrencyCountryRoundings","finally","_this2","search","res","_this3","customFieldDataProviderService","getCustomFieldSets","sets","saveFinish","onSave","_this4","save","$router","push","name","updatedCurrency","catch","createNotificationError","onCancel","abortOnLanguageChange","hasChanges","saveOnLanguageChange","onChangeLanguage","onChangeCountrySearch","value","onAddCountry","onCancelEditCountry","onClickEdit","item","onSaveCurrencyCountry","_this5","createNotificationSuccess"],"mappings":"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","file":"static/js/0b522618f0f6b364c4ce.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-currency-detail.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1b61efb6\", content, true, {});","/**\n * @package buyers-experience\n */\nimport template from './sw-settings-currency-detail.html.twig';\nimport './sw-settings-currency-detail.scss';\n\nconst { cloneDeep } = Shopware.Utils.object;\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { mapPropertyErrors } = Shopware.Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl', 'feature', 'customFieldDataProviderService'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('placeholder'),\n    ],\n\n    props: {\n        currencyId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    shortcuts: {\n        'SYSTEMKEY+S': {\n            active() {\n                return this.acl.can('currencies.editor');\n            },\n            method: 'onSave',\n        },\n        ESCAPE: 'onCancel',\n    },\n\n    data() {\n        return {\n            currency: {},\n            isLoading: false,\n            currencyCountryLoading: false,\n            isSaveSuccessful: false,\n            currentCurrencyCountry: null,\n            currencyCountryRoundings: null,\n            searchTerm: '',\n            customFieldSets: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        identifier() {\n            return this.placeholder(this.currency, 'name');\n        },\n\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n\n        currencyCountryRoundingRepository() {\n            if (this.currency.countryRoundings) {\n                return this.repositoryFactory.create(\n                    this.currency.countryRoundings.entity,\n                    this.currency.countryRoundings.source,\n                );\n            }\n            return null;\n        },\n\n        tooltipSave() {\n            if (!this.acl.can('currencies.editor')) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.acl.can('currencies.editor'),\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        tooltipCancel() {\n            return {\n                message: 'ESC',\n                appearance: 'light',\n            };\n        },\n\n        ...mapPropertyErrors(\n            'currency',\n            ['name', 'isoCode', 'shortName', 'symbol', 'isDefault', 'decimalPrecision', 'factor'],\n        ),\n\n        currencyCountryColumns() {\n            return [\n                {\n                    property: 'country',\n                    label: 'sw-settings-currency.detail.currencyCountry.countryColumn',\n                    sortable: true,\n                },\n                {\n                    property: 'itemRounding.decimals',\n                    label: 'sw-settings-currency.detail.currencyCountry.itemDecimalsColumn',\n                    sortable: false,\n                },\n                {\n                    property: 'itemRounding.interval',\n                    label: 'sw-settings-currency.detail.currencyCountry.itemIntervalColumn',\n                    sortable: false,\n                },\n                {\n                    property: 'itemRounding.roundForNet',\n                    label: 'sw-settings-currency.detail.currencyCountry.itemNetRoundingColumn',\n                    sortable: false,\n                    visible: false,\n                },\n                {\n                    property: 'totalRounding.decimals',\n                    label: 'sw-settings-currency.detail.currencyCountry.totalDecimalsColumn',\n                    sortable: false,\n                },\n                {\n                    property: 'totalRounding.interval',\n                    label: 'sw-settings-currency.detail.currencyCountry.totalIntervalColumn',\n                    sortable: false,\n                },\n                {\n                    property: 'totalRounding.roundForNet',\n                    label: 'sw-settings-currency.detail.currencyCountry.totalNetRoundingColumn',\n                    sortable: false,\n                    visible: false,\n                },\n            ];\n        },\n\n        currencyCountryRoundingCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addAssociation('country');\n            if (this.searchTerm) {\n                criteria.setTerm(this.searchTerm);\n            } else {\n                criteria.setTerm('');\n            }\n\n            criteria.addSorting(Criteria.sort('country.name'));\n\n            return criteria;\n        },\n\n        emptyStateText() {\n            if (this.currency.id && this.currency.isNew()) {\n                return this.$tc('sw-settings-currency.detail.emptyCountryRoundingsNewCurrency');\n            }\n\n            return this.$tc('sw-settings-currency.detail.emptyCountryRoundings');\n        },\n\n        showCustomFields() {\n            return this.customFieldSets && this.customFieldSets.length > 0;\n        },\n    },\n\n    watch: {\n        currencyId() {\n            if (!this.currencyId) {\n                this.createdComponent();\n            }\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.currencyId) {\n                if (!this.feature.isActive('VUE3')) {\n                    this.currencyId = this.$route.params.id;\n                }\n                return Promise.all([\n                    this.loadEntityData(),\n                    this.loadCustomFieldSets(),\n                ]);\n            }\n\n            Shopware.State.commit('context/resetLanguageToDefault');\n            this.isLoading = true;\n            this.currency = this.currencyRepository.create();\n            // defaults for rounding\n            this.currency.itemRounding = {\n                decimals: 2,\n                interval: 0.01,\n                roundForNet: true,\n            };\n            this.currency.totalRounding = {\n                decimals: 2,\n                interval: 0.01,\n                roundForNet: true,\n            };\n\n            this.isLoading = false;\n            return Promise.resolve();\n        },\n\n        loadEntityData() {\n            this.isLoading = true;\n            return this.currencyRepository.get(this.currencyId)\n                .then((currency) => {\n                    this.currency = currency;\n                    return this.loadCurrencyCountryRoundings().then((currencyCountryRoundings) => {\n                        return [currency, currencyCountryRoundings];\n                    });\n                }).finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        loadCurrencyCountryRoundings() {\n            this.currencyCountryLoading = true;\n            return this.currencyCountryRoundingRepository.search(this.currencyCountryRoundingCriteria).then(res => {\n                this.currencyCountryRoundings = res;\n                return res;\n            }).finally(() => {\n                this.currencyCountryLoading = false;\n            });\n        },\n\n        loadCustomFieldSets() {\n            this.customFieldDataProviderService.getCustomFieldSets('currency').then((sets) => {\n                this.customFieldSets = sets;\n            });\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onSave() {\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            return this.currencyRepository.save(this.currency).then(() => {\n                this.isSaveSuccessful = true;\n                if (!this.currencyId) {\n                    this.$router.push({ name: 'sw.settings.currency.detail', params: { id: this.currency.id } });\n                }\n\n                this.currencyRepository.get(this.currency.id).then((updatedCurrency) => {\n                    this.currency = updatedCurrency;\n                    this.isLoading = false;\n                });\n            }).catch(() => {\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-currency.detail.notificationErrorMessage'),\n                });\n                this.isLoading = false;\n            });\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'sw.settings.currency.index' });\n        },\n\n        abortOnLanguageChange() {\n            return this.currencyRepository.hasChanges(this.currency);\n        },\n\n        saveOnLanguageChange() {\n            return this.onSave();\n        },\n\n        onChangeLanguage() {\n            this.loadEntityData();\n        },\n\n        onChangeCountrySearch(value) {\n            this.searchTerm = value;\n            this.loadCurrencyCountryRoundings();\n        },\n\n        onAddCountry() {\n            this.currentCurrencyCountry = this.currencyCountryRoundingRepository.create();\n            this.currentCurrencyCountry.itemRounding = cloneDeep(this.currency.itemRounding);\n            this.currentCurrencyCountry.totalRounding = cloneDeep(this.currency.totalRounding);\n            this.currentCurrencyCountry.currencyId = this.currency.id;\n        },\n\n        onCancelEditCountry() {\n            this.currentCurrencyCountry = null;\n        },\n\n        onClickEdit(item) {\n            this.currentCurrencyCountry = item;\n        },\n\n        onSaveCurrencyCountry() {\n            this.currencyCountryLoading = true;\n            this.currencyCountryRoundingRepository.save(this.currentCurrencyCountry).then(() => {\n                this.createNotificationSuccess({\n                    title: this.$tc('global.default.success'),\n                    message: this.$tc('sw-settings-currency.detail.notificationCountrySuccessMessage'),\n                });\n                this.onCancelEditCountry();\n                this.loadCurrencyCountryRoundings();\n            }).catch(() => {\n                this.createNotificationError({\n                    title: this.$tc('global.default.error'),\n                    message: this.$tc('sw-settings-currency.detail.notificationCountryErrorMessage'),\n                });\n            }).finally(() => {\n                this.currencyCountryLoading = false;\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_settings_currency_detail %}\\n<sw-page class=\\\"sw-settings-currency-detail\\\">\\n\\n    \\n    {% block sw_settings_currency_detail_header %}\\n    <template #smart-bar-header>\\n        <h2>{{ placeholder(currency, 'name', $tc('sw-settings-currency.detail.textHeadline')) }}</h2>\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_currency_detail_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_settings_currency_detail_actions_abort %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"tooltipCancel\\\"\\n            :disabled=\\\"isLoading\\\"\\n            @click=\\\"onCancel\\\"\\n        >\\n            {{ $tc('sw-settings-currency.detail.buttonCancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_settings_currency_detail_actions_save %}\\n        <sw-button-process\\n            {% if VUE3 %}\\n            v-model:processSuccess=\\\"isSaveSuccessful\\\"\\n            {% else %}\\n            v-model=\\\"isSaveSuccessful\\\"\\n            {% endif %}\\n            v-tooltip.bottom=\\\"tooltipSave\\\"\\n            class=\\\"sw-settings-currency-detail__save-action\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :disabled=\\\"isLoading || !acl.can('currencies.editor')\\\"\\n            variant=\\\"primary\\\"\\n            {% if VUE3 %}\\n            @update:process-success=\\\"saveFinish\\\"\\n            {% else %}\\n            @process-finish=\\\"saveFinish\\\"\\n            {% endif %}\\n            @click.prevent=\\\"onSave\\\"\\n        >\\n            {{ $tc('sw-settings-currency.detail.buttonSave') }}\\n        </sw-button-process>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_currency_detail_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch\\n            :disabled=\\\"currencyId == null\\\"\\n            :save-changes-function=\\\"saveOnLanguageChange\\\"\\n            :abort-change-function=\\\"abortOnLanguageChange\\\"\\n            @on-change=\\\"onChangeLanguage\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_currency_detail_content %}\\n    <template #content>\\n        <sw-card-view>\\n\\n            <template v-if=\\\"isLoading\\\">\\n                <sw-skeleton />\\n                <sw-skeleton />\\n            </template>\\n\\n            <template v-else>\\n                \\n                {% block sw_settings_currency_detail_content_language_info %}\\n                <sw-language-info\\n                    :entity-description=\\\"placeholder(currency, 'name', $tc('sw-settings-currency.detail.textHeadline'))\\\"\\n                />\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_currency_detail_content_card %}\\n                <sw-card\\n                    position-identifier=\\\"sw-settings-currency-detail-content\\\"\\n                    :is-loading=\\\"isLoading\\\"\\n                    :title=\\\"$tc('sw-settings-currency.detail.titleCard')\\\"\\n                >\\n                    <sw-container\\n                        columns=\\\"repeat(auto-fit, minmax(250px, 1fr))\\\"\\n                        gap=\\\"0px 30px\\\"\\n                    >\\n\\n                        \\n                        {% block sw_settings_currency_detail_content_field_name %}\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"currency.name\\\"\\n                            {% else %}\\n                            v-model=\\\"currency.name\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--currency-name\\\"\\n                            required\\n                            :disabled=\\\"!acl.can('currencies.editor')\\\"\\n                            :label=\\\"$tc('sw-settings-currency.detail.labelName')\\\"\\n                            :placeholder=\\\"placeholder(currency, 'name', $tc('sw-settings-currency.detail.placeholderName'))\\\"\\n                            :error=\\\"currencyNameError\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_currency_detail_content_field_iso_code %}\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"currency.isoCode\\\"\\n                            {% else %}\\n                            v-model=\\\"currency.isoCode\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--currency-isoCode\\\"\\n                            required\\n                            :disabled=\\\"!acl.can('currencies.editor')\\\"\\n                            :label=\\\"$tc('sw-settings-currency.detail.labelIsoCode')\\\"\\n                            :placeholder=\\\"placeholder(currency, 'isoCode', $tc('sw-settings-currency.detail.placeholderIsoCode'))\\\"\\n                            :error=\\\"currencyIsoCodeError\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_currency_detail_content_field_short_name %}\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"currency.shortName\\\"\\n                            {% else %}\\n                            v-model=\\\"currency.shortName\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--currency-shortName\\\"\\n                            required\\n                            :disabled=\\\"!acl.can('currencies.editor')\\\"\\n                            :label=\\\"$tc('sw-settings-currency.detail.labelShortName')\\\"\\n                            :placeholder=\\\"placeholder(currency, 'shortName', $tc('sw-settings-currency.detail.placeholderShortName'))\\\"\\n                            :error=\\\"currencyShortNameError\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_currency_detail_content_field_symbol %}\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"currency.symbol\\\"\\n                            {% else %}\\n                            v-model=\\\"currency.symbol\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--currency-symbol\\\"\\n                            required\\n                            :disabled=\\\"!acl.can('currencies.editor')\\\"\\n                            :label=\\\"$tc('sw-settings-currency.detail.labelSymbol')\\\"\\n                            :placeholder=\\\"$tc('sw-settings-currency.detail.placeholderSymbol')\\\"\\n                            :error=\\\"currencySymbolError\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_currency_detail_content_field_factor %}\\n                        <sw-number-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"currency.factor\\\"\\n                            {% else %}\\n                            v-model=\\\"currency.factor\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--currency-factor\\\"\\n                            required\\n                            :digits=\\\"14\\\"\\n                            :label=\\\"$tc('sw-settings-currency.detail.labelFactor')\\\"\\n                            :placeholder=\\\"$tc('sw-settings-currency.detail.placeholderFactor')\\\"\\n                            :error=\\\"currencyFactorError\\\"\\n                            :disabled=\\\"currency.isSystemDefault || !acl.can('currencies.editor')\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_currency_detail_content_field_tax_free_from %}\\n                        <sw-number-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"currency.taxFreeFrom\\\"\\n                            {% else %}\\n                            v-model=\\\"currency.taxFreeFrom\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--currency-taxFreeFrom\\\"\\n                            :min=\\\"0\\\"\\n                            :label=\\\"$tc('sw-settings-currency.detail.taxFreeFrom')\\\"\\n                            :help-text=\\\"$tc('sw-settings-currency.detail.taxFreeFromHelpText', 0 , { currencyName: `${currency.name}` })\\\"\\n                            :disabled=\\\"!currency.factor\\\"\\n                        >\\n                            <template #suffix>\\n                                {{ currency.symbol }}\\n                            </template>\\n                        </sw-number-field>\\n                        {% endblock %}\\n\\n                    </sw-container>\\n                </sw-card>\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_currency_detail_content_card_price_rounding %}\\n                <sw-card\\n                    position-identifier=\\\"sw-settings-currency-detail-price-rounding\\\"\\n                    :is-loading=\\\"isLoading\\\"\\n                    :title=\\\"$tc('sw-settings-currency.detail.titleRoundingCard')\\\"\\n                >\\n                    <sw-settings-price-rounding\\n                        :item-rounding=\\\"currency.itemRounding\\\"\\n                        :total-rounding=\\\"currency.totalRounding\\\"\\n                    />\\n                </sw-card>\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_currency_detail_content_card_country_price_rounding %}\\n                <sw-card\\n                    position-identifier=\\\"sw-settings-currency-detail-country-price-rounding\\\"\\n                    :title=\\\"$tc('sw-settings-currency.detail.titleCountryRoundingCard')\\\"\\n                    :is-loading=\\\"currencyCountryLoading\\\"\\n                >\\n                    <template\\n                        v-if=\\\"currency.id && !currency.isNew()\\\"\\n                        #toolbar\\n                    >\\n                        \\n                        {% block sw_settings_currency_detail_content_card_country_price_rounding_toolbar %}\\n                        <div class=\\\"sw-settings-currency-detail__currency-country-toolbar\\\">\\n                            \\n                            {% block sw_settings_currency_detail_content_card_country_price_rounding_toolbar_filter %}\\n                            <sw-card-filter\\n                                :placeholder=\\\"$tc('sw-settings-currency.detail.searchbarPlaceholder')\\\"\\n                                @sw-card-filter-term-change=\\\"onChangeCountrySearch\\\"\\n                            />\\n                            {% endblock %}\\n                            \\n                            {% block sw_settings_currency_detail_content_card_country_price_rounding_toolbar_button %}\\n                            <sw-button\\n                                variant=\\\"ghost\\\"\\n                                class=\\\"sw-settings-currency-detail__currency-country-toolbar-button\\\"\\n                                size=\\\"small\\\"\\n                                @click=\\\"onAddCountry\\\"\\n                            >\\n                                {{ $tc('sw-settings-currency.detail.buttonAddCountry') }}\\n                            </sw-button>\\n                            {% endblock %}\\n                        </div>\\n                        {% endblock %}\\n                    </template>\\n                    \\n                    {% block sw_settings_currency_detail_content_card_country_price_rounding_listing %}\\n                    <sw-entity-listing\\n                        v-if=\\\"currencyCountryRoundings && currencyCountryRoundings.length > 0\\\"\\n                        class=\\\"sw-settings-currency-detail__currency-country-list\\\"\\n                        :full-page=\\\"false\\\"\\n                        :show-selection=\\\"false\\\"\\n                        :items=\\\"currencyCountryRoundings\\\"\\n                        :columns=\\\"currencyCountryColumns\\\"\\n                        identifier=\\\"sw-settings-currency-detail-currency-country-list\\\"\\n                        :repository=\\\"currencyCountryRoundingRepository\\\"\\n                        @item-deleted=\\\"loadCurrencyCountryRoundings\\\"\\n                        @items-delete-finish=\\\"loadCurrencyCountryRoundings\\\"\\n                    >\\n                        \\n                        {% block sw_settings_currency_detail_content_card_country_price_rounding_listing_country_column %}\\n                        <template #column-country=\\\"{ item }\\\">\\n                            <a\\n                                href=\\\"#\\\"\\n                                @click=\\\"onClickEdit(item)\\\"\\n                            >\\n                                {{ item.country.name }}\\n                            </a>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_currency_detail_content_card_country_price_rounding_listing_item_interval_column %}\\n                        <template #column-itemRounding.interval=\\\"{ item }\\\">\\n                            <template v-if=\\\"item.itemRounding.interval === 0.01\\\">\\n                                {{ $tc('sw-settings-currency.price-rounding.labelIntervalNone') }}\\n                            </template>\\n                            <template v-if=\\\"item.itemRounding.interval !== 0.01\\\">\\n                                {{ item.itemRounding.interval }}\\n                            </template>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_currency_detail_content_card_country_price_rounding_listing_total_interval_column %}\\n                        <template #column-totalRounding.interval=\\\"{ item }\\\">\\n                            <template v-if=\\\"item.totalRounding.interval === 0.01\\\">\\n                                {{ $tc('sw-settings-currency.price-rounding.labelIntervalNone') }}\\n                            </template>\\n                            <template v-if=\\\"item.totalRounding.interval !== 0.01\\\">\\n                                {{ item.totalRounding.interval }}\\n                            </template>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_currency_detail_content_card_country_price_rounding_listing_item_net_column %}\\n                        <template #column-itemRounding.roundForNet=\\\"{ item }\\\">\\n                            <sw-data-grid-column-boolean v-model=\\\"item.itemRounding.roundForNet\\\" />\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_currency_detail_content_card_country_price_rounding_listing_total_net_column %}\\n                        <template #column-totalRounding.roundForNet=\\\"{ item }\\\">\\n                            <sw-data-grid-column-boolean v-model=\\\"item.totalRounding.roundForNet\\\" />\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_currency_detail_content_card_country_price_rounding_listing_more_actions %}\\n                        <template #more-actions=\\\"{ item }\\\">\\n                            <sw-context-menu-item @click=\\\"onClickEdit(item)\\\">\\n                                {{ $tc('global.default.edit') }}\\n                            </sw-context-menu-item>\\n                        </template>\\n                        {% endblock %}\\n\\n                    </sw-entity-listing>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_settings_currency_detail_content_card_country_price_rounding_empty %}\\n                    <sw-empty-state\\n                        v-else\\n                        class=\\\"sw-settings-currency-detail__currency-country-empty-state\\\"\\n                        title=\\\"\\\"\\n                        :absolute=\\\"false\\\"\\n                        :subline=\\\"emptyStateText\\\"\\n                    />\\n                    {% endblock %}\\n                </sw-card>\\n                \\n                {% block sw_settings_currency_detail_content_card_country_price_rounding_modal %}\\n                <sw-settings-currency-country-modal\\n                    v-if=\\\"currentCurrencyCountry\\\"\\n                    :currency-country-rounding=\\\"currentCurrencyCountry\\\"\\n                    @save=\\\"onSaveCurrencyCountry\\\"\\n                    @edit-cancel=\\\"onCancelEditCountry\\\"\\n                />\\n                {% endblock %}\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_currency_detail_custom_field_sets %}\\n                <sw-card\\n                    v-if=\\\"showCustomFields\\\"\\n                    position-identifier=\\\"sw-settings-currency-detail-custom-field-sets\\\"\\n                    :title=\\\"$tc('sw-settings-custom-field.general.mainMenuItemGeneral')\\\"\\n                    :is-loading=\\\"isLoading\\\"\\n                >\\n                    <sw-custom-field-set-renderer\\n                        :entity=\\\"currency\\\"\\n                        :disabled=\\\"!acl.can('currencies.editor')\\\"\\n                        :sets=\\\"customFieldSets\\\"\\n                    />\\n                </sw-card>\\n                {% endblock %}\\n            </template>\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}