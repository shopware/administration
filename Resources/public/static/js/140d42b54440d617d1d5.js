(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[2267],{689895:function(){},602267:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return i}}),t(343435);let{Context:a,Filter:d}=Shopware;var i={template:'\n{% block sw_media_index %}\n<sw-page class="sw-media-index">\n\n    \n    {% block sw_media_list_search_bar %}\n    <template #search-bar>\n        <sw-search-bar\n            initial-search-type="media"\n            :initial-search="term"\n            @search="onSearch"\n        />\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_media_index_smart_bar %}\n    \n    {% block sw_media_index_bread_crumb_navigation %}\n    <template #smart-bar-back>\n        <div class="sw-media-index__navigation">\n\n            <template v-if="parentFolder">\n                \n                {% block sw_media_index_bread_crumb_navigation_icon %}\n                <router-link :to="{ name: \'sw.media.index\', params: { folderId: null } }">\n                    <img\n                        :src="assetFilter(\'/administration/static/img/media/folder--back--breadcrumb.svg\')"\n                        class="sw-media-index__navigation-breadcrumb"\n                        alt="Folder back breadcrumb"\n                    >\n                </router-link>\n                {% endblock %}\n\n                \n                {% block sw_media_index_bread_crumb_navigation_parent%}\n                <router-link\n                    class="sw-media-index__navigation-label"\n                    :to="{ name: \'sw.media.index\', params: { folderId: parentFolder.id } }"\n                >\n                    {{ parentFolder.name }}\n                </router-link>\n                {% endblock %}\n            </template>\n        </div>\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_media_index_smart_bar_header %}\n    <template\n        v-if="currentFolder"\n        #smart-bar-header\n    >\n        <h2>\n            \n            {% block sw_media_index_smart_bar_heading %}\n            {{ currentFolder.name }}\n            {% endblock %}\n        </h2>\n    </template>\n    {% endblock %}\n\n    <template #smart-bar-actions>\n        \n        {% block sw_media_index_smart_bar_media_upload %}\n        <sw-media-upload-v2\n            v-tooltip="{\n                message: $tc(\'sw-privileges.tooltip.warning\'),\n                disabled: acl.can(\'media.creator\'),\n                showOnDisabledElements: true\n            }"\n            :disabled="!acl.can(\'media.creator\') || undefined"\n            variant="compact"\n            :file-accept="fileAccept"\n            :target-folder-id="routeFolderId"\n            :upload-tag="uploadTag"\n        />\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_media_index_language_switch %}\n    <template #language-switch>\n        <sw-language-switch @on-change="reloadList" />\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_media_index_page_content %}\n    <template #content>\n        <div class="sw-media-index__page-content">\n            \n            {% block sw_media_index_listing_grid %}\n            <sw-upload-listener\n                :upload-tag="uploadTag"\n                @media-upload-add="onUploadsAdded"\n                @media-upload-finish="onUploadFinished"\n                @media-upload-fail="onUploadFailed"\n                @media-upload-cancel="reloadList"\n            />\n\n            <sw-media-library\n                ref="mediaLibrary"\n                v-model:selection="selectedItems"\n                class="sw-media-index__media-library"\n                :folder-id="routeFolderId"\n                :pending-uploads="uploads"\n                :term="term"\n                editable\n                @media-folder-change="updateRoute"\n            />\n            {% endblock %}\n\n            \n            {% block sw_media_index_sidebar %}\n            <sw-media-sidebar\n                :items="selectedItems"\n                :current-folder-id="routeFolderId"\n                editable\n                @media-sidebar-folder-renamed="updateFolder"\n                @media-sidebar-items-delete="onItemsDeleted"\n                @media-sidebar-folder-items-dissolve="onMediaFoldersDissolved"\n                @media-sidebar-items-move="reloadList"\n                @media-item-replaced="reloadList"\n                @media-item-selection-remove="onMediaUnselect"\n            />\n            {% endblock %}\n\n            \n            {% block sw_media_index_list_grid_loader %}\n            <sw-loader v-if="isLoading" />\n            {% endblock %}\n        </div>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory","mediaService","acl","feature"],props:{routeFolderId:{type:String,default:null},fileAccept:{type:String,required:!1,default:"*/*"}},data(){return{isLoading:!1,selectedItems:[],uploads:[],term:this.$route.query?.term??"",uploadTag:"upload-tag-sw-media-index",parentFolder:null,currentFolder:null}},metaInfo(){return{title:this.$createTitle()}},computed:{mediaFolderRepository(){return this.repositoryFactory.create("media_folder")},mediaRepository(){return this.repositoryFactory.create("media")},rootFolder(){let e=this.mediaFolderRepository.create(a.api);return e.name=this.$tc("sw-media.index.rootFolderName"),e.id=null,e},assetFilter(){return d.getByName("asset")}},watch:{routeFolderId(){this.term="",this.updateFolder()}},created(){this.createdComponent()},unmounted(){this.destroyedComponent()},methods:{createdComponent(){if(""===this.routeFolderId){this.updateRoute(null);return}this.updateFolder()},async updateFolder(){this.routeFolderId?(this.currentFolder=await this.mediaFolderRepository.get(this.routeFolderId,a.api),this.currentFolder&&this.currentFolder.parentId?this.parentFolder=await this.mediaFolderRepository.get(this.currentFolder.parentId,a.api):this.parentFolder=this.rootFolder):(this.currentFolder=this.rootFolder,this.parentFolder=null)},destroyedComponent(){},async onUploadsAdded(){await this.mediaService.runUploads(this.uploadTag),this.reloadList()},onUploadFinished({targetId:e}){this.uploads=this.uploads.filter(n=>n.id!==e)},onUploadFailed({targetId:e}){this.uploads=this.uploads.filter(n=>e!==n.id)},onChangeLanguage(){this.clearSelection()},onSearch(e){this.term=e,this.clearSelection()},onItemsDeleted(e){this.onMediaFoldersDissolved(e.folderIds)},onMediaFoldersDissolved(e){if(this.clearSelection(),e.includes(this.routeFolderId)){let e=null;this.parentFolder&&(e=this.parentFolder.id),this.$router.push({name:"sw.media.index",params:{folderId:e}});return}this.reloadList()},reloadList(){this.$refs.mediaLibrary.refreshList()},clearSelection(){this.selectedItems.splice(0,this.selectedItems.length)},onMediaUnselect({item:e}){let n=this.selectedItems.findIndex(n=>n===e);n>-1&&this.selectedItems.splice(n,1)},updateRoute(e){this.term=this.$route.query?.term??"",this.$router.push({name:"sw.media.index",params:{folderId:e}})}}}},343435:function(e,n,t){var a=t(689895);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),t(745346).Z("6876b9e2",a,!0,{})}}]);