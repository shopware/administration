{"version":3,"sources":["webpack:///./src/module/sw-flow/component/modals/sw-flow-generate-document-modal/index.js","webpack:///./src/module/sw-flow/component/modals/sw-flow-generate-document-modal/sw-flow-generate-document-modal.html.twig"],"names":["Component","Shopware","Criteria","Data","mapState","getComponentHelper","ShopwareError","Classes","template","inject","props","sequence","type","Object","required","data","documentTypesSelected","fieldError","computed","_objectSpread","documentTypeRepository","this","repositoryFactory","create","documentTypeCriteria","criteria","addSorting","sort","watch","value","length","created","createdComponent","methods","_this$sequence","_this$sequence$config","_this$sequence2","_this$sequence2$confi","config","documentType","documentTypes","map","search","then","State","commit","onClose","$emit","onAddAction","documentRangerType","concat","code"],"mappings":"wtBAEA,IAAQA,EAAcC,SAAdD,UACAE,EAAaD,SAASE,KAAtBD,SACAE,EAAaJ,EAAUK,qBAAvBD,SACAE,EAAkBL,SAASM,QAA3BD,cAMO,WACXE,SCZW,yxDDcXC,OAAQ,CACJ,qBAGJC,MAAO,CACHC,SAAU,CACNC,KAAMC,OACNC,UAAU,IAIlBC,KAAI,WACA,MAAO,CACHC,sBAAuB,GACvBC,WAAY,OAIpBC,SAAQC,EAAA,CACJC,uBAAsB,WAClB,OAAOC,KAAKC,kBAAkBC,OAAO,kBAGzCC,qBAAoB,WAChB,IAAMC,EAAW,IAAIvB,EAAS,EAAG,KAGjC,OAFAuB,EAASC,WAAWxB,EAASyB,KAAK,OAAQ,QAEnCF,IAGRrB,EAAS,cAAe,CAAC,mBAGhCwB,MAAO,CACHZ,sBAAqB,SAACa,GACdA,EAAMC,OAAS,GAAKT,KAAKJ,aACzBI,KAAKJ,WAAa,QAK9Bc,QAAO,WACHV,KAAKW,oBAGTC,QAAS,CACLD,iBAAgB,WAAI,IAADE,EAAAC,EAGRC,EAAAC,EAFU,QAAjBH,EAAIb,KAAKV,gBAAQ,IAAAuB,GAAQ,QAARC,EAAbD,EAAeI,cAAM,IAAAH,GAArBA,EAAuBI,aACvBlB,KAAKL,sBAAwB,CAACK,KAAKV,SAAS2B,QAE5CjB,KAAKL,uBAAqC,QAAboB,EAAAf,KAAKV,gBAAQ,IAAAyB,GAAQ,QAARC,EAAbD,EAAeE,cAAM,IAAAD,OAAR,EAAbA,EAAuBG,gBAAiB,GAGzEnB,KAAKL,sBAAwBK,KAAKL,sBAAsByB,KAAI,SAAC7B,GACzD,OAAOA,EAAK2B,gBAGXlB,KAAKmB,cAAcV,QACpBT,KAAKD,uBAAuBsB,OAAOrB,KAAKG,sBAAsBmB,MAAK,SAAC5B,GAChEd,SAAS2C,MAAMC,OAAO,+BAAgC9B,OAKlE+B,QAAO,WACHzB,KAAK0B,MAAM,gBAGfC,YAAW,WACP,GAAK3B,KAAKL,sBAAsBc,OAAhC,CAQA,IAAInB,EAAQQ,EAAA,GACLE,KAAKV,UAGN6B,EAAgBnB,KAAKL,sBAAsByB,KAAI,SAACF,GAClD,MAAO,CACHA,aAAcA,EACdU,mBAAmB,YAADC,OAAcX,OAIxC5B,EAAQQ,IAAA,GACDR,GAAQ,IACX2B,OAAQ,CACJE,mBAIRnB,KAAK0B,MAAM,iBAAkBpC,QAzBzBU,KAAKJ,WAAa,IAAIX,EAAc,CAChC6C,KAAM","file":"static/js/605ba474736c640e5f1e.js","sourcesContent":["import template from './sw-flow-generate-document-modal.html.twig';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { mapState } = Component.getComponentHelper();\nconst { ShopwareError } = Shopware.Classes;\n\n/**\n * @private\n * @package services-settings\n */\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    props: {\n        sequence: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            documentTypesSelected: [],\n            fieldError: null,\n        };\n    },\n\n    computed: {\n        documentTypeRepository() {\n            return this.repositoryFactory.create('document_type');\n        },\n\n        documentTypeCriteria() {\n            const criteria = new Criteria(1, 100);\n            criteria.addSorting(Criteria.sort('name', 'ASC'));\n\n            return criteria;\n        },\n\n        ...mapState('swFlowState', ['documentTypes']),\n    },\n\n    watch: {\n        documentTypesSelected(value) {\n            if (value.length > 0 && this.fieldError) {\n                this.fieldError = null;\n            }\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.sequence?.config?.documentType) {\n                this.documentTypesSelected = [this.sequence.config];\n            } else {\n                this.documentTypesSelected = this.sequence?.config?.documentTypes || [];\n            }\n\n            this.documentTypesSelected = this.documentTypesSelected.map((type) => {\n                return type.documentType;\n            });\n\n            if (!this.documentTypes.length) {\n                this.documentTypeRepository.search(this.documentTypeCriteria).then((data) => {\n                    Shopware.State.commit('swFlowState/setDocumentTypes', data);\n                });\n            }\n        },\n\n        onClose() {\n            this.$emit('modal-close');\n        },\n\n        onAddAction() {\n            if (!this.documentTypesSelected.length) {\n                this.fieldError = new ShopwareError({\n                    code: 'c1051bb4-d103-4f74-8988-acbcafc7fdc3',\n                });\n\n                return;\n            }\n\n            let sequence = {\n                ...this.sequence,\n            };\n\n            const documentTypes = this.documentTypesSelected.map((documentType) => {\n                return {\n                    documentType: documentType,\n                    documentRangerType: `document_${documentType}`,\n                };\n            });\n\n            sequence = {\n                ...sequence,\n                config: {\n                    documentTypes,\n                },\n            };\n\n            this.$emit('process-finish', sequence);\n        },\n    },\n};\n","export default \"\\n{% block sw_flow_generate_document_modal %}\\n<sw-modal\\n    class=\\\"sw-flow-generate-document-modal\\\"\\n    :title=\\\"$tc('sw-flow.modals.document.titleCreateDocument')\\\"\\n    :closable=\\\"false\\\"\\n    @modal-close=\\\"onClose\\\"\\n>\\n    \\n    {% block sw_flow_generate_document_modal_document_type_multiple %}\\n    <sw-multi-select\\n        {% if VUE3 %}\\n        v-model:value=\\\"documentTypesSelected\\\"\\n        {% else %}\\n        v-model=\\\"documentTypesSelected\\\"\\n        {% endif %}\\n        required\\n        class=\\\"sw-flow-generate-document-modal__type-multi-select\\\"\\n        label-property=\\\"translated.name\\\"\\n        value-property=\\\"technicalName\\\"\\n        :options=\\\"documentTypes\\\"\\n        :label=\\\"$tc('sw-flow.modals.document.labelDocumentType')\\\"\\n        :placeholder=\\\"$tc('sw-flow.modals.document.placeholderDocumentType')\\\"\\n        :error=\\\"fieldError\\\"\\n    />\\n    {% endblock %}\\n\\n    \\n    {% block sw_flow_generate_document_modal_footer %}\\n    <template #modal-footer>\\n        \\n        {% block sw_flow_generate_document_modal_footer_cancel_button %}\\n        <sw-button\\n            class=\\\"sw-flow-generate-document-modal__cancel-button\\\"\\n            size=\\\"small\\\"\\n            @click=\\\"onClose\\\"\\n        >\\n            {{ $tc('global.default.cancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_flow_generate_document_modal_footer_save_button %}\\n        <sw-button\\n            class=\\\"sw-flow-generate-document-modal__save-button\\\"\\n            variant=\\\"primary\\\"\\n            size=\\\"small\\\"\\n            @click=\\\"onAddAction\\\"\\n        >\\n            {{ sequence.id ? $tc('sw-flow.modals.buttonSaveAction') : $tc('sw-flow.modals.buttonAddAction') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n</sw-modal>\\n{% endblock %}\\n\";"],"sourceRoot":""}