(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[95296],{591334:function(){},495296:function(e,t,i){"use strict";i.r(t),i.d(t,{default:function(){return l}}),i(530206);let{Mixin:o}=Shopware,{Criteria:r}=Shopware.Data;var l={template:'\n{% block sw_import_export_view_profile %}\n<div class="sw-import-export-view-profiles">\n    \n    {% block sw_import_export_view_profile_profiles %}\n    <sw-card\n        :title="$tc(\'sw-import-export.page.profileTab\')"\n        class="sw-import-export-view-profiles__grid-card"\n        position-identifier="sw-import-export-view-profiles"\n    >\n\n        \n        {% block sw_import_export_view_profile_profiles_toolbar %}\n        <div class="sw-import-export-view-profiles__toolbar">\n            \n            {% block sw_import_export_view_profile_profiles_toolbar_search_field %}\n            <sw-simple-search-field\n                v-model:value="searchTerm"\n                class="sw-import-export-view-profiles__search"\n                size="small"\n                variant="form"\n                @search-term-change="onSearch"\n            />\n            {% endblock %}\n\n            \n            {% block sw_import_export_view_profile_profiles_toolbar_add_new_profile %}\n            <sw-button\n                v-tooltip="createTooltip"\n                class="sw-import-export-view-profiles__create-action"\n                variant="ghost"\n                :disabled="isLoading || isNotSystemLanguage"\n                size="small"\n                @click="onAddNewProfile"\n            >\n                {{ $tc(\'sw-import-export.profile.addNewProfileLabel\') }}\n            </sw-button>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        \n        {% block sw_import_export_view_profile_profiles_listing %}\n        <template #grid>\n            <sw-entity-listing\n                ref="listing"\n                class="sw-import-export-view-profiles__listing"\n                :repository="profileRepository"\n                :items="profiles"\n                :is-loading="isLoading"\n                :columns="profilesColumns"\n                :sort-by="sortBy"\n                :sort-direction="sortDirection"\n                :show-settings="false"\n                :show-selection="false"\n                :allow-column-edit="false"\n            >\n\n                \n                {% block sw_import_export_view_profile_profiles_listing_column_label %}\n                <template #column-label="{ item }">\n                    <a\n                        href="#"\n                        @click.prevent="onEditProfile(item.id)"\n                    >\n                        {{ item.translated.label || item.label }}\n                    </a>\n                </template>\n                {% endblock %}\n\n                \n                {% block sw_import_export_view_profile_profiles_listing_column_system_default %}\n                <template #column-systemDefault="{ item }">\n                    {{ getTypeLabel(item.systemDefault) }}\n                </template>\n                {% endblock %}\n\n                <template #actions="{ item }">\n                    \n                    {% block sw_import_export_view_profile_profiles_listing_edit %}\n                    <sw-context-menu-item\n                        class="sw-import-export-view-profiles__listing-open-action"\n                        @click="onEditProfile(item.id)"\n                    >\n                        {{ $tc(\'sw-import-export.profile.openLabel\') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    \n                    {% block sw_import_export_view_profile_profiles_listing_duplicate %}\n                    <sw-context-menu-item\n                        class="sw-import-export-view-profiles__listing-duplicate-action"\n                        @click="onDuplicateProfile(item)"\n                    >\n                        {{ $tc(\'sw-import-export.profile.duplicateLabel\') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    \n                    {% block sw_import_export_view_profile_profiles_listing_download_template %}\n                    <sw-context-menu-item\n                        class="sw-import-export-view-profiles__listing-download-template-action"\n                        @click="onDownloadTemplate(item)"\n                    >\n                        {{ $tc(\'sw-import-export.profile.downloadTemplateLabel\') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    \n                    {% block sw_import_export_view_profile_profiles_listing_delete %}\n                    <sw-context-menu-item\n                        class="sw-import-export-view-profiles__listing-delete-action"\n                        variant="danger"\n                        :disabled="item.systemDefault"\n                        @click="onDeleteProfile(item.id)"\n                    >\n                        {{ $tc(\'sw-import-export.profile.deleteLabel\') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n                </template>\n\n            </sw-entity-listing>\n        </template>\n        {% endblock %}\n    </sw-card>\n    {% endblock %}\n\n    \n    {% block sw_import_export_view_profile_modal %}\n    <sw-import-export-edit-profile-modal\n        :show="showProfileEditModal"\n        :profile="selectedProfile"\n        @profile-save="saveSelectedProfile"\n        @profile-close="closeSelectedProfile"\n    />\n    {% endblock %}\n\n    \n    {% block sw_import_export_view_new_profile_wizard %}\n    <sw-import-export-new-profile-wizard\n        v-if="showNewProfileWizard"\n        :profile="selectedProfile"\n        @profile-save="saveSelectedProfile"\n        @close="onCloseNewProfileWizard"\n    />\n    {% endblock %}\n</div>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory","importExport","feature"],mixins:[o.getByName("notification")],data(){return{isLoading:!1,selectedProfile:null,profiles:null,searchTerm:null,sortBy:"label",sortDirection:"ASC",showProfileEditModal:!1,showNewProfileWizard:!1}},metaInfo(){return{title:this.$createTitle()}},computed:{profileRepository(){return this.repositoryFactory.create("import_export_profile")},profileCriteria(){let e=new r(1,25);return e.setTerm(this.searchTerm),e.addAssociation("importExportLogs"),e.addSorting(r.sort(this.sortBy,this.sortDirection)),e},profilesColumns(){return[{property:"label",dataIndex:"label",label:"sw-import-export.profile.nameColumn",allowResize:!0,primary:!0},{property:"technicalName",dataIndex:"technicalName",label:"sw-import-export.profile.technicalNameColumn",allowResize:!0},{property:"systemDefault",dataIndex:"systemDefault",label:"sw-import-export.profile.typeColumn",allowResize:!0}]},isNotSystemLanguage(){return Shopware.Context.api.systemLanguageId!==Shopware.Context.api.languageId},createTooltip(){return{showDelay:300,message:this.$tc("sw-import-export.profile.addNewProfileTooltipLanguage"),disabled:!this.isNotSystemLanguage}}},created(){this.createdComponent()},methods:{createdComponent(){this.loadProfiles()},async loadProfiles(){this.isLoading=!0,this.profiles=await this.profileRepository.search(this.profileCriteria),this.isLoading=!1},reloadContent(){this.loadProfiles()},onSearch(){this.loadProfiles()},onAddNewProfile(){let e=this.profileRepository.create();e.fileType="text/csv",e.mapping=[],e.config={},e.config.createEntities=!0,e.config.updateEntities=!0,e.type="import-export",e.translated={},e.delimiter=";",e.enclosure='"',this.selectedProfile=null,this.selectedProfile=e,this.showNewProfileWizard=!0},async onEditProfile(e){let t=await this.profileRepository.get(e);Array.isArray(t.config)&&t.config.length<=0&&(this.isCompatEnabled("INSTANCE_SET")?this.$set(t,"config",{}):this.profile.config={}),t.config?.createEntities===void 0&&(t.config.createEntities=!0),t.config?.updateEntities===void 0&&(t.config.updateEntities=!0),this.selectedProfile=t,this.showProfileEditModal=!0},onDuplicateProfile(e){let t={cloneChildren:!1,overwrites:{label:`${this.$tc("sw-import-export.profile.copyOfLabel")} ${e.label||e.translated.label}`,technicalName:`${e.technicalName}-copy-${Date.now()}`,systemDefault:!1}};return this.profileRepository.clone(e.id,t,Shopware.Context.api).then(e=>{let t=new r(1,25);return t.setIds([e.id]),this.profileRepository.search(t)}).then(e=>{let t=e[0];return t.config?.createEntities===void 0&&(t.config.createEntities=!0),t.config?.updateEntities===void 0&&(t.config.updateEntities=!0),this.selectedProfile=t,this.showProfileEditModal=!0,this.loadProfiles()}).catch(()=>{this.createNotificationError({message:this.$tc("global.notification.unspecifiedSaveErrorMessage")})})},async onDownloadTemplate(e){return window.open(await this.importExport.getTemplateFileDownloadUrl(e.id),"_blank")},onDeleteProfile(e){this.$refs.listing.showDelete(e)},closeSelectedProfile(){this.showProfileEditModal=!1,this.selectedProfile=null},saveSelectedProfile(){return this.isLoading=!0,this.profileRepository.save(this.selectedProfile,Shopware.Context.api).then(()=>(this.showProfileEditModal=!1,this.selectedProfile=null,this.onCloseNewProfileWizard(),this.createNotificationSuccess({message:this.$tc("sw-import-export.profile.messageSaveSuccess",0)}),this.loadProfiles())).catch(e=>{this.onError(e)}).finally(()=>{this.isLoading=!1})},onError(e){let t=e?.response?.data?.errors?.[0]?.code??null,i="";null!==t&&this.$te(`sw-import-export.errors.${t}`)&&(i=this.$tc(`sw-import-export.errors.${t}`)),this.createNotificationError({message:`${this.$tc("sw-import-export.profile.messageSaveError",0)} ${i}`})},getTypeLabel(e){return e?this.$tc("sw-import-export.profile.defaultTypeLabel"):this.$tc("sw-import-export.profile.customTypeLabel")},onCloseNewProfileWizard(){this.showNewProfileWizard=!1,this.selectedProfile=null}}}},530206:function(e,t,i){var o=i(591334);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),i(745346).Z("f8d4b00e",o,!0,{})}}]);