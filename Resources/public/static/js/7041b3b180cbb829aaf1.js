(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[67053],{80405:function(){},67053:function(e,s,t){"use strict";t.r(s),t.d(s,{default:function(){return a}}),t(63863);let{Mixin:n,Context:i}=Shopware,{Criteria:r}=Shopware.Data;var a={template:'\n{% block sw_settings_search_search_index %}\n<sw-card\n    position-identifier="sw-settings-search-search-index"\n    :title="$tc(\'sw-settings-search.generalTab.labelSearchIndex\')"\n    :is-loading="isLoading"\n>\n\n    \n    {% block sw_settings_search_search_index_description %}\n    <sw-alert\n        v-if="isRebuildInProgress"\n        class="sw-settings-search__search-index-warning-text"\n        variant="warning"\n    >\n\n        \n        {% block sw_settings_search_search_index_warning_top %}\n        <p class="sw-settings-search__search-index-warning-top">\n            {{ $tc(\'sw-settings-search.generalTab.textWarningOpenTab\') }}\n        </p>\n        {% endblock %}\n\n        \n        {% block sw_settings_search_search_index_warning_bottom %}\n        <p>{{ $tc(\'sw-settings-search.generalTab.textRebuildSearchIndexDescription\') }}</p>\n        {% endblock %}\n\n    </sw-alert>\n    {% endblock %}\n\n    \n    {% block sw_settings_search_search_index_rebuild_button %}\n    <sw-button-process\n        variant="ghost"\n        class="sw-settings-search__search-index-rebuild-button"\n        :is-loading="isRebuildInProgress"\n        :disabled="isRebuildInProgress || !acl.can(\'product_search_config.editor\')"\n        :process-success="isRebuildSuccess"\n        @update:process-success="buildFinish"\n        @click="rebuildSearchIndex"\n    >\n        {{ $tc(\'sw-settings-search.generalTab.buttonRebuildSearchIndex\') }}\n    </sw-button-process>\n\n    \n    {% block sw_settings_search_search_index_lastest_build %}\n    <span class="sw-settings-search__search-index-latest-build">\n        <template v-if="latestIndex">\n            {{ $tc(\'sw-settings-search.generalTab.textLastedBuild\') }} <sw-time-ago :date="latestIndex.firstDate" /> &dash; <sw-time-ago :date="latestIndex.lastDate" />\n        </template>\n        <template v-else>\n            {{ $tc(\'sw-settings-search.generalTab.textSearchNotIndexedYet\') }}\n        </template>\n    </span>\n    {% endblock %}\n    {% endblock %}\n\n    \n    {% block sw_settings_search_search_index_rebuild_progress %}\n    <div\n        v-if="progressBarValue"\n        class="sw-settings-search__search-index-rebuilding-progress"\n    >\n\n        \n        {% block sw_settings_search_search_index_rebuild_progress_text %}\n        <span class="sw-settings-search__search-index-rebuilding-text">\n            {{ $tc(\'sw-settings-search.generalTab.textRebuildingSearchIndex\') }}\n        </span>\n        {% endblock %}\n\n        \n        {% block sw_settings_search_search_index_rebuild_progress_bar %}\n        <sw-progress-bar\n            :value="progressBarValue"\n            :max-value="100"\n        >\n            {{ $tc(\'sw-settings-search.generalTab.textRebuildingSearchIndex\') }}\n        </sw-progress-bar>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n</sw-card>\n{% endblock %}\n',inject:["productIndexService","repositoryFactory","acl"],mixins:[n.getByName("notification")],data(){return{isLoading:!0,isRebuildSuccess:!1,isRebuildInProgress:!1,progressBarValue:0,offset:0,syncPolling:null,totalProduct:0,latestIndex:null}},computed:{productRepository(){return this.repositoryFactory.create("product")},productSearchKeywordRepository(){return this.repositoryFactory.create("product_search_keyword")},productCriteria(){let e=new r(1,1);return e.addFilter(r.equals("product.parentId",null)),e},productSearchKeywordsCriteria(){let e=new r(1,1);return e.addAggregation(r.min("firstDate","createdAt")),e.addAggregation(r.max("lastDate","createdAt")),e}},created(){this.createdComponent()},beforeDestroy(){this.beforeDestroyComponent()},methods:{createdComponent(){this.isLoading=!1,this.getTotalProduct(),this.getLatestProductKeywordIndexed()},beforeDestroyComponent(){this.clearPolling()},getLatestProductKeywordIndexed(){this.isLoading=!0,this.productSearchKeywordRepository.search(this.productSearchKeywordsCriteria,i.api).then(e=>{this.latestIndex={firstDate:e.aggregations.firstDate.min,lastDate:e.aggregations.lastDate.max}}).catch(e=>{this.createNotificationError({message:e.message})}).finally(()=>{this.isLoading=!1})},getTotalProduct(){this.isLoading=!0,this.productRepository.search(this.productCriteria,i.api).then(e=>{this.totalProduct=e?.total}).catch(e=>{this.createNotificationError({message:e.message})}).finally(()=>{this.isLoading=!1})},updateProgress(){this.productIndexService.index(this.offset).then(e=>{let s=e.data;this.isRebuildSuccess=s.finish,this.isRebuildSuccess?(this.clearPolling(),this.getLatestProductKeywordIndexed(),this.progressBarValue=100,this.createNotificationSuccess({message:this.$tc("sw-settings-search.notification.index.success")})):(this.progressBarValue=(this.offset??1)/this.totalProduct*100,this.offset=s.offset.offset,this.updateProgress())}).catch(e=>{this.createNotificationError({message:e.message}),this.isRebuildSuccess=!1})},pollData(){null===this.syncPolling&&(this.syncPolling=setTimeout(this.updateProgress,3e3))},clearPolling(){null!==this.syncPolling&&(clearTimeout(this.syncPolling),this.syncPolling=null)},rebuildSearchIndex(){this.isRebuildInProgress=!0,this.progressBarValue=1,this.offset=0,this.$emit("edit-change",this.isRebuildInProgress),this.pollData(),this.createNotificationInfo({message:this.$tc("sw-settings-search.notification.index.started")})},buildFinish(){this.isRebuildSuccess=!1,this.isRebuildInProgress=!1,this.progressBarValue=0,this.$emit("edit-change",this.isRebuildInProgress)}}}},63863:function(e,s,t){var n=t(80405);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),t(45346).Z("67645320",n,!0,{})}}]);