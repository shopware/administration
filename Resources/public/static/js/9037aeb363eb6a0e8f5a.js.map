{"version":3,"sources":["webpack:///./src/module/sw-settings-newsletter/page/sw-settings-newsletter/sw-settings-newsletter.html.twig","webpack:///./src/module/sw-settings-newsletter/page/sw-settings-newsletter/index.js"],"names":["Mixin","Shopware","template","mixins","getByName","data","isLoading","isSaveSuccessful","metaInfo","title","this","$createTitle","methods","saveFinish","onSave","_this","Promise","all","$refs","systemConfig","saveAll","then","catch","err","createNotificationError","message","onLoadingChanged","loading"],"mappings":"4HAAe,ICMPA,EAAUC,SAAVD,MAGO,WACXE,SDVW,wlFCYXC,OAAQ,CACJH,EAAMI,UAAU,iBAGpBC,KAAI,WACA,MAAO,CACHC,WAAW,EACXC,kBAAkB,IAI1BC,SAAQ,WACJ,MAAO,CACHC,MAAOC,KAAKC,iBAIpBC,QAAS,CACLC,WAAU,WACNH,KAAKH,kBAAmB,GAG5BO,OAAM,WAAI,IAADC,EAAA,KACLL,KAAKH,kBAAmB,EACxBG,KAAKJ,WAAY,EAEjBU,QAAQC,IAAI,CACRP,KAAKQ,MAAMC,aAAaC,YACzBC,MAAK,WACJN,EAAKT,WAAY,EACjBS,EAAKR,kBAAmB,KACzBe,OAAM,SAACC,GACNR,EAAKT,WAAY,EACjBS,EAAKS,wBAAwB,CACzBC,QAASF,QAKrBG,iBAAgB,SAACC,GACbjB,KAAKJ,UAAYqB","file":"static/js/9037aeb363eb6a0e8f5a.js","sourcesContent":["export default \"\\n{% block sw_settings_newsletter_index %}\\n<sw-page class=\\\"sw-settings-newsletter\\\">\\n\\n    \\n    {% block sw_settings_newsletter_search_bar %}\\n    <template #search-bar>\\n        <sw-search-bar />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_newsletter_smart_bar_header %}\\n    <template #smart-bar-header>\\n        \\n        {% block sw_settings_newsletter_smart_bar_header_title %}\\n        <h2>\\n            \\n            {% block sw_settings_newsletter_smart_bar_header_title_text %}\\n            {{ $tc('sw-settings.index.title') }}\\n            <sw-icon\\n                name=\\\"regular-chevron-right-xs\\\"\\n                small\\n            />\\n            {{ $tc('sw-settings-newsletter.general.textHeadline') }}\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_newsletter_smart_bar_header_amount %}\\n            <span\\n                v-if=\\\"false\\\"\\n                class=\\\"sw-page__smart-bar-amount\\\"\\n            >\\n                ({{ total }})\\n            </span>\\n            {% endblock %}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_newsletter_smart_bar_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_settings_newsletter_actions_save %}\\n        <sw-button-process\\n            class=\\\"sw-settings-newsletter__save-action\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            :process-success=\\\"isSaveSuccessful\\\"\\n            :disabled=\\\"isLoading\\\"\\n            variant=\\\"primary\\\"\\n            {% if VUE3 %}\\n            @update:process-success=\\\"saveFinish\\\"\\n            {% else %}\\n            @process-finish=\\\"saveFinish\\\"\\n            {% endif %}\\n            @click=\\\"onSave\\\"\\n        >\\n            {{ $tc('sw-settings-newsletter.general.buttonSave') }}\\n        </sw-button-process>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_newsletter_content %}\\n    <template #content>\\n        <sw-card-view>\\n            <sw-skeleton v-if=\\\"isLoading\\\" />\\n\\n            \\n            {% block sw_setting_newsletter_system_config %}\\n            {# v-show is used here as underlying components influence the loading state and v-if would destroy this behaviour #}\\n            <sw-system-config\\n                v-show=\\\"!isLoading\\\"\\n                ref=\\\"systemConfig\\\"\\n                sales-channel-switchable\\n                domain=\\\"core.newsletter\\\"\\n                @loading-changed=\\\"onLoadingChanged\\\"\\n            />\\n            {% endblock %}\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";","import template from './sw-settings-newsletter.html.twig';\n\n/**\n * @package buyers-experience\n */\n\nconst { Mixin } = Shopware;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            isSaveSuccessful: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    methods: {\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onSave() {\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            Promise.all([\n                this.$refs.systemConfig.saveAll(),\n            ]).then(() => {\n                this.isLoading = false;\n                this.isSaveSuccessful = true;\n            }).catch((err) => {\n                this.isLoading = false;\n                this.createNotificationError({\n                    message: err,\n                });\n            });\n        },\n\n        onLoadingChanged(loading) {\n            this.isLoading = loading;\n        },\n    },\n};\n"],"sourceRoot":""}