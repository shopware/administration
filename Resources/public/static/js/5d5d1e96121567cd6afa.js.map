{"version":3,"sources":["webpack:///./src/module/sw-customer/component/sw-customer-base-info/index.js","webpack:///./src/module/sw-customer/component/sw-customer-base-info/sw-customer-base-info.html.twig","webpack:///./src/module/sw-customer/component/sw-customer-base-info/sw-customer-base-info.scss","webpack:///./src/module/sw-customer/constant/sw-customer.constant.js"],"names":["Criteria","Shopware","Data","mapPropertyErrors","Component","getComponentHelper","template","inject","props","customer","type","Object","required","customerEditMode","Boolean","default","isLoading","data","orderAmount","orderCount","customerLanguage","computed","_objectSpread","orderRepository","this","repositoryFactory","create","languageRepository","languageId","customerLanguageName","name","languageCriteria","criteria","addFilter","equals","salesChannelId","orderCriteria","addAggregation","filter","not","sum","$route","params","id","_toConsumableArray","errorConfig","isBusinessAccountType","_this$customer","accountType","CUSTOMER","ACCOUNT_TYPE_BUSINESS","dateFilter","Filter","getByName","currencyFilter","watch","immediate","handler","_this","get","then","language","created","createdComponent","methods","_this2","search","response","total","aggregations","content","__esModule","module","i","locals","exports","add","freeze","ACCOUNT_TYPE_PRIVATE"],"mappings":"syBAUA,IAAQA,EAAaC,SAASC,KAAtBF,SACAG,EAAsBF,SAASG,UAAUC,qBAAzCF,kBAGO,WACXG,SCfW,+rXDiBXC,OAAQ,CAAC,oBAAqB,WAE9BC,MAAO,CACHC,SAAU,CACNC,KAAMC,OACNC,UAAU,GAEdC,iBAAkB,CACdH,KAAMI,QACNF,UAAU,EACVG,SAAS,GAEbC,UAAW,CACPN,KAAMI,QACNF,UAAU,EACVG,SAAS,IAIjBE,KAAI,WACA,MAAO,CACHC,YAAa,EACbC,WAAY,EACZC,iBAAkB,OAI1BC,SAAQC,IAAA,CACJC,gBAAe,WACX,OAAOC,KAAKC,kBAAkBC,OAAO,UAGzCC,mBAAkB,WACd,OAAOH,KAAKC,kBAAkBC,OAAO,aAGzCE,WAAU,WACN,OAAOJ,KAAKf,SAASmB,YAGzBC,qBAAoB,WAChB,OAAIL,KAAKJ,iBACEI,KAAKJ,iBAAiBU,KAE1B,KAGXC,iBAAgB,WACZ,IAAMC,EAAW,IAAIhC,EAAS,EAAG,IAGjC,OAFAgC,EAASC,UAAUjC,EAASkC,OAAO,mBAAoBV,KAAKf,SAAS0B,iBAE9DH,GAGXI,cAAa,WACT,IAAMJ,EAAW,IAAIhC,EAAS,EAAG,GAQjC,OAPAgC,EAASK,eAAerC,EAASsC,OAAO,uBAAwB,CAC5DtC,EAASuC,IAAI,MAAO,CAChBvC,EAASkC,OAAO,kCAAmC,gBAExDlC,EAASwC,IAAI,cAAe,iBAC/BR,EAASC,UAAUjC,EAASkC,OAAO,iCAAkCV,KAAKiB,OAAOC,OAAOC,KAEjFX,IAGR7B,EACC,WAAUyC,IACNC,EAAY,2BAA2BpC,YAC9C,IAEDqC,sBAAqB,WAAI,IAADC,EACpB,OAAoB,QAAbA,EAAAvB,KAAKf,gBAAQ,IAAAsC,OAAA,EAAbA,EAAeC,eAAgBC,IAASC,uBAGnDC,WAAU,WACN,OAAOlD,SAASmD,OAAOC,UAAU,SAGrCC,eAAc,WACV,OAAOrD,SAASmD,OAAOC,UAAU,eAIzCE,MAAO,CACH3B,WAAY,CACR4B,WAAW,EACXC,QAAO,WAAI,IAADC,EAAA,KACNlC,KAAKG,mBAAmBgC,IAAInC,KAAKI,YAAYgC,MAAK,SAACC,GAC/CH,EAAKtC,iBAAmByC,QAMxCC,QAAO,WACHtC,KAAKuC,oBAGTC,QAAS,CACLD,iBAAgB,WAAI,IAADE,EAAA,KACfzC,KAAKD,gBAAgB2C,OAAO1C,KAAKY,eAAewB,MAAK,SAACO,GAClDF,EAAK9C,WAAagD,EAASC,MAC3BH,EAAK/C,YAAciD,EAASE,aAAanD,YAAYsB,W,2RErHrE,IAAI8B,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQvD,SACnB,iBAAZuD,IAAsBA,EAAU,CAAC,CAACE,EAAOC,EAAIH,EAAS,MAC7DA,EAAQI,SAAQF,EAAOG,QAAUL,EAAQI,SAG/BE,EADH,EAAQ,QAAwE7D,SACzE,WAAYuD,GAAS,EAAM,K,kCCD7B3D,WAAOkE,OAAO,CACzBC,qBALyB,UAMzB5B,sBAL0B","file":"static/js/5d5d1e96121567cd6afa.js","sourcesContent":["import template from './sw-customer-base-info.html.twig';\nimport './sw-customer-base-info.scss';\nimport errorConfig from '../../error-config.json';\n\nimport CUSTOMER from '../../constant/sw-customer.constant';\n\n/**\n * @package checkout\n */\n\nconst { Criteria } = Shopware.Data;\nconst { mapPropertyErrors } = Shopware.Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'feature'],\n\n    props: {\n        customer: {\n            type: Object,\n            required: true,\n        },\n        customerEditMode: {\n            type: Boolean,\n            required: true,\n            default: false,\n        },\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            orderAmount: 0,\n            orderCount: 0,\n            customerLanguage: null,\n        };\n    },\n\n    computed: {\n        orderRepository() {\n            return this.repositoryFactory.create('order');\n        },\n\n        languageRepository() {\n            return this.repositoryFactory.create('language');\n        },\n\n        languageId() {\n            return this.customer.languageId;\n        },\n\n        customerLanguageName() {\n            if (this.customerLanguage) {\n                return this.customerLanguage.name;\n            }\n            return 'â€¦';\n        },\n\n        languageCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(Criteria.equals('salesChannels.id', this.customer.salesChannelId));\n\n            return criteria;\n        },\n\n        orderCriteria() {\n            const criteria = new Criteria(1, 1);\n            criteria.addAggregation(Criteria.filter('exceptCancelledOrder', [\n                Criteria.not('AND', [\n                    Criteria.equals('stateMachineState.technicalName', 'cancelled'),\n                ]),\n            ], Criteria.sum('orderAmount', 'amountTotal')));\n            criteria.addFilter(Criteria.equals('order.orderCustomer.customerId', this.$route.params.id));\n\n            return criteria;\n        },\n\n        ...mapPropertyErrors(\n            'customer',\n            [...errorConfig['sw.customer.detail.base'].customer],\n        ),\n\n        isBusinessAccountType() {\n            return this.customer?.accountType === CUSTOMER.ACCOUNT_TYPE_BUSINESS;\n        },\n\n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        },\n\n        currencyFilter() {\n            return Shopware.Filter.getByName('currency');\n        },\n    },\n\n    watch: {\n        languageId: {\n            immediate: true,\n            handler() {\n                this.languageRepository.get(this.languageId).then((language) => {\n                    this.customerLanguage = language;\n                });\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.orderRepository.search(this.orderCriteria).then((response) => {\n                this.orderCount = response.total;\n                this.orderAmount = response.aggregations.orderAmount.sum;\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_customer_base_info %}\\n<sw-container\\n    class=\\\"sw-customer-base-info\\\"\\n    columns=\\\"repeat(auto-fit, minmax(250px, 1fr))\\\"\\n    gap=\\\"0px 15px\\\"\\n>\\n    \\n    {% block sw_customer_base_info_metadata %}\\n    \\n    {% block sw_customer_base_info_metadata_left %}\\n    <sw-loader v-if=\\\"isLoading\\\" />\\n\\n    <div\\n        v-else\\n        class=\\\"sw-customer-base-info-columns\\\"\\n    >\\n        <template v-if=\\\"isBusinessAccountType && !customerEditMode\\\">\\n            <sw-description-list>\\n                <dt class=\\\"sw-customer-base-info__label\\\">\\n                    {{ $tc('sw-customer.baseInfo.labelCompany') }}\\n                </dt>\\n\\n                <dd>\\n                    {{ customer.company }}\\n                </dd>\\n            </sw-description-list>\\n\\n            <sw-description-list>\\n                <dt class=\\\"sw-customer-base-info__label\\\">\\n                    {{ $tc('sw-customer.baseInfo.labelVatId') }}\\n                </dt>\\n\\n                <dd>\\n                    {{ customer.vatIds[0] || '-' }}\\n                </dd>\\n            </sw-description-list>\\n        </template>\\n\\n        \\n        {% block sw_customer_base_metadata_customer_group %}\\n        <sw-description-list>\\n            \\n            {% block sw_customer_base_metadata_customer_group_label %}\\n            <dt class=\\\"sw-customer-base-info__label\\\">\\n                {{ $tc('sw-customer.baseInfo.labelCustomerGroup') }}\\n            </dt>\\n            {% endblock %}\\n\\n            \\n            {% block sw_customer_base_metadata_customer_group_content %}\\n            <dd v-if=\\\"!customerEditMode\\\">\\n                {{ customer.group.translated.name }}\\n            </dd>\\n            {% endblock %}\\n\\n            \\n            {% block sw_customer_base_metadata_customer_group_editor %}\\n            <dd v-else>\\n                <sw-entity-single-select\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"customer.groupId\\\"\\n                    {% else %}\\n                    v-model=\\\"customer.groupId\\\"\\n                    {% endif %}\\n                    entity=\\\"customer_group\\\"\\n                    size=\\\"small\\\"\\n                    show-clearable-button\\n                    :error=\\\"customerGroupIdError\\\"\\n                />\\n            </dd>\\n            {% endblock %}\\n        </sw-description-list>\\n        {% endblock %}\\n\\n        \\n        {% block sw_customer_base_metadata_default_payment %}\\n        <sw-description-list>\\n            \\n            {% block sw_customer_base_metadata_default_payment_label %}\\n            <dt class=\\\"sw-customer-base-info__label\\\">\\n                {{ $tc('sw-customer.baseInfo.labelDefaultPayment') }}\\n            </dt>\\n            {% endblock %}\\n\\n            \\n            {% block sw_customer_base_metadata_default_payment_content %}\\n            <dd\\n                v-if=\\\"!customerEditMode\\\"\\n                class=\\\"sw-customer-base__label-default-payment-method\\\"\\n            >\\n                {{ customer.defaultPaymentMethod.translated.distinguishableName }}\\n            </dd>\\n            {% endblock %}\\n\\n            \\n            {% block sw_customer_base_metadata_default_payment_editor %}\\n            <dd v-else>\\n                <sw-entity-single-select\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"customer.defaultPaymentMethodId\\\"\\n                    {% else %}\\n                    v-model=\\\"customer.defaultPaymentMethodId\\\"\\n                    {% endif %}\\n                    class=\\\"sw-customer-base-info__payment-select\\\"\\n                    entity=\\\"payment_method\\\"\\n                    label-property=\\\"distinguishableName\\\"\\n                    size=\\\"small\\\"\\n                    show-clearable-button\\n                    :error=\\\"customerDefaultPaymentMethodIdError\\\"\\n                />\\n            </dd>\\n            {% endblock %}\\n        </sw-description-list>\\n        {% endblock %}\\n\\n        \\n        {% block sw_customer_base_metadata_active %}\\n        <sw-description-list>\\n            \\n            {% block sw_customer_base_metadata_active_label %}\\n            <dt class=\\\"sw-customer-base-info__label\\\">\\n                {{ $tc('sw-customer.baseInfo.labelActive') }}\\n            </dt>\\n            {% endblock %}\\n\\n            \\n            {% block sw_customer_base_metadata_active_content %}\\n            <dd\\n                v-if=\\\"!customerEditMode\\\"\\n                class=\\\"sw-customer-base__label-is-active\\\"\\n            >\\n                {{ $tc('sw-customer.baseInfo.contentActive', customer.active) }}\\n            </dd>\\n            {% endblock %}\\n\\n            \\n            {% block sw_customer_base_metadata_active_editor %}\\n            <dd v-else>\\n                <sw-checkbox-field\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"customer.active\\\"\\n                    {% else %}\\n                    v-model=\\\"customer.active\\\"\\n                    {% endif %}\\n                    class=\\\"sw-customer-base-info__checkbox-field\\\"\\n                    :label=\\\"$tc('sw-customer.baseInfo.contentActive')\\\"\\n                    size=\\\"small\\\"\\n                />\\n            </dd>\\n            {% endblock %}\\n        </sw-description-list>\\n        {% endblock %}\\n\\n        \\n        {% block sw_customer_base_metadata_language %}\\n        <sw-description-list>\\n            \\n            {% block sw_customer_base_metadata_language_label %}\\n            <dt class=\\\"sw-customer-base-info__label\\\">\\n                {{ $tc('sw-customer.baseInfo.labelLanguage') }}\\n            </dt>\\n            {% endblock %}\\n\\n            \\n            {% block sw_customer_base_metadata_language_content %}\\n            <dd\\n                v-if=\\\"!customerEditMode\\\"\\n                class=\\\"sw-customer-base__label-language\\\"\\n            >\\n                {{ customerLanguageName }}\\n            </dd>\\n            {% endblock %}\\n\\n            \\n            {% block sw_customer_base_metadata_language_editor %}\\n            <dd v-else>\\n                <sw-entity-single-select\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"customer.languageId\\\"\\n                    {% else %}\\n                    v-model=\\\"customer.languageId\\\"\\n                    {% endif %}\\n                    class=\\\"sw-customer-base-info__language-select\\\"\\n                    entity=\\\"language\\\"\\n                    :criteria=\\\"languageCriteria\\\"\\n                    size=\\\"small\\\"\\n                    show-clearable-button\\n                />\\n            </dd>\\n            {% endblock %}\\n        </sw-description-list>\\n        {% endblock %}\\n\\n        \\n        {% block ssw_customer_base_metadata_affiliate %}\\n        <sw-description-list>\\n            <dt>{{ $tc('sw-customer.baseInfo.labelAffiliateCode') }}</dt>\\n            <dd>{{ customer.affiliateCode || '-' }}</dd>\\n        </sw-description-list>\\n        {% endblock %}\\n\\n        \\n        {% block sw_customer_base_metadata_campaign %}\\n        <sw-description-list>\\n            <dt>{{ $tc('sw-customer.baseInfo.labelCampaignCode') }}</dt>\\n            <dd>{{ customer.campaignCode || '-' }}</dd>\\n        </sw-description-list>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n\\n    \\n    {% block sw_customer_base_info_metadata_right %}\\n    <div class=\\\"sw-customer-base-info-columns\\\">\\n        \\n        {% block sw_customer_base_metadata_customer_number %}\\n        <sw-description-list>\\n            <dt class=\\\"sw-customer-base-info__label\\\">\\n                {{ $tc('sw-customer.baseInfo.labelCustomerNumber') }}\\n            </dt>\\n            <dd class=\\\"sw-customer-base__label-customer-number\\\">\\n                {{ customer.customerNumber }}\\n            </dd>\\n        </sw-description-list>\\n        {% endblock %}\\n\\n        \\n        {% block sw_customer_base_metadata_bound_sales_channel %}\\n        <sw-description-list>\\n            \\n            {% block sw_customer_base_metadata_bound_sales_channel_label %}\\n            <dt class=\\\"sw-customer-base-info__label sw-bound-sales-channel__label\\\">\\n                {{ $tc('sw-customer.baseInfo.labelBoundSalesChannel') }}\\n                <sw-help-text :text=\\\"$tc('sw-customer.baseInfo.helpTextBoundSalesChannel')\\\" />\\n            </dt>\\n            {% endblock %}\\n\\n            \\n            {% block sw_customer_base_metadata_bound_saleschannel_content %}\\n            <dd class=\\\"sw-customer-base__label-bound-sales-channel\\\">\\n                <template v-if=\\\"customer.boundSalesChannelId\\\">\\n                    {{ customer.salesChannel.translated.name }}\\n                </template>\\n                <template v-else>\\n                    {{ $tc('sw-customer.baseInfo.emptyBoundSalesChannel') }}\\n                </template>\\n            </dd>\\n            {% endblock %}\\n        </sw-description-list>\\n        {% endblock %}\\n\\n        \\n        {% block sw_customer_base_metadata_last_login %}\\n        <sw-description-list>\\n            <dt class=\\\"sw-customer-base-info__label\\\">\\n                {{ $tc('sw-customer.baseInfo.labelLastLogin') }}\\n            </dt>\\n            <dd class=\\\"sw-customer-base__label-last-login\\\">\\n                <template v-if=\\\"customer.lastLogin\\\">\\n                    {{ dateFilter(customer.lastLogin) }}\\n                </template>\\n                <template v-else>\\n                    {{ $tc('sw-customer.baseInfo.emptyTextLogin') }}\\n                </template>\\n            </dd>\\n        </sw-description-list>\\n        {% endblock %}\\n\\n        \\n        {% block sw_customer_base_metadata_turnover %}\\n        <sw-description-list>\\n            <dt class=\\\"sw-customer-base-info__label\\\">\\n                {{ $tc('sw-customer.baseInfo.labelTurnover') }}\\n            </dt>\\n            {# price aggregations do not support currencies yet, see NEXT-5069 #}\\n            <dd class=\\\"sw-customer-base__label-turnover\\\">\\n                {{ currencyFilter(orderAmount, 'EUR') }}\\n            </dd>\\n        </sw-description-list>\\n        {% endblock %}\\n\\n        \\n        {% block sw_customer_base_metadata_orders %}\\n        <sw-description-list>\\n            <dt class=\\\"sw-customer-base-info__label\\\">\\n                {{ $tc('sw-customer.baseInfo.labelOrders') }}\\n            </dt>\\n            <dd>{{ orderCount }}</dd>\\n        </sw-description-list>\\n        {% endblock %}\\n\\n        \\n        {% block sw_customer_base_metadata_birthday %}\\n        <sw-description-list>\\n            \\n            {% block sw_customer_base_metadata_birthday_label %}\\n            <dt class=\\\"sw-customer-base-info__label\\\">\\n                {{ $tc('sw-customer.baseInfo.labelBirthday') }}\\n            </dt>\\n            {% endblock %}\\n\\n            \\n            {% block sw_customer_base_metadata_birthday_content %}\\n            <dd\\n                v-if=\\\"!customerEditMode\\\"\\n                class=\\\"sw-customer-base__label-birthday\\\"\\n            >\\n                <template v-if=\\\"customer.birthday\\\">\\n                    {{ dateFilter(customer.birthday, { minute: undefined, hour: undefined, skipTimezoneConversion: true }) }}\\n                </template>\\n                <template v-else>\\n                    {{ $tc('sw-customer.baseInfo.emptyTextBirthday') }}\\n                </template>\\n            </dd>\\n            {% endblock %}\\n\\n            \\n            {% block sw_custoemr_base_metadata_birthday_editor %}\\n            <dd v-else>\\n                <sw-datepicker\\n                    {% if VUE3 %}\\n                    v-model:value=\\\"customer.birthday\\\"\\n                    {% else %}\\n                    v-model=\\\"customer.birthday\\\"\\n                    {% endif %}\\n                    size=\\\"small\\\"\\n                    date-type=\\\"date\\\"\\n                />\\n            </dd>\\n            {% endblock %}\\n        </sw-description-list>\\n        {% endblock %}\\n    </div>\\n    {% endblock %}\\n    {% endblock %}\\n</sw-container>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-customer-base-info.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"71fc10a5\", content, true, {});","/**\n * @package checkout\n */\n\nconst ACCOUNT_TYPE_PRIVATE = 'private';\nconst ACCOUNT_TYPE_BUSINESS = 'business';\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default Object.freeze({\n    ACCOUNT_TYPE_PRIVATE,\n    ACCOUNT_TYPE_BUSINESS,\n});\n"],"sourceRoot":""}