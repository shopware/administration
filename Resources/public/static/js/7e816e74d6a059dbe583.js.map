{"version":3,"sources":["webpack:///./src/module/sw-cms/elements/text/component/sw-cms-el-text.html.twig","webpack:///./src/module/sw-cms/elements/text/component/index.js","webpack:///./src/module/sw-cms/elements/text/component/sw-cms-el-text.scss"],"names":["Mixin","Shopware","template","mixins","getByName","data","editable","demoValue","watch","cmsPageState","deep","handler","this","updateDemoValue","created","createdComponent","methods","initElementConfig","element","config","content","source","getDemoValue","value","onBlur","emitChanges","onInput","$emit","__esModule","default","module","i","locals","exports","add"],"mappings":"wIAAe,ICGPA,EAAUC,SAAVD,MAMO,WACXE,SDVW,8oBCYXC,OAAQ,CACJH,EAAMI,UAAU,gBAGpBC,KAAI,WACA,MAAO,CACHC,UAAU,EACVC,UAAW,KAInBC,MAAO,CACHC,aAAc,CACVC,MAAM,EACNC,QAAO,WACHC,KAAKC,oBAIb,gCAAiC,CAC7BF,QAAO,WACHC,KAAKC,qBAKjBC,QAAO,WACHF,KAAKG,oBAGTC,QAAS,CACLD,iBAAgB,WACZH,KAAKK,kBAAkB,SAG3BJ,gBAAe,WACgC,WAAvCD,KAAKM,QAAQC,OAAOC,QAAQC,SAC5BT,KAAKL,UAAYK,KAAKU,aAAaV,KAAKM,QAAQC,OAAOC,QAAQG,SAIvEC,OAAM,SAACJ,GACHR,KAAKa,YAAYL,IAGrBM,QAAO,SAACN,GACJR,KAAKa,YAAYL,IAGrBK,YAAW,SAACL,GACJA,IAAYR,KAAKM,QAAQC,OAAOC,QAAQG,QACxCX,KAAKM,QAAQC,OAAOC,QAAQG,MAAQH,EACpCR,KAAKe,MAAM,iBAAkBf,KAAKM,c,4CC7DlD,IAAIE,EAAU,EAAQ,QACnBA,EAAQQ,aAAYR,EAAUA,EAAQS,SACnB,iBAAZT,IAAsBA,EAAU,CAAC,CAACU,EAAOC,EAAIX,EAAS,MAC7DA,EAAQY,SAAQF,EAAOG,QAAUb,EAAQY,SAG/BE,EADH,EAAQ,QAA2EL,SAC5E,WAAYT,GAAS,EAAM","file":"static/js/7e816e74d6a059dbe583.js","sourcesContent":["export default \"\\n{% block sw_cms_element_text %}\\n<div class=\\\"sw-cms-el-text\\\">\\n    <div\\n        v-if=\\\"element.config.content.source === 'mapped'\\\"\\n        class=\\\"sw-cms-el-text__mapping-preview content-editor\\\"\\n        v-html=\\\"$sanitize(demoValue)\\\"\\n    ></div>\\n\\n    <sw-text-editor\\n        v-else\\n        v-model=\\\"element.config.content.value\\\"\\n        :disabled=\\\"disabled\\\"\\n        :vertical-align=\\\"element.config.verticalAlign.value\\\"\\n        :allow-inline-data-mapping=\\\"true\\\"\\n        :is-inline-edit=\\\"true\\\"\\n        sanitize-input\\n        enable-transparent-background\\n        @blur=\\\"onBlur\\\"\\n        @input=\\\"onInput\\\"\\n    />\\n</div>\\n{% endblock %}\\n\";","import template from './sw-cms-el-text.html.twig';\nimport './sw-cms-el-text.scss';\n\nconst { Mixin } = Shopware;\n\n/**\n * @private\n * @package buyers-experience\n */\nexport default {\n    template,\n\n    mixins: [\n        Mixin.getByName('cms-element'),\n    ],\n\n    data() {\n        return {\n            editable: true,\n            demoValue: '',\n        };\n    },\n\n    watch: {\n        cmsPageState: {\n            deep: true,\n            handler() {\n                this.updateDemoValue();\n            },\n        },\n\n        'element.config.content.source': {\n            handler() {\n                this.updateDemoValue();\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.initElementConfig('text');\n        },\n\n        updateDemoValue() {\n            if (this.element.config.content.source === 'mapped') {\n                this.demoValue = this.getDemoValue(this.element.config.content.value);\n            }\n        },\n\n        onBlur(content) {\n            this.emitChanges(content);\n        },\n\n        onInput(content) {\n            this.emitChanges(content);\n        },\n\n        emitChanges(content) {\n            if (content !== this.element.config.content.value) {\n                this.element.config.content.value = content;\n                this.$emit('element-update', this.element);\n            }\n        },\n    },\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-cms-el-text.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"541a7722\", content, true, {});"],"sourceRoot":""}