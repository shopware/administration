{"version":3,"sources":["webpack:///./src/module/sw-product/view/sw-product-detail-context-prices/sw-product-detail-context-prices.scss","webpack:///./src/module/sw-product/view/sw-product-detail-context-prices/index.js","webpack:///./src/module/sw-product/view/sw-product-detail-context-prices/sw-product-detail-context-prices.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","Criteria","Data","_Shopware$Component$g","Component","getComponentHelper","mapState","mapGetters","template","inject","mixins","getByName","props","isSetDefaultPrice","type","Boolean","required","canSetLoadingRules","data","rules","totalRules","isInherited","showListPrices","computed","_objectSpread","priceRepository","this","product","prices","repositoryFactory","create","entity","source","ruleRepository","priceRuleGroups","_this","sort","a","b","aRule","findRuleById","ruleId","bRule","name","forEach","rule","findPricesByRuleId","Object","values","priceRule","quantityStart","priceRuleGroupsExists","length","canAddPriceRule","keys","emptyPriceRuleExists","null","isLoaded","isLoading","currencies","taxes","currencyColumns","sortCurrencies","map","currency","property","concat","isoCode","label","translated","visible","allowResize","primary","rawData","width","multiLine","pricesColumns","_toConsumableArray","assetFilter","Filter","watch","handler","value","isChild","total","immediate","mounted","mountedComponent","methods","_this2","ruleCriteria","addFilter","multi","contains","equals","State","commit","search","then","res","isSystemDefault","onRuleChange","_this3","$nextTick","onAddNewPriceGroup","_arguments","arguments","_this4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newPriceRule","scrollableArea","wrap","_context","prev","next","undefined","abrupt","productId","id","quantityEnd","currencyId","defaultCurrency","price","gross","defaultPrice","linked","net","listPrice","$parent","$el","children","item","scrollTo","top","scrollHeight","behavior","stop","onPriceGroupDelete","_this5","remove","onPriceGroupDuplicate","priceGroup","_this6","duplicatePriceRule","onPriceRuleDelete","matchingPriceRuleGroup","createNotificationError","message","$tc","actualRuleIndex","indexOf","onInheritanceRestore","indexOfPrice","findIndex","$delete","onInheritanceRemove","findDefaultPriceOfRule","newPrice","convertPrice","$set","isPriceFieldInherited","priceRounded","factor","toFixed","decimalPrecision","Number","find","filter","_this7","onQuantityEndChange","createPriceRule","highestEndValue","Math","max","apply","canCreatePriceRule","referencePrice","_this8","index","getPriceRuleGroupClass","number","restoreInheritance","removeInheritance","onChangeShowListPrices","getStartQuantityTooltip","itemIndex","quantity","showDelay","disabled"],"mappings":"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","file":"static/js/c50e26822a0f74e53e8e.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-detail-context-prices.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4abf2711\", content, true, {});","/*\n * @package inventory\n */\n\nimport template from './sw-product-detail-context-prices.html.twig';\nimport './sw-product-detail-context-prices.scss';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { mapState, mapGetters } = Shopware.Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl', 'feature'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        isSetDefaultPrice: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        canSetLoadingRules: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n    },\n\n    data() {\n        return {\n            rules: [],\n            totalRules: 0,\n            isInherited: false,\n            showListPrices: {},\n        };\n    },\n\n    computed: {\n        ...mapState('swProductDetail', [\n            'product',\n            'parentProduct',\n            'taxes',\n            'currencies',\n        ]),\n\n        ...mapGetters('swProductDetail', [\n            'isLoading',\n            'defaultCurrency',\n            'defaultPrice',\n            'productTaxRate',\n            'isChild',\n        ]),\n\n        priceRepository() {\n            if (this.product && this.product.prices) {\n                return this.repositoryFactory.create(\n                    this.product.prices.entity,\n                    this.product.prices.source,\n                );\n            }\n            return null;\n        },\n\n        ruleRepository() {\n            return this.repositoryFactory.create('rule');\n        },\n\n        priceRuleGroups() {\n            const priceRuleGroups = {};\n\n            if (!this.product.prices) {\n                return priceRuleGroups;\n            }\n\n            if (!this.rules) {\n                return priceRuleGroups;\n            }\n\n            // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n            const sortedPrices = this.product.prices.sort((a, b) => {\n                const aRule = this.findRuleById(a.ruleId);\n                const bRule = this.findRuleById(b.ruleId);\n\n                if (!aRule || !aRule.name || !bRule || !bRule.name) {\n                    return 0;\n                }\n\n                return aRule.name > bRule.name ? 1 : -1;\n            });\n\n            sortedPrices.forEach((rule) => {\n                if (!priceRuleGroups[rule.ruleId]) {\n                    priceRuleGroups[rule.ruleId] = {\n                        ruleId: rule.ruleId,\n                        rule: this.findRuleById(rule.ruleId),\n                        prices: this.findPricesByRuleId(rule.ruleId),\n                    };\n                }\n            });\n\n            // Sort prices\n            Object.values(priceRuleGroups).forEach((priceRule) => {\n                priceRule.prices.sort((a, b) => {\n                    return a.quantityStart - b.quantityStart;\n                });\n            });\n\n            return priceRuleGroups;\n        },\n\n        priceRuleGroupsExists() {\n            return Object.values(this.priceRuleGroups).length > 0;\n        },\n\n        canAddPriceRule() {\n            const usedRules = Object.keys(this.priceRuleGroups).length;\n            const availableRules = this.rules.length;\n\n            return usedRules !== availableRules;\n        },\n\n        emptyPriceRuleExists() {\n            return typeof this.priceRuleGroups.null !== 'undefined';\n        },\n\n        isLoaded() {\n            return !this.isLoading &&\n                   this.currencies &&\n                   this.taxes &&\n                   this.product;\n        },\n\n        currencyColumns() {\n            this.sortCurrencies();\n\n            return this.currencies.map((currency) => {\n                return {\n                    property: `price-${currency.isoCode}`,\n                    label: currency.translated.name || currency.name,\n                    visible: true,\n                    allowResize: true,\n                    primary: false,\n                    rawData: false,\n                    width: '270px',\n                    multiLine: true,\n                };\n            });\n        },\n\n        pricesColumns() {\n            const priceColumns = [\n                {\n                    property: 'quantityStart',\n                    label: 'sw-product.advancedPrices.columnFrom',\n                    visible: true,\n                    allowResize: true,\n                    primary: true,\n                    rawData: false,\n                    width: '120px',\n                }, {\n                    property: 'quantityEnd',\n                    label: 'sw-product.advancedPrices.columnTo',\n                    visible: true,\n                    allowResize: true,\n                    primary: true,\n                    rawData: false,\n                    width: '120px',\n                },\n                {\n                    property: 'type',\n                    label: 'sw-product.advancedPrices.columnType',\n                    visible: true,\n                    allowResize: true,\n                    width: '250px',\n                    multiLine: true,\n                },\n            ];\n\n            return [...priceColumns, ...this.currencyColumns];\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n\n    watch: {\n        'product.prices': {\n            handler(value) {\n                if (!value) {\n                    return;\n                }\n\n                this.isInherited = this.isChild && !this.product.prices.total;\n            },\n            immediate: true,\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            const ruleCriteria = new Criteria(1, 500);\n            ruleCriteria.addFilter(\n                Criteria.multi('OR', [\n                    Criteria.contains('rule.moduleTypes.types', 'price'),\n                    Criteria.equals('rule.moduleTypes', null),\n                ]),\n            );\n\n            if (this.canSetLoadingRules) {\n                Shopware.State.commit('swProductDetail/setLoading', ['rules', true]);\n            }\n            this.ruleRepository.search(ruleCriteria).then((res) => {\n                this.rules = res;\n                this.totalRules = res.total;\n\n                Shopware.State.commit('swProductDetail/setLoading', ['rules', false]);\n            });\n\n            this.isInherited = this.isChild && !this.product.prices.total;\n        },\n\n        sortCurrencies() {\n            this.currencies.sort((a, b) => {\n                if (a.isSystemDefault) {\n                    return -1;\n                }\n                if (b.isSystemDefault) {\n                    return 1;\n                }\n                if (a.translated.name < b.translated.name) {\n                    return -1;\n                }\n                if (a.translated.name > b.translated.name) {\n                    return 1;\n                }\n                return 0;\n            });\n        },\n\n        onRuleChange(value, ruleId) {\n            const changeRules = () => {\n                this.product.prices.forEach((priceRule) => {\n                    if (priceRule.ruleId === ruleId) {\n                        priceRule.ruleId = value;\n                    }\n                });\n            };\n\n            /*\n             * Adding a $nextTick here for the case when the user creates a new rule.\n             * this $nextTick is needed because vue first needs to remove the modal from the DOM.\n             * without it this would not happen.\n             */\n            this.$nextTick(() => { changeRules(); });\n        },\n\n        async onAddNewPriceGroup(ruleId = null) {\n            /*\n             * Adding a nextTick to wait until DOM has been updated. We do this because of the rule create modal.\n             * Otherwise the modal won't disappear.\n             */\n            await this.$nextTick();\n\n            if (this.emptyPriceRuleExists) {\n                return;\n            }\n\n            const newPriceRule = this.priceRepository.create();\n\n            newPriceRule.ruleId = ruleId;\n            newPriceRule.productId = this.product.id;\n            newPriceRule.quantityStart = 1;\n            newPriceRule.quantityEnd = null;\n            newPriceRule.currencyId = this.defaultCurrency.id;\n            newPriceRule.price = [{\n                currencyId: this.defaultCurrency.id,\n                gross: this.isSetDefaultPrice ? 0 : this.defaultPrice.gross,\n                linked: this.defaultPrice.linked,\n                net: this.isSetDefaultPrice ? 0 : this.defaultPrice.net,\n                listPrice: null,\n            }];\n\n            if (this.defaultPrice.listPrice) {\n                newPriceRule.price[0].listPrice = {\n                    currencyId: this.defaultCurrency.id,\n                    gross: this.defaultPrice.listPrice.gross,\n                    linked: this.defaultPrice.listPrice.linked,\n                    net: this.defaultPrice.listPrice.net,\n                };\n            }\n\n            this.product.prices.add(newPriceRule);\n\n            await this.$nextTick();\n\n            const scrollableArea = this.$parent.$el.children.item(0);\n\n            if (scrollableArea) {\n                scrollableArea.scrollTo({\n                    top: scrollableArea.scrollHeight,\n                    behavior: 'smooth',\n                });\n            }\n        },\n\n        onPriceGroupDelete(ruleId) {\n            const allPriceRules = this.product.prices.map(priceRule => {\n                return { id: priceRule.id, ruleId: priceRule.ruleId };\n            });\n\n            allPriceRules.forEach((priceRule) => {\n                if (ruleId !== priceRule.ruleId) {\n                    return;\n                }\n\n                this.product.prices.remove(priceRule.id);\n            });\n        },\n\n        onPriceGroupDuplicate(priceGroup) {\n            if (typeof this.priceRuleGroups.null !== 'undefined') {\n                return;\n            }\n\n            // duplicate each price rule\n            priceGroup.prices.forEach((price) => {\n                this.duplicatePriceRule(price, null);\n            });\n        },\n\n        onPriceRuleDelete(priceRule) {\n            // get the priceRuleGroup for the priceRule\n            const matchingPriceRuleGroup = this.priceRuleGroups[priceRule.ruleId];\n\n            // if it is the only item in the priceRuleGroup\n            if (matchingPriceRuleGroup.prices.length <= 1) {\n                this.createNotificationError({\n                    message: this.$tc('sw-product.advancedPrices.deletionNotPossibleMessage'),\n                });\n\n                return;\n            }\n\n            // get actual rule index\n            const actualRuleIndex = matchingPriceRuleGroup.prices.indexOf(priceRule);\n\n            // if it is the last item\n            if (typeof priceRule.quantityEnd === 'undefined' || priceRule.quantityEnd === null) {\n                // get previous rule\n                const previousRule = matchingPriceRuleGroup.prices[actualRuleIndex - 1];\n\n                // set the quantityEnd from the previous rule to null\n                previousRule.quantityEnd = null;\n            } else {\n                // get next rule\n                const nextRule = matchingPriceRuleGroup.prices[actualRuleIndex + 1];\n\n                // set the quantityStart from the next rule to the quantityStart from the actual rule\n                nextRule.quantityStart = priceRule.quantityStart;\n            }\n\n            // delete rule\n            this.product.prices.remove(priceRule.id);\n        },\n\n        onInheritanceRestore(rule, currency) {\n            // remove price from rule.price with the currency id\n            const indexOfPrice = rule.price.findIndex((price) => price.currencyId === currency.id);\n            this.$delete(rule.price, indexOfPrice);\n        },\n\n        onInheritanceRemove(rule, currency) {\n            // create new price based on the default price\n            const defaultPrice = this.findDefaultPriceOfRule(rule);\n            const newPrice = {\n                currencyId: currency.id,\n                gross: this.convertPrice(defaultPrice.gross, currency),\n                linked: defaultPrice.linked,\n                net: this.convertPrice(defaultPrice.net, currency),\n                listPrice: null,\n            };\n\n            if (defaultPrice.listPrice) {\n                newPrice.listPrice = {\n                    currencyId: currency.id,\n                    gross: this.convertPrice(defaultPrice.listPrice.gross, currency),\n                    linked: defaultPrice.listPrice.linked,\n                    net: this.convertPrice(defaultPrice.listPrice.net, currency),\n                };\n            }\n\n            // add price to rule.price\n            this.$set(rule.price, rule.price.length, newPrice);\n        },\n\n        isPriceFieldInherited(rule, currency) {\n            return rule.price.findIndex((price) => price.currencyId === currency.id) < 0;\n        },\n\n        convertPrice(value, currency) {\n            const calculatedPrice = value * currency.factor;\n            const priceRounded = calculatedPrice.toFixed(currency.decimalPrecision);\n            return Number(priceRounded);\n        },\n\n        findRuleById(ruleId) {\n            return this.rules.find((rule) => {\n                return rule.id === ruleId;\n            });\n        },\n\n        findPricesByRuleId(ruleId) {\n            return this.product.prices.filter((item) => {\n                return item.ruleId === ruleId;\n            });\n        },\n\n        findDefaultPriceOfRule(rule) {\n            return rule.price.find((price) => price.currencyId === this.defaultCurrency.id);\n        },\n\n        onQuantityEndChange(price, priceGroup) {\n            // when not last price\n            if (priceGroup.prices.indexOf(price) + 1 !== priceGroup.prices.length) {\n                return;\n            }\n\n            this.createPriceRule(priceGroup);\n        },\n\n        createPriceRule(priceGroup) {\n            // create new price rule\n            const newPriceRule = this.priceRepository.create();\n            newPriceRule.productId = this.product.id;\n            newPriceRule.ruleId = priceGroup.ruleId;\n\n            const highestEndValue = Math.max(...priceGroup.prices.map((price) => price.quantityEnd));\n            newPriceRule.quantityStart = highestEndValue + 1;\n\n            newPriceRule.price = [{\n                currencyId: this.defaultCurrency.id,\n                gross: this.defaultPrice.gross,\n                linked: this.defaultPrice.linked,\n                net: this.defaultPrice.net,\n                listPrice: null,\n            }];\n\n            if (this.defaultPrice.listPrice) {\n                newPriceRule.price[0].listPrice = {\n                    currencyId: this.defaultCurrency.id,\n                    gross: this.defaultPrice.listPrice ? this.defaultPrice.listPrice.gross : null,\n                    linked: this.defaultPrice.listPrice ? this.defaultPrice.listPrice.linked : true,\n                    net: this.defaultPrice.listPrice ? this.defaultPrice.listPrice.net : null,\n                };\n            }\n\n            this.product.prices.add(newPriceRule);\n        },\n\n        canCreatePriceRule(priceGroup) {\n            const emptyPrices = priceGroup.prices.filter((price) => {\n                return !price.quantityEnd;\n            });\n\n            return !!emptyPrices.length;\n        },\n\n        duplicatePriceRule(referencePrice, ruleId = null) {\n            const newPriceRule = this.priceRepository.create();\n\n            newPriceRule.productId = referencePrice.productId;\n            newPriceRule.quantityEnd = referencePrice.quantityEnd;\n            newPriceRule.quantityStart = referencePrice.quantityStart;\n            newPriceRule.ruleId = ruleId;\n\n            // add prices\n            newPriceRule.price = [];\n\n            referencePrice.price.forEach((price, index) => {\n                this.$set(newPriceRule.price, index, { ...price });\n            });\n\n            this.product.prices.add(newPriceRule);\n        },\n\n        getPriceRuleGroupClass(number) {\n            return [\n                `context-price-group-${number}`,\n            ];\n        },\n\n        restoreInheritance() {\n            this.isInherited = true;\n        },\n\n        removeInheritance() {\n            this.isInherited = false;\n        },\n\n        onChangeShowListPrices(value, ruleId) {\n            this.$set(this.showListPrices, ruleId, value);\n        },\n\n        getStartQuantityTooltip(itemIndex, quantity) {\n            return {\n                message: this.$tc('sw-product.advancedPrices.advancedPriceDisabledTooltip'),\n                width: 275,\n                showDelay: 200,\n                disabled: (itemIndex !== 0 || quantity !== 1),\n            };\n        },\n    },\n};\n","export default \"\\n{% block sw_product_detail_prices %}\\n<div v-if=\\\"isLoading\\\">\\n    <sw-skeleton />\\n    <sw-skeleton />\\n</div>\\n\\n<sw-container\\n    v-else\\n    rows=\\\"auto\\\"\\n    columns=\\\"100%\\\"\\n    class=\\\"sw-product-detail-context-prices\\\"\\n>\\n\\n    \\n    {% block sw_product_detail_prices_price_card %}\\n    <sw-container\\n        v-if=\\\"priceRuleGroupsExists\\\"\\n        columns=\\\"100%\\\"\\n    >\\n        <sw-card\\n            v-for=\\\"(priceGroup, key, index) in priceRuleGroups\\\"\\n            :key=\\\"priceGroup.ruleId\\\"\\n            class=\\\"context-price\\\"\\n            position-identifier=\\\"sw-product-detail-context-prices-context-price\\\"\\n            :class=\\\"getPriceRuleGroupClass(index)\\\"\\n            :title=\\\"priceGroup.rule ? priceGroup.rule.name : $tc('sw-product.prices.cardTitlePriceRule')\\\"\\n            :large=\\\"true\\\"\\n        >\\n\\n            \\n            {% block sw_product_detail_prices_price_card_toolbar %}\\n            <div class=\\\"sw-product-detail-context-prices__toolbar\\\">\\n                <sw-container\\n                    columns=\\\"1fr minmax(50px, max-content) minmax(50px, max-content)\\\"\\n                    gap=\\\"0 10px\\\"\\n                >\\n\\n                    \\n                    {% block sw_product_detail_prices_price_card_toolbar_rule_selection %}\\n                    <sw-select-rule-create\\n                        v-if=\\\"rules.entity\\\"\\n                        id=\\\"rule\\\"\\n                        :rule-id=\\\"priceGroup.ruleId\\\"\\n                        :placeholder=\\\"$tc('sw-product.advancedPrices.selectRule')\\\"\\n                        :disabled=\\\"!acl.can('product.editor')\\\"\\n                        class=\\\"sw-product-detail-context-prices__toolbar-selection\\\"\\n                        size=\\\"small\\\"\\n                        rule-aware-group-key=\\\"productPrices\\\"\\n                        :restricted-rule-ids=\\\"Object.keys(priceRuleGroups)\\\"\\n                        :restricted-rule-ids-tooltip-label=\\\"$tc('sw-product.advancedPrices.ruleAlreadyUsed')\\\"\\n                        @save-rule=\\\"onRuleChange($event, priceGroup.ruleId)\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_product_detail_prices_price_card_toolbar_rule_delete %}\\n                    <sw-button\\n                        v-tooltip=\\\"{\\n                            message: $tc('sw-privileges.tooltip.warning'),\\n                            disabled: acl.can('product.editor'),\\n                            showOnDisabledElements: true\\n                        }\\\"\\n                        size=\\\"small\\\"\\n                        :disabled=\\\"!acl.can('product.editor')\\\"\\n                        @click=\\\"onPriceGroupDelete(priceGroup.ruleId)\\\"\\n                    >\\n                        {{ $tc('sw-product.prices.buttonPriceRuleDelete') }}\\n                    </sw-button>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_product_detail_prices_price_card_toolbar_add_price_rule %}\\n                    <sw-button\\n                        v-if=\\\"canAddPriceRule\\\"\\n                        v-tooltip=\\\"{\\n                            message: $tc('sw-privileges.tooltip.warning'),\\n                            disabled: acl.can('product.editor'),\\n                            showOnDisabledElements: true\\n                        }\\\"\\n                        class=\\\"sw-product-detail-context-prices__toolbar-duplicate\\\"\\n                        size=\\\"small\\\"\\n                        :disabled=\\\"priceGroup.ruleId === null || !acl.can('product.editor')\\\"\\n                        @click=\\\"onPriceGroupDuplicate(priceGroup)\\\"\\n                    >\\n                        {{ $tc('sw-product.prices.buttonPriceRuleDuplicate') }}\\n                    </sw-button>\\n                    {% endblock %}\\n\\n                </sw-container>\\n            </div>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_detail_prices_price_card_price_group_grid %}\\n            <sw-data-grid\\n                v-if=\\\"priceGroup.ruleId\\\"\\n                :data-source=\\\"priceGroup.prices\\\"\\n                :columns=\\\"pricesColumns\\\"\\n                show-settings\\n                :show-selection=\\\"false\\\"\\n                :compact-mode=\\\"true\\\"\\n            >\\n                \\n                {% block sw_product_detail_prices_price_card_price_group_grid_settings %}\\n                <template #additionalSettings>\\n                    \\n                    {% block sw_product_detail_prices_price_card_price_group_grid_settings_list_prices %}\\n                    <sw-switch-field\\n                        size=\\\"medium\\\"\\n                        :value=\\\"showListPrices[priceGroup.ruleId] !== false\\\"\\n                        no-margin-top\\n                        :label=\\\"$tc('sw-product.prices.settingShowListPrices')\\\"\\n                        {% if VUE3 %}\\n                        @update:value=\\\"onChangeShowListPrices($event, priceGroup.ruleId)\\\"\\n                        {% else %}\\n                        @change=\\\"onChangeShowListPrices($event, priceGroup.ruleId)\\\"\\n                        {% endif %}\\n                    />\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_detail_prices_price_card_price_group_grid_type %}\\n                <template\\n                    #column-type=\\\"{ item, itemIndex, compact }\\\"\\n                >\\n                    <div class=\\\"sw-product-detail-context-prices__type-label\\\">\\n                        \\n                        <label>{{ $tc('sw-product.advancedPrices.advancedListPricePriceLabel') }}</label>\\n                        \\n                        <label v-if=\\\"showListPrices[priceGroup.ruleId] !== false\\\">\\n                            {{ $tc('sw-product.advancedPrices.advancedListPriceLabel') }}\\n                        </label>\\n                        \\n                        <label v-if=\\\"showListPrices[priceGroup.ruleId] !== false\\\">\\n                            {{ $tc('sw-product.advancedPrices.labelRegulationPrice') }}\\n                        </label>\\n                    </div>\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_detail_prices_price_card_price_group_grid_quantity_start %}\\n                <template\\n                    #column-quantityStart=\\\"{ item, itemIndex, compact }\\\"\\n                >\\n                    \\n                    {% block sw_product_detail_prices_price_card_price_group_grid_quantity_start_field %}\\n                    <sw-number-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"item.quantityStart\\\"\\n                        {% else %}\\n                        v-model=\\\"item.quantityStart\\\"\\n                        {% endif %}\\n                        v-tooltip=\\\"getStartQuantityTooltip(itemIndex, item.quantityStart)\\\"\\n                        :name=\\\"`${item.ruleId}-${item.quantityStart}-quantityStart`\\\"\\n                        validation=\\\"required\\\"\\n                        :min=\\\"priceGroup.prices[itemIndex - 1] ? priceGroup.prices[itemIndex - 1].quantityEnd + 1 : 1\\\"\\n                        :max=\\\"item.quantityEnd ? item.quantityEnd : null\\\"\\n                        :size=\\\"compact ? 'small' : 'default'\\\"\\n                        :disabled=\\\"(itemIndex === 0 && item.quantityStart === 1) || !acl.can('product.editor')\\\"\\n                    />\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_detail_prices_price_card_price_group_grid_quantity_end %}\\n                <template\\n                    #column-quantityEnd=\\\"{ item, itemIndex, compact }\\\"\\n                >\\n                    \\n                    {% block sw_product_detail_prices_price_card_price_group_grid_quantity_end_field %}\\n                    <sw-number-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"item.quantityEnd\\\"\\n                        {% else %}\\n                        v-model=\\\"item.quantityEnd\\\"\\n                        {% endif %}\\n                        :validation=\\\"item.quantityEnd === null || item.quantityEnd > item.quantityStart\\\"\\n                        placeholder=\\\"∞\\\"\\n                        :name=\\\"`${item.ruleId}-${item.quantityStart}-quantityEnd`\\\"\\n                        :min=\\\"item.quantityStart\\\"\\n                        :max=\\\"priceGroup.prices[itemIndex + 1] ? priceGroup.prices[itemIndex + 1].quantityStart - 1 : null\\\"\\n                        :size=\\\"compact ? 'small' : 'default'\\\"\\n                        :disabled=\\\"!acl.can('product.editor')\\\"\\n                        {% if VUE3 %}\\n                        @update:value=\\\"onQuantityEndChange(item, priceGroup)\\\"\\n                        {% else %}\\n                        @change=\\\"onQuantityEndChange(item, priceGroup)\\\"\\n                        {% endif %}\\n                    />\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_detail_prices_price_card_price_group_grid_currencies_list %}\\n                <template\\n                    v-for=\\\"currency in currencies\\\"\\n                    {% if VUE3 %}\\n                    :key=\\\"currency.id\\\"\\n                    {% endif %}\\n                    #[`column-price-${currency.isoCode}`]=\\\"{ item, column, compact }\\\"\\n                >\\n                    <template v-if=\\\"showListPrices[priceGroup.ruleId] === false\\\">\\n                        <div\\n                            {% if VUE2 %}\\n                            :key=\\\"currency\\\"\\n                            {% endif %}\\n                            class=\\\"product-detail-context-prices__price-field-wrapper\\\"\\n                        >\\n                            \\n                            {% block sw_product_detail_prices_price_card_price_group_grid_currencies_list_inherit_field %}\\n                            <sw-inheritance-switch\\n                                v-if=\\\"!currency.isSystemDefault\\\"\\n                                class=\\\"sw-product-detail-context-prices__inherited-icon\\\"\\n                                :is-inherited=\\\"isPriceFieldInherited(item, currency)\\\"\\n                                :disabled=\\\"!acl.can('product.editor')\\\"\\n                                @inheritance-restore=\\\"onInheritanceRestore(item, currency)\\\"\\n                                @inheritance-remove=\\\"onInheritanceRemove(item, currency)\\\"\\n                            />\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_product_detail_prices_price_card_price_group_grid_currencies_list_price_field %}\\n                            <sw-price-field\\n                                :price=\\\"item.price\\\"\\n                                :default-price=\\\"findDefaultPriceOfRule(item)\\\"\\n                                :tax-rate=\\\"productTaxRate\\\"\\n                                :label=\\\"false\\\"\\n                                :compact=\\\"compact\\\"\\n                                :name=\\\"`${item.ruleId}-${currency.isoCode}-${item.quantityStart}`\\\"\\n                                :currency=\\\"currency\\\"\\n                                :disabled=\\\"!acl.can('product.editor')\\\"\\n                            />\\n                            {% endblock %}\\n                        </div>\\n                    </template>\\n\\n                    <template v-if=\\\"showListPrices[priceGroup.ruleId] !== false\\\">\\n                        <div\\n                            :key=\\\"`else-${currency}`\\\"\\n                            class=\\\"product-detail-context-prices__price-field-wrapper\\\"\\n                        >\\n                            <sw-inheritance-switch\\n                                v-if=\\\"!currency.isSystemDefault\\\"\\n                                class=\\\"sw-product-detail-context-prices__inherited-icon\\\"\\n                                :is-inherited=\\\"isPriceFieldInherited(item, currency)\\\"\\n                                :disabled=\\\"!acl.can('product.editor')\\\"\\n                                @inheritance-restore=\\\"onInheritanceRestore(item, currency)\\\"\\n                                @inheritance-remove=\\\"onInheritanceRemove(item, currency)\\\"\\n                            />\\n                            <sw-list-price-field\\n                                :price=\\\"item.price\\\"\\n                                :default-price=\\\"findDefaultPriceOfRule(item)\\\"\\n                                :vertical=\\\"true\\\"\\n                                :tax-rate=\\\"productTaxRate\\\"\\n                                :label=\\\"false\\\"\\n                                :compact=\\\"compact\\\"\\n                                :disabled=\\\"!acl.can('product.editor')\\\"\\n                                :currency=\\\"currency\\\"\\n                                hide-purchase-prices\\n                            />\\n                        </div>\\n                    </template>\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_detail_prices_price_card_price_group_grid_actions %}\\n                <template\\n                    #actions=\\\"{ item }\\\"\\n                >\\n\\n                    \\n                    {% block sw_product_detail_prices_price_card_price_group_grid_actions_delete %}\\n                    <sw-context-menu-item\\n                        variant=\\\"danger\\\"\\n                        class=\\\"product-detail-context-prices__context-delete\\\"\\n                        :disabled=\\\"!acl.can('product.editor')\\\"\\n                        @click=\\\"onPriceRuleDelete(item)\\\"\\n                    >\\n                        {{ $tc('sw-product.prices.contextMenuDelete') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n\\n                </template>\\n                {% endblock %}\\n\\n            </sw-data-grid>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_detail_prices_price_card_price_group_empty_state %}\\n            <div\\n                v-else\\n                class=\\\"sw-product-detail-context-prices__empty-state\\\"\\n            >\\n\\n                \\n                {% block sw_product_detail_prices_price_card_price_group_empty_state_warning %}\\n                <p>{{ $tc('sw-product.advancedPrices.newRuleWarning') }}</p>\\n                {% endblock %}\\n\\n            </div>\\n            {% endblock %}\\n\\n        </sw-card>\\n\\n        \\n        {% block sw_product_detail_prices_price_card_price_group_add_price_rule %}\\n        <sw-container\\n            justify=\\\"center\\\"\\n            columns=\\\"250x\\\"\\n        >\\n            \\n            {% block sw_product_detail_prices_price_card_price_group_add_price_rule_button %}\\n            <sw-button\\n                v-if=\\\"canAddPriceRule\\\"\\n                v-tooltip=\\\"{\\n                    message: $tc('sw-privileges.tooltip.warning'),\\n                    disabled: acl.can('product.editor'),\\n                    showOnDisabledElements: true\\n                }\\\"\\n                class=\\\"sw-product-detail-context-prices__add-new-rule\\\"\\n                variant=\\\"ghost\\\"\\n                :disabled=\\\"emptyPriceRuleExists || !acl.can('product.editor')\\\"\\n                size=\\\"small\\\"\\n                @click=\\\"onAddNewPriceGroup(null)\\\"\\n            >\\n                {{ $tc('sw-product.prices.buttonAddAdditionalPriceRuleGroup') }}\\n            </sw-button>\\n            {% endblock %}\\n        </sw-container>\\n        {% endblock %}\\n\\n    </sw-container>\\n\\n    <sw-card\\n        v-else\\n        class=\\\"sw-product-detail-context-prices__empty-state-card\\\"\\n        position-identifier=\\\"sw-product-detail-context-prices-empty-state-card\\\"\\n    >\\n        \\n        {% block sw_product_detail_prices_price_empty_state %}\\n        <div class=\\\"sw-product-detail-context-prices__empty-state\\\">\\n\\n            \\n            {% block sw_product_detail_prices_empty_state_image %}\\n            <img\\n                :src=\\\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\\\"\\n                alt=\\\"\\\"\\n            >\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_detail_prices_price_empty_state_text %}\\n            <template v-if=\\\"isChild\\\">\\n                \\n                {% block sw_product_detail_prices_price_empty_state_text_child %}\\n                <template v-if=\\\"isInherited\\\">\\n                    \\n                    {% block sw_product_detail_prices_price_empty_state_text_inherited %}\\n                    <p>{{ $tc('sw-product.advancedPrices.advancedPricesInherited') }}</p>\\n                    \\n                    {% block sw_product_detail_prices_price_empty_state_text_link %}\\n                    <router-link\\n                        v-if=\\\"isInherited\\\"\\n                        :to=\\\"{ name: 'sw.product.detail.prices', params: { id: product.parentId } }\\\"\\n                        class=\\\"sw-product-detail-context-prices__parent-prices-link\\\"\\n                    >\\n                        {{ $tc('sw-product.advancedPrices.linkAdvancedPricesOfParent') }}\\n                        <sw-icon\\n                            name=\\\"regular-long-arrow-right\\\"\\n                            small\\n                        />\\n                    </router-link>\\n                    {% endblock %}\\n                    {% endblock %}\\n                </template>\\n\\n                <template v-else>\\n                    \\n                    {% block sw_product_detail_prices_price_empty_state_text_not_inherited %}\\n                    <p>{{ $tc('sw-product.advancedPrices.advancedPricesNotInherited') }}</p>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n            </template>\\n\\n            <template v-else>\\n                \\n                {% block sw_product_detail_prices_price_empty_state_text_empty %}\\n                <p>{{ $tc('sw-product.advancedPrices.advancedPricesNotExisting') }}</p>\\n                {% endblock %}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_detail_prices_price_empty_state__inherit_switch %}\\n            <template v-if=\\\"isChild\\\">\\n                <div\\n                    class=\\\"sw-product-detail-context-prices__inherit-toggle-wrapper\\\"\\n                    :class=\\\"{ 'is--inherited': isInherited }\\\"\\n                >\\n                    <sw-switch-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"isInherited\\\"\\n                        {% else %}\\n                        v-model=\\\"isInherited\\\"\\n                        {% endif %}\\n                        class=\\\"sw-product-detail-context-prices__inherit-switch\\\"\\n                        :disabled=\\\"!acl.can('product.editor')\\\"\\n                    />\\n                    <sw-inheritance-switch\\n                        class=\\\"sw-product-detail-context-prices__inheritance-icon\\\"\\n                        :is-inherited=\\\"isInherited\\\"\\n                        :disabled=\\\"!acl.can('product.editor')\\\"\\n                        @inheritance-restore=\\\"restoreInheritance\\\"\\n                        @inheritance-remove=\\\"removeInheritance\\\"\\n                    />\\n                    \\n                    <label class=\\\"sw-product-detail-context-prices__inheritance-label\\\">\\n                        {{ $tc('sw-product.advancedPrices.inheritSwitchLabel') }}\\n                    </label>\\n                </div>\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_detail_prices_price_empty_state_select_rule %}\\n            <sw-select-rule-create\\n                v-if=\\\"rules.entity\\\"\\n                id=\\\"rule\\\"\\n                class=\\\"sw-product-detail-context-prices__empty-state-select-rule\\\"\\n                :placeholder=\\\"$tc('sw-product.advancedPrices.selectRule')\\\"\\n                :disabled=\\\"isInherited || !acl.can('product.editor')\\\"\\n                rule-aware-group-key=\\\"productPrices\\\"\\n                :restricted-rule-ids=\\\"Object.keys(priceRuleGroups)\\\"\\n                :restricted-rule-ids-tooltip-label=\\\"$tc('sw-product.advancedPrices.ruleAlreadyUsed')\\\"\\n                @save-rule=\\\"onAddNewPriceGroup($event)\\\"\\n            />\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n    </sw-card>\\n\\n    {% endblock %}\\n</sw-container>\\n{% endblock %}\\n\";"],"sourceRoot":""}