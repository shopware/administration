{"version":3,"sources":["webpack:///./src/module/sw-order/page/sw-order-list/sw-order-list.scss","webpack:///./src/module/sw-order/page/sw-order-list/index.js","webpack:///./src/module/sw-order/page/sw-order-list/sw-order-list.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","Criteria","Data","template","inject","mixins","getByName","data","orders","sortBy","sortDirection","isLoading","filterLoading","showDeleteModal","availableAffiliateCodes","availableCampaignCodes","availablePromotionCodes","filterCriteria","defaultFilters","storeKey","activeFilterNumber","showBulkEditModal","searchConfigEntity","metaInfo","title","this","$createTitle","computed","orderRepository","repositoryFactory","create","orderColumns","getOrderColumns","orderCriteria","_this","criteria","page","limit","setTerm","term","split","forEach","addSorting","sort","filter","addFilter","addAssociation","getAssociation","filterSelectCriteria","addAggregation","terms","listFilterOptions","property","label","$tc","placeholder","type","fromFieldLabel","toFieldLabel","fromPlaceholder","toPlaceholder","getStatusCriteria","dateType","showTimeframe","valueProperty","labelProperty","options","optionHasCriteria","optionNoCriteria","productCriteria","displayVariants","listFilters","filterFactory","currencyFilter","Filter","dateFilter","assetFilter","watch","handler","getList","deep","created","createdComponent","methods","loadFilterValues","onEdit","order","id","$router","push","name","params","onInlineEditSave","save","onChangeLanguage","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","Service","mergeWithStoredFilters","sent","addQueryScores","filters","length","entitySearchable","total","abrupt","freshSearchTerm","resetSorting","search","t0","stop","getBillingAddress","addresses","find","address","billingAddressId","disableDeletion","acl","can","documents","routerLink","allowResize","primary","dataIndex","align","inlineEdit","visible","getVariantFromOrderState","stateStyleDataProviderService","getStyle","stateMachineState","technicalName","colorCode","getVariantFromPaymentState","transactions","last","includes","getVariantFromDeliveryState","deliveries","_this3","then","_ref","_affiliateCodes$bucke","_campaignCodes$bucket","_promotionCodes$bucke","aggregations","affiliateCodes","campaignCodes","promotionCodes","buckets","_ref2","key","_ref3","_ref4","catch","onDelete","onCloseDeleteModal","onConfirmDelete","_this4","delete","$refs","orderGrid","resetSelection","updateCriteria","value","equals","onBulkEditItems","_this5","_callee2","ordersExcludeDelivery","excludeDelivery","_context2","$nextTick","Object","values","selection","transaction","item"],"mappings":"0GAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM,K,gHCFpCQ,G,UAAUC,SAAVD,OACAE,EAAaD,SAASE,KAAtBD,SAGO,WACXE,SCZW,q9qBDcXC,OAAQ,CACJ,oBACA,gCACA,MACA,gBACA,WAGJC,OAAQ,CACJN,EAAMO,UAAU,YAGpBC,KAAI,WACA,MAAO,CACHC,OAAQ,GACRC,OAAQ,gBACRC,cAAe,OACfC,WAAW,EACXC,eAAe,EACfC,iBAAiB,EACjBC,wBAAyB,GACzBC,uBAAwB,GACxBC,wBAAyB,GACzBC,eAAgB,GAChBC,eAAgB,CACZ,wBACA,uBACA,wBACA,kBACA,oBACA,qBACA,gBACA,wBACA,yBACA,wBACA,yBACA,uBACA,yBACA,wBACA,0BACA,wBACA,aACA,oBAEJC,SAAU,oBACVC,mBAAoB,EACpBC,mBAAmB,EACnBC,mBAAoB,UAI5BC,SAAQ,WACJ,MAAO,CACHC,MAAOC,KAAKC,iBAIpBC,SAAU,CACNC,gBAAe,WACX,OAAOH,KAAKI,kBAAkBC,OAAO,UAGzCC,aAAY,WACR,OAAON,KAAKO,mBAGhBC,cAAa,WAAI,IAADC,EAAA,KACNC,EAAW,IAAIlC,EAASwB,KAAKW,KAAMX,KAAKY,OA6B9C,OA3BAF,EAASG,QAAQb,KAAKc,MAEtBd,KAAKhB,OAAO+B,MAAM,KAAKC,SAAQ,SAAAhC,GAC3B0B,EAASO,WAAWzC,EAAS0C,KAAKlC,EAAQyB,EAAKxB,mBAGnDe,KAAKR,eAAewB,SAAQ,SAAAG,GACxBT,EAASU,UAAUD,MAGvBT,EAASW,eAAe,aACxBX,EAASW,eAAe,kBACxBX,EAASW,eAAe,gBACxBX,EAASW,eAAe,iBACxBX,EAASW,eAAe,YACxBX,EAASW,eAAe,aAExBX,EAASW,eAAe,qBAExBX,EAASY,eAAe,gBACnBD,eAAe,qBACfJ,WAAWzC,EAAS0C,KAAK,cAE9BR,EAASY,eAAe,cACnBD,eAAe,qBACfA,eAAe,kBAEbX,GAGXa,qBAAoB,WAChB,IAAMb,EAAW,IAAIlC,EAAS,EAAG,GAMjC,OAJAkC,EAASc,eAAehD,EAASiD,MAAM,iBAAkB,gBAAiB,KAAM,KAAM,OACtFf,EAASc,eAAehD,EAASiD,MAAM,gBAAiB,eAAgB,KAAM,KAAM,OACpFf,EAASc,eAAehD,EAASiD,MAAM,iBAAkB,yBAA0B,KAAM,KAAM,OAExFf,GAGXgB,kBAAiB,WACb,MAAO,CACH,uBAAwB,CACpBC,SAAU,eACVC,MAAO5B,KAAK6B,IAAI,6CAChBC,YAAa9B,KAAK6B,IAAI,oDAE1B,qBAAsB,CAClBF,SAAU,cACVI,KAAM,gBACNH,MAAO5B,KAAK6B,IAAI,2CAChBG,eAAgB,KAChBC,aAAc,KACdC,gBAAiBlC,KAAK6B,IAAI,uBAC1BM,cAAenC,KAAK6B,IAAI,sBAE5B,wBAAyB,CACrBF,SAAU,iCACVjB,SAAUV,KAAKoC,kBAAkB,2BACjCR,MAAO5B,KAAK6B,IAAI,8CAChBC,YAAa9B,KAAK6B,IAAI,qDAE1B,yBAA0B,CACtBF,SAAU,+BACVjB,SAAUV,KAAKoC,kBAAkB,wBACjCR,MAAO5B,KAAK6B,IAAI,+CAChBC,YAAa9B,KAAK6B,IAAI,sDAE1B,gBAAiB,CACbF,SAAU,oBACVjB,SAAUV,KAAKoC,kBAAkB,eACjCR,MAAO5B,KAAK6B,IAAI,uCAChBC,YAAa9B,KAAK6B,IAAI,8CAE1B,oBAAqB,CACjBF,SAAU,gBACVC,MAAO5B,KAAK6B,IAAI,0CAChBQ,SAAU,OACVL,eAAgB,KAChBC,aAAc,KACdK,eAAe,GAEnB,aAAc,CACVX,SAAU,OACVC,MAAO5B,KAAK6B,IAAI,oCAChBC,YAAa9B,KAAK6B,IAAI,2CAE1B,wBAAyB,CACrBF,SAAU,gBACVI,KAAM,sBACNH,MAAO5B,KAAK6B,IAAI,8CAChBC,YAAa9B,KAAK6B,IAAI,oDACtBU,cAAe,MACfC,cAAe,MACfC,QAASzC,KAAKX,yBAElB,uBAAwB,CACpBsC,SAAU,eACVI,KAAM,sBACNH,MAAO5B,KAAK6B,IAAI,6CAChBC,YAAa9B,KAAK6B,IAAI,mDACtBU,cAAe,MACfC,cAAe,MACfC,QAASzC,KAAKV,wBAElB,wBAAyB,CACrBqC,SAAU,yBACVI,KAAM,sBACNH,MAAO5B,KAAK6B,IAAI,8CAChBC,YAAa9B,KAAK6B,IAAI,oDACtBU,cAAe,MACfC,cAAe,MACfC,QAASzC,KAAKT,yBAElB,kBAAmB,CACfoC,SAAU,YACVC,MAAO5B,KAAK6B,IAAI,yCAChBC,YAAa9B,KAAK6B,IAAI,+CACtBa,kBAAmB1C,KAAK6B,IAAI,mDAC5Bc,iBAAkB3C,KAAK6B,IAAI,mDAE/B,wBAAyB,CACrBF,SAAU,6BACVC,MAAO5B,KAAK6B,IAAI,8CAChBC,YAAa9B,KAAK6B,IAAI,qDAE1B,yBAA0B,CACtBF,SAAU,4BACVC,MAAO5B,KAAK6B,IAAI,+CAChBC,YAAa9B,KAAK6B,IAAI,sDAE1B,yBAA0B,CACtBF,SAAU,yBACVC,MAAO5B,KAAK6B,IAAI,+CAChBC,YAAa9B,KAAK6B,IAAI,sDAE1B,0BAA2B,CACvBF,SAAU,0CACVC,MAAO5B,KAAK6B,IAAI,gDAChBC,YAAa9B,KAAK6B,IAAI,uDAE1B,wBAAyB,CACrBF,SAAU,+BACVC,MAAO5B,KAAK6B,IAAI,8CAChBC,YAAa9B,KAAK6B,IAAI,qDAE1B,mBAAoB,CAChBF,SAAU,oBACVC,MAAO5B,KAAK6B,IAAI,wCAChBC,YAAa9B,KAAK6B,IAAI,8CACtBnB,SAAUV,KAAK4C,gBACfC,iBAAiB,KAK7BC,YAAW,WACP,OAAO9C,KAAK+C,cAAc1C,OAAO,QAASL,KAAK0B,oBAGnDkB,gBAAe,WACX,IAAMA,EAAkB,IAAIpE,EAAS,EAAG,IAGxC,OAFAoE,EAAgBvB,eAAe,iBAExBuB,GAGXI,eAAc,WACV,OAAOzE,SAAS0E,OAAOpE,UAAU,aAGrCqE,WAAU,WACN,OAAO3E,SAAS0E,OAAOpE,UAAU,SAGrCsE,YAAW,WACP,OAAO5E,SAAS0E,OAAOpE,UAAU,WAIzCuE,MAAO,CACH5C,cAAe,CACX6C,QAAO,WACHrD,KAAKsD,WAETC,MAAM,IAIdC,QAAO,WACHxD,KAAKyD,oBAGTC,QAAS,CACLD,iBAAgB,WACZzD,KAAK2D,oBAGTC,OAAM,SAACC,GACCA,WAAOC,IACP9D,KAAK+D,QAAQC,KAAK,CACdC,KAAM,kBACNC,OAAQ,CACJJ,GAAID,EAAMC,OAM1BK,iBAAgB,SAACN,GACbA,EAAMO,QAGVC,iBAAgB,WACZrE,KAAKsD,WAGHA,QAAO,WAAI,IAADgB,EAAA,YAAAC,IAAAC,IAAAC,MAAA,SAAAC,IAAA,IAAAhE,EAAAiE,EAAA,OAAAH,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACU,OAAtBT,EAAKpF,WAAY,EAAK2F,EAAAE,KAAA,EAEDxG,SAASyG,QAAQ,iBACjCC,uBAAuBX,EAAK5E,SAAU4E,EAAK9D,eAAe,KAAD,EADlD,OAARE,EAAQmE,EAAAK,KAAAL,EAAAE,KAAA,EAGKT,EAAKa,eAAeb,EAAKxD,KAAMJ,GAAU,KAAD,EAEP,GAFlDA,EAAQmE,EAAAK,KAERZ,EAAK3E,mBAAqBe,EAAS0E,QAAQC,OAEtCf,EAAKgB,iBAAiB,CAADT,EAAAE,KAAA,SAEP,OADfT,EAAKpF,WAAY,EACjBoF,EAAKiB,MAAQ,EAAEV,EAAAW,OAAA,kBAOlB,OAFGlB,EAAKmB,iBACL/E,EAASgF,eACZb,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAG0BT,EAAKnE,gBAAgBwF,OAAOjF,GAAU,KAAD,GAAtDiE,EAAQE,EAAAK,KAEdZ,EAAKiB,MAAQZ,EAASY,MACtBjB,EAAKvF,OAAS4F,EACdL,EAAKpF,WAAY,EAAM2F,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,UAEvBP,EAAKpF,WAAY,EAAM,yBAAA2F,EAAAgB,UAAAnB,EAAA,mBA5BfH,IAgChBuB,kBAAiB,SAACjC,GACd,OAAOA,EAAMkC,UAAUC,MAAK,SAACC,GACzB,OAAOA,EAAQnC,KAAOD,EAAMqC,qBAIpCC,gBAAe,SAACtC,GACZ,OAAK7D,KAAKoG,IAAIC,IAAI,kBAIXxC,EAAMyC,UAAUjB,OAAS,GAGpC9E,gBAAe,WACX,MAAO,CAAC,CACJoB,SAAU,cACVC,MAAO,kCACP2E,WAAY,kBACZC,aAAa,EACbC,SAAS,GACV,CACC9E,SAAU,oBACVC,MAAO,mCACP4E,aAAa,GACd,CACC7E,SAAU,0BACV+E,UAAW,iDACX9E,MAAO,mCACP4E,aAAa,GACd,CACC7E,SAAU,mBACV+E,UAAW,wBACX9E,MAAO,qCACP4E,aAAa,GACd,CACC7E,SAAU,cACVC,MAAO,6BACP+E,MAAO,QACPH,aAAa,GACd,CACC7E,SAAU,yBACVC,MAAO,4BACP4E,aAAa,GACd,CACC7E,SAAU,6CACV+E,UAAW,sCACX9E,MAAO,uCACP4E,aAAa,GACd,CACC7E,SAAU,uCACV+E,UAAW,oCACX9E,MAAO,oCACP4E,aAAa,GACd,CACC7E,SAAU,gBACVC,MAAO,0BACP4E,aAAa,GACd,CACC7E,SAAU,gBACViF,WAAY,SACZhF,MAAO,oCACP4E,aAAa,EACbK,SAAS,GACV,CACClF,SAAU,eACViF,WAAY,SACZhF,MAAO,mCACP4E,aAAa,EACbK,SAAS,KAIjBC,yBAAwB,SAACjD,GAGrB,OAFc7D,KAAK+G,8BAA8BC,SAAS,cAAenD,EAAMoD,kBAAkBC,eAEpFC,WAGjBC,2BAA0B,SAACvD,GAGvB,IAFA,IAAIqD,EAAgBrD,EAAMwD,aAAaC,OAAOL,kBAAkBC,cAEvDhJ,EAAI,EAAGA,EAAI2F,EAAMwD,aAAahC,OAAQnH,GAAK,EAChD,IAAK,CAAC,YAAa,UAAUqJ,SAAS1D,EAAMwD,aAAanJ,GAAG+I,kBAAkBC,eAAgB,CAC1FA,EAAgBrD,EAAMwD,aAAanJ,GAAG+I,kBAAkBC,cACxD,MAMR,OAFclH,KAAK+G,8BAA8BC,SAAS,0BAA2BE,GAExEC,WAGjBK,4BAA2B,SAAC3D,GAMxB,OALc7D,KAAK+G,8BAA8BC,SAC7C,uBACAnD,EAAM4D,WAAW,GAAGR,kBAAkBC,eAG7BC,WAGjBxD,iBAAgB,WAAI,IAAD+D,EAAA,KAGf,OAFA1H,KAAKb,eAAgB,EAEda,KAAKG,gBAAgBwF,OAAO3F,KAAKuB,sBAAsBoG,MAAK,SAAAC,GAAuB,IAADC,EAAAC,EAAAC,EAAnBC,EAAYJ,EAAZI,aAC1DC,EAAkDD,EAAlDC,eAAgBC,EAAkCF,EAAlCE,cAAeC,EAAmBH,EAAnBG,eAQvC,OANAT,EAAKrI,wBAAqF,QAA9DwI,EAAGI,aAAc,EAAdA,EAAgBG,QAAQjH,QAAO,SAAAkH,GAAM,OAAAA,EAAHC,IAAcjD,OAAS,YAAE,IAAAwC,IAAI,GAC9FH,EAAKpI,uBAAmF,QAA7DwI,EAAGI,aAAa,EAAbA,EAAeE,QAAQjH,QAAO,SAAAoH,GAAM,OAAAA,EAAHD,IAAcjD,OAAS,YAAE,IAAAyC,IAAI,GAC5FJ,EAAKnI,wBAAqF,QAA9DwI,EAAGI,aAAc,EAAdA,EAAgBC,QAAQjH,QAAO,SAAAqH,GAAM,OAAAA,EAAHF,IAAcjD,OAAS,YAAE,IAAA0C,IAAI,GAE9FL,EAAKvI,eAAgB,EAEd6I,KACRS,OAAM,WACLf,EAAKvI,eAAgB,MAI7BuJ,SAAQ,SAAC5E,GACL9D,KAAKZ,gBAAkB0E,GAG3B6E,mBAAkB,WACd3I,KAAKZ,iBAAkB,GAG3BwJ,gBAAe,SAAC9E,GAAK,IAAD+E,EAAA,KAGhB,OAFA7I,KAAKZ,iBAAkB,EAEhBY,KAAKG,gBAAgB2I,OAAOhF,GAAI6D,MAAK,WACxCkB,EAAKE,MAAMC,UAAUC,iBACrBJ,EAAKvF,cAIb4F,eAAc,SAACxI,GACXV,KAAKW,KAAO,EAEZX,KAAKR,eAAiBkB,GAG1B0B,kBAAiB,SAAC+G,GACd,IAAMzI,EAAW,IAAIlC,EAAS,EAAG,IAIjC,OAFAkC,EAASU,UAAU5C,EAAS4K,OAAO,6BAA8BD,IAE1DzI,GAGL2I,gBAAe,WAAI,IAADC,EAAA,YAAA/E,IAAAC,IAAAC,MAAA,SAAA8E,IAAA,IAAAC,EAAAC,EAAA,OAAAjF,IAAAI,MAAA,SAAA8E,GAAA,cAAAA,EAAA5E,KAAA4E,EAAA3E,MAAA,cAAA2E,EAAA3E,KAAA,EACduE,EAAKK,YAAY,KAAD,EAEhBH,EAAwBI,OAAOC,OAAOP,EAAKP,MAAMC,UAAUc,WAAW3I,QAAO,SAAC0C,GAChF,OAAQA,EAAM4D,WAAW,MAEvBgC,EAAmBD,EAAsBnE,OAAS,EAAK,IAAM,IAEnEiE,EAAKvF,QAAQC,KAAK,CACdC,KAAM,qBACNC,OAAQ,CACJuF,qBAEL,wBAAAC,EAAA7D,UAAA0D,MAbiBhF,IAgBxBwF,YAAW,SAACC,GACR,IAAK,IAAI9L,EAAI,EAAGA,EAAI8L,EAAK3C,aAAahC,OAAQnH,GAAK,EAC/C,IAAK,CAAC,YAAa,UAAUqJ,SAASyC,EAAK3C,aAAanJ,GAAG+I,kBAAkBC,eACzE,OAAO8C,EAAK3C,aAAanJ,GAIjC,OAAO8L,EAAK3C,aAAaC","file":"static/js/46a901480d205748e24d.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-order-list.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"56f0307b\", content, true, {});","import template from './sw-order-list.html.twig';\nimport './sw-order-list.scss';\n\n/**\n * @package checkout\n */\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'stateStyleDataProviderService',\n        'acl',\n        'filterFactory',\n        'feature',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    data() {\n        return {\n            orders: [],\n            sortBy: 'orderDateTime',\n            sortDirection: 'DESC',\n            isLoading: false,\n            filterLoading: false,\n            showDeleteModal: false,\n            availableAffiliateCodes: [],\n            availableCampaignCodes: [],\n            availablePromotionCodes: [],\n            filterCriteria: [],\n            defaultFilters: [\n                'affiliate-code-filter',\n                'campaign-code-filter',\n                'promotion-code-filter',\n                'document-filter',\n                'order-date-filter',\n                'order-value-filter',\n                'status-filter',\n                'payment-status-filter',\n                'delivery-status-filter',\n                'payment-method-filter',\n                'shipping-method-filter',\n                'sales-channel-filter',\n                'billing-country-filter',\n                'customer-group-filter',\n                'shipping-country-filter',\n                'customer-group-filter',\n                'tag-filter',\n                'line-item-filter',\n            ],\n            storeKey: 'grid.filter.order',\n            activeFilterNumber: 0,\n            showBulkEditModal: false,\n            searchConfigEntity: 'order',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        orderRepository() {\n            return this.repositoryFactory.create('order');\n        },\n\n        orderColumns() {\n            return this.getOrderColumns();\n        },\n\n        orderCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            criteria.setTerm(this.term);\n\n            this.sortBy.split(',').forEach(sortBy => {\n                criteria.addSorting(Criteria.sort(sortBy, this.sortDirection));\n            });\n\n            this.filterCriteria.forEach(filter => {\n                criteria.addFilter(filter);\n            });\n\n            criteria.addAssociation('addresses');\n            criteria.addAssociation('billingAddress');\n            criteria.addAssociation('salesChannel');\n            criteria.addAssociation('orderCustomer');\n            criteria.addAssociation('currency');\n            criteria.addAssociation('documents');\n\n            criteria.addAssociation('stateMachineState');\n\n            criteria.getAssociation('transactions')\n                .addAssociation('stateMachineState')\n                .addSorting(Criteria.sort('createdAt'));\n\n            criteria.getAssociation('deliveries')\n                .addAssociation('stateMachineState')\n                .addAssociation('shippingMethod');\n\n            return criteria;\n        },\n\n        filterSelectCriteria() {\n            const criteria = new Criteria(1, 1);\n\n            criteria.addAggregation(Criteria.terms('affiliateCodes', 'affiliateCode', null, null, null));\n            criteria.addAggregation(Criteria.terms('campaignCodes', 'campaignCode', null, null, null));\n            criteria.addAggregation(Criteria.terms('promotionCodes', 'lineItems.payload.code', null, null, null));\n\n            return criteria;\n        },\n\n        listFilterOptions() {\n            return {\n                'sales-channel-filter': {\n                    property: 'salesChannel',\n                    label: this.$tc('sw-order.filters.salesChannelFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.salesChannelFilter.placeholder'),\n                },\n                'order-value-filter': {\n                    property: 'amountTotal',\n                    type: 'number-filter',\n                    label: this.$tc('sw-order.filters.orderValueFilter.label'),\n                    fromFieldLabel: null,\n                    toFieldLabel: null,\n                    fromPlaceholder: this.$tc('global.default.from'),\n                    toPlaceholder: this.$tc('global.default.to'),\n                },\n                'payment-status-filter': {\n                    property: 'transactions.stateMachineState',\n                    criteria: this.getStatusCriteria('order_transaction.state'),\n                    label: this.$tc('sw-order.filters.paymentStatusFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.paymentStatusFilter.placeholder'),\n                },\n                'delivery-status-filter': {\n                    property: 'deliveries.stateMachineState',\n                    criteria: this.getStatusCriteria('order_delivery.state'),\n                    label: this.$tc('sw-order.filters.deliveryStatusFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.deliveryStatusFilter.placeholder'),\n                },\n                'status-filter': {\n                    property: 'stateMachineState',\n                    criteria: this.getStatusCriteria('order.state'),\n                    label: this.$tc('sw-order.filters.statusFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.statusFilter.placeholder'),\n                },\n                'order-date-filter': {\n                    property: 'orderDateTime',\n                    label: this.$tc('sw-order.filters.orderDateFilter.label'),\n                    dateType: 'date',\n                    fromFieldLabel: null,\n                    toFieldLabel: null,\n                    showTimeframe: true,\n                },\n                'tag-filter': {\n                    property: 'tags',\n                    label: this.$tc('sw-order.filters.tagFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.tagFilter.placeholder'),\n                },\n                'affiliate-code-filter': {\n                    property: 'affiliateCode',\n                    type: 'multi-select-filter',\n                    label: this.$tc('sw-order.filters.affiliateCodeFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.affiliateCodeFilter.placeholder'),\n                    valueProperty: 'key',\n                    labelProperty: 'key',\n                    options: this.availableAffiliateCodes,\n                },\n                'campaign-code-filter': {\n                    property: 'campaignCode',\n                    type: 'multi-select-filter',\n                    label: this.$tc('sw-order.filters.campaignCodeFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.campaignCodeFilter.placeholder'),\n                    valueProperty: 'key',\n                    labelProperty: 'key',\n                    options: this.availableCampaignCodes,\n                },\n                'promotion-code-filter': {\n                    property: 'lineItems.payload.code',\n                    type: 'multi-select-filter',\n                    label: this.$tc('sw-order.filters.promotionCodeFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.promotionCodeFilter.placeholder'),\n                    valueProperty: 'key',\n                    labelProperty: 'key',\n                    options: this.availablePromotionCodes,\n                },\n                'document-filter': {\n                    property: 'documents',\n                    label: this.$tc('sw-order.filters.documentFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.documentFilter.placeholder'),\n                    optionHasCriteria: this.$tc('sw-order.filters.documentFilter.textHasCriteria'),\n                    optionNoCriteria: this.$tc('sw-order.filters.documentFilter.textNoCriteria'),\n                },\n                'payment-method-filter': {\n                    property: 'transactions.paymentMethod',\n                    label: this.$tc('sw-order.filters.paymentMethodFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.paymentMethodFilter.placeholder'),\n                },\n                'shipping-method-filter': {\n                    property: 'deliveries.shippingMethod',\n                    label: this.$tc('sw-order.filters.shippingMethodFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.shippingMethodFilter.placeholder'),\n                },\n                'billing-country-filter': {\n                    property: 'billingAddress.country',\n                    label: this.$tc('sw-order.filters.billingCountryFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.billingCountryFilter.placeholder'),\n                },\n                'shipping-country-filter': {\n                    property: 'deliveries.shippingOrderAddress.country',\n                    label: this.$tc('sw-order.filters.shippingCountryFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.shippingCountryFilter.placeholder'),\n                },\n                'customer-group-filter': {\n                    property: 'orderCustomer.customer.group',\n                    label: this.$tc('sw-order.filters.customerGroupFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.customerGroupFilter.placeholder'),\n                },\n                'line-item-filter': {\n                    property: 'lineItems.product',\n                    label: this.$tc('sw-order.filters.productFilter.label'),\n                    placeholder: this.$tc('sw-order.filters.productFilter.placeholder'),\n                    criteria: this.productCriteria,\n                    displayVariants: true,\n                },\n            };\n        },\n\n        listFilters() {\n            return this.filterFactory.create('order', this.listFilterOptions);\n        },\n\n        productCriteria() {\n            const productCriteria = new Criteria(1, 25);\n            productCriteria.addAssociation('options.group');\n\n            return productCriteria;\n        },\n\n        currencyFilter() {\n            return Shopware.Filter.getByName('currency');\n        },\n\n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        orderCriteria: {\n            handler() {\n                this.getList();\n            },\n            deep: true,\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.loadFilterValues();\n        },\n\n        onEdit(order) {\n            if (order?.id) {\n                this.$router.push({\n                    name: 'sw.order.detail',\n                    params: {\n                        id: order.id,\n                    },\n                });\n            }\n        },\n\n        onInlineEditSave(order) {\n            order.save();\n        },\n\n        onChangeLanguage() {\n            this.getList();\n        },\n\n        async getList() {\n            this.isLoading = true;\n\n            let criteria = await Shopware.Service('filterService')\n                .mergeWithStoredFilters(this.storeKey, this.orderCriteria);\n\n            criteria = await this.addQueryScores(this.term, criteria);\n\n            this.activeFilterNumber = criteria.filters.length;\n\n            if (!this.entitySearchable) {\n                this.isLoading = false;\n                this.total = 0;\n\n                return;\n            }\n\n            if (this.freshSearchTerm) {\n                criteria.resetSorting();\n            }\n\n            try {\n                const response = await this.orderRepository.search(criteria);\n\n                this.total = response.total;\n                this.orders = response;\n                this.isLoading = false;\n            } catch {\n                this.isLoading = false;\n            }\n        },\n\n        getBillingAddress(order) {\n            return order.addresses.find((address) => {\n                return address.id === order.billingAddressId;\n            });\n        },\n\n        disableDeletion(order) {\n            if (!this.acl.can('order.deleter')) {\n                return true;\n            }\n\n            return order.documents.length > 0;\n        },\n\n        getOrderColumns() {\n            return [{\n                property: 'orderNumber',\n                label: 'sw-order.list.columnOrderNumber',\n                routerLink: 'sw.order.detail',\n                allowResize: true,\n                primary: true,\n            }, {\n                property: 'salesChannel.name',\n                label: 'sw-order.list.columnSalesChannel',\n                allowResize: true,\n            }, {\n                property: 'orderCustomer.firstName',\n                dataIndex: 'orderCustomer.lastName,orderCustomer.firstName',\n                label: 'sw-order.list.columnCustomerName',\n                allowResize: true,\n            }, {\n                property: 'billingAddressId',\n                dataIndex: 'billingAddress.street',\n                label: 'sw-order.list.columnBillingAddress',\n                allowResize: true,\n            }, {\n                property: 'amountTotal',\n                label: 'sw-order.list.columnAmount',\n                align: 'right',\n                allowResize: true,\n            }, {\n                property: 'stateMachineState.name',\n                label: 'sw-order.list.columnState',\n                allowResize: true,\n            }, {\n                property: 'transactions.last().stateMachineState.name',\n                dataIndex: 'transactions.stateMachineState.name',\n                label: 'sw-order.list.columnTransactionState',\n                allowResize: true,\n            }, {\n                property: 'deliveries[0].stateMachineState.name',\n                dataIndex: 'deliveries.stateMachineState.name',\n                label: 'sw-order.list.columnDeliveryState',\n                allowResize: true,\n            }, {\n                property: 'orderDateTime',\n                label: 'sw-order.list.orderDate',\n                allowResize: true,\n            }, {\n                property: 'affiliateCode',\n                inlineEdit: 'string',\n                label: 'sw-order.list.columnAffiliateCode',\n                allowResize: true,\n                visible: false,\n            }, {\n                property: 'campaignCode',\n                inlineEdit: 'string',\n                label: 'sw-order.list.columnCampaignCode',\n                allowResize: true,\n                visible: false,\n            }];\n        },\n\n        getVariantFromOrderState(order) {\n            const style = this.stateStyleDataProviderService.getStyle('order.state', order.stateMachineState.technicalName);\n\n            return style.colorCode;\n        },\n\n        getVariantFromPaymentState(order) {\n            let technicalName = order.transactions.last().stateMachineState.technicalName;\n            // set the payment status to the first transaction that is not cancelled\n            for (let i = 0; i < order.transactions.length; i += 1) {\n                if (!['cancelled', 'failed'].includes(order.transactions[i].stateMachineState.technicalName)) {\n                    technicalName = order.transactions[i].stateMachineState.technicalName;\n                    break;\n                }\n            }\n\n            const style = this.stateStyleDataProviderService.getStyle('order_transaction.state', technicalName);\n\n            return style.colorCode;\n        },\n\n        getVariantFromDeliveryState(order) {\n            const style = this.stateStyleDataProviderService.getStyle(\n                'order_delivery.state',\n                order.deliveries[0].stateMachineState.technicalName,\n            );\n\n            return style.colorCode;\n        },\n\n        loadFilterValues() {\n            this.filterLoading = true;\n\n            return this.orderRepository.search(this.filterSelectCriteria).then(({ aggregations }) => {\n                const { affiliateCodes, campaignCodes, promotionCodes } = aggregations;\n\n                this.availableAffiliateCodes = affiliateCodes?.buckets.filter(({ key }) => key.length > 0) ?? [];\n                this.availableCampaignCodes = campaignCodes?.buckets.filter(({ key }) => key.length > 0) ?? [];\n                this.availablePromotionCodes = promotionCodes?.buckets.filter(({ key }) => key.length > 0) ?? [];\n\n                this.filterLoading = false;\n\n                return aggregations;\n            }).catch(() => {\n                this.filterLoading = false;\n            });\n        },\n\n        onDelete(id) {\n            this.showDeleteModal = id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete(id) {\n            this.showDeleteModal = false;\n\n            return this.orderRepository.delete(id).then(() => {\n                this.$refs.orderGrid.resetSelection();\n                this.getList();\n            });\n        },\n\n        updateCriteria(criteria) {\n            this.page = 1;\n\n            this.filterCriteria = criteria;\n        },\n\n        getStatusCriteria(value) {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(Criteria.equals('stateMachine.technicalName', value));\n\n            return criteria;\n        },\n\n        async onBulkEditItems() {\n            await this.$nextTick();\n\n            const ordersExcludeDelivery = Object.values(this.$refs.orderGrid.selection).filter((order) => {\n                return !order.deliveries[0];\n            });\n            const excludeDelivery = (ordersExcludeDelivery.length > 0) ? '1' : '0';\n\n            this.$router.push({\n                name: 'sw.bulk.edit.order',\n                params: {\n                    excludeDelivery,\n                },\n            });\n        },\n\n        transaction(item) {\n            for (let i = 0; i < item.transactions.length; i += 1) {\n                if (!['cancelled', 'failed'].includes(item.transactions[i].stateMachineState.technicalName)) {\n                    return item.transactions[i];\n                }\n            }\n\n            return item.transactions.last();\n        },\n    },\n};\n","export default \"\\n{% block sw_order_list %}\\n<sw-page class=\\\"sw-order-list\\\">\\n    \\n    {% block sw_order_list_search_bar %}\\n    <template #search-bar>\\n        <sw-search-bar\\n            initial-search-type=\\\"order\\\"\\n            :initial-search=\\\"term\\\"\\n            @search=\\\"onSearch\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_list_smart_bar_header %}\\n    <template #smart-bar-header>\\n        \\n        {% block sw_order_list_smart_bar_header_title %}\\n        <h2>\\n            \\n            {% block sw_order_list_smart_bar_header_title_text %}\\n            {{ $tc('sw-order.list.textOrders') }}\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_list_smart_bar_header_amount %}\\n            <span\\n                v-if=\\\"!isLoading\\\"\\n                class=\\\"sw-page__smart-bar-amount\\\"\\n            >\\n                ({{ total }})\\n            </span>\\n            {% endblock %}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_list_smart_bar_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_order_list_smart_bar_actions_slot %}\\n\\n        \\n        {% block sw_order_list_smart_bar_actions_add %}\\n        <sw-button\\n            v-tooltip=\\\"{\\n                message: $tc('sw-privileges.tooltip.warning'),\\n                disabled: acl.can('order.creator'),\\n                showOnDisabledElements: true\\n            }\\\"\\n            class=\\\"sw-order-list__add-order\\\"\\n            :disabled=\\\"!acl.can('order.creator')\\\"\\n            variant=\\\"primary\\\"\\n            :router-link=\\\"{ name: 'sw.order.create' }\\\"\\n        >\\n            {{ $tc('sw-order.list.buttonAddOrder') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_list_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch @on-change=\\\"onChangeLanguage\\\" />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_list_content %}\\n    <template #content>\\n\\n        \\n        {% block sw_order_list_content_slot %}\\n        <div class=\\\"sw-order-list__content\\\">\\n\\n            \\n            {% block sw_order_list_grid %}\\n            <sw-data-grid\\n                v-if=\\\"entitySearchable\\\"\\n                ref=\\\"orderGrid\\\"\\n                :data-source=\\\"orders\\\"\\n                :columns=\\\"orderColumns\\\"\\n                :full-page=\\\"true\\\"\\n                :show-settings=\\\"true\\\"\\n                :show-selection=\\\"true\\\"\\n                :sort-by=\\\"currentSortBy\\\"\\n                :sort-direction=\\\"sortDirection\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :allow-column-edit=\\\"true\\\"\\n                identifier=\\\"sw-order-list\\\"\\n                :disable-data-fetching=\\\"true\\\"\\n                :maximum-select-items=\\\"100\\\"\\n                @column-sort=\\\"onSortColumn\\\"\\n                @page-change=\\\"onPageChange\\\"\\n                @selection-change=\\\"updateSelection\\\"\\n            >\\n\\n                \\n                {% block sw_order_list_grid_columns %}\\n                \\n                {% block sw_order_list_grid_columns_order_number %}\\n                <template #column-orderNumber=\\\"{ item }\\\">\\n                    \\n                    {% block sw_order_list_grid_order_number_link %}\\n                    <router-link :to=\\\"{ name: 'sw.order.detail', params: { id: item.id } }\\\">\\n                        {{ item.orderNumber }}\\n                    </router-link>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_order_list_grid_label_manual_order %}\\n                    <sw-label\\n                        v-if=\\\"item.createdById\\\"\\n                        appearance=\\\"pill\\\"\\n                        size=\\\"small\\\"\\n                        class=\\\"sw-order-list__manual-order-label\\\"\\n                    >\\n                        {{ $tc('sw-order.list.labelManualOrder') }}\\n                    </sw-label>\\n                    {% endblock %}\\n\\n                    <sw-button\\n                        v-if=\\\"item.customerComment\\\"\\n                        v-tooltip=\\\"{ message: item.customerComment }\\\"\\n                        class=\\\"sw-order-list__tooltip-order-comment\\\"\\n                        size=\\\"x-small\\\"\\n                    >\\n                        <sw-icon\\n                            name=\\\"regular-comments\\\"\\n                            size=\\\"14px\\\"\\n                        />\\n                    </sw-button>\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_list_grid_columns_customer_name %}\\n                <template #column-orderCustomer.firstName=\\\"{ item }\\\">\\n                    <router-link\\n                        v-if=\\\"item.orderCustomer && item.orderCustomer.customerId\\\"\\n                        :to=\\\"{ name: 'sw.customer.detail', params: { id: item.orderCustomer.customerId } }\\\"\\n                    >\\n                        {{ item.orderCustomer.lastName }}, {{ item.orderCustomer.firstName }}\\n                    </router-link>\\n                    <template v-else-if=\\\"item.orderCustomer\\\">\\n                        {{ item.orderCustomer.lastName }}, {{ item.orderCustomer.firstName }}\\n                    </template>\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_list_grid_columns_billing_address %}\\n                <template #column-billingAddressId=\\\"{ item }\\\">\\n                    {{ item.billingAddress.street }},\\n                    {{ item.billingAddress.zipcode }}\\n                    {{ item.billingAddress.city }}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_list_grid_columns_amount %}\\n                <template #column-amountTotal=\\\"{ item }\\\">\\n                    {{ currencyFilter(item.amountTotal, item.currency.translated.shortName) }}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_list_grid_columns_state %}\\n                <template #column-stateMachineState.name=\\\"{ item }\\\">\\n                    <div\\n                        class=\\\"sw-order-list__state\\\"\\n                    >\\n                        <sw-color-badge\\n                            :color=\\\"getVariantFromOrderState(item)\\\"\\n                            rounded\\n                        />\\n\\n                        {{ item.stateMachineState.translated.name }}\\n                    </div>\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_list_grid_columns_transaction_state %}\\n                <template #column-transactions.last().stateMachineState.name=\\\"{ item }\\\">\\n                    <div\\n                        v-if=\\\"item.transactions && item.transactions[0]\\\"\\n                        class=\\\"sw-order-list__state\\\"\\n                    >\\n                        <sw-color-badge\\n                            v-if=\\\"item.transactions && item.transactions[0]\\\"\\n                            :color=\\\"getVariantFromPaymentState(item)\\\"\\n                            rounded\\n                        />\\n\\n                        {{ transaction(item).stateMachineState.translated.name }}\\n                    </div>\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_list_grid_columns_delivery_state %}\\n                <template #column-deliveries[0].stateMachineState.name=\\\"{ item }\\\">\\n                    <div\\n                        v-if=\\\"item.deliveries && item.deliveries[0]\\\"\\n                        class=\\\"sw-order-list__state\\\"\\n                    >\\n                        <sw-color-badge\\n                            v-if=\\\"item.deliveries && item.deliveries[0]\\\"\\n                            :color=\\\"getVariantFromDeliveryState(item)\\\"\\n                            rounded\\n                        />\\n\\n                        {{ item.deliveries[0].stateMachineState.translated.name }}\\n                    </div>\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_list_grid_columns_order_date %}\\n                <template #column-orderDateTime=\\\"{ item }\\\">\\n                    <sw-time-ago :date=\\\"item.orderDateTime\\\" />\\n                </template>\\n                {% endblock %}\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_list_grid_columns_actions %}\\n                <template #actions=\\\"{ item }\\\">\\n                    \\n                    {% block sw_order_list_grid_columns_actions_view %}\\n                    <sw-context-menu-item\\n                        class=\\\"sw-order-list__order-view-action\\\"\\n                        :router-link=\\\"{ name: 'sw.order.detail', params: { id: item.id } }\\\"\\n                    >\\n                        {{ $tc('sw-order.list.contextMenuView') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_order_list_grid_columns_actions_delete %}\\n                    <sw-context-menu-item\\n                        variant=\\\"danger\\\"\\n                        :disabled=\\\"disableDeletion(item)\\\"\\n                        @click=\\\"onDelete(item.id)\\\"\\n                    >\\n                        {{ $tc('sw-order.list.contextMenuDelete') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_list_grid_action_modals %}\\n                <template #action-modals=\\\"{ item }\\\">\\n                    \\n                    {% block sw_order_list_delete_modal %}\\n                    <sw-modal\\n                        v-if=\\\"showDeleteModal === item.id\\\"\\n                        :title=\\\"$tc('global.default.warning')\\\"\\n                        variant=\\\"small\\\"\\n                        @modal-close=\\\"onCloseDeleteModal\\\"\\n                    >\\n                        \\n                        {% block sw_order_list_delete_modal_confirm_delete_text %}\\n                        <p class=\\\"sw-order-list__confirm-delete-text\\\">\\n                            {{ $tc('sw-order.list.textDeleteConfirm', 0, { orderNumber: `${item.orderNumber}` }) }}\\n                        </p>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_list_delete_modal_footer %}\\n                        <template #modal-footer>\\n                            \\n                            {% block sw_order_list_delete_modal_cancel %}\\n                            <sw-button\\n                                size=\\\"small\\\"\\n                                @click=\\\"onCloseDeleteModal\\\"\\n                            >\\n                                {{ $tc('sw-order.list.buttonCancel') }}\\n                            </sw-button>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_order_list_delete_modal_confirm %}\\n                            <sw-button\\n                                variant=\\\"danger\\\"\\n                                size=\\\"small\\\"\\n                                @click=\\\"onConfirmDelete(item.id)\\\"\\n                            >\\n                                {{ $tc('sw-order.list.buttonDelete') }}\\n                            </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                <template #pagination>\\n                    \\n                    {% block sw_order_list_grid_pagination %}\\n                    <sw-pagination\\n                        :page=\\\"page\\\"\\n                        :limit=\\\"limit\\\"\\n                        :total=\\\"total\\\"\\n                        :total-visible=\\\"7\\\"\\n                        @page-change=\\\"onPageChange\\\"\\n                    />\\n                    {% endblock %}\\n                </template>\\n\\n                \\n                {% block sw_order_list_bulk_selected_actions_content %}\\n                <template #bulk>\\n                    \\n                    {% block sw_order_list_bulk_selected_actions_content_bulk_edit %}\\n                    <a\\n                        v-if=\\\"acl.can('order.editor')\\\"\\n                        class=\\\"link link-primary\\\"\\n                        role=\\\"link\\\"\\n                        tabindex=\\\"0\\\"\\n                        @click=\\\"showBulkEditModal = true\\\"\\n                        @keydown.enter=\\\"showBulkEditModal = true\\\"\\n                    >\\n                        {{ $tc('global.sw-bulk-edit-modal.bulkEdit') }}\\n                    </a>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_list_bulk_edit_modal %}\\n                <template #bulk-modals=\\\"{ selection }\\\">\\n                    <sw-bulk-edit-modal\\n                        v-if=\\\"showBulkEditModal\\\"\\n                        ref=\\\"bulkEditModal\\\"\\n                        class=\\\"sw-order-bulk-edit-modal\\\"\\n                        :selection=\\\"selection\\\"\\n                        :bulk-grid-edit-columns=\\\"orderColumns\\\"\\n                        @edit-items=\\\"onBulkEditItems\\\"\\n                        @modal-close=\\\"showBulkEditModal = false\\\"\\n                    >\\n                        \\n                        {% block sw_order_list_bulk_edit_grid_columns_order_number %}\\n                        <template #column-orderNumber=\\\"{ item }\\\">\\n                            \\n                            {% block sw_order_list_bulk_edit_grid_order_number_link %}\\n                            <router-link\\n                                :to=\\\"{ name: 'sw.order.detail', params: { id: item.id } }\\\"\\n                                target=\\\"_blank\\\"\\n                                rel=\\\"noreferrer noopener\\\"\\n                            >\\n                                {{ item.orderNumber }}\\n                            </router-link>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_order_list_bulk_edit_grid_label_manual_order %}\\n                            <sw-label\\n                                v-if=\\\"item.createdById\\\"\\n                                appearance=\\\"pill\\\"\\n                                size=\\\"small\\\"\\n                                class=\\\"sw-order-bulk_edit__manual-order-label\\\"\\n                            >\\n                                {{ $tc('sw-order.list.labelManualOrder') }}\\n                            </sw-label>\\n                            {% endblock %}\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_list_bulk_edit_grid_columns_customer_name %}\\n                        <template #column-orderCustomer.firstName=\\\"{ item }\\\">\\n                            <router-link\\n                                v-if=\\\"item.orderCustomer\\\"\\n                                :to=\\\"{ name: 'sw.customer.detail', params: { id: item.orderCustomer.customerId } }\\\"\\n                                target=\\\"_blank\\\"\\n                                rel=\\\"noreferrer noopener\\\"\\n                            >\\n                                {{ item.orderCustomer.lastName }}, {{ item.orderCustomer.firstName }}\\n                            </router-link>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_list_bulk_edit_grid_columns_billing_address %}\\n                        <template #column-billingAddressId=\\\"{ item }\\\">\\n                            {{ item.billingAddress.street }},\\n                            {{ item.billingAddress.zipcode }}\\n                            {{ item.billingAddress.city }}\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_list_bulk_edit_grid_columns_amount %}\\n                        <template #column-amountTotal=\\\"{ item }\\\">\\n                            {{ currencyFilter(item.amountTotal, item.currency.translated.shortName) }}\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_list_bulk_edit_grid_columns_state %}\\n                        <template #column-stateMachineState.name=\\\"{ item }\\\">\\n                            <sw-label\\n                                :variant=\\\"getVariantFromOrderState(item)\\\"\\n                                appearance=\\\"pill\\\"\\n                            >\\n                                {{ item.stateMachineState.translated.name }}\\n                            </sw-label>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_list_bulk_edit_grid_columns_transaction_state %}\\n                        <template #column-transactions.last().stateMachineState.name=\\\"{ item }\\\">\\n                            <sw-label\\n                                v-if=\\\"item.transactions && item.transactions[0]\\\"\\n                                :variant=\\\"getVariantFromPaymentState(item)\\\"\\n                                appearance=\\\"pill\\\"\\n                            >\\n                                {{ item.transactions.last().stateMachineState.translated.name }}\\n                            </sw-label>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_list_bulk_edit_grid_columns_delivery_state %}\\n                        <template #column-deliveries[0].stateMachineState.name=\\\"{ item }\\\">\\n                            <sw-label\\n                                v-if=\\\"item.deliveries && item.deliveries[0]\\\"\\n                                :variant=\\\"getVariantFromDeliveryState(item)\\\"\\n                                appearance=\\\"pill\\\"\\n                            >\\n                                {{ item.deliveries[0].stateMachineState.translated.name }}\\n                            </sw-label>\\n                        </template>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_order_list_bulk_edit_grid_columns_order_date %}\\n                        <template #column-orderDateTime=\\\"{ item }\\\">\\n                            {{ dateFilter(item.orderDateTime, { hour: '2-digit', minute: '2-digit' }) }}\\n                        </template>\\n                        {% endblock %}\\n                    </sw-bulk-edit-modal>\\n                </template>\\n                {% endblock %}\\n            </sw-data-grid>\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_list_empty_state %}\\n            <template v-if=\\\"!isLoading && !total\\\">\\n                <sw-empty-state\\n                    v-if=\\\"filterCriteria.length || isValidTerm(term)\\\"\\n                    :title=\\\"$tc('sw-empty-state.messageNoResultTitle')\\\"\\n                >\\n                    <template #icon>\\n                        <img\\n                            :src=\\\"assetFilter('/administration/static/img/empty-states/order-empty-state.svg')\\\"\\n                            :alt=\\\"$tc('sw-empty-state.messageNoResultTitle')\\\"\\n                        >\\n                    </template>\\n\\n                    <template #default>\\n                        {{ $tc('sw-empty-state.messageNoResultSublineBefore') }}\\n                        <router-link\\n                            class=\\\"sw-empty-state__description-link\\\"\\n                            :to=\\\"{ name: 'sw.profile.index.searchPreferences' }\\\"\\n                        >\\n                            {{ $tc('sw-empty-state.messageNoResultSublineLink') }}\\n                        </router-link>\\n                        {{ $tc('sw-empty-state.messageNoResultSublineAfter') }}\\n                    </template>\\n                </sw-empty-state>\\n                <sw-empty-state\\n                    v-else\\n                    :title=\\\"$tc('sw-order.list.messageEmpty')\\\"\\n                >\\n                    <template #icon>\\n                        <img\\n                            :src=\\\"assetFilter('/administration/static/img/empty-states/order-empty-state.svg')\\\"\\n                            :alt=\\\"$tc('sw-order.list.messageEmpty')\\\"\\n                        >\\n                    </template>\\n                </sw-empty-state>\\n            </template>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n    </template>\\n\\n    \\n    {% block sw_order_list_sidebar %}\\n    <template #sidebar>\\n        <sw-sidebar class=\\\"sw-order-list__sidebar\\\">\\n            \\n            {% block sw_order_list_sidebar_refresh %}\\n            <sw-sidebar-item\\n                icon=\\\"regular-undo\\\"\\n                :title=\\\"$tc('sw-order.list.titleSidebarItemRefresh')\\\"\\n                @click=\\\"onRefresh\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_list_sidebar_filter %}\\n            <sw-sidebar-filter-panel\\n                entity=\\\"customer\\\"\\n                :store-key=\\\"storeKey\\\"\\n                :filters=\\\"listFilters\\\"\\n                :defaults=\\\"defaultFilters\\\"\\n                :active-filter-number=\\\"activeFilterNumber\\\"\\n                @criteria-changed=\\\"updateCriteria\\\"\\n            />\\n            {% endblock %}\\n        </sw-sidebar>\\n    </template>\\n    {% endblock %}\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}