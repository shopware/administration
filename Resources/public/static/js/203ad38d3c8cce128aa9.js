(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[86316],{494092:function(){},386316:function(t,e,r){"use strict";r.r(e),r.d(e,{default:function(){return s}}),r(969252);let{Criteria:n}=Shopware.Data,{mapPropertyErrors:a}=Shopware.Component.getComponentHelper(),o=Shopware.Classes.ShopwareError;var s={template:'\n{% block sw_category_detail_products %}\n<div class="sw-category-detail-products">\n\n    \n    {% block sw_category_detail_product_assignment %}\n    <sw-many-to-many-assignment-card\n        v-if="category.type !== \'folder\'"\n        :title="$tc(\'sw-category.base.products.productAssignmentHeadline\')"\n        :entity-collection="category.products"\n        :columns="productColumns"\n        :is-loading="isLoading"\n        :disabled="!acl.can(\'category.editor\')"\n        :local-mode="category.isNew()"\n        :criteria="productCriteria"\n        :select-label="$tc(\'sw-category.base.products.productAssignmentLabel\')"\n        :placeholder="$tc(\'sw-category.base.products.productAssignmentPlaceholder\')"\n        @paginate="onPaginateManualProductAssignment"\n    >\n\n        \n        {% block sw_category_detail_product_assignment_type_select %}\n        <template #prepend-select>\n\n            \n            {% block sw_category_detail_product_assignment_type_select_field %}\n            <sw-single-select\n                v-model:value="category.productAssignmentType"\n                class="sw-category-detail-products__product-assignment-type-select"\n                :label="$tc(\'sw-category.base.products.productAssignmentTypeLabel\')"\n                :error="categoryProductAssignmentTypeError"\n                :options="productAssignmentTypes"\n                :disabled="!acl.can(\'category.editor\')"\n                required\n                show-clearable-button\n            />\n            {% endblock %}\n\n            \n            {% block sw_category_detail_product_assignment_manual_alert %}\n            <sw-alert\n                v-if="category.productAssignmentType === \'product_stream\' && manualAssignedProductsCount > 0"\n                variant="info"\n            >\n                {{ $tc(\'sw-category.base.products.alertManualAssignedProductsOnAssignmentTypeStream\') }}\n            </sw-alert>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        \n        {% block sw_category_detail_product_assignment_stream_select %}\n        <template\n            v-if="category.productAssignmentType === \'product_stream\'"\n            #select\n        >\n\n            \n            {% block sw_category_detail_product_assignment_stream_select_field %}\n            <sw-entity-single-select\n                v-model:value="category.productStreamId"\n                class="sw-category-detail-products__product-stream-select"\n                entity="product_stream"\n                show-clearable-button\n                :disabled="!acl.can(\'category.editor\')"\n                :label="$tc(\'sw-category.base.products.productAssignmentTypeStreamLabel\')"\n                :help-text="dynamicProductGroupHelpText"\n                :placeholder="$tc(\'sw-category.base.products.productAssignmentTypeStreamPlaceholder\')"\n                :error="productStreamInvalidError || categoryProductStreamIdError"\n            />\n            {% endblock %}\n\n            \n            {% block sw_category_detail_product_assignment_stream_preview_link %}\n            <div class="sw-category-detail-products__product-stream-preview-link">\n                <router-link\n                    v-if="category.productStreamId"\n                    :to="{ name: \'sw.product.stream.detail\', params: { id: category.productStreamId } }"\n                >\n                    {{ $tc(\'sw-category.base.products.dynamicProductGroupDetailLinkText\') }}\n                    <sw-icon\n                        name="regular-long-arrow-right"\n                        small\n                    />\n                </router-link>\n            </div>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        \n        {% block sw_category_detail_product_assignment_stream_preview_grid %}\n        <template\n            v-if="category.productAssignmentType === \'product_stream\'"\n            #data-grid\n        >\n            <sw-product-stream-grid-preview\n                :filters="productStreamFilter"\n                :columns="productColumns"\n            />\n        </template>\n        {% endblock %}\n\n        \n        {% block sw_category_detail_product_assignment_column_name %}\n        <template #[nameColumn]="{ item, column }">\n            <router-link\n                :to="{ name: column.routerLink, params: { id: item.id } }"\n            >\n                <sw-product-variant-info :variations="item.variation">\n                    {{ item.name || item.translated.name }}\n                </sw-product-variant-info>\n            </router-link>\n        </template>\n        {% endblock %}\n\n        \n        {% block sw_category_detail_product_assignment_column_manufacturer %}\n        <template #[manufacturerColumn]="{ item, column }">\n            <router-link\n                v-if="getManufacturer(item)"\n                :to="{ name: column.routerLink, params: { id: item.manufacturerId } }"\n            >\n                {{ getManufacturer(item).name || getManufacturer(item).translated.name }}\n            </router-link>\n            <span v-else></span>\n        </template>\n        {% endblock %}\n\n        \n        {% block sw_category_detail_product_assignment_empty_state %}\n        <template #empty-state>\n            <sw-empty-state\n                :title="$tc(\'sw-category.base.products.productAssignmentEmptyStateDescription\')"\n                :subline="\'\'"\n                auto-height\n            >\n                <template #icon>\n                    <img\n                        :src="assetFilter(\'/administration/static/img/empty-states/products-empty-state.svg\')"\n                        :alt="$tc(\'sw-category.base.products.productAssignmentEmptyStateDescription\')"\n                    >\n                </template>\n            </sw-empty-state>\n        </template>\n        {% endblock %}\n\n    </sw-many-to-many-assignment-card>\n    {% endblock %}\n\n</div>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory","acl"],mixins:["placeholder"],props:{isLoading:{type:Boolean,required:!0}},data(){return{productStreamFilter:null,productStreamInvalid:!1,manualAssignedProductsCount:0,parentProducts:[]}},computed:{category(){return Shopware.State.get("swCategoryDetail").category},productStreamRepository(){return this.repositoryFactory.create("product_stream")},productRepository(){return this.repositoryFactory.create("product")},productColumns(){return[{property:"name",label:this.$tc("sw-category.base.products.columnNameLabel"),dataIndex:"name",routerLink:"sw.product.detail",sortable:!1},{property:"manufacturer.name",label:this.$tc("sw-category.base.products.columnManufacturerLabel"),routerLink:"sw.manufacturer.detail",sortable:!1}]},manufacturerColumn(){return"column-manufacturer.name"},nameColumn(){return"column-name"},productCriteria(){return new n(1,10).addAssociation("options.group").addAssociation("manufacturer").addFilter(n.multi("OR",[n.equals("parentId",null),n.multi("AND",[n.not("AND",[n.equals("parentId",null)]),n.equals("categories.id",this.category.id)])]))},productStreamInvalidError(){return this.productStreamInvalid?new o({code:"PRODUCT_STREAM_INVALID",detail:this.$tc("sw-category.base.products.dynamicProductGroupInvalidMessage")}):null},...a("category",["productStreamId","productAssignmentType"]),productAssignmentTypes(){return[{value:"product",label:this.$tc("sw-category.base.products.productAssignmentTypeManualLabel")},{value:"product_stream",label:this.$tc("sw-category.base.products.productAssignmentTypeStreamLabel")}]},dynamicProductGroupHelpText(){let t=this.$tc("sw-category.base.products.dynamicProductGroupHelpText.label",0,{link:`<sw-internal-link
                           :router-link=${JSON.stringify({name:"sw.product.stream.index"})}
                           :inline="true">
                           ${this.$tc("sw-category.base.products.dynamicProductGroupHelpText.linkText")}
                       </sw-internal-link>`});try{new URL(this.$tc("sw-category.base.products.dynamicProductGroupHelpText.videoUrl"))}catch{return t}return`${t}
                    <br>
                    <sw-external-link
                        href="${this.$tc("sw-category.base.products.dynamicProductGroupHelpText.videoUrl")}">
                        ${this.$tc("sw-category.base.products.dynamicProductGroupHelpText.videoLink")}
                    </sw-external-link>`},assetFilter(){return Shopware.Filter.getByName("asset")}},watch:{"category.productStreamId"(t){if(!t){this.productStreamFilter=null;return}this.loadProductStreamPreview()}},created(){this.createdComponent()},methods:{createdComponent(){this.category.productStreamId&&this.loadProductStreamPreview()},loadProductStreamPreview(){this.productStreamRepository.get(this.category.productStreamId).then(t=>{this.productStreamFilter=t.apiFilter,this.productStreamInvalid=t.invalid}).catch(()=>{this.productStreamFilter=null,this.productStreamInvalid=!0})},onPaginateManualProductAssignment(t){this.getParentProducts(t),this.manualAssignedProductsCount=t.total},getParentProducts(t){let e=t.map(t=>t.parentId).filter(t=>null!==t);if(e.length>0){let t=new n(1,e.length).addAssociation("manufacturer").addFilter(n.equalsAny("id",e));this.productRepository.search(t).then(t=>{this.parentProducts=t})}},getManufacturer(t){if(t.manufacturerId)return t.manufacturer;let e=this.parentProducts.find(e=>e.id===t.parentId);return e&&e.manufacturerId?e.manufacturer:null}}}},969252:function(t,e,r){var n=r(494092);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[t.id,n,""]]),n.locals&&(t.exports=n.locals),r(745346).Z("51d6f181",n,!0,{})}}]);