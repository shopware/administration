{"version":3,"sources":["webpack:///./src/module/sw-cms/elements/form/config/sw-cms-el-config-form.scss","webpack:///./src/module/sw-cms/elements/form/config/sw-cms-el-config-form.html.twig","webpack:///./src/module/sw-cms/elements/form/config/index.js"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","template","inject","mixins","getByName","computed","getLastMailClass","this","element","config","mailReceiver","value","length","created","createdComponent","setShopMail","methods","initElementConfig","getShopMail","_this","Promise","resolve","systemConfigApiService","getValues","then","response","_this2","shopMail","defaultMailReceiver","includes","push","updateMailReceiver","_this3","validateMail","lastMail","match","pop"],"mappings":"wGAGA,IAAIA,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAA2EL,SAC5E,WAAYF,GAAS,EAAM,K,4ECT7B,ICGPQ,EAAUC,SAAVD,MAMO,WACXE,SDVW,4xICYXC,OAAQ,CAAC,0BAETC,OAAQ,CACJJ,EAAMK,UAAU,gBAGpBC,SAAU,CACNC,iBAAgB,WACZ,OAAsD,IAAlDC,KAAKC,QAAQC,OAAOC,aAAaC,MAAMC,OAChC,WAEJ,KAIfC,QAAO,WACHN,KAAKO,mBACLP,KAAKQ,eAGTC,QAAS,CACLF,iBAAgB,WACZP,KAAKU,kBAAkB,SAG3BC,YAAW,WAAI,IAADC,EAAA,KACV,OAAO,IAAIC,SAAQ,SAAAC,GACfF,EAAKG,uBACAC,UAAU,yBACVC,MAAK,SAAAC,GACFJ,EAAQI,EAAS,uCAKjCV,YAAW,WAAI,IAADW,EAAA,KACVnB,KAAKW,cAAcM,MAAK,SAAAG,GAChBD,EAAKlB,QAAQC,OAAOmB,oBAAoBjB,QACpCe,EAAKlB,QAAQC,OAAOC,aAAaC,MAAMkB,SAASF,IACpDD,EAAKlB,QAAQC,OAAOC,aAAaC,MAAMmB,KAAKH,OAKxDI,mBAAkB,WAAI,IAADC,EAAA,KACbzB,KAAK0B,gBACL1B,KAAKW,cAAcM,MAAK,SAAAG,GAChBK,EAAKxB,QAAQC,OAAOC,aAAaC,MAAMkB,SAASF,GAChDK,EAAKxB,QAAQC,OAAOmB,oBAAoBjB,OAAQ,EAEhDqB,EAAKxB,QAAQC,OAAOmB,oBAAoBjB,OAAQ,MAMhEsB,aAAY,WACR,IAAMC,EAAW3B,KAAKC,QAAQC,OAAOC,aAAaC,MAAMJ,KAAKC,QAAQC,OAAOC,aAAaC,MAAMC,OAAS,GACxG,GAAIsB,EAAU,CAGV,GAAkC,MAA9BA,EAASC,MAFM,iDAIf,OADA5B,KAAKC,QAAQC,OAAOC,aAAaC,MAAMyB,OAChC,EAGf,OAAO","file":"static/js/5e9fcfe888d5948aecfc.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-cms-el-config-form.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4884d52c\", content, true, {});","export default \"\\n{% block sw_cms_el_config_form %}\\n<sw-tabs\\n    position-identifier=\\\"sw-cms-element-config-form\\\"\\n    class=\\\"sw-cms-el-config-form__tabs\\\"\\n    default-item=\\\"content\\\"\\n>\\n\\n    <template #default=\\\"{ active }\\\">\\n        \\n        {% block sw_cms_el_config_form_tab_content %}\\n        <sw-tabs-item\\n            :title=\\\"$tc('sw-cms.elements.general.config.tab.content')\\\"\\n            name=\\\"content\\\"\\n            :active-tab=\\\"active\\\"\\n        >\\n            {{ $tc('sw-cms.elements.general.config.tab.content') }}\\n        </sw-tabs-item>\\n        {% endblock %}\\n\\n        \\n        {% block sw_cms_el_form_config_tab_options %}\\n        <sw-tabs-item\\n            v-if=\\\"element.config.type.value === 'contact'\\\"\\n            :title=\\\"$tc('sw-cms.elements.general.config.tab.settings')\\\"\\n            name=\\\"options\\\"\\n            :active-tab=\\\"active\\\"\\n        >\\n            {{ $tc('sw-cms.elements.general.config.tab.settings') }}\\n        </sw-tabs-item>\\n        {% endblock %}\\n    </template>\\n\\n    <template\\n        #content=\\\"{ active }\\\"\\n    >\\n        \\n        {% block sw_cms_el_form_config_content %}\\n        <sw-container\\n            v-if=\\\"active === 'content'\\\"\\n            class=\\\"sw-cms-el-config-form__tab-content\\\"\\n        >\\n\\n            \\n            {% block sw_cms_el_form_config_content_form_type %}\\n            <sw-select-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"element.config.type.value\\\"\\n                {% else %}\\n                v-model=\\\"element.config.type.value\\\"\\n                {% endif %}\\n                :label=\\\"$tc('sw-cms.elements.form.config.label.type')\\\"\\n            >\\n                \\n                {% block sw_cms_el_form_config_content_form_type_options %}\\n                <option\\n                    value=\\\"\\\"\\n                    disabled\\n                >\\n                    {{ $tc('sw-cms.elements.form.config.label.type') }}\\n                </option>\\n                <option value=\\\"contact\\\">\\n                    {{ $tc('sw-cms.elements.form.config.label.typeContact') }}\\n                </option>\\n                <option value=\\\"newsletter\\\">\\n                    {{ $tc('sw-cms.elements.form.config.label.typeNewsletter') }}\\n                </option>\\n                {% endblock %}\\n            </sw-select-field>\\n            {% endblock %}\\n\\n            \\n            {% block sw_cms_el_form_config_content_form_title %}\\n            <sw-text-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"element.config.title.value\\\"\\n                {% else %}\\n                v-model=\\\"element.config.title.value\\\"\\n                {% endif %}\\n                :label=\\\"$tc('sw-cms.elements.form.config.label.title')\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_cms_el_form_config_content_form_confirmation_text %}\\n            <sw-textarea-field\\n                v-if=\\\"element.config.type.value === 'contact'\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"element.config.confirmationText.value\\\"\\n                {% else %}\\n                v-model=\\\"element.config.confirmationText.value\\\"\\n                {% endif %}\\n                :label=\\\"$tc('sw-cms.elements.form.config.label.confirmationText')\\\"\\n            />\\n            {% endblock %}\\n        </sw-container>\\n        {% endblock %}\\n\\n        \\n        {% block sw_cms_el_form_config_options %}\\n        <sw-container\\n            v-else-if=\\\"active === 'options' && element.config.type.value === 'contact'\\\"\\n            class=\\\"sw-cms-el-config-form__tab-options\\\"\\n        >\\n            <sw-tagged-field\\n                {% if VUE3 %}\\n                v-model:value=\\\"element.config.mailReceiver.value\\\"\\n                {% else %}\\n                v-model=\\\"element.config.mailReceiver.value\\\"\\n                {% endif %}\\n                :class=\\\"getLastMailClass\\\"\\n                :label=\\\"$tc('sw-cms.elements.form.config.label.receiverEmail')\\\"\\n                name=\\\"mailReceiver\\\"\\n                placeholder=\\\"john@doe.com\\\"\\n                {% if VUE3 %}\\n                @update:value=\\\"updateMailReceiver\\\"\\n                {% else %}\\n                @change=\\\"updateMailReceiver\\\"\\n                {% endif %}\\n            />\\n        </sw-container>\\n        {% endblock %}\\n    </template>\\n</sw-tabs>\\n{% endblock %}\\n\";","import template from './sw-cms-el-config-form.html.twig';\nimport './sw-cms-el-config-form.scss';\n\nconst { Mixin } = Shopware;\n\n/**\n * @private\n * @package buyers-experience\n */\nexport default {\n    template,\n\n    inject: ['systemConfigApiService'],\n\n    mixins: [\n        Mixin.getByName('cms-element'),\n    ],\n\n    computed: {\n        getLastMailClass() {\n            if (this.element.config.mailReceiver.value.length === 1) {\n                return 'is--last';\n            }\n            return '';\n        },\n    },\n\n    created() {\n        this.createdComponent();\n        this.setShopMail();\n    },\n\n    methods: {\n        createdComponent() {\n            this.initElementConfig('form');\n        },\n\n        getShopMail() {\n            return new Promise(resolve => {\n                this.systemConfigApiService\n                    .getValues('core.basicInformation')\n                    .then(response => {\n                        resolve(response['core.basicInformation.email']);\n                    });\n            });\n        },\n\n        setShopMail() {\n            this.getShopMail().then(shopMail => {\n                if (this.element.config.defaultMailReceiver.value\n                    && !this.element.config.mailReceiver.value.includes(shopMail)) {\n                    this.element.config.mailReceiver.value.push(shopMail);\n                }\n            });\n        },\n\n        updateMailReceiver() {\n            if (this.validateMail()) {\n                this.getShopMail().then(shopMail => {\n                    if (this.element.config.mailReceiver.value.includes(shopMail)) {\n                        this.element.config.defaultMailReceiver.value = true;\n                    } else {\n                        this.element.config.defaultMailReceiver.value = false;\n                    }\n                });\n            }\n        },\n\n        validateMail() {\n            const lastMail = this.element.config.mailReceiver.value[this.element.config.mailReceiver.value.length - 1];\n            if (lastMail) {\n                const mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n                if (lastMail.match(mailformat) == null) {\n                    this.element.config.mailReceiver.value.pop();\n                    return false;\n                }\n            }\n            return true;\n        },\n    },\n};\n"],"sourceRoot":""}