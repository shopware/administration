(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[72145],{340581:function(){},272145:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return l}}),o(102562);let{Mixin:a,Context:i,Data:{Criteria:n}}=Shopware;var l={template:'\n{% block sw_media_modal_move %}\n<sw-modal\n    variant="default"\n    class="sw-media-modal-move"\n    :title="$tc(\'global.sw-media-modal-move.titleModal\', itemsToMove.length, { mediaName: mediaNameFilter(itemsToMove[0]), count: itemsToMove.length }) "\n    @modal-close="closeMoveModal"\n>\n\n    \n    {% block sw_media_modal_body %}\n    \n    {% block sw_media_modal_move_breadcrumbs %}\n    <div class="sw-media-modal-move-folder-breadcrumbs">\n        <img\n            :src="assetFilter(\'/administration/static/img/media/multicolor-folder-thumbnail.svg\')"\n            class="sw-media-modal-move__folder-icon"\n            alt="Folder thumbnail"\n        >\n\n        <button\n            v-if="parentFolder && parentFolder.id !== targetFolder.id"\n            class="sw-media-modal-move__breadcrumb-btn --parent"\n            @click="onSelection(parentFolder)"\n        >\n            <sw-icon\n                class="sw-media-folder-content__switch-button"\n                name="regular-chevron-right-xs"\n                size="10px"\n            />\n            {{ parentFolder.name }}\n        </button>\n\n        <button\n            v-if="displayFolder && displayFolder.id !== targetFolder.id"\n            class="sw-media-modal-move__breadcrumb-btn"\n            @click="onSelection(displayFolder)"\n        >\n            <sw-icon\n                class="sw-media-folder-content__switch-button"\n                name="regular-chevron-right-xs"\n                size="10px"\n            />\n            {{ displayFolder.name }}\n        </button>\n\n        <button\n            v-if="targetFolder"\n            class="sw-media-modal-move__breadcrumb-btn --target"\n            @click="onSelection(targetFolder)"\n        >\n            <sw-icon\n                class="sw-media-folder-content__switch-button"\n                name="regular-chevron-right-xs"\n                size="10px"\n            />\n            {{ targetFolder.name }}\n        </button>\n    </div>\n    {% endblock %}\n    <sw-media-folder-content\n        :start-folder-id="displayFolderId"\n        :selected-id="targetFolderId"\n        @selected="onSelection"\n    />\n    {% endblock %}\n\n    \n    {% block sw_media_modal_footer %}\n    <template #modal-footer>\n        \n        {% block sw_media_modal_move_cancel_button %}\n        <sw-button\n            size="small"\n            @click="closeMoveModal"\n        >\n            {{ $tc(\'global.default.cancel\') }}\n        </sw-button>\n        {% endblock %}\n\n        \n        {% block sw_media_modal_move_confirm_button %}\n        <sw-button\n            class="sw-media-modal-move__confirm"\n            size="small"\n            variant="primary"\n            :disabled="isMoveDisabled"\n            @click="moveSelection"\n        >\n            {{ $tc(\'global.sw-media-modal-move.buttonMove\') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory"],provide(){return{filterItems:this.isNotPartOfItemsToMove}},emits:["media-move-modal-close","media-move-modal-items-move"],mixins:[a.getByName("notification")],props:{itemsToMove:{required:!0,type:Array,validator(e){return e.length>0}}},data(){return{targetFolder:null,parentFolder:null,displayFolder:null,displayFolderId:null}},computed:{mediaRepository(){return this.repositoryFactory.create("media")},mediaFolderRepository(){return this.repositoryFactory.create("media_folder")},mediaNameFilter(){return e=>"media"===e.getEntityName()?`${e.fileName}.${e.fileExtension}`:e.name},targetFolderId(){return this.targetFolder?this.targetFolder.id:null},rootFolderName(){return this.$tc("sw-media.index.rootFolderName")},isMoveDisabled(){return this.startFolderId===this.targetFolderId},startFolderId(){let e=this.itemsToMove[0];return"media"===e.getEntityName()?e.mediaFolderId:e.parentId},assetFilter(){return Shopware.Filter.getByName("asset")}},watch:{displayFolder(e){this.displayFolderId=e.id,this.updateParentFolder(e)}},mounted(){this.mountedComponent()},methods:{async mountedComponent(){if(this.displayFolder={id:null,name:this.rootFolderName},this.targetFolder={id:null,name:this.rootFolderName},this.startFolderId){let e=await this.mediaFolderRepository.get(this.startFolderId,i.api);this.displayFolder=e,this.targetFolder=e}},closeMoveModal(){this.$emit("media-move-modal-close")},isNotPartOfItemsToMove(e){return!this.itemsToMove.some(t=>t.id===e.id)},async updateParentFolder(e){null===e.id?this.parentFolder=null:null===e.parentId?this.parentFolder={id:null,name:this.rootFolderName}:this.parentFolder=await this.fetchParentFolder(e.parentId)},async fetchParentFolder(e){let t=null,o=new n(1,1).addFilter(n.equals("id",e)).addAssociation("children");try{t=await this.mediaFolderRepository.search(o,i.api)}catch{this.createNotificationError({message:this.$tc("global.sw-media-modal-move.notification.errorFetchNavigation.message")})}return t?.length?t[0]:null},onSelection(e){this.targetFolder=e,(null===e.id||e.childCount>0)&&(this.displayFolder=e)},async _moveSelection(e){e.isLoading=!0,e.parentId=this.targetFolder.id||null;try{return await this.mediaFolderRepository.save(e,i.api),this.createNotificationSuccess({title:this.$root.$tc("global.default.success"),message:this.$root.$tc("global.sw-media-modal-move.notification.successSingle.message",1,{mediaName:this.mediaNameFilter(e)})}),e.id}catch{return this.createNotificationError({title:this.$root.$tc("global.default.error"),message:this.$root.$tc("global.sw-media-modal-move.notification.errorSingle.message",1,{mediaName:this.mediaNameFilter(e)})}),null}finally{e.isLoading=!1}},async moveSelection(){let e=[];try{let t=this.itemsToMove.filter(e=>"media_folder"===e.getEntityName()),o=this.itemsToMove.filter(e=>"media"===e.getEntityName());await Promise.all(t.map(async e=>{await this._moveSelection(e)})),await Promise.all(o.map(async t=>{t.mediaFolderId=this.targetFolder.id||null,e.push(await this.mediaRepository.save(t,i.api))})),this.createNotificationSuccess({title:this.$root.$tc("global.default.success"),message:this.$root.$tc("global.sw-media-modal-move.notification.successOverall.message")}),this.$emit("media-move-modal-items-move",e)}catch{this.createNotificationError({title:this.$root.$tc("global.default.error"),message:this.$root.$tc("global.sw-media-modal-move.notification.errorOverall.message")})}}}}},102562:function(e,t,o){var a=o(340581);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),o(745346).Z("7aec9a80",a,!0,{})}}]);