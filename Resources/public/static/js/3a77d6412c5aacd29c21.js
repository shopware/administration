(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[71814],{837810:function(){},271814:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return i}});var a=t(596147);t(652279);let{Mixin:s}=Shopware,{Criteria:o}=Shopware.Data;var i={template:'\n\n{% block sw_customer_imitate_customer_modal %}\n<sw-modal\n    :title="modalTitle"\n    class="sw-customer-imitate-customer-modal"\n    @modal-close="onCancel"\n>\n    <sw-alert>\n        <i18n-t\n            keypath="sw-customer.imitateCustomerModal.modalInfo"\n            tag="p">\n            <template #logout>\n                <b>{{ $tc(\'sw-customer.imitateCustomerModal.modalInfoLogout\') }}</b>\n            </template>\n        </i18n-t>\n    </sw-alert>\n\n    \n    {% block sw_customer_imitate_customer_modal_description %}\n    <div class="imitate-customer-modal-description">\n        {{ modalDescription }}\n    </div>\n    {% endblock %}\n\n    \n    {% block sw_customer_imitate_customer_modal_body %}\n    <sw-container\n        class="imitate-customer-modal-container"\n        columns="1fr"\n        gap="8px 0px"\n    >\n        \n        {% block sw_customer_imitate_customer_modal_sales_channel_domain_items %}\n        <sw-context-menu-item\n            v-for="salesChannelDomain of salesChannelDomains"\n            :key="salesChannelDomain.id"\n            target="_blank"\n            @click="onSalesChannelDomainMenuItemClick(salesChannelDomain.salesChannelId, salesChannelDomain.url)">\n\n            <div\n                class="imitate-customer-modal-item-content"\n                columns="1fr 1fr"\n                gap="10px 0px"\n            >\n                <div class="imitate-customer-modal-item-header">\n                    {{ salesChannelDomain.salesChannel.name }}\n                </div>\n                <div class="imitate-customer-modal-item-url">\n                    {{ salesChannelDomain.url }}\n                </div>\n                <sw-icon\n                    name="regular-external-link-s"\n                    size="16px"\n                />\n            </div>\n        </sw-context-menu-item>\n        {% endblock %}\n    </sw-container>\n    {% endblock %}\n\n    \n    {% block sw_customer_imitate_customer_modal_footer %}\n    <template #modal-footer>\n        \n        <div>\n            \n            {% block sw_customer_imitate_customer_modal_footer_cancel %}\n            <sw-button\n                size="small"\n                @click="onCancel"\n            >\n                {{ $tc(\'sw-customer.imitateCustomerModal.labelCancel\') }}\n            </sw-button>\n            {% endblock %}\n        </div>\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n',inject:["repositoryFactory","contextStoreService"],emits:["modal-close"],mixins:[s.getByName("notification")],props:{customer:{type:Object,required:!0}},data(){return{salesChannelDomains:[]}},computed:{modalTitle(){return this.$tc("sw-customer.imitateCustomerModal.modalTitle",{firstname:this.customer.firstName,lastname:this.customer.lastName})},modalDescription(){return this.$tc("sw-customer.imitateCustomerModal.modalDescription",{firstname:this.customer.firstName,lastname:this.customer.lastName})},salesChannelDomainRepository(){return this.repositoryFactory.create("sales_channel_domain")},currentUser(){return Shopware.State.get("session").currentUser},salesChannelDomainCriteria(){let e=new o;return e.addAssociation("salesChannel"),e.addFilter(o.equals("salesChannel.typeId",Shopware.Defaults.storefrontSalesChannelTypeId)),e.addSorting(o.sort("salesChannel.name","ASC")),e.addSorting(o.sort("languageId","DESC")),this.customer.boundSalesChannelId&&e.addFilter(o.equals("salesChannelId",this.customer.boundSalesChannelId)),e}},created(){this.createdComponent()},methods:{async createdComponent(){this.fetchSalesChannelDomains()},async onSalesChannelDomainMenuItemClick(e,n){this.contextStoreService.generateImitateCustomerToken(this.customer.id,e).then(e=>{let t=a.Z.handleResponse(e);this.contextStoreService.redirectToSalesChannelUrl(n,t.token,this.customer.id,this.currentUser?.id)}).catch(()=>{this.createNotificationError({message:this.$tc("sw-customer.detail.notificationImitateCustomerErrorMessage")})})},onCancel(){this.$emit("modal-close")},fetchSalesChannelDomains(){this.salesChannelDomainRepository.search(this.salesChannelDomainCriteria,Shopware.Context.api).then(e=>{this.salesChannelDomains=e})}}}},652279:function(e,n,t){var a=t(837810);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),t(745346).Z("7fab4162",a,!0,{})}}]);