{"version":3,"sources":["webpack:///./src/module/sw-product/component/sw-product-download-form/sw-product-download-form.scss","webpack:///./src/module/sw-product/component/sw-product-download-form/index.js","webpack:///./src/module/sw-product/component/sw-product-download-form/sw-product-download-form.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Component","Mixin","format","Utils","mapGetters","getComponentHelper","template","inject","mixins","getByName","props","disabled","type","Boolean","required","isInherited","data","isMediaLoading","fileAcceptedExtensions","computed","_objectSpread","product","state","State","get","this","parentProduct","isStoreLoading","isLoading","productDownloadRepository","repositoryFactory","create","productDownloads","downloads","mediaRepository","error","getApiError","hasError","swFieldClasses","fileAccept","join","created","createdComponent","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","configService","getConfig","then","result","settings","private_allowed_extensions","stop","onOpenMedia","$emit","getFileSize","download","fileSize","media","getFileName","fileExtension","concat","fileName","createdAt","date","uploadedAt","month","onRemoveDownload","remove","id","successfulUpload","_ref","_this2","_callee2","targetId","productDownload","_context2","find","mediaId","abrupt","createDownloadAssociation","sent","dispatch","expression","selfLink","productId","position","length","onUploadFailed","uploadTask","toRemove","productMedia","coverId","removeFile","cover","first","updateMediaItemPositions","forEach","medium","index"],"mappings":"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","file":"static/js/9548db9dcac292cfa464.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-download-form.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7108ceae\", content, true, {});","import template from './sw-product-download-form.html.twig';\nimport './sw-product-download-form.scss';\n\nconst { Component, Mixin } = Shopware;\nconst { format } = Shopware.Utils;\nconst { mapGetters } = Component.getComponentHelper();\n\n/**\n * @private\n */\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl', 'configService'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        isInherited: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            isMediaLoading: false,\n            fileAcceptedExtensions: [],\n        };\n    },\n\n    computed: {\n        ...mapGetters('error', [\n            'getApiError',\n        ]),\n\n        product() {\n            const state = Shopware.State.get('swProductDetail');\n\n            if (this.isInherited) {\n                return state.parentProduct;\n            }\n\n            return state.product;\n        },\n\n        ...mapGetters('swProductDetail', {\n            isStoreLoading: 'isLoading',\n        }),\n\n        isLoading() {\n            return this.isMediaLoading || this.isStoreLoading;\n        },\n\n        productDownloadRepository() {\n            return this.repositoryFactory.create('product_download');\n        },\n\n        productDownloads() {\n            if (!this.product) {\n                return [];\n            }\n            return this.product.downloads;\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        error() {\n            return this.getApiError(this.product, 'downloads');\n        },\n\n        hasError() {\n            return !!this.error;\n        },\n\n        swFieldClasses() {\n            return {\n                'has--error': this.hasError,\n            };\n        },\n\n        fileAccept() {\n            return this.fileAcceptedExtensions.join(', ');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            this.configService.getConfig().then((result) => {\n                this.fileAcceptedExtensions = result.settings.private_allowed_extensions;\n            });\n        },\n\n        onOpenMedia() {\n            this.$emit('media-open');\n        },\n\n        getFileSize(download) {\n            return format.fileSize(download.media.fileSize);\n        },\n\n        getFileName(download) {\n            if (download.media.fileExtension) {\n                return `${download.media.fileName}.${download.media.fileExtension}`;\n            }\n\n            return download.media.fileName;\n        },\n\n        createdAt(download) {\n            const date = download.media.uploadedAt || download.media.createdAt;\n            return format.date(date, {\n                month: 'numeric',\n            });\n        },\n\n        onRemoveDownload(download) {\n            this.product.downloads.remove(download.id);\n        },\n\n        async successfulUpload({ targetId }) {\n            // on replace\n            if (this.product.downloads.find((productDownload) => productDownload.mediaId === targetId)) {\n                return;\n            }\n\n            const productDownload = this.createDownloadAssociation(targetId);\n            productDownload.media = await this.mediaRepository.get(targetId);\n\n            this.product.downloads.add(productDownload);\n            if (this.error) {\n                Shopware.State.dispatch(\n                    'error/removeApiError',\n                    { expression: this.error.selfLink },\n                );\n            }\n        },\n\n        createDownloadAssociation(targetId) {\n            const productDownload = this.productDownloadRepository.create();\n\n            productDownload.productId = this.product.id;\n            productDownload.mediaId = targetId;\n            productDownload.position = this.product.downloads.length;\n\n            return productDownload;\n        },\n\n        onUploadFailed(uploadTask) {\n            const toRemove = this.product.media.find((productMedia) => {\n                return productMedia.mediaId === uploadTask.targetId;\n            });\n            if (toRemove) {\n                if (this.product.coverId === toRemove.id) {\n                    this.product.coverId = null;\n                }\n                this.product.media.remove(toRemove.id);\n            }\n            this.product.isLoading = false;\n        },\n\n        removeFile(productMedia) {\n            // remove cover id if mediaId matches\n            if (this.product.coverId === productMedia.id) {\n                this.product.cover = null;\n                this.product.coverId = null;\n            }\n\n            if (this.product.coverId === null && this.product.media.length > 0) {\n                this.product.coverId = this.product.media.first().id;\n            }\n\n            this.product.media.remove(productMedia.id);\n        },\n\n        updateMediaItemPositions() {\n            this.productMedia.forEach((medium, index) => {\n                medium.position = index;\n            });\n        },\n    },\n};\n","export default \"<div\\n    class=\\\"sw-product-download-form\\\"\\n    :class=\\\"{ 'is--disabled': disabled }\\\"\\n>\\n    <sw-upload-listener\\n        v-if=\\\"!isLoading\\\"\\n        :upload-tag=\\\"`downloads-${product.id}`\\\"\\n        auto-upload\\n        @media-upload-finish=\\\"successfulUpload\\\"\\n        @media-upload-fail=\\\"onUploadFailed\\\"\\n    />\\n\\n    <sw-media-upload-v2\\n        v-if=\\\"!isLoading && acl.can('product.editor')\\\"\\n        :class=\\\"swFieldClasses\\\"\\n        variant=\\\"regular\\\"\\n        :upload-tag=\\\"`downloads-${product.id}`\\\"\\n        :scroll-target=\\\"$parent.$el\\\"\\n        :private-filesystem=\\\"true\\\"\\n        :extension-accept=\\\"fileAccept\\\"\\n        default-folder=\\\"product_download\\\"\\n        v-bind=\\\"$attrs\\\"\\n    />\\n\\n    <sw-field-error :error=\\\"error\\\" />\\n\\n    <div\\n        v-if=\\\"!isLoading\\\"\\n        class=\\\"sw-product-download-form__previews sw-product-download-form__grid\\\"\\n    >\\n        <div\\n            v-for=\\\"download in productDownloads\\\"\\n            :key=\\\"download.id\\\"\\n            class=\\\"sw-product-download-form__row\\\"\\n        >\\n            <span\\n                v-tooltip=\\\"{\\n                    message: getFileName(download),\\n                    disabled: false,\\n                    width: 'auto'\\n                }\\\"\\n                class=\\\"sw-product-download-form-row__name\\\"\\n            >\\n                {{ getFileName(download) }}\\n            </span>\\n\\n            <div class=\\\"sw-product-download-form-row__info\\\">\\n                <span class=\\\"sw-product-download-form-row__mime\\\">\\n                    {{ download.media.mimeType }}\\n                </span>\\n\\n                <span class=\\\"sw-product-download-form-row__size\\\">\\n                    {{ getFileSize(download) }}\\n                </span>\\n\\n                <span class=\\\"sw-product-download-form-row__changed-date\\\">\\n                    {{ createdAt(download) }}\\n                </span>\\n            </div>\\n\\n            <sw-context-button class=\\\"sw-product-download-form-row__context\\\">\\n                <sw-context-menu-item\\n                    class=\\\"sw-product-download-form-row__context-remove\\\"\\n                    variant=\\\"danger\\\"\\n                    :disabled=\\\"isLoading || !acl.can('product.editor')\\\"\\n                    @click=\\\"onRemoveDownload(download)\\\"\\n                >\\n                    {{ $tc('global.default.remove') }}\\n                </sw-context-menu-item>\\n            </sw-context-button>\\n\\n        </div>\\n    </div>\\n    <sw-loader v-else />\\n</div>\\n\";"],"sourceRoot":""}