{"version":3,"sources":["webpack:///./src/module/sw-newsletter-recipient/page/sw-newsletter-recipient-list/index.js","webpack:///./src/module/sw-newsletter-recipient/page/sw-newsletter-recipient-list/sw-newsletter-recipient-list.html.twig","webpack:///./src/module/sw-newsletter-recipient/page/sw-newsletter-recipient-list/sw-newsletter-recipient-list.scss"],"names":["_Shopware","Shopware","Mixin","_Shopware$Data","Data","Criteria","EntityCollection","template","inject","mixins","getByName","data","isLoading","items","total","repository","sortBy","sortDirection","filterSidebarIsOpen","languageFilters","salesChannelFilters","tagFilters","internalFilters","tagCollection","searchConfigEntity","metaInfo","title","this","$createTitle","computed","columns","getColumns","salesChannelRepository","repositoryFactory","create","tagRepository","dateFilter","Filter","created","createdComponent","methods","_this","Context","api","criteria","search","then","salesChannels","getList","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","page","limit","setTerm","term","addSorting","sort","addAssociation","Object","values","forEach","item","addFilter","addQueryScores","sent","entitySearchable","abrupt","freshSearchTerm","resetSorting","searchResult","catch","stop","handleTagFilter","filter","length","ids","map","id","tags","equalsAny","handleBooleanFilter","Array","isArray","group","value","x","push","onChange","closeContent","$refs","filterSideBar","openContent","property","label","routerLink","allowResize","inlineEdit","dataIndex","primary","visible","align","content","__esModule","default","module","i","locals","exports","add"],"mappings":"0KAOAA,G,UAAwDC,UAAhDC,EAAKF,EAALE,MAAKC,EAAAH,EAAEI,KAAQC,EAAQF,EAARE,SAAUC,EAAgBH,EAAhBG,iBAGlB,WACXC,SCXW,updDaXC,OAAQ,CAAC,oBAAqB,OAE9BC,OAAQ,CACJP,EAAMQ,UAAU,YAGpBC,KAAI,WACA,MAAO,CACHC,WAAW,EACXC,MAAO,KACPC,MAAO,EACPC,WAAY,KACZC,OAAQ,YACRC,cAAe,OACfC,qBAAqB,EACrBC,gBAAiB,GACjBC,oBAAqB,GACrBC,WAAY,GACZC,gBAAiB,GACjBC,cAAe,KACfC,mBAAoB,yBAI5BC,SAAQ,WACJ,MAAO,CACHC,MAAOC,KAAKC,iBAIpBC,SAAU,CACNC,QAAO,WACH,OAAOH,KAAKI,cAGhBC,uBAAsB,WAClB,OAAOL,KAAKM,kBAAkBC,OAAO,kBAGzCC,cAAa,WACT,OAAOR,KAAKM,kBAAkBC,OAAO,QAGzCE,WAAU,WACN,OAAOnC,SAASoC,OAAO3B,UAAU,UAIzC4B,QAAO,WACHX,KAAKY,oBAGTC,QAAS,CACLD,iBAAgB,WAAI,IAADE,EAAA,KACfd,KAAKJ,cAAgB,IAAIjB,EAAiB,OAAQ,MAAOL,SAASyC,QAAQC,IAAK,IAAItC,EAAS,EAAG,KAE/F,IAAMuC,EAAW,IAAIvC,EAAS,EAAG,KACjCsB,KAAKM,kBAAkBC,OAAO,YAAYW,OAAOD,EAAU3C,SAASyC,QAAQC,KAAKG,MAAK,SAACjC,GACnF4B,EAAKtB,gBAAkBN,KAG3Bc,KAAKK,uBAAuBa,OAAO,IAAIxC,EAAS,EAAG,MAAMyC,MAAK,SAACC,GAC3DN,EAAKrB,oBAAsB2B,KAG/BpB,KAAKqB,WAGHA,QAAO,WAAI,IAADC,EAAA,YAAAC,IAAAC,IAAAC,MAAA,SAAAC,IAAA,IAAAT,EAAA,OAAAO,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAST,OARHR,EAAKrC,WAAY,GACbgC,EAAW,IAAIvC,EAAS4C,EAAKS,KAAMT,EAAKU,QACnCC,QAAQX,EAAKY,MACtBjB,EAASkB,WAAWzD,EAAS0D,KAAKd,EAAKjC,OAAQiC,EAAKhC,gBACpD2B,EAASoB,eAAe,gBAExBC,OAAOC,OAAOjB,EAAK3B,iBAAiB6C,SAAQ,SAACC,GACzCxB,EAASyB,UAAUD,MACpBb,EAAAE,KAAA,EAEcR,EAAKqB,eAAerB,EAAKY,KAAMjB,GAAU,KAAD,EAAjD,GAARA,EAAQW,EAAAgB,KACHtB,EAAKuB,iBAAiB,CAADjB,EAAAE,KAAA,SAEP,OADfR,EAAKrC,WAAY,EACjBqC,EAAKnC,MAAQ,EAAEyC,EAAAkB,OAAA,kBAKfxB,EAAKyB,iBACL9B,EAAS+B,eAGb1B,EAAKlC,WAAakC,EAAKhB,kBAAkBC,OAAO,wBAChDe,EAAKlC,WAAW8B,OAAOD,GAAUE,MAAK,SAAC8B,GACnC3B,EAAKpC,MAAQ+D,EACb3B,EAAKnC,MAAQ8D,EAAa9D,MAE1BmC,EAAKrC,WAAY,KAClBiE,OAAM,WACL5B,EAAKrC,WAAY,KAClB,yBAAA2C,EAAAuB,UAAAzB,MA/BSH,IAkChB6B,gBAAe,SAACC,GACZ,GAAsB,IAAlBA,EAAOC,OAAX,CAKA,IAAMC,EAAMF,EAAOG,KAAI,SAACf,GACpB,OAAOA,EAAKgB,MAGhBzD,KAAKL,gBAAgB+D,KAAOhF,EAASiF,UAAU,UAAWJ,eAR/CvD,KAAKL,gBAAgB+D,MAWpCE,oBAAmB,SAACP,GAKhB,GAJKQ,MAAMC,QAAQ9D,KAAKqD,EAAOU,UAC3B/D,KAAKqD,EAAOU,OAAS,KAGpBV,EAAOW,MASR,OARAhE,KAAKqD,EAAOU,OAAS/D,KAAKqD,EAAOU,OAAOV,QAAO,SAACY,GAAQ,OAAOA,IAAMZ,EAAOI,WAExEzD,KAAKqD,EAAOU,OAAOT,OAAS,EAC5BtD,KAAKL,gBAAgB0D,EAAOU,OAASrF,EAASiF,UAAUN,EAAOU,MAAO/D,KAAKqD,EAAOU,eAE3E/D,KAAKL,gBAAgB0D,EAAOU,QAM3C/D,KAAKqD,EAAOU,OAAOG,KAAKb,EAAOI,IAC/BzD,KAAKL,gBAAgB0D,EAAOU,OAASrF,EAASiF,UAAUN,EAAOU,MAAO/D,KAAKqD,EAAOU,SAGtFI,SAAQ,SAACd,GAKL,GAJe,OAAXA,IACAA,EAAS,IAGTQ,MAAMC,QAAQT,GAGd,OAFArD,KAAKoD,gBAAgBC,QACrBrD,KAAKqB,UAITrB,KAAK4D,oBAAoBP,GACzBrD,KAAKqB,WAGT+C,aAAY,WACR,GAAIpE,KAAKT,oBAGL,OAFAS,KAAKqE,MAAMC,cAAcF,oBACzBpE,KAAKT,qBAAsB,GAI/BS,KAAKqE,MAAMC,cAAcC,cACzBvE,KAAKT,qBAAsB,GAG/Ba,WAAU,WACN,MAAO,CAAC,CACJoE,SAAU,QACVC,MAAO,qCACPC,WAAY,iCACZC,aAAa,EACbC,WAAY,UACb,CACCJ,SAAU,YACVK,UAAW,qBACXD,WAAY,SACZH,MAAO,oCACPE,aAAa,EACbG,SAAS,GACV,CACCN,SAAU,oBACVC,MAAO,4CACPE,aAAa,EACbG,SAAS,EACTC,SAAS,GACV,CACCP,SAAU,SACVC,MAAO,sCACPE,aAAa,GACd,CACCH,SAAU,UACVC,MAAO,uCACPE,aAAa,EACbK,MAAO,SACR,CACCR,SAAU,OACVC,MAAO,oCACPE,aAAa,GACd,CACCH,SAAU,SACVC,MAAO,sCACPE,aAAa,EACbI,SAAS,GACV,CACCP,SAAU,YACVC,MAAO,yCACPE,aAAa,EACbI,SAAS,GACV,CACCP,SAAU,YACVC,MAAO,yCACPE,aAAa,EACbI,SAAS,Q,4CE3NzB,IAAIE,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,QAAwEL,SACzE,WAAYF,GAAS,EAAM","file":"static/js/9468e70227f0f547ec01.js","sourcesContent":["import template from './sw-newsletter-recipient-list.html.twig';\nimport './sw-newsletter-recipient-list.scss';\n\n/**\n * @package buyers-experience\n */\n\nconst { Mixin, Data: { Criteria, EntityCollection } } = Shopware;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl'],\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            items: null,\n            total: 0,\n            repository: null,\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            filterSidebarIsOpen: false,\n            languageFilters: [],\n            salesChannelFilters: [],\n            tagFilters: [],\n            internalFilters: {},\n            tagCollection: null,\n            searchConfigEntity: 'newsletter_recipient',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        columns() {\n            return this.getColumns();\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        tagRepository() {\n            return this.repositoryFactory.create('tag');\n        },\n\n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.tagCollection = new EntityCollection('/tag', 'tag', Shopware.Context.api, new Criteria(1, 25));\n\n            const criteria = new Criteria(1, 100);\n            this.repositoryFactory.create('language').search(criteria, Shopware.Context.api).then((items) => {\n                this.languageFilters = items;\n            });\n\n            this.salesChannelRepository.search(new Criteria(1, 100)).then((salesChannels) => {\n                this.salesChannelFilters = salesChannels;\n            });\n\n            this.getList();\n        },\n\n        async getList() {\n            this.isLoading = true;\n            let criteria = new Criteria(this.page, this.limit);\n            criteria.setTerm(this.term);\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection));\n            criteria.addAssociation('salesChannel');\n\n            Object.values(this.internalFilters).forEach((item) => {\n                criteria.addFilter(item);\n            });\n\n            criteria = await this.addQueryScores(this.term, criteria);\n            if (!this.entitySearchable) {\n                this.isLoading = false;\n                this.total = 0;\n\n                return;\n            }\n\n            if (this.freshSearchTerm) {\n                criteria.resetSorting();\n            }\n\n            this.repository = this.repositoryFactory.create('newsletter_recipient');\n            this.repository.search(criteria).then((searchResult) => {\n                this.items = searchResult;\n                this.total = searchResult.total;\n\n                this.isLoading = false;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        handleTagFilter(filter) {\n            if (filter.length === 0) {\n                delete this.internalFilters.tags;\n                return;\n            }\n\n            const ids = filter.map((item) => {\n                return item.id;\n            });\n\n            this.internalFilters.tags = Criteria.equalsAny('tags.id', ids);\n        },\n\n        handleBooleanFilter(filter) {\n            if (!Array.isArray(this[filter.group])) {\n                this[filter.group] = [];\n            }\n\n            if (!filter.value) {\n                this[filter.group] = this[filter.group].filter((x) => { return x !== filter.id; });\n\n                if (this[filter.group].length > 0) {\n                    this.internalFilters[filter.group] = Criteria.equalsAny(filter.group, this[filter.group]);\n                } else {\n                    delete this.internalFilters[filter.group];\n                }\n\n                return;\n            }\n\n            this[filter.group].push(filter.id);\n            this.internalFilters[filter.group] = Criteria.equalsAny(filter.group, this[filter.group]);\n        },\n\n        onChange(filter) {\n            if (filter === null) {\n                filter = [];\n            }\n\n            if (Array.isArray(filter)) {\n                this.handleTagFilter(filter);\n                this.getList();\n                return;\n            }\n\n            this.handleBooleanFilter(filter);\n            this.getList();\n        },\n\n        closeContent() {\n            if (this.filterSidebarIsOpen) {\n                this.$refs.filterSideBar.closeContent();\n                this.filterSidebarIsOpen = false;\n                return;\n            }\n\n            this.$refs.filterSideBar.openContent();\n            this.filterSidebarIsOpen = true;\n        },\n\n        getColumns() {\n            return [{\n                property: 'email',\n                label: 'sw-newsletter-recipient.list.email',\n                routerLink: 'sw.newsletter.recipient.detail',\n                allowResize: true,\n                inlineEdit: 'string',\n            }, {\n                property: 'firstName',\n                dataIndex: 'firstName,lastName',\n                inlineEdit: 'string',\n                label: 'sw-newsletter-recipient.list.name',\n                allowResize: true,\n                primary: true,\n            }, {\n                property: 'salesChannel.name',\n                label: 'sw-newsletter-recipient.list.salesChannel',\n                allowResize: true,\n                primary: false,\n                visible: false,\n            }, {\n                property: 'status',\n                label: 'sw-newsletter-recipient.list.status',\n                allowResize: true,\n            }, {\n                property: 'zipCode',\n                label: 'sw-newsletter-recipient.list.zipCode',\n                allowResize: true,\n                align: 'right',\n            }, {\n                property: 'city',\n                label: 'sw-newsletter-recipient.list.city',\n                allowResize: true,\n            }, {\n                property: 'street',\n                label: 'sw-newsletter-recipient.list.street',\n                allowResize: true,\n                visible: false,\n            }, {\n                property: 'updatedAt',\n                label: 'sw-newsletter-recipient.list.updatedAt',\n                allowResize: true,\n                visible: false,\n            }, {\n                property: 'createdAt',\n                label: 'sw-newsletter-recipient.list.createdAt',\n                allowResize: true,\n                visible: false,\n            }];\n        },\n    },\n};\n","export default \"\\n{% block sw_newsletter_recipient_list %}\\n<sw-page class=\\\"sw-newsletter-recipient-list\\\">\\n    \\n    {% block sw_newsletter_recipient_list_search_bar %}\\n    <template #search-bar>\\n        <sw-search-bar\\n            initial-search-type=\\\"newsletter_recipient\\\"\\n            :placeholder=\\\"$tc('sw-newsletter-recipient.general.placeholderSearchBarSnippets')\\\"\\n            :initial-search=\\\"term\\\"\\n            @search=\\\"onSearch\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_newsletter_recipient_list_smart_bar_header %}\\n    <template #smart-bar-header>\\n        \\n        {% block sw_newsletter_recipient_list_smart_bar_header_title %}\\n        <h2>\\n            \\n            {% block sw_newsletter_recipientlist_list_smart_bar_header_title_text %}\\n            {{ $tc('global.sw-admin-menu.navigation.mainMenuItemMarketing') }}\\n            <sw-icon name=\\\"regular-chevron-right-xs\\\" />\\n            {{ $tc('sw-newsletter-recipient.list.textHeadline') }}\\n            {% endblock %}\\n\\n            \\n            {% block sw_newsletter_recipient_list_smart_bar_header_amount %}\\n            <span\\n                v-if=\\\"!isLoading\\\"\\n                class=\\\"sw-page__smart-bar-amount\\\"\\n            >\\n                ({{ total }})\\n            </span>\\n            {% endblock %}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_newsletter_recipientlist_list_content %}\\n    <template #content>\\n        \\n        {% block sw_newsletter_recipientlist_list_content_card %}\\n        \\n        {% block sw_newsletter_recipientlist_list_grid %}\\n        <sw-entity-listing\\n            v-if=\\\"items && entitySearchable\\\"\\n            ref=\\\"swNewsletterRecipientGrid\\\"\\n            class=\\\"sw-newsletter-recipient-list__grid\\\"\\n            :is-loading=\\\"isLoading\\\"\\n            identifier=\\\"sw-newsletter-recipient\\\"\\n            :show-selection=\\\"false\\\"\\n            :items=\\\"items\\\"\\n            :columns=\\\"columns\\\"\\n            :repository=\\\"repository\\\"\\n            detail-route=\\\"sw.newsletter.recipient.detail\\\"\\n            :sort-by=\\\"currentSortBy\\\"\\n            :sort-direction=\\\"sortDirection\\\"\\n            :disable-data-fetching=\\\"true\\\"\\n            :allow-view=\\\"acl.can('newsletter_recipient.viewer')\\\"\\n            :allow-edit=\\\"acl.can('newsletter_recipient.editor')\\\"\\n            :allow-inline-edit=\\\"acl.can('newsletter_recipient.editor')\\\"\\n            :allow-delete=\\\"acl.can('newsletter_recipient.deleter')\\\"\\n            @page-change=\\\"onPageChange\\\"\\n            @column-sort=\\\"onSortColumn\\\"\\n        >\\n\\n            \\n            {% block sw_newsletter_recipientlist_list_grid_name %}\\n            <template\\n                #column-firstName=\\\"{ item, compact, isInlineEdit }\\\"\\n            >\\n\\n                \\n                {% block sw_newsletter_recipientlist_list_grid_inline_edit_name %}\\n                <template v-if=\\\"isInlineEdit\\\">\\n                    \\n                    {% block sw_newsletter_recipientlist_list_grid_inline_edit_first_name %}\\n                    <sw-text-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"item.firstName\\\"\\n                        {% else %}\\n                        v-model=\\\"item.firstName\\\"\\n                        {% endif %}\\n                        class=\\\"sw-newsletter-recipient-list__inline-edit-first-name\\\"\\n                        :size=\\\"compact ? 'small' : 'default'\\\"\\n                    />\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_newsletter_recipientlist_list_grid_inline_edit_last_name %}\\n                    <sw-text-field\\n                        {% if VUE3 %}\\n                        v-model:value=\\\"item.lastName\\\"\\n                        {% else %}\\n                        v-model=\\\"item.lastName\\\"\\n                        {% endif %}\\n                        class=\\\"sw-newsletter-recipient-list__inline-edit-last-name\\\"\\n                        :size=\\\"compact ? 'small' : 'default'\\\"\\n                    />\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_newsletter_recipientlist_list_grid_name_link %}\\n                <template v-else>\\n                    {{ item.firstName }} {{ item.lastName }}\\n                </template>\\n                {% endblock %}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_newsletter_recipientlist_list_grid_status %}\\n            <template\\n                #column-status=\\\"{ item, compact, isInlineEdit }\\\"\\n            >\\n                \\n                {% block sw_newsletter_recipientlist_list_grid_status_notSet %}\\n                <template v-if=\\\"item.status === 'notSet'\\\">\\n                    <sw-label\\n                        size=\\\"medium\\\"\\n                        appearance=\\\"pill\\\"\\n                    >\\n                        {{ $tc('sw-newsletter-recipient.list.notSet') }}\\n                    </sw-label>\\n                </template>\\n                {% endblock %}\\n                \\n                {% block sw_newsletter_recipientlist_list_grid_status_optIn %}\\n                <template v-else-if=\\\"item.status === 'optIn'\\\">\\n                    <sw-label\\n                        size=\\\"medium\\\"\\n                        appearance=\\\"pill\\\"\\n                    >\\n                        {{ $tc('sw-newsletter-recipient.list.optIn') }}\\n                    </sw-label>\\n                </template>\\n                {% endblock %}\\n                \\n                {% block sw_newsletter_recipientlist_list_grid_status_optOut %}\\n                <template v-else-if=\\\"item.status === 'optOut'\\\">\\n                    <sw-label\\n                        size=\\\"medium\\\"\\n                        appearance=\\\"pill\\\"\\n                    >\\n                        {{ $tc('sw-newsletter-recipient.list.optOut') }}\\n                    </sw-label>\\n                </template>\\n                {% endblock %}\\n                \\n                {% block sw_newsletter_recipientlist_list_grid_status_direct %}\\n                <template v-else-if=\\\"item.status === 'direct'\\\">\\n                    <sw-label\\n                        size=\\\"medium\\\"\\n                        appearance=\\\"pill\\\"\\n                    >\\n                        {{ $tc('sw-newsletter-recipient.list.direct') }}\\n                    </sw-label>\\n                </template>\\n                {% endblock %}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_newsletter_recipientlist_list_grid_updated_at %}\\n            <template\\n                #column-updatedAt=\\\"{ item }\\\"\\n            >\\n                {{ dateFilter(item.updatedAt) }}\\n            </template>\\n            {% endblock %}\\n\\n            \\n            {% block sw_newsletter_recipientlist_list_grid_created_at %}\\n            <template\\n                #column-createdAt=\\\"{ item }\\\"\\n            >\\n                {{ dateFilter(item.createdAt) }}\\n            </template>\\n            {% endblock %}\\n\\n        </sw-entity-listing>\\n\\n        \\n        {% block sw_newsletter_recipient_list_empty_state %}\\n        <template v-if=\\\"!isLoading && !total\\\">\\n            <sw-empty-state\\n                v-if=\\\"isValidTerm(term)\\\"\\n                :title=\\\"$tc('sw-empty-state.messageNoResultTitle')\\\"\\n            >\\n                <template #default>\\n                    {{ $tc('sw-empty-state.messageNoResultSublineBefore') }}\\n                    <router-link\\n                        class=\\\"sw-empty-state__description-link\\\"\\n                        :to=\\\"{ name: 'sw.profile.index.searchPreferences' }\\\"\\n                    >\\n                        {{ $tc('sw-empty-state.messageNoResultSublineLink') }}\\n                    </router-link>\\n                    {{ $tc('sw-empty-state.messageNoResultSublineAfter') }}\\n                </template>\\n            </sw-empty-state>\\n\\n            <sw-empty-state\\n                v-else\\n                :title=\\\"$tc('sw-newsletter-recipient.list.messageEmpty')\\\"\\n            />\\n        </template>\\n        {% endblock %}\\n        {% endblock %}\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_newsletter_recipient_list_sidebar %}\\n    <template #sidebar>\\n        <sw-sidebar>\\n            \\n            {% block sw_newsletter_recipient_list_sidebar_refresh %}\\n            <sw-sidebar-item\\n                icon=\\\"regular-undo\\\"\\n                :title=\\\"$tc('sw-newsletter-recipient.list.titleSidebarItemRefresh')\\\"\\n                @click=\\\"onRefresh\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_newsletter_recipient_list_sidebar_filter %}\\n            <sw-sidebar-item\\n                ref=\\\"filterSideBar\\\"\\n                icon=\\\"regular-filter\\\"\\n                :title=\\\"$tc('sw-newsletter-recipient.list.titleSidebarItemFilter')\\\"\\n                @sw-sidebar-item-close-content=\\\"closeContent\\\"\\n                @click=\\\"closeContent\\\"\\n            >\\n\\n                \\n                {% block sw_newsletter_recipient_list_sidebar_filter_status %}\\n                <sw-sidebar-collapse>\\n                    <template #header>\\n                        {{ $tc('sw-newsletter-recipient.list.status') }}\\n                    </template>\\n                    <template #content>\\n                        \\n                        {% block sw_newsletter_recipient_list_sidebar_filter_status_not_set %}\\n                        <sw-newsletter-recipient-filter-switch\\n                            id=\\\"notSet\\\"\\n                            group=\\\"status\\\"\\n                            :label=\\\"$tc('sw-newsletter-recipient.list.notSet')\\\"\\n                            @change=\\\"onChange\\\"\\n                        />\\n                        {% endblock %}\\n                        \\n                        {% block sw_newsletter_recipient_list_sidebar_filter_status_direct %}\\n                        <sw-newsletter-recipient-filter-switch\\n                            id=\\\"direct\\\"\\n                            group=\\\"status\\\"\\n                            :label=\\\"$tc('sw-newsletter-recipient.list.direct')\\\"\\n                            @change=\\\"onChange\\\"\\n                        />\\n                        {% endblock %}\\n                        \\n                        {% block sw_newsletter_recipient_list_sidebar_filter_status_opt_in %}\\n                        <sw-newsletter-recipient-filter-switch\\n                            id=\\\"optIn\\\"\\n                            group=\\\"status\\\"\\n                            :label=\\\"$tc('sw-newsletter-recipient.list.optIn')\\\"\\n                            @change=\\\"onChange\\\"\\n                        />\\n                        {% endblock %}\\n                        \\n                        {% block sw_newsletter_recipient_list_sidebar_filter_status_opt_out %}\\n                        <sw-newsletter-recipient-filter-switch\\n                            id=\\\"optOut\\\"\\n                            group=\\\"status\\\"\\n                            :label=\\\"$tc('sw-newsletter-recipient.list.optOut')\\\"\\n                            @change=\\\"onChange\\\"\\n                        />\\n                        {% endblock %}\\n                    </template>\\n                </sw-sidebar-collapse>\\n                {% endblock %}\\n\\n                \\n                {% block sw_newsletter_recipient_list_sidebar_filter_language %}\\n                <sw-sidebar-collapse>\\n                    <template #header>\\n                        {{ $tc('sw-newsletter-recipient.general.language') }}\\n                    </template>\\n                    <template #content>\\n                        \\n                        {% block sw_newsletter_recipient_list_sidebar_filter_language_items %}\\n                        <div\\n                            v-for=\\\"(item, index) in languageFilters\\\"\\n                            :key=\\\"index\\\"\\n                        >\\n                            <sw-newsletter-recipient-filter-switch\\n                                :id=\\\"item.id\\\"\\n                                group=\\\"languageId\\\"\\n                                :label=\\\"item.name\\\"\\n                                @change=\\\"onChange\\\"\\n                            />\\n                        </div>\\n                        {% endblock %}\\n                    </template>\\n                </sw-sidebar-collapse>\\n                {% endblock %}\\n\\n                \\n                {% block sw_newsletter_recipient_list_sidebar_filter_sales_channel %}\\n                <sw-sidebar-collapse>\\n                    <template #header>\\n                        {{ $tc('sw-newsletter-recipient.general.salesChannel') }}\\n                    </template>\\n                    <template #content>\\n                        \\n                        {% block sw_newsletter_recipient_list_sidebar_filter_sales_channel_items %}\\n                        <div\\n                            v-for=\\\"(item, index) in salesChannelFilters\\\"\\n                            :key=\\\"index\\\"\\n                        >\\n                            <sw-newsletter-recipient-filter-switch\\n                                :id=\\\"item.id\\\"\\n                                group=\\\"salesChannelId\\\"\\n                                :label=\\\"item.translated.name\\\"\\n                                @change=\\\"onChange\\\"\\n                            />\\n                        </div>\\n                        {% endblock %}\\n                    </template>\\n                </sw-sidebar-collapse>\\n                {% endblock %}\\n\\n                \\n                {% block sw_newsletter_recipient_list_sidebar_filter_sales_tags %}\\n                <sw-sidebar-collapse>\\n                    <template #header>\\n                        {{ $tc('sw-newsletter-recipient.general.tags') }}\\n                    </template>\\n                    <template #content>\\n                        \\n                        {% block sw_newsletter_recipient_list_sidebar_filter_sales_tags_select %}\\n                        <sw-entity-multi-select\\n                            {% if VUE3 %}\\n                            v-model:entityCollection=\\\"tagCollection\\\"\\n                            {% else %}\\n                            v-model=\\\"tagCollection\\\"\\n                            {% endif %}\\n                            {% if VUE3 %}\\n                            @update:entity-collection=\\\"onChange\\\"\\n                            {% else %}\\n                            @change=\\\"onChange\\\"\\n                            {% endif %}\\n                        />\\n                        {% endblock %}\\n                    </template>\\n                </sw-sidebar-collapse>\\n                {% endblock %}\\n            </sw-sidebar-item>\\n            {% endblock %}\\n\\n        </sw-sidebar>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-newsletter-recipient-list.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"8f1b4626\", content, true, {});"],"sourceRoot":""}