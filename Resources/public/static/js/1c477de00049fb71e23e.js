(this.webpackJsonpAdministration=this.webpackJsonpAdministration||[]).push([[211],{"62/0":function(t,e,a){},AOo5:function(t,e,a){var n=a("62/0");n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);(0,a("P8hj").default)("6d701a54",n,!0,{})},PV0d:function(t,e,a){"use strict";a.r(e);var n=a("7yzw"),r=a.n(n),s=a("92Mt"),o=a.n(s),i=(a("AOo5"),Shopware.Data.Criteria);e.default=Shopware.Component.wrapComponentConfig({template:'\n{% block sw_dashboard_statistics %}\n<div\n    v-if="acl.can(\'order.viewer\')"\n    class="sw-dashboard-statistics"\n>\n    <template v-if="isLoading">\n        <sw-skeleton variant="detail" />\n        <sw-skeleton variant="detail" />\n    </template>\n\n    <template v-else>\n        <template v-if="hasOrderToday">\n            \n            {% block sw_dashboard_statistics_intro_stats_headline %}\n            <div class="sw-dashboard-statistics__card-headline">\n                \n                {% block sw_dashboard_index_content_intro_stats_headline_title %}\n                <h1>{{ $tc(\'sw-dashboard.todayStats.headline\') }}</h1>\n                {% endblock %}\n\n                \n                {% block sw_dashboard_statistics_intro_stats_headline_date %}\n                <span class="sw-dashboard-statistics__card-headline-timerange">\n                    {{ formatChartHeadlineDate(today) }}\n                </span>\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n            <sw-card position-identifier="sw-dashboard-statistics-stats-today">\n                \n                {% block sw_dashboard_statistics_intro_stats_today %}\n                <div class="sw-dashboard-statistics__intro-stats-today">\n                    \n                    {% block sw_dashboard_statistics_intro_stats_today_stats %}\n                    <div\n                        v-if="hasOrderToday"\n                        class="sw-dashboard-statistics__intro-stats-today-stats"\n                    >\n                        \n                        {% block sw_dashboard_statistics_intro_stats_today_stats_single_count %}\n                        <div class="sw-dashboard-statistics__intro-stats-today-single-stat">\n                            <span class="sw-dashboard-statistics__intro-stats-today-single-stat-number-type">{{ $tc(\'sw-dashboard.todayStats.orders\') }}</span>\n                            <span class="sw-dashboard-statistics__intro-stats-today-single-stat-number-value">{{ orderCountToday }}</span>\n                        </div>\n                        {% endblock %}\n\n                        \n                        {% block sw_dashboard_statistics_intro_stats_today_stats_single_sum %}\n                        <div class="sw-dashboard-statistics__intro-stats-today-single-stat">\n                            <span class="sw-dashboard-statistics__intro-stats-today-single-stat-number-type">{{ $tc(\'sw-dashboard.todayStats.turnover\') }}</span>\n                            {# price aggregations do not support currencies yet, see NEXT-5069 #}\n                            <span class="sw-dashboard-statistics__intro-stats-today-single-stat-number-value">{{ currencyFilter(orderSumToday, systemCurrencyISOCode, 2) }}</span>\n                        </div>\n                        {% endblock %}\n                    </div>\n                    {% endblock %}\n                </div>\n                {% endblock %}\n\n                \n                {% block sw_dashboard_statistics_grid %}\n                <template #grid>\n                    <sw-entity-listing\n                        v-if="todayOrderDataLoaded"\n                        :sort-by="todayOrderDataSortBy"\n                        :sort-direction="todayOrderDataSortDirection"\n                        :repository="orderRepository"\n                        :items="todayOrderData"\n                        :columns="orderGridColumns()"\n                        :show-selection="false"\n                        :allow-column-edit="false"\n                        :full-page="false"\n                    >\n                        \n                        {% block sw_dashboard_statistics_grid_created_at %}\n                        <template\n                            #column-orderDateTime="{ item }"\n                        >\n                            {{ dateFilter(item.orderDateTime, {\n                            hour: \'2-digit\',\n                            minute: \'2-digit\',\n                            year: undefined,\n                            month: undefined,\n                            day: undefined\n                            }) }}\n                        </template>\n                        {% endblock %}\n\n                        \n                        {% block sw_dashboard_statistics_grid_first_name %}\n                        <template #column-orderCustomer.firstName="{ item }">\n                            <router-link\n                                :to="{ name: \'sw.order.detail\', params: { id: item.id } }"\n                                class="sw-data-grid__cell-value"\n                            >\n                                {{ item.orderCustomer.firstName }} {{ item.orderCustomer.lastName }}\n                            </router-link>\n                        </template>\n                        {% endblock %}\n\n                        \n                        {% block sw_dashboard_statistics_grid_short_name %}\n                        <template\n                            #column-amountTotal="{ item }"\n                        >\n                            {{ currencyFilter(item.amountTotal, item.currency.shortName) }}\n                        </template>\n                        {% endblock %}\n\n                        \n                        {% block sw_dashboard_statistics_grid_state %}\n                        <template #column-stateMachineState.name="{ item }">\n                            <sw-label\n                                :variant="getVariantFromOrderState(item)"\n                                appearance="pill"\n                            >\n                                {{ item.stateMachineState.translated.name }}\n                            </sw-label>\n                        </template>\n                        {% endblock %}\n\n                        \n                        {% block sw_dashboard_statistics_grid_actions %}\n                        <template\n                            #actions="{ item }"\n                        >\n                            \n                            {% block sw_dashboard_statistics_grid_actions_view %}\n                            <sw-context-menu-item\n                                class="sw-order-list__order-view-action"\n                                :router-link="{ name: \'sw.order.detail\', params: { id: item.id } }"\n                            >\n                                {{ $tc(\'sw-order.list.contextMenuView\') }}\n                            </sw-context-menu-item>\n                            {% endblock %}\n\n                        </template>\n                        {% endblock %}\n\n                    </sw-entity-listing>\n\n                    <sw-loader v-else-if="!todayOrderDataLoaded" />\n                </template>\n                {% endblock %}\n            </sw-card>\n        </template>\n\n        <sw-extension-component-section\n            position-identifier="sw-chart-card__before"\n        />\n\n        <template v-if="hasOrderInMonth">\n            \n            {% block sw_dashboard_statistics_count %}\n            <sw-chart-card\n                class="sw-dashboard-statistics__statistics-count"\n                :available-ranges="availableRanges"\n                :card-subtitle="getCardSubtitle(ordersDateRange)"\n                :series="orderCountSeries"\n                :options="chartOptionsOrderCount"\n                :fill-empty-values="ordersDateRange.aggregate"\n                type="line"\n                sort\n                position-identifier="sw-chart-card__statistics-count"\n                @sw-chart-card-range-update="onOrdersRangeUpdate"\n            >\n                \n                {% block sw_dashboard_statistics_count_title %}\n                <template #header-title>\n                    {{ $tc(\'sw-dashboard.monthStats.orderNumber\') }}\n                </template>\n                {% endblock %}\n\n                \n                {% block sw_dashboard_statistics_count_range_select %}\n                <template #range-option="{ range }">\n                    {{ $tc(`sw-dashboard.monthStats.dateRanges.${range}`) }}\n                </template>\n                {% endblock %}\n            </sw-chart-card>\n            {% endblock %}\n\n            \n            {% block sw_dashboard_statistics_sum %}\n            <sw-chart-card\n                class="sw-dashboard-statistics__statistics-sum"\n                :available-ranges="availableRanges"\n                :card-subtitle="getCardSubtitle(turnoverDateRange)"\n                :series="orderSumSeries"\n                :options="chartOptionsOrderSum"\n                :fill-empty-values="turnoverDateRange.aggregate"\n                type="line"\n                sort\n                position-identifier="sw-chart-card__statistics-sum"\n                @sw-chart-card-range-update="onTurnoverRangeUpdate"\n            >\n                \n                {% block sw_dashboard_statistics_sum_title %}\n                <template #header-title>\n                    {{ $tc(\'sw-dashboard.monthStats.turnover\') }}\n                    <sw-help-text\n                        class="sw-dashboard-index__help-text"\n                        :text="$tc(\'sw-dashboard.monthStats.helperText\')"\n                    />\n                </template>\n                {% endblock %}\n\n                \n                {% block sw_dashboard_statistics_sum_range_select %}\n                <template #range-option="{ range }">\n                    {{ $tc(`sw-dashboard.monthStats.dateRanges.${range}`) }}\n                </template>\n                {% endblock %}\n            </sw-chart-card>\n            {% endblock %}\n        </template>\n\n        <sw-extension-component-section\n            position-identifier="sw-chart-card__after"\n        />\n    </template>\n</div>\n{% endblock %}\n',inject:["repositoryFactory","stateStyleDataProviderService","acl"],data:function(){return{historyOrderDataCount:null,historyOrderDataSum:null,todayOrderData:null,todayOrderDataLoaded:!1,todayOrderDataSortBy:"orderDateTime",todayOrderDataSortDirection:"DESC",ordersDateRange:{label:"30Days",range:30,interval:"day",aggregate:"day"},turnoverDateRange:{label:"30Days",range:30,interval:"day",aggregate:"day"},isLoading:!0}},computed:{rangesValueMap:function(){return[{label:"30Days",range:30,interval:"day",aggregate:"day"},{label:"14Days",range:14,interval:"day",aggregate:"day"},{label:"7Days",range:7,interval:"day",aggregate:"day"},{label:"24Hours",range:24,interval:"hour",aggregate:"hour"},{label:"yesterday",range:1,interval:"day",aggregate:"hour"}]},availableRanges:function(){return this.rangesValueMap.map((function(t){return t.label}))},chartOptionsOrderCount:function(){return{xaxis:{type:"datetime",min:this.getDateAgo(this.ordersDateRange).getTime(),labels:{datetimeUTC:!1}},yaxis:{min:0,tickAmount:3,labels:{formatter:function(t){return parseInt(t,10)}}}}},chartOptionsOrderSum:function(){return{xaxis:{type:"datetime",min:this.getDateAgo(this.turnoverDateRange).getTime(),labels:{datetimeUTC:!1}},yaxis:{min:0,tickAmount:5,labels:{formatter:function(t){return Shopware.Utils.format.currency(Number.parseFloat(t),Shopware.Context.app.systemCurrencyISOCode,2)}}}}},orderRepository:function(){return this.repositoryFactory.create("order")},orderCountSeries:function(){var t=this;if(!this.historyOrderDataCount)return[];var e=this.historyOrderDataCount.buckets.map((function(e){return{x:t.parseDate(e.key),y:e.count}}));return this.todayBucketCount||e.push({x:this.today.getTime(),y:0}),[{name:this.$tc("sw-dashboard.monthStats.numberOfOrders"),data:e}]},orderCountToday:function(){return this.todayBucketCount?this.todayBucketCount.count:0},orderSumMonthSeries:function(){return this.orderSumSeries},orderSumSeries:function(){var t=this;if(!this.historyOrderDataSum)return[];var e=this.historyOrderDataSum.buckets.map((function(e){return{x:t.parseDate(e.key),y:e.totalAmount.sum}}));return this.todayBucketSum||e.push({x:this.today.getTime(),y:0}),[{name:this.$tc("sw-dashboard.monthStats.totalTurnover"),data:e}]},orderSumToday:function(){return this.todayBucketCount?this.todayBucketCount.totalAmount.sum:0},hasOrderToday:function(){return this.todayOrderData&&this.todayOrderData.length>0},hasOrderInMonth:function(){return!!this.historyOrderDataCount&&!!this.historyOrderDataSum},today:function(){var t=Shopware.Utils.format.dateWithUserTimezone();return t.setHours(0,0,0,0),t},todayBucketCount:function(){return this.calculateTodayBucket(this.historyOrderDataCount)},todayBucketSum:function(){return this.calculateTodayBucket(this.historyOrderDataSum)},systemCurrencyISOCode:function(){return Shopware.Context.app.systemCurrencyISOCode},isSessionLoaded:function(){var t;return!(null!==(t=Shopware.State.get("session"))&&void 0!==t&&t.userPending)},currencyFilter:function(){return Shopware.Filter.getByName("currency")},dateFilter:function(){return Shopware.Filter.getByName("date")}},watch:{isSessionLoaded:{immediate:!0,handler:function(){var t=this;return r()(o.a.mark((function e(){return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t.isSessionLoaded){e.next=3;break}return e.next=3,t.initializeOrderData();case 3:case"end":return e.stop()}}),e)})))()}}},methods:{calculateTodayBucket:function(t){var e=null==t?void 0:t.buckets;if(!e)return null;var a=this.today,n=e.find((function(t){return!!t.key&&new Date(t.key).setHours(0,0,0,0)===a.setHours(0,0,0,0)}));return n||null},initializeOrderData:function(){var t=this;return r()(o.a.mark((function e(){return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.acl.can("order.viewer")){e.next=3;break}return t.isLoading=!1,e.abrupt("return");case 3:return t.todayOrderDataLoaded=!1,e.next=6,t.getHistoryOrderData();case 6:return e.next=8,t.fetchTodayData();case 8:t.todayOrderData=e.sent,t.todayOrderDataLoaded=!0,t.isLoading=!1;case 11:case"end":return e.stop()}}),e)})))()},getHistoryOrderData:function(){var t=this;return Promise.all([this.fetchHistoryOrderDataCount().then((function(e){t.historyOrderDataCount=e})),this.fetchHistoryOrderDataSum().then((function(e){t.historyOrderDataSum=e}))])},fetchHistoryOrderDataCount:function(){return this.fetchHistory(!1,this.formatDateToISO(this.getDateAgo(this.ordersDateRange)))},fetchHistoryOrderDataSum:function(){return this.fetchHistory(!0,this.formatDateToISO(this.getDateAgo(this.turnoverDateRange)))},fetchHistory:function(t,e){var a,n,r=this.orderRepository.buildHeaders(),s=Shopware.Application.getContainer("init").httpClient,o=null!==(a=null===(n=Shopware.State.get("session").currentUser)||void 0===n?void 0:n.timeZone)&&void 0!==a?a:"UTC";return s.get("/_admin/dashboard/order-amount/".concat(e,"?timezone=").concat(o,"&paid=").concat(t.toString()),{headers:r}).then((function(t){return{name:"order_sum_bucket",buckets:t.data.statistic.map((function(t){return{key:t.date,count:t.count,apiAlias:"aggregation_bucket",totalAmount:{sum:t.amount,name:"totalAmount"}}})),apiAlias:"order_sum_bucket_aggregation"}}))},fetchTodayData:function(){var t=new i(1,10);return t.addAssociation("currency"),t.addFilter(i.equals("orderDate",this.formatDateToISO(new Date))),t.addSorting(i.sort(this.todayOrderDataSortBy,this.todayOrderDataSortDirection)),this.orderRepository.search(t)},formatDateToISO:function(t){return Shopware.Utils.format.toISODate(t,!1)},formatChartHeadlineDate:function(t){var e=Shopware.Application.getContainer("factory").locale.getLastKnownLocale();return t.toLocaleDateString(e,{day:"numeric",month:"short"})},orderGridColumns:function(){return[{property:"orderNumber",label:"sw-order.list.columnOrderNumber",routerLink:"sw.order.detail",allowResize:!0,primary:!0},{property:"orderDateTime",dataIndex:"orderDateTime",label:"sw-dashboard.todayStats.orderTime",allowResize:!0,primary:!1},{property:"orderCustomer.firstName",dataIndex:"orderCustomer.firstName,orderCustomer.lastName",label:"sw-order.list.columnCustomerName",allowResize:!0},{property:"stateMachineState.name",label:"sw-order.list.columnState",allowResize:!0},{property:"amountTotal",label:"sw-order.list.columnAmount",align:"right",allowResize:!0}]},getVariantFromOrderState:function(t){var e,a=null===(e=t.stateMachineState)||void 0===e?void 0:e.technicalName;return a?this.stateStyleDataProviderService.getStyle("order.state",a).variant:""},parseDate:function(t){return new Date(t.replace(/-/g,"/").replace("T"," ").replace(/\..*|\+.*/,"")).valueOf()},onOrdersRangeUpdate:function(t){var e=this;return r()(o.a.mark((function a(){var n;return o.a.wrap((function(a){for(;;)switch(a.prev=a.next){case 0:if(n=e.rangesValueMap.find((function(e){return e.label===t}))){a.next=3;break}throw Error("Range not found");case 3:return e.ordersDateRange=n,a.next=6,e.fetchHistoryOrderDataCount();case 6:e.historyOrderDataCount=a.sent;case 7:case"end":return a.stop()}}),a)})))()},onTurnoverRangeUpdate:function(t){var e=this;return r()(o.a.mark((function a(){var n;return o.a.wrap((function(a){for(;;)switch(a.prev=a.next){case 0:if(n=e.rangesValueMap.find((function(e){return e.label===t}))){a.next=3;break}throw Error("Range not found");case 3:return e.turnoverDateRange=n,a.next=6,e.fetchHistoryOrderDataSum();case 6:e.historyOrderDataSum=a.sent;case 7:case"end":return a.stop()}}),a)})))()},getCardSubtitle:function(t){return"".concat(this.formatChartHeadlineDate(this.getDateAgo(t))," - ").concat(this.formatChartHeadlineDate(this.today))},getDateAgo:function(t){var e=Shopware.Utils.format.dateWithUserTimezone();return"hour"===t.interval?(e.setHours(e.getHours()-t.range),e):(e.setDate(e.getDate()-t.range),e.setHours(0,0,0,0),e)}}})}}]);
//# sourceMappingURL=1c477de00049fb71e23e.js.map