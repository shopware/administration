{"version":3,"sources":["webpack:///./src/module/sw-product-stream/page/sw-product-stream-list/sw-product-stream-list.scss","webpack:///./src/module/sw-product-stream/page/sw-product-stream-list/index.js","webpack:///./src/module/sw-product-stream/page/sw-product-stream-list/sw-product-stream-list.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Mixin","Shopware","Criteria","Data","template","inject","mixins","getByName","data","productStreams","sortBy","sortDirection","isLoading","showDeleteModal","searchConfigEntity","metaInfo","title","this","$createTitle","computed","productStreamRepository","repositoryFactory","create","dateFilter","Filter","methods","onInlineEditSave","promise","productStream","_this","then","createNotificationSuccess","message","$tc","name","catch","getList","createNotificationError","onChangeLanguage","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","criteria","wrap","_context","prev","next","page","limit","setTerm","term","acl","can","addAggregation","terms","count","naturalSorting","addSorting","sort","addQueryScores","sent","entitySearchable","total","abrupt","freshSearchTerm","resetSorting","search","items","stop","getProductStreamColumns","property","dataIndex","inlineEdit","label","routerLink","width","allowResize","primary","align","getNoPermissionsTooltip","role","showOnDisabledElements","arguments","length","undefined","showDelay","appearance","disabled","allowDelete","onDeleteItemFailed","_ref","_this$productStreams","_errorResponse$respon","_errorResponse$respon2","_errorResponse$respon3","_errorResponse$respon4","id","errorResponse","stream","get","response","errors","detail","aggregations","product_stream","buckets","filter","bucket","key","at","categories","onDeleteItemsFailed","_ref2","_this3","selectedIds","forEach","onDuplicate","item","_this4","behavior","cloneChildren","overwrites","concat","translated","clone","Context","api","route","params","$router","push"],"mappings":"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","file":"static/js/9cc7a1b68c80e9c486b4.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-stream-list.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"054910ad\", content, true, {});","/*\n * @package business-ops\n */\n\nimport template from './sw-product-stream-list.html.twig';\nimport './sw-product-stream-list.scss';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @private\n */\nexport default {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            productStreams: null,\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            isLoading: false,\n            showDeleteModal: false,\n            searchConfigEntity: 'product_stream',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        productStreamRepository() {\n            return this.repositoryFactory.create('product_stream');\n        },\n\n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        },\n    },\n\n    methods: {\n        onInlineEditSave(promise, productStream) {\n            return promise.then(() => {\n                this.createNotificationSuccess({\n                    message: this.$tc('sw-product-stream.detail.messageSaveSuccess', 0, { name: productStream.name }),\n                });\n            }).catch(() => {\n                this.getList();\n                this.createNotificationError({\n                    message: this.$tc('sw-product-stream.detail.messageSaveError'),\n                });\n            });\n        },\n\n        onChangeLanguage() {\n            return this.getList();\n        },\n\n        async getList() {\n            this.isLoading = true;\n\n            let criteria = new Criteria(this.page, this.limit);\n\n            criteria.setTerm(this.term);\n            if (this.acl.can('category:read')) {\n                criteria.addAggregation(\n                    Criteria.terms(\n                        'product_stream',\n                        'id',\n                        null,\n                        null,\n                        Criteria.count('categories', 'product_stream.categories.id'),\n                    ),\n                );\n            }\n            this.naturalSorting = this.sortBy === 'createdAt';\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, this.naturalSorting));\n\n            criteria = await this.addQueryScores(this.term, criteria);\n            if (!this.entitySearchable) {\n                this.isLoading = false;\n                this.total = 0;\n\n                return false;\n            }\n\n            if (this.freshSearchTerm) {\n                criteria.resetSorting();\n            }\n\n            return this.productStreamRepository.search(criteria).then((items) => {\n                this.total = items.total;\n                this.productStreams = items;\n                this.isLoading = false;\n\n                return items;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        getProductStreamColumns() {\n            return [{\n                property: 'name',\n                dataIndex: 'name',\n                inlineEdit: 'string',\n                label: 'sw-product-stream.list.columnName',\n                routerLink: 'sw.product.stream.detail',\n                width: '250px',\n                allowResize: true,\n                primary: true,\n            }, {\n                property: 'description',\n                label: 'sw-product-stream.list.columnDescription',\n                width: '250px',\n                allowResize: true,\n            }, {\n                property: 'updatedAt',\n                label: 'sw-product-stream.list.columnDateUpdated',\n                align: 'right',\n                allowResize: true,\n            }, {\n                property: 'invalid',\n                label: 'sw-product-stream.list.columnStatus',\n                allowResize: true,\n            }];\n        },\n\n        getNoPermissionsTooltip(role, showOnDisabledElements = true) {\n            return {\n                showDelay: 300,\n                message: this.$tc('sw-privileges.tooltip.warning'),\n                appearance: 'dark',\n                showOnDisabledElements,\n                disabled: this.acl.can(role) || this.allowDelete,\n            };\n        },\n\n        onDeleteItemFailed({ id, errorResponse }) {\n            const stream = this.productStreams?.get(id);\n            const message = errorResponse?.response?.data?.errors?.[0]?.detail || null;\n\n            if (!stream) {\n                return;\n            }\n\n            if (!this.productStreams.aggregations.product_stream) {\n                this.createNotificationError({ message });\n                return;\n            }\n\n            const aggregation = this.productStreams.aggregations.product_stream.buckets.filter((bucket) => {\n                return bucket.key === id;\n            }).at(0);\n\n            const count = aggregation.categories.count;\n            const name = stream.name;\n\n            if (count === 0) {\n                this.createNotificationError({ message });\n                return;\n            }\n\n            this.createNotificationError({\n                message: this.$tc('sw-product-stream.general.errorCategory', count, { name, count }),\n            });\n        },\n\n        onDeleteItemsFailed({ selectedIds, errorResponse }) {\n            selectedIds.forEach((id) => {\n                this.onDeleteItemFailed({ id, errorResponse });\n            });\n        },\n\n        onDuplicate(item) {\n            const behavior = {\n                cloneChildren: true,\n                overwrites: {\n                    name: `${item.name || item.translated.name} ${this.$tc('global.default.copy')}`,\n                },\n            };\n\n            this.isLoading = true;\n\n            this.productStreamRepository.clone(item.id, Shopware.Context.api, behavior).then((clone) => {\n                const route = { name: 'sw.product.stream.detail', params: { id: clone.id } };\n\n                this.$router.push(route);\n            }).catch(() => {\n                this.isLoading = false;\n\n                this.createNotificationError({\n                    message: this.$tc('global.notification.unspecifiedSaveErrorMessage'),\n                });\n            });\n        },\n    },\n};\n","export default \"\\n{% block sw_product_stream_list %}\\n<sw-page class=\\\"sw-product-stream-list\\\">\\n\\n    \\n    {% block sw_product_stream_list_search_bar %}\\n    <template #search-bar>\\n        <sw-search-bar\\n            initial-search-type=\\\"product_stream\\\"\\n            :placeholder=\\\"$tc('sw-product-stream.general.placeholderSearchBar')\\\"\\n            :initial-search=\\\"term\\\"\\n            @search=\\\"onSearch\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_stream_list_smart_bar_header %}\\n    <template #smart-bar-header>\\n        \\n        {% block sw_product_stream_list_smart_bar_header_title %}\\n        <h2>\\n            \\n            {% block sw_product_stream_list_smart_bar_header_title_text %}\\n            {{ $tc('sw-product-stream.list.textProductStreamOverview') }}\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_stream_list_smart_bar_header_amount %}\\n            <span\\n                v-if=\\\"!isLoading\\\"\\n                class=\\\"sw-page__smart-bar-amount\\\"\\n            >\\n                ({{ total }})\\n            </span>\\n            {% endblock %}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_stream_list_smart_bar_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_product_stream_list_smart_bar_actions_add %}\\n        <sw-button\\n            v-tooltip.bottom=\\\"getNoPermissionsTooltip('product_stream.creator')\\\"\\n            class=\\\"sw-product-stream-list__create-action\\\"\\n            :disabled=\\\"!acl.can('product_stream.creator')\\\"\\n            :router-link=\\\"{ name: 'sw.product.stream.create' }\\\"\\n            variant=\\\"primary\\\"\\n        >\\n            {{ $tc('sw-product-stream.list.buttonAddProductStream') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_manufacturer_list_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch @on-change=\\\"onChangeLanguage\\\" />\\n    </template>\\n    {% endblock %}\\n\\n    <template #content>\\n\\n        \\n        {% block sw_product_stream_list_content %}\\n        <div class=\\\"sw-product-stream-list__content\\\">\\n\\n            \\n            {% block sw_product_stream_list_grid %}\\n            <sw-entity-listing\\n                v-if=\\\"isLoading || (productStreams && entitySearchable)\\\"\\n                ref=\\\"swProductStreamGrid\\\"\\n                class=\\\"sw-product-stream-list-grid\\\"\\n                :items=\\\"productStreams\\\"\\n                :columns=\\\"getProductStreamColumns()\\\"\\n                :repository=\\\"productStreamRepository\\\"\\n                detail-route=\\\"sw.product.stream.detail\\\"\\n                :show-selection=\\\"acl.can('product_stream.deleter')\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :disable-data-fetching=\\\"true\\\"\\n                :sort-by=\\\"currentSortBy\\\"\\n                :sort-direction=\\\"sortDirection\\\"\\n                :criteria-limit=\\\"limit\\\"\\n                :allow-inline-edit=\\\"acl.can('product_stream.editor')\\\"\\n                identifier=\\\"sw-product-stream-list\\\"\\n                @page-change=\\\"onPageChange\\\"\\n                @column-sort=\\\"onSortColumn\\\"\\n                @inline-edit-save=\\\"onInlineEditSave\\\"\\n                @items-delete-finish=\\\"getList\\\"\\n                @delete-item-failed=\\\"onDeleteItemFailed\\\"\\n                @delete-items-failed=\\\"onDeleteItemsFailed\\\"\\n            >\\n\\n                \\n                {% block sw_product_stream_list_grid_bulk %}\\n                <template #bulk>\\n                    <span v-if=\\\"!acl.can('product_stream.deleter')\\\"></span>\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_stream_list_grid_column_invalid %}\\n                <template #column-invalid=\\\"{item}\\\">\\n                    <template v-if=\\\"item.invalid\\\">\\n                        {{ $tc('sw-product-stream.list.status.invalid') }}\\n                    </template>\\n\\n                    <template v-else>\\n                        {{ $tc('sw-product-stream.list.status.valid') }}\\n                    </template>\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_stream_list_grid_colum_updated_at %}\\n                <template #column-updatedAt=\\\"{item}\\\">\\n                    <template v-if=\\\"item.updatedAt\\\">\\n                        {{ dateFilter(item.updatedAt) }}\\n                    </template>\\n\\n                    <template v-else>\\n                        {{ dateFilter(item.createdAt) }}\\n                    </template>\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_stream_list_grid_more_actions %}\\n                <template #more-actions=\\\"{item}\\\">\\n                    \\n                    {% block sw_product_stream_list_grid_duplicate_action %}\\n                    <sw-context-menu-item\\n                        :disabled=\\\"!acl.can('product_stream.creator')\\\"\\n                        class=\\\"sw-entity-listing__context-menu-edit-duplicate\\\"\\n                        @click=\\\"onDuplicate(item)\\\"\\n                    >\\n                        {{ $tc('global.default.duplicate') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_product_stream_list_grid_delete_action %}\\n                <template #delete-action=\\\"{item, showDelete, allowDelete}\\\">\\n\\n                    <sw-context-menu-item\\n                        :disabled=\\\"!acl.can('product_stream.deleter') || !allowDelete\\\"\\n                        class=\\\"sw-entity-listing__context-menu-edit-delete\\\"\\n                        variant=\\\"danger\\\"\\n                        @click=\\\"showDelete(item.id)\\\"\\n                    >\\n                        {{ $tc('global.default.delete') }}\\n                    </sw-context-menu-item>\\n                </template>\\n                {% endblock %}\\n            </sw-entity-listing>\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_stream_list_empty_state %}\\n            <template v-else-if=\\\"!isLoading && !total\\\">\\n                <sw-empty-state\\n                    v-if=\\\"isValidTerm(term)\\\"\\n                    :title=\\\"$tc('sw-empty-state.messageNoResultTitle')\\\"\\n                >\\n                    <template #default>\\n                        {{ $tc('sw-empty-state.messageNoResultSublineBefore') }}\\n                        <router-link\\n                            class=\\\"sw-empty-state__description-link\\\"\\n                            :to=\\\"{ name: 'sw.profile.index.searchPreferences' }\\\"\\n                        >\\n                            {{ $tc('sw-empty-state.messageNoResultSublineLink') }}\\n                        </router-link>\\n                        {{ $tc('sw-empty-state.messageNoResultSublineAfter') }}\\n                    </template>\\n                </sw-empty-state>\\n\\n                <sw-empty-state\\n                    v-else\\n                    :title=\\\"$tc('sw-product-stream.list.messageEmpty')\\\"\\n                />\\n            </template>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n    </template>\\n\\n    \\n    {% block sw_product_stream_list_sidebar %}\\n    <template #sidebar>\\n        <sw-sidebar>\\n\\n            \\n            {% block sw_product_stream_list_sidebar_refresh %}\\n            <sw-sidebar-item\\n                icon=\\\"regular-undo\\\"\\n                :title=\\\"$tc('sw-product-stream.list.titleSidebarItemRefresh')\\\"\\n                @click=\\\"onRefresh\\\"\\n            />\\n            {% endblock %}\\n        </sw-sidebar>\\n    </template>\\n    {% endblock %}\\n\\n</sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}