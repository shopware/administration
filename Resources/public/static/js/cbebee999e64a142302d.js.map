{"version":3,"sources":["webpack:///./src/module/sw-product/view/sw-product-detail-base/sw-product-detail-base.scss","webpack:///./src/module/sw-product/view/sw-product-detail-base/index.js","webpack:///./src/module/sw-product/view/sw-product-detail-base/sw-product-detail-base.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Component","Context","Utils","Mixin","_Component$getCompone","getComponentHelper","mapState","mapGetters","isEmpty","types","template","inject","mixins","getByName","props","productId","type","String","required","data","showMediaModal","mediaDefaultFolderId","computed","_objectSpread","mediaFormVisible","this","loading","product","parentProduct","customFieldSets","media","productMediaRepository","repositoryFactory","create","entity","mediaDefaultFolderRepository","mediaDefaultFolderCriteria","criteria","Criteria","addAssociation","addFilter","equals","watch","created","createdComponent","methods","_this","getMediaDefaultFolderId","then","search","api","mediaDefaultFolder","_defaultFolder$folder","defaultFolder","first","folder","id","mediaRemoveInheritanceFunction","newValue","_this2","forEach","_ref","mediaId","position","Object","assign","coverId","push","$refs","productMediaInheritance","forceInheritanceRemove","mediaRestoreInheritanceFunction","_this3","getIds","remove","onOpenMediaModal","onCloseMediaModal","onOpenDownloadMediaModal","showDownloadMediaModal","onCloseDownloadMediaModal","onAddMedia","_this4","item","addMedia","catch","_ref2","fileName","createNotificationError","message","$tc","isExistingMedia","Promise","reject","newMedia","url","setMediaAsCover","resolve","some","_ref3"],"mappings":"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","file":"static/js/cbebee999e64a142302d.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-detail-base.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"54d9b168\", content, true, {});","/*\n * @package inventory\n */\n\nimport Criteria from 'src/core/data/criteria.data';\nimport template from './sw-product-detail-base.html.twig';\nimport './sw-product-detail-base.scss';\n\nconst { Component, Context, Utils, Mixin } = Shopware;\nconst { mapState, mapGetters } = Component.getComponentHelper();\nconst { isEmpty } = Utils.types;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        productId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            showMediaModal: false,\n            mediaDefaultFolderId: null,\n        };\n    },\n\n    computed: {\n        ...mapState('swProductDetail', [\n            'product',\n            'parentProduct',\n            'customFieldSets',\n            'loading',\n        ]),\n\n        ...mapGetters('swProductDetail', [\n            'isLoading',\n            'showModeSetting',\n            'showProductCard',\n            'productStates',\n        ]),\n\n        ...mapState('swProductDetail', {\n        }),\n\n        mediaFormVisible() {\n            return !this.loading.product &&\n                   !this.loading.parentProduct &&\n                   !this.loading.customFieldSets &&\n                   !this.loading.media;\n        },\n\n        productMediaRepository() {\n            return this.repositoryFactory.create(this.product.media.entity);\n        },\n\n        mediaDefaultFolderRepository() {\n            return this.repositoryFactory.create('media_default_folder');\n        },\n\n        mediaDefaultFolderCriteria() {\n            const criteria = new Criteria(1, 1);\n\n            criteria.addAssociation('folder');\n            criteria.addFilter(Criteria.equals('entity', 'product'));\n\n            return criteria;\n        },\n    },\n\n    watch: {\n        product() {\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.getMediaDefaultFolderId().then((mediaDefaultFolderId) => {\n                this.mediaDefaultFolderId = mediaDefaultFolderId;\n            });\n        },\n\n        getMediaDefaultFolderId() {\n            return this.mediaDefaultFolderRepository.search(this.mediaDefaultFolderCriteria, Context.api)\n                .then((mediaDefaultFolder) => {\n                    const defaultFolder = mediaDefaultFolder.first();\n\n                    if (defaultFolder.folder?.id) {\n                        return defaultFolder.folder.id;\n                    }\n\n                    return null;\n                });\n        },\n\n        mediaRemoveInheritanceFunction(newValue) {\n            newValue.forEach(({ id, mediaId, position }) => {\n                const media = this.productMediaRepository.create(Context.api);\n                Object.assign(media, { mediaId, position, productId: this.product.id });\n                if (this.parentProduct.coverId === id) {\n                    this.product.coverId = media.id;\n                }\n\n                this.product.media.push(media);\n            });\n\n            this.$refs.productMediaInheritance.forceInheritanceRemove = true;\n\n            return this.product.media;\n        },\n\n        mediaRestoreInheritanceFunction() {\n            this.$refs.productMediaInheritance.forceInheritanceRemove = false;\n            this.product.coverId = null;\n\n            this.product.media.getIds().forEach((mediaId) => {\n                this.product.media.remove(mediaId);\n            });\n\n            return this.product.media;\n        },\n\n        onOpenMediaModal() {\n            this.showMediaModal = true;\n        },\n\n        onCloseMediaModal() {\n            this.showMediaModal = false;\n        },\n\n        onOpenDownloadMediaModal() {\n            this.showDownloadMediaModal = true;\n        },\n\n        onCloseDownloadMediaModal() {\n            this.showDownloadMediaModal = false;\n        },\n\n        onAddMedia(media) {\n            if (isEmpty(media)) {\n                return;\n            }\n\n            media.forEach((item) => {\n                this.addMedia(item).catch(({ fileName }) => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-product.mediaForm.errorMediaItemDuplicated', 0, { fileName }),\n                    });\n                });\n            });\n        },\n\n        addMedia(media) {\n            if (this.isExistingMedia(media)) {\n                return Promise.reject(media);\n            }\n\n            const newMedia = this.productMediaRepository.create(Context.api);\n            newMedia.mediaId = media.id;\n            newMedia.media = {\n                url: media.url,\n                id: media.id,\n            };\n\n            if (isEmpty(this.product.media)) {\n                this.setMediaAsCover(newMedia);\n            }\n\n            this.product.media.add(newMedia);\n\n            return Promise.resolve();\n        },\n\n        isExistingMedia(media) {\n            return this.product.media.some(({ id, mediaId }) => {\n                return id === media.id || mediaId === media.id;\n            });\n        },\n\n        setMediaAsCover(media) {\n            media.position = 0;\n            this.product.coverId = media.id;\n        },\n    },\n};\n","export default \"\\n{% block sw_product_detail_base %}\\n<div class=\\\"sw-product-detail-base\\\">\\n    <template v-if=\\\"isLoading\\\">\\n        <sw-skeleton variant=\\\"detail-bold\\\" />\\n        <sw-skeleton />\\n    </template>\\n\\n    <template v-else>\\n        \\n        {% block sw_product_detail_base_basic_info_card %}\\n        <sw-card\\n            v-show=\\\"showProductCard('general_information')\\\"\\n            class=\\\"sw-product-detail-base__info\\\"\\n            position-identifier=\\\"sw-product-detail-base-info\\\"\\n            :title=\\\"$tc('sw-product.detailBase.cardTitleProductInfo')\\\"\\n        >\\n\\n            \\n            {% block sw_product_detail_base_basic_info_form %}\\n            <sw-product-basic-form\\n                :show-settings-information=\\\"showModeSetting\\\"\\n                :allow-edit=\\\"acl.can('product.editor')\\\"\\n            />\\n            {% endblock %}\\n\\n        </sw-card>\\n        {% endblock %}\\n\\n        <sw-card\\n            v-show=\\\"productStates.includes('is-download')\\\"\\n            class=\\\"sw-product-detail-base__downloads\\\"\\n            :subtitle=\\\"$tc('sw-product.detailBase.cardSubtitleDownloads')\\\"\\n            :is-loading=\\\"loading.product || loading.customFieldSets || loading.downloads\\\"\\n            position-identifier=\\\"sw-product-detail-base-downloads\\\"\\n        >\\n            <template #title>\\n                <div class=\\\"sw-card__title\\\">\\n                    {{ $tc('sw-product.detailBase.cardTitleDownloads') }}\\n                </div>\\n            </template>\\n\\n            <sw-product-download-form\\n                v-if=\\\"mediaFormVisible\\\"\\n                :product-id=\\\"product.id\\\"\\n                :label=\\\"$tc('sw-product.detailBase.downloadsLabel')\\\"\\n                :disabled=\\\"!acl.can('product.editor')\\\"\\n                required\\n                @media-open=\\\"onOpenDownloadMediaModal\\\"\\n            />\\n        </sw-card>\\n\\n        \\n        {% block sw_product_detail_base_price_card %}\\n        <sw-card\\n            v-show=\\\"showProductCard('prices')\\\"\\n            class=\\\"sw-product-detail-base__prices\\\"\\n            position-identifier=\\\"sw-product-detail-base-prices\\\"\\n            :title=\\\"$tc('sw-product.detailBase.cardTitlePrices')\\\"\\n            :is-loading=\\\"loading.product\\\"\\n        >\\n\\n            \\n            {% block sw_product_detail_base_price_form %}\\n            <sw-product-price-form :allow-edit=\\\"acl.can('product.editor')\\\" />\\n            {% endblock %}\\n\\n            \\n            {% block sw_product_detail_base_advanced_prices_link %}\\n            <sw-container\\n                v-if=\\\"productId\\\"\\n                columns=\\\"1fr\\\"\\n                justify=\\\"end\\\"\\n            >\\n\\n                <router-link\\n                    :to=\\\"{ name: 'sw.product.detail.prices', params: { id: $route.params.id } }\\\"\\n                    class=\\\"sw-card__quick-link\\\"\\n                >\\n                    {{ $tc('sw-product.detailBase.linkAdvancedPrices') }} <sw-icon\\n                        name=\\\"regular-long-arrow-right\\\"\\n                        small\\n                    />\\n                </router-link>\\n            </sw-container>\\n            {% endblock %}\\n\\n        </sw-card>\\n        {% endblock %}\\n\\n        <template v-if=\\\"productStates.includes('is-download')\\\">\\n            \\n            {% block sw_product_detail_deliverability_downloadable_info_card %}\\n            <sw-card\\n                v-show=\\\"showProductCard('deliverability')\\\"\\n                class=\\\"sw-product-detail-base__deliverability-downloadable\\\"\\n                position-identifier=\\\"sw-product-detail-base-deliverability-downloadable\\\"\\n                :title=\\\"$tc('sw-product.detailBase.cardTitleDeliverabilityInfo')\\\"\\n            >\\n                \\n                {% block sw_product_detail_deliverability_downloadable_info_form %}\\n                <sw-product-deliverability-downloadable-form :disabled=\\\"!acl.can('product.editor')\\\" />\\n                {% endblock %}\\n            </sw-card>\\n            {% endblock %}\\n        </template>\\n\\n        <template v-else>\\n            \\n            {% block sw_product_detail_deliverability_info_card %}\\n            <sw-card\\n                v-show=\\\"showProductCard('deliverability')\\\"\\n                class=\\\"sw-product-detail-base__deliverability\\\"\\n                position-identifier=\\\"sw-product-detail-base-deliverability\\\"\\n                :title=\\\"$tc('sw-product.detailBase.cardTitleDeliverabilityInfo')\\\"\\n            >\\n                \\n                {% block sw_product_detail_deliverability_info_form %}\\n                <sw-product-deliverability-form :allow-edit=\\\"acl.can('product.editor')\\\" />\\n                {% endblock %}\\n            </sw-card>\\n            {% endblock %}\\n        </template>\\n\\n        \\n        {% block sw_product_detail_base_category_card %}\\n        <sw-card\\n            v-show=\\\"showProductCard('visibility_structure')\\\"\\n            class=\\\"sw-product-detail-base__visibility-structure\\\"\\n            position-identifier=\\\"sw-product-detail-base-visibility-structure\\\"\\n            :title=\\\"$tc('sw-product.detailBase.cardTitleAssignment')\\\"\\n            :is-loading=\\\"loading.product\\\"\\n        >\\n\\n            \\n            {% block sw_product_detail_base_category_form %}\\n            <sw-product-category-form :allow-edit=\\\"acl.can('product.editor')\\\" />\\n            {% endblock %}\\n\\n        </sw-card>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_detail_base_media %}\\n        <sw-inherit-wrapper\\n            v-show=\\\"showProductCard('media')\\\"\\n            ref=\\\"productMediaInheritance\\\"\\n            {% if VUE3 %}\\n            v-model:value=\\\"product.media\\\"\\n            {% else %}\\n            v-model=\\\"product.media\\\"\\n            {% endif %}\\n            class=\\\"sw-product-detail-base__media\\\"\\n            :inherited-value=\\\"parentProduct.media\\\"\\n            :custom-restore-inheritance-function=\\\"mediaRestoreInheritanceFunction\\\"\\n            :custom-remove-inheritance-function=\\\"mediaRemoveInheritanceFunction\\\"\\n            is-association\\n        >\\n            <template #content=\\\"{ isInherited, isInheritField, restoreInheritance, removeInheritance }\\\">\\n\\n                \\n                {% block sw_product_detail_base_media_card %}\\n                <sw-card\\n                    :subtitle=\\\"$tc('sw-product.detailBase.cardSubtitleMedia')\\\"\\n                    :is-loading=\\\"loading.product || loading.customFieldSets || loading.media\\\"\\n                    :class=\\\"{ 'sw-card__inherited': isInherited }\\\"\\n                    position-identifier=\\\"sw-product-detail-base-media\\\"\\n                >\\n                    <template #title>\\n\\n                        \\n                        {% block sw_product_detail_base_media_card_title %}\\n                        <div\\n                            class=\\\"sw-card__title\\\"\\n                            :class=\\\"{ 'sw-card__title__inherited': isInherited }\\\"\\n                        >\\n                            <sw-inheritance-switch\\n                                v-if=\\\"isInheritField\\\"\\n                                class=\\\"sw-inherit-wrapper__inheritance-icon\\\"\\n                                :is-inherited=\\\"isInherited\\\"\\n                                @inheritance-restore=\\\"restoreInheritance\\\"\\n                                @inheritance-remove=\\\"removeInheritance\\\"\\n                            />\\n                            {# TODO: headline is not clickable yet #}\\n                            {{ $tc('sw-product.detailBase.cardTitleMedia') }}\\n                        </div>\\n                        {% endblock %}\\n\\n                    </template>\\n\\n                    \\n                    {% block sw_product_detail_base_media_card_form %}\\n                    <sw-product-media-form\\n                        v-if=\\\"mediaFormVisible\\\"\\n                        :key=\\\"isInherited\\\"\\n                        :product-id=\\\"isInherited ? parentProduct.id : product.id\\\"\\n                        :is-inherited=\\\"isInherited\\\"\\n                        :disabled=\\\"isInherited || !acl.can('product.editor')\\\"\\n                        @media-open=\\\"onOpenMediaModal\\\"\\n                    />\\n                    {% endblock %}\\n\\n                </sw-card>\\n                {% endblock %}\\n\\n            </template>\\n        </sw-inherit-wrapper>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_detail_base_media_modal %}\\n        <sw-media-modal-v2\\n            v-if=\\\"showMediaModal\\\"\\n            :initial-folder-id=\\\"mediaDefaultFolderId\\\"\\n            :entity-context=\\\"product.getEntityName()\\\"\\n            @media-modal-selection-change=\\\"onAddMedia\\\"\\n            @modal-close=\\\"onCloseMediaModal\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_detail_base_settings_card %}\\n        <sw-card\\n            v-show=\\\"showProductCard('labelling')\\\"\\n            class=\\\"sw-product-detail-base__labelling-card\\\"\\n            position-identifier=\\\"sw-product-detail-base-labelling\\\"\\n            :title=\\\"$tc('sw-product.detailBase.cardTitleSettings')\\\"\\n            :is-loading=\\\"loading.product\\\"\\n        >\\n\\n            \\n            {% block sw_product_detail_base_settings_form %}\\n            <sw-product-settings-form :allow-edit=\\\"acl.can('product.editor')\\\" />\\n            {% endblock %}\\n\\n        </sw-card>\\n        {% endblock %}\\n\\n    </template>\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}