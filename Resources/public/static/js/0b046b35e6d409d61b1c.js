(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[81758],{89881:function(e,n,t){var i=t(47816),o=t(99291)(i);e.exports=o},47816:function(e,n,t){var i=t(28483),o=t(3674);e.exports=function(e,n){return e&&i(e,n,o)}},69199:function(e,n,t){var i=t(89881),o=t(98612);e.exports=function(e,n){var t=-1,s=o(e)?Array(e.length):[];return i(e,function(e,i,o){s[++t]=n(e,i,o)}),s}},82689:function(e,n,t){var i=t(29932),o=t(97786),s=t(67206),c=t(69199),l=t(71131),a=t(7518),r=t(85022),u=t(6557),d=t(1469);e.exports=function(e,n,t){n=n.length?i(n,function(e){return d(e)?function(n){return o(n,1===e.length?e[0]:e)}:e}):[u];var w=-1;return n=i(n,a(s)),l(c(e,function(e,t,o){return{criteria:i(n,function(n){return n(e)}),index:++w,value:e}}),function(e,n){return r(e,n,t)})}},71131:function(e){e.exports=function(e,n){var t=e.length;for(e.sort(n);t--;)e[t]=e[t].value;return e}},26393:function(e,n,t){var i=t(33448);e.exports=function(e,n){if(e!==n){var t=void 0!==e,o=null===e,s=e==e,c=i(e),l=void 0!==n,a=null===n,r=n==n,u=i(n);if(!a&&!u&&!c&&e>n||c&&l&&r&&!a&&!u||o&&l&&r||!t&&r||!s)return 1;if(!o&&!c&&!u&&e<n||u&&t&&s&&!o&&!c||a&&t&&s||!l&&s||!r)return -1}return 0}},85022:function(e,n,t){var i=t(26393);e.exports=function(e,n,t){for(var o=-1,s=e.criteria,c=n.criteria,l=s.length,a=t.length;++o<l;){var r=i(s[o],c[o]);if(r){if(o>=a)return r;return r*("desc"==t[o]?-1:1)}}return e.index-n.index}},99291:function(e,n,t){var i=t(98612);e.exports=function(e,n){return function(t,o){if(null==t)return t;if(!i(t))return e(t,o);for(var s=t.length,c=n?s:-1,l=Object(t);(n?c--:++c<s)&&!1!==o(l[c],c,l););return t}}},75472:function(e,n,t){var i=t(82689),o=t(1469);e.exports=function(e,n,t,s){return null==e?[]:(o(n)||(n=null==n?[]:[n]),o(t=s?void 0:t)||(t=null==t?[]:[t]),i(e,n,t))}},89734:function(e,n,t){var i=t(21078),o=t(82689),s=t(5976),c=t(16612),l=s(function(e,n){if(null==e)return[];var t=n.length;return t>1&&c(e,n[0],n[1])?n=[]:t>2&&c(n[0],n[1],n[2])&&(n=[n[0]]),o(e,i(n,1),[])});e.exports=l},46370:function(){},81758:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return f}});var i=t(75472),o=t.n(i),s=t(89734),c=t.n(s);t(22727);let{Component:l,State:a,Mixin:r}=Shopware,u=Shopware.Utils,{cloneDeep:d}=u.object,{ShopwareError:w}=Shopware.Classes,{mapState:p,mapGetters:m}=l.getComponentHelper(),{snakeCase:_}=u.string;var f={template:'\n{% block sw_flow_sequence_action %}\n<div\n    class="sw-flow-sequence-action"\n    :class="actionClasses"\n>\n    \n    {% block sw_flow_sequence_action_card %}\n    <div class="sw-flow-sequence-action__card">\n        \n        {% block sw_flow_sequence_action_header %}\n        <div class="sw-flow-sequence-action__header">\n            \n            {% block sw_flow_sequence_action_title %}\n            <div class="sw-flow-sequence-action__title-description">\n                <h3 class="sw-flow-sequence-action__title">\n                    {{ $tc(\'sw-flow.detail.sequence.actionTitle\') }}\n                </h3>\n\n                <p class="sw-flow-sequence-action__description">\n                    {{ $tc(\'sw-flow.detail.sequence.actionDescription\') }}\n                </p>\n            </div>\n            {% endblock %}\n\n            \n            {% block sw_flow_sequence_action_context_menu %}\n            <sw-context-button\n                class="sw-flow-sequence-action__context-button"\n                :class="actionClasses"\n                :disabled="disabled"\n            >\n                \n                {% block sw_flow_sequence_action_remove_action_container %}\n                <sw-context-menu-item\n                    variant="danger"\n                    class="sw-flow-sequence-action__delete-action-container"\n                    @click="removeActionContainer"\n                >\n                    {{ $tc(\'sw-flow.detail.sequence.contextButton.deleteActionContainer\') }}\n                </sw-context-menu-item>\n                {% endblock %}\n            </sw-context-button>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        \n        {% block sw_flow_sequence_action_content %}\n        <div class="sw-flow-sequence-action__content">\n            \n            {% block sw_flow_sequence_action_actions %}\n            <div class="sw-flow-sequence-action__actions">\n                \n                {% block sw_flow_sequence_action_actions_empty %}\n                <div\n                    v-if="sequenceData.length === 1 && !sequence.actionName"\n                    class="sw-flow-sequence-action__actions-empty"\n                >\n                    <sw-icon\n                        size="12px"\n                        name="regular-minus-xs"\n                    />\n                    <span class="sw-flow-sequence-action__no-action">\n                        {{ $tc(\'sw-flow.detail.sequence.noActions\') }}\n                    </span>\n                </div>\n                {% endblock %}\n\n                \n                {% block sw_flow_sequence_action_actions_list %}\n                <ul\n                    v-else\n                    class="sw-flow-sequence-action__action-list"\n                >\n                    \n                    {% block sw_flow_sequence_action_actions_transition_group %}\n                    <transition-group\n                        name="list"\n                        tag="div"\n                    >\n                        \n                        {% block sw_flow_sequence_action_actions_item %}\n                        <li\n                            v-for="(item, key) in sequenceData"\n                            :key="item.id"\n                            v-tooltip="{\n                                message: $tc(\'sw-flow.actions.tooltipActionDisabled\'),\n                                disabled: !item.disabled\n                            }"\n                            class="sw-flow-sequence-action__action-item"\n                            :class="{\'sw-flow-sequence-action__disabled\': item.disabled}"\n                            role="button"\n                            tabindex="0"\n                            @click="(event) => onEditAction(item, event.target, key)"\n                            @keydown.enter="(event) => onEditAction(item, event.target, key)"\n                        >\n                            <sw-flow-sequence-action-error\n                                v-if="!isValidAction(item.actionName)"\n                                :sequence="item"\n                            >\n                                <template #content>\n                                    <div class="sw-flow-sequence-action__error-action">\n                                        <div class="sw-flow-sequence-action__error-action-title">\n                                            <sw-icon\n                                                name="regular-question-circle-s"\n                                                size="14px"\n                                                class="sw-icon-action"\n                                            />\n\n                                            {{ $tc(\'sw-flow.actions.unknownLabel\') }}\n                                        </div>\n\n                                        <p>\n                                            {{ $tc(\'sw-flow.actions.warningText\') }}\n                                        </p>\n                                    </div>\n                                </template>\n                            </sw-flow-sequence-action-error>\n\n                            <div v-else>\n                                \n                                {% block sw_flow_sequence_action_actions_item_header %}\n                                <div class="sw-flow-sequence-action__action-header">\n                                    <div class="sw-flow-sequence-action__action-icon">\n                                        <sw-icon\n                                            v-if="!item.iconRaw"\n                                            :name="`${item.icon}`"\n                                            size="12px"\n                                            class="sw-icon-action"\n                                        />\n\n                                        <img\n                                            v-else\n                                            class="sw-flow-sequence-action__icon-raw sw-icon"\n                                            :src="`data:image/png;base64, ${item.iconRaw}`"\n                                            alt=""\n                                        >\n                                    </div>\n\n                                    \n                                    {% block sw_flow_sequence_action_actions_item_name %}\n                                    <div class="sw-flow-sequence-action__action-name">\n                                        <h3>{{ item.label }}</h3>\n                                    </div>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_flow_sequence_action_actions_item_context_button %}\n                                    <sw-context-button\n                                        ref="contextButton"\n                                        class="sw-flow-sequence-action__context-button"\n                                        :disabled="disabled || item.disabled"\n                                    >\n                                        \n                                        {% block sw_flow_sequence_action_actions_item_button_edit %}\n                                        <sw-context-menu-item\n                                            v-if="isNotStopFlow(item)"\n                                            class="sw-flow-sequence-action__edit-action"\n                                            @click="(event) => onEditAction(item, event.target, key)"\n                                        >\n                                            {{ $tc(\'sw-flow.actions.contextButton.editAction\') }}\n                                        </sw-context-menu-item>\n                                        {% endblock %}\n\n                                        \n                                        {% block sw_flow_sequence_action_actions_item_button_delete %}\n                                        <sw-context-menu-item\n                                            variant="danger"\n                                            class="sw-flow-sequence-action__delete-action"\n                                            @click="removeAction(item.id)"\n                                        >\n                                            {{ $tc(\'sw-flow.actions.contextButton.deleteAction\') }}\n                                        </sw-context-menu-item>\n                                        {% endblock %}\n\n                                        \n                                        {% block sw_flow_sequence_action_actions_item_button_move_up %}\n                                        <sw-context-menu-item\n                                            v-if="showMoveOption(item, \'up\')"\n                                            class="sw-flow-sequence-action__move-up"\n                                            @click="moveAction(item, \'up\', key)"\n                                        >\n                                            {{ $tc(\'sw-flow.actions.contextButton.moveUpAction\') }}\n                                        </sw-context-menu-item>\n                                        {% endblock %}\n\n                                        \n                                        {% block sw_flow_sequence_action_actions_item_button_move_down %}\n                                        <sw-context-menu-item\n                                            v-if="showMoveOption(item, \'down\')"\n                                            class="sw-flow-sequence-action__move-down"\n                                            @click="moveAction(item, \'down\', key)"\n                                        >\n                                            {{ $tc(\'sw-flow.actions.contextButton.moveDownAction\') }}\n                                        </sw-context-menu-item>\n                                        {% endblock %}\n                                    </sw-context-button>\n                                    {% endblock %}\n                                </div>\n                                {% endblock %}\n                            </div>\n\n                            \n                            {% block sw_flow_sequence_action_actions_item_description %}\n                            <div\n                                class="sw-flow-sequence-action__action-description"\n                                v-html="getActionDescriptions(item)"\n                            >\n                            </div>\n                            {% endblock %}\n\n                            \n                            {% block sw_flow_sequence_action_item_custom %}\n                            {% endblock %}\n\n                        </li>\n                        {% endblock %}\n                    </transition-group>\n                    {% endblock %}\n                </ul>\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n            \n            {% block sw_flow_sequence_action_add_select %}\n            <div\n                v-if="showAddAction && !disabled"\n                class="sw-flow-sequence-action__select"\n            >\n                \n                {% block sw_flow_sequence_action_list %}\n                <sw-grouped-single-select\n                    class="sw-flow-sequence-action__selection-action"\n                    size="small"\n                    value=""\n                    :placeholder="$tc(\'sw-flow.actions.placeholderSelectAction\')"\n                    :options="actionOptions"\n                    :groups="groups"\n                    :popover-classes="[\'sw-flow-sequence-action__popover\']"\n                    :error="fieldError"\n                    :disabled="isUnknownTrigger"\n                    @update:value="openDynamicModal"\n                >\n                    <template #result-item="{ item, index, labelProperty, highlightSearchTerm, isSelected, setValue, getKey }">\n                        <sw-select-result\n                            v-tooltip="{\n                                message: $tc(\'sw-flow.actions.tooltipActionDisabled\'),\n                                disabled: !item.disabled\n                            }"\n                            :selected="isSelected(item)"\n                            v-bind="{ item, index }"\n                            :class="[stopFlowStyle(item.value), {\'sw-flow-sequence-action__disabled\': item.disabled}]"\n                            @item-select="setValue"\n                        >\n                            \n                            {% block sw_flow_sequence_action_select_results_list_result_label %}\n                            <sw-icon\n                                v-if="!item.iconRaw"\n                                :name="`${item.icon}`"\n                                size="12px"\n                                class="sw-icon-action"\n                            />\n\n                            <img\n                                v-else\n                                class="sw-flow-sequence-action__icon-raw"\n                                :src="`data:image/png;base64, ${item.iconRaw}`"\n                                alt=""\n                            >\n\n                            <sw-highlight-text\n                                v-if="highlightSearchTerm"\n                                :text="getKey(item, labelProperty)"\n                            />\n\n                            <template v-else>\n                                {{ getKey(item, labelProperty) }}\n                            </template>\n                            {% endblock %}\n                        </sw-select-result>\n                    </template>\n                </sw-grouped-single-select>\n                {% endblock %}\n            </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <div\n        v-if="errorArrow"\n        class="sw-flow-sequence-action__true-arrow"\n    >\n        <div class="sw-flow-sequence-action__true-line"></div>\n        <div class="sw-flow-sequence-action__oval"></div>\n        <sw-icon\n            name="regular-chevron-right-s"\n            small\n        />\n\n    </div>\n\n    \n    {% block sw_flow_sequence_action_modal %}\n    <sw-flow-sequence-modal\n        :sequence="currentSequence"\n        :action="selectedAction"\n        :modal-name="modalName"\n        @process-finish="onSaveActionSuccess"\n        @modal-close="onCloseModal"\n    />\n    {% endblock %}\n</div>\n{% endblock %}\n',inject:["repositoryFactory","flowBuilderService","feature"],mixins:[r.getByName("sw-inline-snippet")],props:{sequence:{type:Object,required:!0},disabled:{type:Boolean,required:!1,default:!1},isUnknownTrigger:{type:Boolean,required:!1,default:!1}},data(){return{fieldError:null,selectedAction:"",currentSequence:{},appFlowActions:[],isAppAction:!1}},computed:{sequenceRepository(){return this.repositoryFactory.create("flow_sequence")},customFieldSetRepository(){return this.repositoryFactory.create("custom_field_set")},actionOptions(){let e=this.availableActions.map(e=>this.getActionTitle(e));return this.sortActionOptions(e)},groups(){let e=this.actionGroups.map(e=>({id:e,label:this.$tc(`sw-flow.actions.group.${e}`)}));if(this.appActions.length){let n=this.appActions[0];this.actionGroups.find(e=>e===n?.app?.name)||e.unshift({id:`${n?.app?.name[0].toLowerCase()}${n?.app?.name.slice(1)}`,label:n?.app?.label})}return c()(e,["label"])},sequenceData(){return this.sequence.id?[{...this.sequence,...this.getActionTitle(this.sequence.actionName)}]:this.sortByPosition(Object.values(this.sequence).map(e=>({...e,...this.getActionTitle(e.actionName)})))},showAddAction(){return!(this.sequence.actionName===this.stopFlowActionName||this.sequenceData.some(e=>e.actionName===this.stopFlowActionName))},stopFlowActionName(){return this.flowBuilderService.getActionName("STOP_FLOW")},actionClasses(){return{"is--stop-flow":!this.showAddAction,"has--arrow":this.errorArrow}},errorArrow(){return!this.isValidAction(this.sequence)&&this.sequence.actionName&&this.sequence.trueBlock},modalName(){return this.getSelectedAppAction(this.selectedAction)?"sw-flow-app-action-modal":this.flowBuilderService.getActionModalName(this.selectedAction)},currentLocale(){return Shopware.State.get("session").currentLocale},...p("swFlowState",["invalidSequences","stateMachineState","documentTypes","mailTemplates","customerGroups","customFieldSets","customFields","triggerEvent","triggerActions"]),...m("swFlowState",["availableActions","actionGroups","sequences","appActions","getSelectedAppAction","hasAvailableAction"])},watch:{sequence:{handler(){this.setFieldError()}}},methods:{openDynamicModal(e){let n=this.getSelectedAppAction(e);if(n&&(this.isAppAction=!0,this.currentSequence.propsAppFlowAction=n),e===this.stopFlowActionName){this.addAction({name:this.stopFlowActionName,config:null});return}this.selectedAction=e},onSaveActionSuccess(e){let{config:n,id:t}=e,i=n?.entity,o=this.selectedAction,s=this.flowBuilderService.mapActionType(this.selectedAction);s&&i&&(i=_(i).replace("_","."),o=s.replace("entity",i)),t?this.editAction({name:o,config:n}):this.addAction({name:o,config:n}),this.onCloseModal()},onCloseModal(){this.currentSequence={},this.selectedAction="",this.isAppAction=!1,this.$delete(this.sequence,"propsAppFlowAction")},addAction(e){if(!e.name)return;let n=this.getSelectedAppAction(e.name);if(!this.sequence.actionName&&this.sequence.id){let t={id:this.sequence.id,actionName:e.name,config:e.config};n&&(t.appFlowActionId=n.id),a.commit("swFlowState/updateSequence",t)}else{let t=this.sequenceData[this.sequenceData.length-1],i=this.sequenceRepository.create(),o={...i,parentId:t.parentId,trueCase:t.trueCase,displayGroup:t.displayGroup,ruleId:null,actionName:e.name,position:t.position+1,config:e.config,id:u.createId()};n&&(o.appFlowActionId=n.id),i=Object.assign(i,o),a.commit("swFlowState/addSequence",i)}this.removeFieldError()},editAction(e){e.name&&a.commit("swFlowState/updateSequence",{id:this.currentSequence.id,actionName:e.name,config:e.config})},removeAction(e){let n=this.sequences.find(n=>n.id===e);n?.id&&this.sequences.filter(t=>t.parentId===n.parentId&&t.trueCase===n.trueCase&&t.id!==e).forEach((e,n)=>{a.commit("swFlowState/updateSequence",{id:e.id,position:n+1})}),this.isAppDisabled(this.getSelectedAppAction(this.sequence[e]?.actionName))||a.commit("swFlowState/removeSequences",[e])},actionsWithoutStopFlow(){if(this.sequence.id)return[{...this.sequence}];let e=Object.values(this.sequence);return this.sortByPosition(e.filter(e=>e.actionName!==this.stopFlowActionName))},showMoveOption(e,n){let t=this.actionsWithoutStopFlow();return!(t.length<=1)&&("up"!==n||t[0].position!==e.position)&&("down"!==n||t[t.length-1].position!==e.position)&&e.actionName!==this.stopFlowActionName},moveAction(e,n,t){if(this.isAppDisabled(this.getSelectedAppAction(e.actionName)))return;let i=this.actionsWithoutStopFlow(),o=i.findIndex(n=>n.position===e.position),s="up"===n?i[o-1]:i[o+1],c=d(s);a.commit("swFlowState/updateSequence",{id:s.id,position:e.position}),a.commit("swFlowState/updateSequence",{id:e.id,position:c.position});let l="up"===n?t-1:t+1,r=this.$refs.contextButton;[r[t],r[l]]=[r[l],r[t]]},onEditAction(e,n,t){!(e.actionName&&e.actionName===this.stopFlowActionName||!this.hasAvailableAction(e.actionName)||!e?.actionName||!n||this.$refs.contextButton[t]&&this.$refs.contextButton[t].$el.contains(n))&&(this.isAppDisabled(this.getSelectedAppAction(e.actionName))||(e.propsAppFlowAction=this.getSelectedAppAction(e.actionName),this.currentSequence=e,this.selectedAction=e.actionName))},removeActionContainer(){let e=this.sequence.id?[this.sequence.id]:Object.keys(this.sequence);a.commit("swFlowState/removeSequences",e)},getActionTitle(e){if(!e)return null;let n=this.getSelectedAppAction(e);if(n)return{label:n.label||n.translated?.label,icon:n.swIcon,iconRaw:n.icon,value:n.name,disabled:!n.app?.active,group:`${n.app?.name[0].toLowerCase()}${n.app?.name.slice(1)}`};let t=this.flowBuilderService.getActionTitle(e);return{...t,label:this.$tc(t.label),group:this.flowBuilderService.getActionGroupMapping(e)}},sortByPosition(e){return e.sort((e,n)=>e.position-n.position)},stopFlowStyle(e){return{"is--stop-flow":e===this.stopFlowActionName}},getActionDescriptions(e){if(!e.actionName)return"";let n={appActions:this.appActions,customerGroups:this.customerGroups,customFieldSets:this.customFieldSets,customFields:this.customFields,stateMachineState:this.stateMachineState,documentTypes:this.documentTypes,mailTemplates:this.mailTemplates};return this.flowBuilderService.getActionDescriptions(n,e,this)},setFieldError(){if(!this.invalidSequences?.includes(this.sequence.id)){this.fieldError=null;return}this.fieldError=new w({code:"c1051bb4-d103-4f74-8988-acbcafc7fdc3"})},removeFieldError(){if(!this.fieldError)return;this.fieldError=null;let e=this.invalidSequences?.filter(e=>this.sequence.id!==e);a.commit("swFlowState/setInvalidSequences",e)},isNotStopFlow(e){return e.actionName!==this.stopFlowActionName},capitalize(e){return`${e.slice(0,1).toUpperCase()}${e.slice(1)}`},isAppDisabled(e){return!!e&&!e.app.active},getStopFlowIndex(e){return e.map((e,n)=>e.group===this.flowBuilderService.getGroup("GENERAL")&&n).filter(e=>e>0).pop()||e.length},sortActionOptions(e){let n=e.pop();(e=o()(e,["group","label"])).forEach(n=>{n.group&&n.group!==this.flowBuilderService.getGroup("GENERAL")||(n.group=n.group||this.flowBuilderService.getGroup("GENERAL"),e.push(e.splice(e.findIndex(e=>e.group===this.flowBuilderService.getGroup("GENERAL")),1)[0]))}),e=c()(e,["group","label"],["esc","esc"]);let t=this.getStopFlowIndex(e)+1;return e.splice(t,0,n),e},isValidAction(e){return e&&this.hasAvailableAction(e)}}}},22727:function(e,n,t){var i=t(46370);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[e.id,i,""]]),i.locals&&(e.exports=i.locals),t(45346).Z("7c8c9947",i,!0,{})}}]);