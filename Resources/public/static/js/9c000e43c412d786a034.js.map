{"version":3,"sources":["webpack:///./src/app/asyncComponent/media/sw-media-modal-folder-dissolve/index.js","webpack:///./src/app/asyncComponent/media/sw-media-modal-folder-dissolve/sw-media-modal-folder-dissolve.html.twig"],"names":["Mixin","Shopware","template","inject","mixins","getByName","props","itemsToDissolve","required","type","Array","validator","value","length","methods","closeDissolveModal","originalDomEvent","this","$emit","_dissolveSelection","item","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","isLoading","mediaFolderService","dissolveFolder","id","createNotificationSuccess","title","$root","$tc","message","folderName","name","abrupt","t0","createNotificationError","finish","stop","dissolveSelection","_this2","_callee2","dissolvedIds","_context2","Promise","all","map","push"],"mappings":"4KAEQA,EAAUC,SAAVD,MAYO,WACXE,SCfW,4wCDiBXC,OAAQ,CAAC,sBAETC,OAAQ,CACJJ,EAAMK,UAAU,iBAGpBC,MAAO,CACHC,gBAAiB,CACbC,UAAU,EACVC,KAAMC,MACNC,UAAS,SAACC,GACN,OAAyB,IAAjBA,EAAMC,UAK1BC,QAAS,CACLC,mBAAkB,SAACC,GACfC,KAAKC,MAAM,oCAAqC,CAAEF,sBAGhDG,mBAAkB,SAACC,GAAO,IAADC,EAAA,YAAAC,IAAAC,IAAAC,MAAA,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACL,OAAtBT,EAAKU,WAAY,EAAKH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGZR,EAAKU,mBAAmBC,eAAeZ,EAAKa,IAAI,KAAD,EASlD,OAPHZ,EAAKa,0BAA0B,CAC3BC,MAAOd,EAAKe,MAAMC,IAAI,0BACtBC,QAASjB,EAAKe,MAAMC,IAChB,2EACA,EACA,CAAEE,WAAYnB,EAAKoB,SAExBb,EAAAc,OAAA,SACIrB,EAAKa,IAAE,OASX,OATWN,EAAAC,KAAA,EAAAD,EAAAe,GAAAf,EAAA,SAEdN,EAAKsB,wBAAwB,CACzBR,MAAOd,EAAKe,MAAMC,IAAI,wBACtBC,QAASjB,EAAKe,MAAMC,IAChB,yEACA,EACA,CAAEE,WAAYnB,EAAKoB,SAExBb,EAAAc,OAAA,SAEI,MAAI,QAEY,OAFZd,EAAAC,KAAA,GAEXR,EAAKU,WAAY,EAAMH,EAAAiB,OAAA,6BAAAjB,EAAAkB,UAAApB,EAAA,uBA3BAH,IA+BzBwB,kBAAiB,WAAI,IAADC,EAAA,YAAAzB,IAAAC,IAAAC,MAAA,SAAAwB,IAAA,IAAAC,EAAA,OAAA1B,IAAAG,MAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,OACC,OAAjBoB,EAAe,GAAEC,EAAAtB,KAAA,EAAAsB,EAAArB,KAAA,EAGbsB,QAAQC,IAAIL,EAAKxC,gBAAgB8C,KAAI,SAACjC,GAExC,OADA6B,EAAaK,KAAKlC,EAAKa,IAChBc,EAAK5B,mBAAmBC,OAC/B,KAAD,EAEC2B,EAAKxC,gBAAgBM,OAAS,GAC9BkC,EAAKb,0BAA0B,CAC3BC,MAAOY,EAAKX,MAAMC,IAAI,0BACtBC,QAASS,EAAKX,MAAMC,IAChB,+EAKZU,EAAK7B,MACD,uCACA+B,GACFC,EAAArB,KAAA,gBAAAqB,EAAAtB,KAAA,EAAAsB,EAAAR,GAAAQ,EAAA,SAEEH,EAAKxC,gBAAgBM,OAAS,GAC9BkC,EAAKJ,wBAAwB,CACzBR,MAAOY,EAAKX,MAAMC,IAAI,wBACtBC,QAASS,EAAKX,MAAMC,IAChB,6EAGX,yBAAAa,EAAAL,UAAAG,EAAA,iBA9BiB1B","file":"static/js/9c000e43c412d786a034.js","sourcesContent":["import template from './sw-media-modal-folder-dissolve.html.twig';\n\nconst { Mixin } = Shopware;\n\n/**\n * @status ready\n * @description The <u>sw-media-modal-folder-dissolve</u> component is used to validate the dissolve folder action.\n * @package content\n * @example-type code-only\n * @component-example\n * <sw-media-modal-folder-dissolve :itemsToDissolve=\"[items]\">\n * </sw-media-modal-folder-dissolve>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['mediaFolderService'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        itemsToDissolve: {\n            required: true,\n            type: Array,\n            validator(value) {\n                return (value.length !== 0);\n            },\n        },\n    },\n\n    methods: {\n        closeDissolveModal(originalDomEvent) {\n            this.$emit('media-folder-dissolve-modal-close', { originalDomEvent });\n        },\n\n        async _dissolveSelection(item) {\n            item.isLoading = true;\n\n            try {\n                await this.mediaFolderService.dissolveFolder(item.id);\n\n                this.createNotificationSuccess({\n                    title: this.$root.$tc('global.default.success'),\n                    message: this.$root.$tc(\n                        'global.sw-media-modal-folder-dissolve.notification.successSingle.message',\n                        1,\n                        { folderName: item.name },\n                    ),\n                });\n                return item.id;\n            } catch {\n                this.createNotificationError({\n                    title: this.$root.$tc('global.default.error'),\n                    message: this.$root.$tc(\n                        'global.sw-media-modal-folder-dissolve.notification.errorSingle.message',\n                        1,\n                        { folderName: item.name },\n                    ),\n                });\n\n                return null;\n            } finally {\n                item.isLoading = false;\n            }\n        },\n\n        async dissolveSelection() {\n            const dissolvedIds = [];\n\n            try {\n                await Promise.all(this.itemsToDissolve.map((item) => {\n                    dissolvedIds.push(item.id);\n                    return this._dissolveSelection(item);\n                }));\n\n                if (this.itemsToDissolve.length > 1) {\n                    this.createNotificationSuccess({\n                        title: this.$root.$tc('global.default.success'),\n                        message: this.$root.$tc(\n                            'global.sw-media-modal-folder-dissolve.notification.successOverall.message',\n                        ),\n                    });\n                }\n\n                this.$emit(\n                    'media-folder-dissolve-modal-dissolve',\n                    dissolvedIds,\n                );\n            } catch {\n                if (this.itemsToDissolve.length > 1) {\n                    this.createNotificationError({\n                        title: this.$root.$tc('global.default.error'),\n                        message: this.$root.$tc(\n                            'global.sw-media-modal-folder-dissolve.notification.errorOverall.message',\n                        ),\n                    });\n                }\n            }\n        },\n    },\n};\n","export default \"\\n{% block sw_media_modal_folder_dissolve %}\\n<sw-modal\\n    variant=\\\"small\\\"\\n    class=\\\"sw-media-modal-folder-dissolve\\\"\\n    :title=\\\"$tc('global.default.warning')\\\"\\n    @modal-close=\\\"closeDissolveModal\\\"\\n>\\n\\n    \\n    {% block sw_media_modal_folder_dissolve_body %}\\n    {{ $tc('global.sw-media-modal-folder-dissolve.dissolveMessage', itemsToDissolve.length, { folderName: itemsToDissolve[0].name, count: itemsToDissolve.length }) }}\\n    {% endblock %}\\n\\n    \\n    {% block sw_media_modal_folder_dissolve_footer %}\\n    <template #modal-footer>\\n\\n        \\n        {% block sw_media_modal_folder_dissolve__cancel_button %}\\n        <sw-button\\n            size=\\\"small\\\"\\n            @click=\\\"closeDissolveModal\\\"\\n        >\\n            {{ $tc('global.default.cancel') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n        \\n        {% block sw_media_modal_folder_dissolve_confirm_button %}\\n        <sw-button\\n            class=\\\"sw-media-modal-folder-dissolve__confirm\\\"\\n            size=\\\"small\\\"\\n            variant=\\\"danger\\\"\\n            @click=\\\"dissolveSelection\\\"\\n        >\\n            {{ $tc('global.sw-media-modal-folder-dissolve.buttonDissolve') }}\\n        </sw-button>\\n        {% endblock %}\\n\\n    </template>\\n    {% endblock %}\\n</sw-modal>\\n{% endblock %}\\n\";"],"sourceRoot":""}