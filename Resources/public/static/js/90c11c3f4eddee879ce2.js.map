{"version":3,"sources":["webpack:///./src/module/sw-product/view/sw-product-detail-layout/sw-product-detail-layout.scss","webpack:///./src/module/sw-product/view/sw-product-detail-layout/index.js","webpack:///./src/module/sw-product/view/sw-product-detail-layout/sw-product-detail-layout.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","_Shopware","Shopware","Component","State","Context","Utils","Criteria","Data","_Component$getCompone","getComponentHelper","mapState","mapGetters","_Utils$object","object","cloneDeep","merge","get","template","inject","data","showLayoutModal","isConfigLoading","computed","_objectSpread","cmsPageRepository","this","repositoryFactory","create","cmsPageId","product","showCmsForm","isLoading","currentPage","locked","cmsPageCriteria","criteria","addAssociation","getAssociation","addSorting","sort","languageId","api","watch","dispatch","handleGetCmsPage","deep","handler","value","updateCmsPageDataMapping","created","createdComponent","methods","_this$currentPage$sec","_this$currentPage","sections","length","onOpenLayoutModal","acl","can","onCloseLayoutModal","onOpenInPageBuilder","$router","push","name","params","id","onSelectLayout","slotConfig","commit","_this","then","cmsPage","forEach","section","blocks","block","slots","slot","config","cmsService","getEntityMappingTypes","onResetLayout","elementUpdate","element","_this$product$slotCon","slotContent"],"mappings":"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","file":"static/js/90c11c3f4eddee879ce2.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-product-detail-layout.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"e98333e2\", content, true, {});","/*\n * @package inventory\n */\n\nimport template from './sw-product-detail-layout.html.twig';\nimport './sw-product-detail-layout.scss';\n\nconst { Component, State, Context, Utils } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { mapState, mapGetters } = Component.getComponentHelper();\nconst { cloneDeep, merge, get } = Utils.object;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'cmsService', 'feature', 'acl'],\n\n    data() {\n        return {\n            showLayoutModal: false,\n            isConfigLoading: false,\n        };\n    },\n\n    computed: {\n        cmsPageRepository() {\n            return this.repositoryFactory.create('cms_page');\n        },\n\n        cmsPageId() {\n            return get(this.product, 'cmsPageId', null);\n        },\n\n        showCmsForm() {\n            return (!this.isLoading || !this.isConfigLoading) && !this.currentPage.locked;\n        },\n\n        ...mapState('swProductDetail', [\n            'product',\n        ]),\n\n        ...mapGetters('swProductDetail', [\n            'isLoading',\n        ]),\n\n        ...mapState('cmsPageState', [\n            'currentPage',\n        ]),\n\n        cmsPageCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addAssociation('previewMedia');\n            criteria.addAssociation('sections');\n            criteria.getAssociation('sections').addSorting(Criteria.sort('position'));\n\n            criteria.addAssociation('sections.blocks');\n            criteria.getAssociation('sections.blocks')\n                .addSorting(Criteria.sort('position', 'ASC'))\n                .addAssociation('slots');\n\n            return criteria;\n        },\n\n        languageId() {\n            return Shopware.Context.api.languageId;\n        },\n    },\n\n    watch: {\n        cmsPageId() {\n            State.dispatch('cmsPageState/resetCmsPageState');\n            this.handleGetCmsPage();\n        },\n\n        product: {\n            deep: true,\n            handler(value) {\n                if (!value) {\n                    return;\n                }\n\n                this.updateCmsPageDataMapping();\n            },\n        },\n\n        languageId() {\n            State.dispatch('cmsPageState/resetCmsPageState');\n            this.handleGetCmsPage();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            // Keep current layout configuration if page sections exist\n            const sections = this.currentPage?.sections ?? [];\n\n            if (sections.length) {\n                return;\n            }\n\n            this.handleGetCmsPage();\n        },\n\n        onOpenLayoutModal() {\n            if (!this.acl.can('product.editor')) {\n                return;\n            }\n\n            this.showLayoutModal = true;\n        },\n\n        onCloseLayoutModal() {\n            this.showLayoutModal = false;\n        },\n\n        onOpenInPageBuilder() {\n            if (!this.currentPage) {\n                this.$router.push({ name: 'sw.cms.create' });\n            } else {\n                this.$router.push({ name: 'sw.cms.detail', params: { id: this.currentPage.id } });\n            }\n        },\n\n        onSelectLayout(cmsPageId) {\n            if (!this.product) {\n                return;\n            }\n\n            this.product.cmsPageId = cmsPageId;\n            this.product.slotConfig = null;\n            State.commit('swProductDetail/setProduct', this.product);\n        },\n\n        handleGetCmsPage() {\n            if (!this.cmsPageId) {\n                return;\n            }\n\n            this.isConfigLoading = true;\n\n            this.cmsPageRepository.get(this.cmsPageId, Context.api, this.cmsPageCriteria).then((cmsPage) => {\n                if (this.product.slotConfig && cmsPage) {\n                    cmsPage.sections.forEach((section) => {\n                        section.blocks.forEach((block) => {\n                            block.slots.forEach((slot) => {\n                                if (!this.product.slotConfig[slot.id]) {\n                                    return;\n                                }\n\n                                slot.config = slot.config || {};\n                                merge(slot.config, cloneDeep(this.product.slotConfig[slot.id]));\n                            });\n                        });\n                    });\n                }\n\n                State.commit('cmsPageState/setCurrentPage', cmsPage);\n                this.updateCmsPageDataMapping();\n                this.isConfigLoading = false;\n            });\n        },\n\n        updateCmsPageDataMapping() {\n            Shopware.State.commit('cmsPageState/setCurrentMappingEntity', 'product');\n            Shopware.State.commit(\n                'cmsPageState/setCurrentMappingTypes',\n                this.cmsService.getEntityMappingTypes('product'),\n            );\n            Shopware.State.commit('cmsPageState/setCurrentDemoEntity', this.product);\n        },\n\n        onResetLayout() {\n            this.onSelectLayout(null);\n        },\n\n        elementUpdate(element) {\n            const slotContent = this.product.slotConfig[element.id]?.content;\n            if (slotContent && slotContent.value) {\n                slotContent.value = element.config.content.value;\n            }\n        },\n    },\n};\n","export default \"\\n{% block sw_product_detail_layout %}\\n<div v-if=\\\"isLoading\\\">\\n    <sw-skeleton variant=\\\"detail-bold\\\" />\\n    <sw-skeleton />\\n</div>\\n\\n<div\\n    v-else\\n    class=\\\"sw-product-detail-layout\\\"\\n>\\n    \\n    {% block sw_product_detail_layout_assignment %}\\n    <sw-card\\n        position-identifier=\\\"sw-product-detail-layout-assignment\\\"\\n        :title=\\\"$tc('sw-product.layout.title')\\\"\\n        :subtitle=\\\"$tc('sw-product.layout.subtitle')\\\"\\n    >\\n\\n        \\n        {% block sw_product_detail_layout_content %}\\n        <sw-product-layout-assignment\\n            :cms-page=\\\"currentPage\\\"\\n            @modal-layout-open=\\\"onOpenLayoutModal\\\"\\n            @button-edit-click=\\\"onOpenInPageBuilder\\\"\\n            @button-delete-click=\\\"onResetLayout\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_detail_layout_modal %}\\n        <sw-cms-layout-modal\\n            v-if=\\\"showLayoutModal\\\"\\n            :headline=\\\"$tc('sw-product.layoutAssignment.subtitle')\\\"\\n            :pre-selection=\\\"currentPage\\\"\\n            :cms-page-types=\\\"['product_detail']\\\"\\n            @modal-layout-select=\\\"onSelectLayout\\\"\\n            @modal-close=\\\"onCloseLayoutModal\\\"\\n        />\\n        {% endblock %}\\n    </sw-card>\\n    {% endblock %}\\n\\n    \\n    {% block sw_product_detail_layout_cms_config %}\\n    <template v-if=\\\"acl.can('product.editor') && currentPage\\\">\\n        \\n        {% block sw_product_detail_layout_cms_config_form %}\\n        <sw-cms-page-form\\n            v-if=\\\"showCmsForm\\\"\\n            :page=\\\"currentPage\\\"\\n            :element-update=\\\"elementUpdate\\\"\\n        />\\n\\n        <sw-card\\n            v-else\\n            class=\\\"sw-product-detail-layout__no-config\\\"\\n            position-identifier=\\\"sw-product-detail-layout-no-config\\\"\\n            :is-loading=\\\"isConfigLoading\\\"\\n        >\\n            <p>{{ $tc('sw-product.layout.textNoConfig') }}</p>\\n        </sw-card>\\n        {% endblock %}\\n\\n        \\n        {% block sw_product_detail_layout_cms_content_info %}\\n        <sw-card\\n            hero\\n            position-identifier=\\\"sw-product-detail-layout-cms-info\\\"\\n        >\\n            <p class=\\\"sw-product-detail-layout__content-info\\\">\\n                {{ $tc('sw-product.layout.textContentInfo') }}\\n            </p>\\n        </sw-card>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";"],"sourceRoot":""}