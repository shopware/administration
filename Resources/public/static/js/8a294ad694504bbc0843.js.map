{"version":3,"sources":["webpack:///./src/module/sw-order/component/sw-order-line-items-grid/sw-order-line-items-grid.scss","webpack:///./src/module/sw-order/component/sw-order-line-items-grid/index.js","webpack:///./src/module/sw-order/component/sw-order-line-items-grid/sw-order-line-items-grid.html.twig"],"names":["content","__esModule","default","module","i","locals","exports","add","Utils","Shopware","get","format","template","inject","props","order","type","Object","required","context","editable","Boolean","data","isLoading","selectedItems","searchTerm","nestedLineItemsModal","showDeleteModal","computed","canCreateDiscounts","this","acl","can","orderLineItemRepository","repositoryFactory","create","orderLineItems","_this","lineItems","keyWords","split","filter","item","_item$payload","label","targets","toLowerCase","isProductNumberColumnVisible","payload","productNumber","push","every","key","some","includes","lineItemTypes","LineItemType","taxStatus","unitPriceLabel","$tc","getLineItemColumns","columnDefinitions","property","dataIndex","allowResize","align","inlineEdit","width","primary","multiLine","visible","concat","salesChannelId","_this$order$salesChan","_this$order","_this$$refs$dataGrid","_this$$refs$dataGrid$","$refs","dataGrid","currentColumns","find","currencyFilter","Filter","getByName","methods","onInlineEditSave","_this2","Promise","resolve","isNew","PRODUCT","orderService","addProductToOrder","id","versionId","identifier","quantity","then","lineItem","$emit","CREDIT","addCreditItemToOrder","addCustomLineItemToOrder","onInlineEditCancel","createNewOrderLineItem","priceDefinition","isCalculated","taxRules","taxRate","percentage","price","unitPrice","totalPrice","precision","onInsertBlankItem","description","CUSTOM","unshift","onInsertExistingItem","onInsertCreditItem","onSelectionChanged","selection","onDeleteSelectedItems","_this3","deletionPromises","values","forEach","itemIndex","findIndex","feature","isActive","splice","$delete","delete","length","resetSelection","all","onDeleteItem","onCloseDeleteModal","onConfirmDelete","_this4","itemCreatedFromProduct","elem","onSearchTermChange","isCreditItem","isProductItem","isPromotionItem","PROMOTION","getMinItemPrice","showTaxValue","checkItemPrice","Math","abs","tooltipTaxDetail","_this5","decorateTaxes","_toConsumableArray","calculatedTaxes","sort","prev","current","map","taxItem","tax","currency","shortName","showDelay","message","join","openNestedLineItemsModal","closeNestedLineItemsModal","hasChildren","children","hasMultipleTaxes","updateItemQuantity","showTaxRulesInlineEdit"],"mappings":"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","file":"static/js/8a294ad694504bbc0843.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-order-line-items-grid.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"e99a025e\", content, true, {});","import template from './sw-order-line-items-grid.html.twig';\nimport { LineItemType } from '../../order.types';\nimport './sw-order-line-items-grid.scss';\n\n/**\n * @package checkout\n */\n\nconst { Utils } = Shopware;\nconst { get, format } = Utils;\n\n// merge 16.11.2020\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'orderService', 'acl', 'feature'],\n    props: {\n        order: {\n            type: Object,\n            required: true,\n        },\n        context: {\n            type: Object,\n            required: true,\n        },\n        editable: {\n            type: Boolean,\n            required: false,\n            // TODO: Boolean props should only be opt in and therefore default to false\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            selectedItems: {},\n            searchTerm: '',\n            nestedLineItemsModal: null,\n            showDeleteModal: false,\n        };\n    },\n    computed: {\n        canCreateDiscounts() {\n            return this.acl.can('orders.create_discounts');\n        },\n\n        orderLineItemRepository() {\n            return this.repositoryFactory.create('order_line_item');\n        },\n\n        orderLineItems() {\n            if (!this.searchTerm) {\n                return this.order.lineItems;\n            }\n\n            // Filter based on the product label is not blank and contains the search term or not\n            const keyWords = this.searchTerm.split(/[\\W_]+/ig);\n            return this.order.lineItems.filter(item => {\n                if (!item.label) {\n                    return false;\n                }\n\n                const targets = [item.label.toLowerCase()];\n\n                if (this.isProductNumberColumnVisible && item.payload?.productNumber) {\n                    targets.push(item.payload.productNumber.toLowerCase());\n                }\n\n                return keyWords.every(key => targets.some(i => i.includes(key.toLowerCase())));\n            });\n        },\n\n        lineItemTypes() {\n            return LineItemType;\n        },\n\n        taxStatus() {\n            return get(this.order, 'taxStatus', '');\n        },\n\n        unitPriceLabel() {\n            if (this.taxStatus === 'net') {\n                return this.$tc('sw-order.detailBase.columnPriceNet');\n            }\n\n            if (this.taxStatus === 'tax-free') {\n                return this.$tc('sw-order.detailBase.columnPriceTaxFree');\n            }\n\n            return this.$tc('sw-order.detailBase.columnPriceGross');\n        },\n\n        getLineItemColumns() {\n            const columnDefinitions = [{\n                property: 'quantity',\n                dataIndex: 'quantity',\n                label: 'sw-order.detailBase.columnQuantity',\n                allowResize: false,\n                align: 'right',\n                inlineEdit: true,\n                width: '90px',\n            }, {\n                property: 'label',\n                dataIndex: 'label',\n                label: 'sw-order.detailBase.columnProductName',\n                allowResize: false,\n                primary: true,\n                inlineEdit: true,\n                multiLine: true,\n            }, {\n                property: 'payload.productNumber',\n                dataIndex: 'payload.productNumber',\n                label: 'sw-order.detailBase.columnProductNumber',\n                allowResize: false,\n                align: 'left',\n                visible: false,\n            }, {\n                property: 'unitPrice',\n                dataIndex: 'unitPrice',\n                label: this.unitPriceLabel,\n                allowResize: false,\n                align: 'right',\n                inlineEdit: true,\n                width: '120px',\n            }];\n\n            if (this.taxStatus !== 'tax-free') {\n                columnDefinitions.push({\n                    property: 'price.taxRules[0]',\n                    label: 'sw-order.detailBase.columnTax',\n                    allowResize: false,\n                    align: 'right',\n                    inlineEdit: true,\n                    width: '90px',\n                });\n            }\n\n            return [...columnDefinitions, {\n                property: 'totalPrice',\n                dataIndex: 'totalPrice',\n                label: this.taxStatus === 'gross' ?\n                    'sw-order.detailBase.columnTotalPriceGross' :\n                    'sw-order.detailBase.columnTotalPriceNet',\n                allowResize: false,\n                align: 'right',\n                width: '120px',\n            }];\n        },\n\n        salesChannelId() {\n            return this.order?.salesChannelId ?? '';\n        },\n\n        isProductNumberColumnVisible() {\n            return this.$refs.dataGrid?.currentColumns\n                .find(item => item.property === 'payload.productNumber')?.visible;\n        },\n\n        currencyFilter() {\n            return Shopware.Filter.getByName('currency');\n        },\n    },\n    methods: {\n        onInlineEditSave(item) {\n            return new Promise((resolve) => {\n                if (item.isNew()) {\n                    // This item is based on a product\n                    if (item.type === this.lineItemTypes.PRODUCT) {\n                        this.orderService.addProductToOrder(\n                            this.order.id,\n                            this.order.versionId,\n                            item.identifier,\n                            item.quantity,\n                        ).then((lineItem) => {\n                            this.$emit('item-edit');\n                            resolve(lineItem);\n                        });\n                    } else if (item.type === this.lineItemTypes.CREDIT) {\n                        this.orderService.addCreditItemToOrder(\n                            this.order.id,\n                            this.order.versionId,\n                            item,\n                        ).then((lineItem) => {\n                            this.$emit('item-edit');\n                            resolve(lineItem);\n                        });\n                    } else {\n                        // This item not based on an existing product (blank item)\n                        this.orderService.addCustomLineItemToOrder(\n                            this.order.id,\n                            this.order.versionId,\n                            item,\n                        ).then((lineItem) => {\n                            this.$emit('item-edit');\n                            resolve(lineItem);\n                        });\n                    }\n                } else {\n                    this.$emit('existing-item-edit');\n                    resolve();\n                }\n            });\n        },\n\n        onInlineEditCancel() {\n            this.$emit('item-cancel');\n        },\n\n        createNewOrderLineItem() {\n            const item = this.orderLineItemRepository.create();\n            item.versionId = this.order.versionId;\n            item.priceDefinition = {\n                isCalculated: false,\n                taxRules: [{ taxRate: 0, percentage: 100 }],\n                price: 0,\n            };\n            item.price = {\n                taxRules: [{ taxRate: 0 }],\n                unitPrice: 0,\n                quantity: 1,\n                totalPrice: 0,\n            };\n            item.quantity = 1;\n            item.unitPrice = '...';\n            item.totalPrice = '...';\n            item.precision = 2;\n            item.label = '';\n            item.payload = {\n                productNumber: '',\n            };\n\n            return item;\n        },\n\n        onInsertBlankItem() {\n            const item = this.createNewOrderLineItem();\n            item.description = 'custom line item';\n            item.type = this.lineItemTypes.CUSTOM;\n            this.order.lineItems.unshift(item);\n        },\n\n        onInsertExistingItem() {\n            const item = this.createNewOrderLineItem();\n            item.type = this.lineItemTypes.PRODUCT;\n            this.order.lineItems.unshift(item);\n        },\n\n        onInsertCreditItem() {\n            const item = this.createNewOrderLineItem();\n            item.description = 'credit line item';\n            item.type = this.lineItemTypes.CREDIT;\n            this.order.lineItems.unshift(item);\n        },\n\n        onSelectionChanged(selection) {\n            this.selectedItems = selection;\n        },\n\n        onDeleteSelectedItems() {\n            const deletionPromises = [];\n\n            Object.values(this.selectedItems).forEach((item) => {\n                if (item.isNew()) {\n                    const itemIndex = this.order.lineItems.findIndex(lineItem => item.id === lineItem?.id);\n                    if (this.feature.isActive('VUE3')) {\n                        this.order.lineItems.splice(itemIndex, 1);\n                        return;\n                    }\n\n                    this.$delete(this.order.lineItems, itemIndex);\n                    return;\n                }\n\n                deletionPromises.push(this.orderLineItemRepository.delete(item.id, this.context));\n            });\n\n            if (!deletionPromises.length) {\n                this.selectedItems = {};\n                this.$refs.dataGrid.resetSelection();\n                return;\n            }\n\n            Promise.all(deletionPromises).then(() => {\n                this.$emit('item-delete');\n                this.selectedItems = {};\n                this.$refs.dataGrid.resetSelection();\n            });\n        },\n\n        onDeleteItem(item, itemIndex) {\n            if (item.isNew()) {\n                if (this.feature.isActive('VUE3')) {\n                    this.order.lineItems.splice(itemIndex, 1);\n                    return;\n                }\n                this.$delete(this.order.lineItems, itemIndex);\n                return;\n            }\n\n            this.showDeleteModal = item.id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete() {\n            this.orderLineItemRepository.delete(this.showDeleteModal, this.context).then(() => {\n                this.$emit('item-delete');\n            });\n\n            this.showDeleteModal = false;\n        },\n\n        itemCreatedFromProduct(id) {\n            const item = this.orderLineItems.find((elem) => { return elem.id === id; });\n            return item.isNew() && item.type === this.lineItemTypes.PRODUCT;\n        },\n\n        onSearchTermChange(searchTerm) {\n            this.searchTerm = searchTerm.toLowerCase();\n        },\n\n        isCreditItem(id) {\n            const item = this.orderLineItems.find((elem) => { return elem.id === id; });\n            return item.type === this.lineItemTypes.CREDIT;\n        },\n\n        isProductItem(item) {\n            return item.type === this.lineItemTypes.PRODUCT;\n        },\n\n        isPromotionItem(item) {\n            return item.type === this.lineItemTypes.PROMOTION;\n        },\n\n        getMinItemPrice(id) {\n            if (this.isCreditItem(id)) {\n                return null;\n            }\n            return 0;\n        },\n\n        showTaxValue(item) {\n            return (this.isCreditItem(item.id) || this.isPromotionItem(item)) && (item.price.taxRules.length > 1)\n                ? this.$tc('sw-order.detailBase.textCreditTax')\n                : `${item.price.taxRules[0].taxRate} %`;\n        },\n\n        checkItemPrice(price, item) {\n            if (this.isCreditItem(item.id)) {\n                item.priceDefinition.price = Math.abs(price) * -1;\n                return;\n            }\n\n            item.priceDefinition.price = price;\n        },\n\n        tooltipTaxDetail(item) {\n            const sortTaxes = [...item.price.calculatedTaxes].sort((prev, current) => {\n                return prev.taxRate - current.taxRate;\n            });\n\n            const decorateTaxes = sortTaxes.map((taxItem) => {\n                return this.$tc('sw-order.detailBase.taxDetail', 0, {\n                    taxRate: taxItem.taxRate,\n                    tax: format.currency(taxItem.tax, this.order.currency.shortName),\n                });\n            });\n\n            return {\n                showDelay: 300,\n                message: `${this.$tc('sw-order.detailBase.tax')}<br>${decorateTaxes.join('<br>')}`,\n            };\n        },\n\n        openNestedLineItemsModal(item) {\n            this.nestedLineItemsModal = item;\n        },\n\n        closeNestedLineItemsModal() {\n            this.nestedLineItemsModal = null;\n        },\n\n        hasChildren(item) {\n            return item.children && item.children.length > 0;\n        },\n\n        hasMultipleTaxes(item) {\n            return get(item, 'price.calculatedTaxes') && item.price.calculatedTaxes.length > 1;\n        },\n\n        updateItemQuantity(item) {\n            if (item.type !== this.lineItemTypes.CUSTOM) {\n                return;\n            }\n\n            item.priceDefinition.quantity = item.quantity;\n        },\n\n        showTaxRulesInlineEdit(item) {\n            return !this.itemCreatedFromProduct(item.id) &&\n                item.priceDefinition &&\n                item.priceDefinition.taxRules &&\n                !this.isCreditItem(item.id);\n        },\n    },\n};\n","export default \"\\n{% block sw_order_line_items_grid %}\\n<sw-container\\n    type=\\\"row\\\"\\n    class=\\\"sw-order-line-items-grid\\\"\\n>\\n\\n    \\n    {% block sw_order_line_items_grid_actions %}\\n    <sw-container\\n        class=\\\"sw-order-line-items-grid__actions-container\\\"\\n        columns=\\\"1fr auto\\\"\\n        gap=\\\"16px\\\"\\n    >\\n\\n        \\n        {% block sw_order_line_items_grid_line_item_filter %}\\n        <div align=\\\"left\\\">\\n            <sw-card-filter\\n                ref=\\\"itemFilter\\\"\\n                :placeholder=\\\"$tc('sw-order.createBase.placeholderSearchBarItem')\\\"\\n                @sw-card-filter-term-change=\\\"onSearchTermChange\\\"\\n            />\\n        </div>\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_line_items_grid_create_actions %}\\n        <div align=\\\"right\\\">\\n\\n            \\n            {% block sw_order_line_items_grid_create_actions_button_group %}\\n            <sw-button-group :disabled=\\\"isLoading\\\">\\n\\n                \\n                {% block sw_order_line_items_grid_add_existing_product %}\\n                <sw-button\\n                    class=\\\"sw-order-line-items-grid__actions-container-add-product-btn\\\"\\n                    variant=\\\"ghost\\\"\\n                    size=\\\"small\\\"\\n                    :disabled=\\\"!editable\\\"\\n                    @click=\\\"onInsertExistingItem\\\"\\n                >\\n                    {{ $tc('sw-order.detailBase.buttonAddProduct') }}\\n                </sw-button>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_line_items_grid_create_actions_dropdown %}\\n                <sw-context-button>\\n                    <template #button>\\n                        <sw-button\\n                            variant=\\\"ghost\\\"\\n                            size=\\\"small\\\"\\n                            square\\n                        >\\n                            <sw-icon\\n                                name=\\\"regular-chevron-down-xs\\\"\\n                                decorative\\n                            />\\n                        </sw-button>\\n                    </template>\\n\\n                    \\n                    {% block sw_order_line_items_grid_create_actions_dropdown_menu_item %}\\n                    <sw-context-menu-item\\n                        v-tooltip.left=\\\"{\\n                            message: $tc('sw-privileges.tooltip.warning'),\\n                            disabled: editable,\\n                            showOnDisabledElements: true\\n                        }\\\"\\n                        class=\\\"sw-order-line-items-grid__create-custom-item\\\"\\n                        :disabled=\\\"!editable\\\"\\n                        @click=\\\"onInsertBlankItem\\\"\\n                    >\\n                        {{ $tc('sw-order.detailBase.buttonAddBlankProduct') }}\\n                    </sw-context-menu-item>\\n                    <sw-context-menu-item\\n                        v-tooltip.left=\\\"{\\n                            message: $tc('sw-privileges.tooltip.warning'),\\n                            disabled: canCreateDiscounts,\\n                            showOnDisabledElements: true\\n                        }\\\"\\n                        class=\\\"sw-order-line-items-grid__can-create-discounts-button\\\"\\n                        :disabled=\\\"!canCreateDiscounts\\\"\\n                        @click=\\\"onInsertCreditItem\\\"\\n                    >\\n                        {{ $tc('sw-order.detailBase.buttonAddCredit') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n\\n                </sw-context-button>\\n                {% endblock %}\\n\\n            </sw-button-group>\\n            {% endblock %}\\n\\n        </div>\\n        {% endblock %}\\n\\n    </sw-container>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_line_items_grid_grid %}\\n    <sw-data-grid\\n        ref=\\\"dataGrid\\\"\\n        class=\\\"sw-order-line-items-grid__data-grid\\\"\\n        identifier=\\\"sw-order-line-item-grid\\\"\\n        :data-source=\\\"orderLineItems\\\"\\n        :columns=\\\"getLineItemColumns\\\"\\n        show-settings\\n        :show-selection=\\\"editable\\\"\\n        :is-loading=\\\"isLoading\\\"\\n        :allow-inline-edit=\\\"editable\\\"\\n        :is-record-editable=\\\"(item) => !isPromotionItem(item)\\\"\\n        @inline-edit-cancel=\\\"onInlineEditCancel\\\"\\n        @inline-edit-save=\\\"onInlineEditSave\\\"\\n        @selection-change=\\\"onSelectionChanged\\\"\\n    >\\n\\n        \\n        {% block sw_order_line_items_grid_grid_columns %}\\n        \\n        {% block sw_order_line_items_grid_grid_columns_label %}\\n        <template #column-label=\\\"{ item, isInlineEdit }\\\">\\n\\n            \\n            {% block sw_order_line_items_grid_grid_columns_label_inline_edit %}\\n            <sw-order-product-select\\n                v-if=\\\"isInlineEdit\\\"\\n                {% if VUE3 %}\\n                name=\\\"sw-field--item-label\\\"\\n                {% endif %}\\n                :sales-channel-id=\\\"salesChannelId\\\"\\n                :tax-status=\\\"taxStatus\\\"\\n                :item=\\\"item\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_line_items_grid_grid_columns_label_link %}\\n            <div\\n                v-else-if=\\\"!isInlineEdit && isProductItem(item)\\\"\\n                class=\\\"sw-order-line-items-grid__item-product\\\"\\n            >\\n\\n                \\n                {% block sw_order_line_items_grid_grid_columns_label_nested_modal_button %}\\n                <sw-button\\n                    v-if=\\\"hasChildren(item)\\\"\\n                    v-tooltip=\\\"{ message: $tc('sw-order.detailBase.tooltipNestedLineItemsButton') }\\\"\\n                    class=\\\"sw-order-line-items-grid__item-nested-indicator\\\"\\n                    size=\\\"x-small\\\"\\n                    @click=\\\"openNestedLineItemsModal(item)\\\"\\n                >\\n\\n                    \\n                    {% block sw_order_line_items_grid_grid_columns_label_nested_modal_button_icon %}\\n                    <sw-icon\\n                        class=\\\"sw-order-line-items-grid__nested-indicator-icon\\\"\\n                        name=\\\"regular-list-xs\\\"\\n                        size=\\\"14px\\\"\\n                    />\\n                    {% endblock %}\\n\\n                </sw-button>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_line_items_grid_column_payload_options %}\\n                \\n                {% block sw_order_line_items_grid_column_payload_options_link %}\\n                <router-link\\n                    v-if=\\\"item.payload && item.payload.options\\\"\\n                    class=\\\"sw-order-line-items-grid__item-payload-options\\\"\\n                    :title=\\\"$tc('sw-order.detailBase.contextMenuShowProduct')\\\"\\n                    :to=\\\"{ name: 'sw.product.detail', params: { id: item.productId } }\\\"\\n                >\\n                    <sw-product-variant-info :variations=\\\"item.payload.options\\\">\\n                        <div class=\\\"sw-order-line-items-grid__item-label\\\">\\n                            {{ item.label }}\\n                        </div>\\n                    </sw-product-variant-info>\\n                </router-link>\\n                {% endblock %}\\n\\n                \\n                {% block sw_order_line_items_grid_column_payload_options_linkless %}\\n                <div\\n                    v-else\\n                    class=\\\"sw-order-line-items-grid__item-payload-options\\\"\\n                >\\n                    <span class=\\\"sw-order-line-items-grid__item-label\\\">\\n                        {{ item.label }}\\n                    </span>\\n                </div>\\n                {% endblock %}\\n                {% endblock %}\\n\\n            </div>\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_line_items_grid_grid_columns_label_content %}\\n            <template v-else>\\n                <span class=\\\"sw-order-line-items-grid__item-label\\\">\\n                    {{ item.label }}\\n                </span>\\n            </template>\\n            {% endblock %}\\n\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_line_items_grid_grid_columns_unit_price %}\\n        <template #column-unitPrice=\\\"{ item, isInlineEdit }\\\">\\n\\n            \\n            {% block sw_order_line_items_grid_grid_columns_unit_price_inline_edit %}\\n            <sw-number-field\\n                v-if=\\\"isInlineEdit && !itemCreatedFromProduct(item.id)\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"item.priceDefinition.price\\\"\\n                {% else %}\\n                v-model=\\\"item.priceDefinition.price\\\"\\n                {% endif %}\\n                {% if VUE3 %}\\n                name=\\\"sw-field--item-priceDefinition-price\\\"\\n                {% endif %}\\n                placeholder=\\\"0\\\"\\n                size=\\\"small\\\"\\n                :min=\\\"getMinItemPrice(item.id)\\\"\\n                :digits=\\\"order.itemRounding.decimals\\\"\\n                {% if VUE3 %}\\n                @update:value=\\\"checkItemPrice($event, item)\\\"\\n                {% else %}\\n                @change=\\\"checkItemPrice($event, item)\\\"\\n                {% endif %}\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_line_items_grid_grid_columns_unit_price_content %}\\n            <span v-else>{{ currencyFilter(item.unitPrice, order.currency.shortName, order.itemRounding.decimals) }}</span>\\n            {% endblock %}\\n\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_line_items_grid_grid_columns_total_price %}\\n        <template #column-totalPrice=\\\"{ item }\\\">\\n\\n            \\n            {% block sw_order_line_items_grid_grid_columns_total_price_content %}\\n            <span>\\n                {{ currencyFilter(item.totalPrice, order.currency.shortName, order.itemRounding.decimals) }}\\n            </span>\\n            {% endblock %}\\n\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_line_items_grid_grid_columns_quantity %}\\n        <template #column-quantity=\\\"{ item, isInlineEdit }\\\">\\n\\n            \\n            {% block sw_order_line_items_grid_grid_columns_quantity_inline_edit %}\\n            <sw-number-field\\n                v-if=\\\"isInlineEdit && !isCreditItem(item.id)\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"item.quantity\\\"\\n                {% else %}\\n                v-model=\\\"item.quantity\\\"\\n                {% endif %}\\n                {% if VUE3 %}\\n                name=\\\"sw-field--item-quantity\\\"\\n                {% endif %}\\n                number-type=\\\"int\\\"\\n                :min=\\\"1\\\"\\n                size=\\\"small\\\"\\n                placeholder=\\\"0\\\"\\n                {% if VUE3 %}\\n                @update:value=\\\"updateItemQuantity(item)\\\"\\n                {% else %}\\n                @change=\\\"updateItemQuantity(item)\\\"\\n                {% endif %}\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_line_items_grid_grid_columns_quantity_content %}\\n            <span v-else>\\n                {{ item.quantity }} x\\n            </span>\\n            {% endblock %}\\n\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_line_items_grid_grid_columns_tax %}\\n\\n        <template #column-price.taxRules[0]=\\\"{ item, isInlineEdit }\\\">\\n\\n            \\n            {% block sw_order_line_items_grid_grid_columns_tax_inline_edit %}\\n            <sw-number-field\\n                v-if=\\\"isInlineEdit && showTaxRulesInlineEdit(item)\\\"\\n                key=\\\"order-line-item-tax-edit-default\\\"\\n                {% if VUE3 %}\\n                v-model:value=\\\"item.priceDefinition.taxRules[0].taxRate\\\"\\n                {% else %}\\n                v-model=\\\"item.priceDefinition.taxRules[0].taxRate\\\"\\n                {% endif %}\\n                {% if VUE3 %}\\n                name=\\\"sw-field--item-priceDefinition-taxRules[0]-taxRate\\\"\\n                {% endif %}\\n                size=\\\"small\\\"\\n                placeholder=\\\"0\\\"\\n            />\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_line_items_grid_grid_columns_tax_content_tooltip %}\\n            <span\\n                v-else-if=\\\"hasMultipleTaxes(item)\\\"\\n                v-tooltip=\\\"tooltipTaxDetail(item)\\\"\\n                class=\\\"sw-order-line-items-grid__item-tax-tooltip\\\"\\n            >\\n                {{ showTaxValue(item) }}\\n            </span>\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_line_items_grid_grid_columns_tax_content %}\\n            <span v-else-if=\\\"item.price && item.price.taxRules.length\\\">\\n                {{ showTaxValue(item) }}\\n            </span>\\n            {% endblock %}\\n\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_line_items_grid_grid_actions %}\\n        <template #actions=\\\"{ item, itemIndex }\\\">\\n            \\n            {% block sw_order_line_items_grid_grid_actions_show %}\\n            <sw-context-menu-item\\n                :disabled=\\\"!isProductItem(item)\\\"\\n                :router-link=\\\"{ name: 'sw.product.detail', params: { id: item.productId } }\\\"\\n            >\\n\\n                \\n                {% block sw_order_line_items_grid_grid_actions_show_label %}\\n                {{ $tc('sw-order.detailBase.contextMenuShowProduct') }}\\n                {% endblock %}\\n\\n            </sw-context-menu-item>\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_line_items_grid_grid_actions_extension %}{% endblock %}\\n\\n            \\n            {% block sw_order_line_items_grid_grid_actions_delete %}\\n            <sw-context-menu-item\\n                v-tooltip.left=\\\"{\\n                    message: $tc('sw-privileges.tooltip.warning'),\\n                    disabled: editable,\\n                    showOnDisabledElements: true\\n                }\\\"\\n                variant=\\\"danger\\\"\\n                class=\\\"sw_order_line_items_grid-item__delete-action\\\"\\n                :disabled=\\\"!editable\\\"\\n                @click=\\\"onDeleteItem(item, itemIndex)\\\"\\n            >\\n                \\n                {% block sw_order_line_items_grid_grid_actions_delete_label %}\\n                {{ $tc('sw-order.detailBase.contextMenuDelete') }}\\n                {% endblock %}\\n\\n            </sw-context-menu-item>\\n            {% endblock %}\\n\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_line_items_grid_grid_actions_modals %}\\n        <template #action-modals=\\\"{ item }\\\">\\n            \\n            {% block sw_order_line_items_grid_grid_actions_modals_items %}{% endblock %}\\n            <sw-modal\\n                v-if=\\\"showDeleteModal === item.id\\\"\\n                class=\\\"sw-order-line-items-grid__delete-item-modal\\\"\\n                :title=\\\"$tc('global.default.warning')\\\"\\n                variant=\\\"small\\\"\\n                @modal-close=\\\"onCloseDeleteModal\\\"\\n            >\\n                <p class=\\\"sw-order-list__confirm-delete-text\\\">\\n                    {{ $tc('sw-order.detailBase.textDeleteLineItemConfirm', 0, { label: `${item.label}` }) }}\\n                </p>\\n\\n                <template #modal-footer>\\n                    <sw-button\\n                        size=\\\"small\\\"\\n                        class=\\\"sw_order_line_items_grid-actions_modal__close-action\\\"\\n                        @click=\\\"onCloseDeleteModal\\\"\\n                    >\\n                        {{ $tc('global.default.cancel') }}\\n                    </sw-button>\\n\\n                    <sw-button\\n                        variant=\\\"danger\\\"\\n                        size=\\\"small\\\"\\n\\n                        class=\\\"sw_order_line_items_grid-actions_modal__confirm-action\\\"\\n                        @click=\\\"onConfirmDelete(item.id)\\\"\\n                    >\\n                        {{ $tc('global.default.delete') }}\\n                    </sw-button>\\n                </template>\\n            </sw-modal>\\n        </template>\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_line_items_grid_bulk_actions %}\\n        <template #bulk>\\n\\n            \\n            {% block sw_order_line_items_grid_bulk_actions_delete %}\\n            <a\\n                class=\\\"link link-danger\\\"\\n                role=\\\"link\\\"\\n                tabindex=\\\"0\\\"\\n                @click=\\\"onDeleteSelectedItems\\\"\\n                @keydown.enter=\\\"onDeleteSelectedItems\\\"\\n            >\\n                {{ $tc('global.default.delete') }}\\n            </a>\\n            {% endblock %}\\n\\n            \\n            {% block sw_order_line_items_grid_bulk_actions_extension %}{% endblock %}\\n        </template>\\n        {% endblock %}\\n        {% endblock %}\\n\\n    </sw-data-grid>\\n    {% endblock %}\\n\\n    \\n    {% block sw_order_line_items_nested_line_item_modal %}\\n    <sw-order-nested-line-items-modal\\n        v-if=\\\"nestedLineItemsModal\\\"\\n        :line-item=\\\"nestedLineItemsModal\\\"\\n        :order=\\\"order\\\"\\n        @modal-close=\\\"closeNestedLineItemsModal\\\"\\n    />\\n    {% endblock %}\\n\\n</sw-container>\\n{% endblock %}\\n\";"],"sourceRoot":""}