{"version":3,"sources":["webpack:///./src/module/sw-settings-currency/page/sw-settings-currency-list/sw-settings-currency-list.html.twig","webpack:///./src/module/sw-settings-currency/page/sw-settings-currency-list/index.js"],"names":["Mixin","Shopware","Criteria","Data","template","inject","mixins","getByName","data","entityName","currency","sortBy","isLoading","sortDirection","naturalSorting","showDeleteModal","metaInfo","title","this","$createTitle","computed","currencyRepository","repositoryFactory","create","methods","getList","_this","criteria","page","limit","setTerm","term","addSorting","sort","search","then","items","total","catch","onChangeLanguage","languageId","State","commit","onInlineEditSave","promise","_this2","createNotificationSuccess","message","$tc","name","createNotificationError","onDelete","id","onCloseDeleteModal","onConfirmDelete","_this3","delete","getCurrencyColumns","property","dataIndex","inlineEdit","label","routerLink","width","primary"],"mappings":"4HAAe,ICKPA,EAAUC,SAAVD,MACAE,EAAaD,SAASE,KAAtBD,SAGO,WACXE,SDVW,k+NCYXC,OAAQ,CAAC,oBAAqB,OAE9BC,OAAQ,CACJN,EAAMO,UAAU,WAChBP,EAAMO,UAAU,iBAGpBC,KAAI,WACA,MAAO,CACHC,WAAY,WACZC,SAAU,KACVC,OAAQ,gBACRC,WAAW,EACXC,cAAe,MACfC,gBAAgB,EAChBC,iBAAiB,IAIzBC,SAAQ,WACJ,MAAO,CACHC,MAAOC,KAAKC,iBAIpBC,SAAU,CACNC,mBAAkB,WACd,OAAOH,KAAKI,kBAAkBC,OAAO,cAI7CC,QAAS,CACLR,SAAQ,WACJ,MAAO,CACHC,MAAOC,KAAKC,iBAIpBM,QAAO,WAAI,IAADC,EAAA,KACAC,EAAW,IAAIzB,EAASgB,KAAKU,KAAMV,KAAKW,OAC9CX,KAAKN,WAAY,EACjBM,KAAKJ,eAAiC,SAAhBI,KAAKP,OAE3BgB,EAASG,QAAQZ,KAAKa,MACtBJ,EAASK,WAAW9B,EAAS+B,KAAKf,KAAKP,OAAQO,KAAKL,cAAeK,KAAKJ,iBAExEI,KAAKG,mBAAmBa,OAAOP,GAAUQ,MAAK,SAACC,GAK3C,OAJAV,EAAKW,MAAQD,EAAMC,MACnBX,EAAKhB,SAAW0B,EAChBV,EAAKd,WAAY,EAEVwB,KACRE,OAAM,WACLZ,EAAKd,WAAY,MAIzB2B,iBAAgB,SAACC,GACbvC,SAASwC,MAAMC,OAAO,2BAA4BF,GAClDtB,KAAKO,WAGTkB,iBAAgB,SAACC,EAASlC,GAAW,IAADmC,EAAA,KAChCD,EAAQT,MAAK,WACTU,EAAKC,0BAA0B,CAC3BC,QAASF,EAAKG,IAAI,iDAAkD,EAAG,CAAEC,KAAMvC,EAASuC,YAE7FX,OAAM,WACLO,EAAKpB,UACLoB,EAAKK,wBAAwB,CACzBH,QAASF,EAAKG,IAAI,sDAK9BG,SAAQ,SAACC,GACLlC,KAAKH,gBAAkBqC,GAG3BC,mBAAkB,WACdnC,KAAKH,iBAAkB,GAG3BuC,gBAAe,SAACF,GAAK,IAADG,EAAA,KAGhB,OAFArC,KAAKH,iBAAkB,EAEhBG,KAAKG,mBAAmBmC,OAAOJ,GAAIjB,MAAK,WAC3CoB,EAAK9B,cAKbgC,mBAAkB,WACd,MAAO,CAAC,CACJC,SAAU,OACVC,UAAW,OACXC,WAAY,SACZC,MAAO,uCACPC,WAAY,8BACZC,MAAO,QACPC,SAAS,GACV,CACCN,SAAU,YACVE,WAAY,SACZC,MAAO,6CACR,CACCH,SAAU,SACVE,WAAY,SACZC,MAAO,0CACR,CACCH,SAAU,SACVE,WAAY,SACZC,MAAO","file":"static/js/aa19e18cf7063dc6e9a4.js","sourcesContent":["export default \"\\n{% block sw_settings_list %}\\n\\n{% block sw_settings_currency_index %}\\n<sw-page class=\\\"sw-settings-currency-list\\\">\\n\\n    \\n    {% block sw_settings_currency_list_language_switch %}\\n    <template #language-switch>\\n        <sw-language-switch @on-change=\\\"onChangeLanguage\\\" />\\n    </template>>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_currency_list_search_bar %}\\n    <template #search-bar>\\n        <sw-search-bar\\n            initial-search-type=\\\"currency\\\"\\n            :placeholder=\\\"$tc('sw-settings-currency.general.placeholderSearchBar')\\\"\\n            :initial-search=\\\"term\\\"\\n            @search=\\\"onSearch\\\"\\n        />\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_currency_list_smart_bar_header %}\\n    <template #smart-bar-header>\\n        \\n        {% block sw_settings_currency_list_smart_bar_header_title %}\\n        <h2>\\n            \\n            {% block sw_settings_currency_list_smart_bar_header_title_text %}\\n            {{ $tc('sw-settings.index.title') }} <sw-icon\\n                name=\\\"regular-chevron-right-xs\\\"\\n                small\\n            /> {{ $tc('sw-settings-currency.list.textHeadline') }}\\n            {% endblock %}\\n\\n            \\n            {% block sw_settings_currency_list_smart_bar_header_amount %}\\n            <span\\n                v-if=\\\"!isLoading\\\"\\n                class=\\\"sw-page__smart-bar-amount\\\"\\n            >\\n                ({{ total }})\\n            </span>\\n            {% endblock %}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    \\n    {% block sw_settings_currency_list_smart_bar_actions %}\\n    <template #smart-bar-actions>\\n        \\n        {% block sw_settings_currency_list_smart_bar_actions_add %}\\n        <sw-button\\n            :router-link=\\\"{ name: 'sw.settings.currency.create' }\\\"\\n            class=\\\"sw-settings-currency-list__button-create\\\"\\n            :disabled=\\\"!acl.can('currencies.creator')\\\"\\n            variant=\\\"primary\\\"\\n        >\\n            {{ $tc('sw-settings-currency.list.buttonAddCurrency') }}\\n        </sw-button>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    <template #content>\\n        \\n        {% block sw_settings_currency_list_content %}\\n        <div class=\\\"sw-currency-list__content\\\">\\n            <sw-entity-listing\\n                v-if=\\\"isLoading || currency\\\"\\n                ref=\\\"swSettingsCurrencyGrid\\\"\\n                class=\\\"sw-settings-currency-list-grid\\\"\\n                :items=\\\"currency\\\"\\n                :columns=\\\"getCurrencyColumns()\\\"\\n                :repository=\\\"currencyRepository\\\"\\n                :full-page=\\\"false\\\"\\n                :allow-edit=\\\"acl.can('currencies.editor')\\\"\\n                :allow-delete=\\\"acl.can('currencies.deleter')\\\"\\n                :allow-inline-edit=\\\"acl.can('currencies.editor')\\\"\\n                detail-route=\\\"sw.settings.currency.detail\\\"\\n                :show-selection=\\\"false\\\"\\n                :is-loading=\\\"isLoading\\\"\\n                :sort-by=\\\"sortBy\\\"\\n                :sort-direction=\\\"sortDirection\\\"\\n                :disable-data-fetching=\\\"true\\\"\\n                identifier=\\\"sw-settings-currency-list\\\"\\n                @page-change=\\\"onPageChange\\\"\\n                @column-sort=\\\"onSortColumn\\\"\\n                @inline-edit-save=\\\"onInlineEditSave\\\"\\n            >\\n\\n                \\n                {% block sw_settings_currency_list_grid_columns_actions %}\\n                <template #actions=\\\"{ item }\\\">\\n                    \\n                    {% block sw_settings_currency_list_grid_columns_actions_edit %}\\n                    <sw-context-menu-item\\n                        :disabled=\\\"!acl.can('currencies.editor')\\\"\\n                        :router-link=\\\"{ name: 'sw.settings.currency.detail', params: { id: item.id, edit: 'edit' }}\\\"\\n                        class=\\\"sw-currency-list__edit-action\\\"\\n                    >\\n                        {{ $tc('sw-settings-currency.list.contextMenuEdit') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n\\n                    \\n                    {% block sw_settings_currency_list_grid_columns_actions_delete %}\\n                    <sw-context-menu-item\\n                        :disabled=\\\"item.isSystemDefault || !acl.can('currencies.deleter')\\\"\\n                        variant=\\\"danger\\\"\\n                        class=\\\"sw-currency-list__delete-action\\\"\\n                        @click=\\\"onDelete(item.id)\\\"\\n                    >\\n                        {{ $tc('sw-settings-currency.list.contextMenuDelete') }}\\n                    </sw-context-menu-item>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n\\n                \\n                {% block sw_settings_currency_list_grid_action_modals %}\\n                <template #action-modals=\\\"{ item }\\\">\\n                    \\n                    {% block sw_settings_currency_list_delete_modal %}\\n                    <sw-modal\\n                        v-if=\\\"showDeleteModal === item.id\\\"\\n                        :title=\\\"$tc('global.default.warning')\\\"\\n                        variant=\\\"small\\\"\\n                        @modal-close=\\\"onCloseDeleteModal\\\"\\n                    >\\n                        \\n                        {% block sw_settings_currency_list_delete_modal_confirm_delete_text %}\\n                        <p class=\\\"sw-settings-currency-list__confirm-delete-text\\\">\\n                            {{ $tc('sw-settings-currency.list.textDeleteConfirm', 0, { name: item.name }) }}\\n                        </p>\\n                        {% endblock %}\\n\\n                        \\n                        {% block sw_settings_currency_list_delete_modal_footer %}\\n                        <template #modal-footer>\\n                            \\n                            {% block sw_settings_currency_list_delete_modal_cancel %}\\n                            <sw-button\\n                                size=\\\"small\\\"\\n                                @click=\\\"onCloseDeleteModal\\\"\\n                            >\\n                                {{ $tc('sw-settings-currency.list.buttonCancel') }}\\n                            </sw-button>\\n                            {% endblock %}\\n\\n                            \\n                            {% block sw_settings_currency_list_delete_modal_confirm %}\\n                            <sw-button\\n                                variant=\\\"danger\\\"\\n                                size=\\\"small\\\"\\n                                @click=\\\"onConfirmDelete(item.id)\\\"\\n                            >\\n                                {{ $tc('sw-settings-currency.list.buttonDelete') }}\\n                            </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                    {% endblock %}\\n                </template>\\n                {% endblock %}\\n            </sw-entity-listing>\\n        </div>\\n        {% endblock %}\\n    </template>\\n</sw-page>\\n    {% endblock %}\\n{% endblock %}\\n\";","/**\n * @package buyers-experience\n */\nimport template from './sw-settings-currency-list.html.twig';\n\nconst { Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl'],\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            entityName: 'currency',\n            currency: null,\n            sortBy: 'currency.name',\n            isLoading: false,\n            sortDirection: 'ASC',\n            naturalSorting: true,\n            showDeleteModal: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n    },\n\n    methods: {\n        metaInfo() {\n            return {\n                title: this.$createTitle(),\n            };\n        },\n\n        getList() {\n            const criteria = new Criteria(this.page, this.limit);\n            this.isLoading = true;\n            this.naturalSorting = this.sortBy === 'name';\n\n            criteria.setTerm(this.term);\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, this.naturalSorting));\n\n            this.currencyRepository.search(criteria).then((items) => {\n                this.total = items.total;\n                this.currency = items;\n                this.isLoading = false;\n\n                return items;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onChangeLanguage(languageId) {\n            Shopware.State.commit('context/setApiLanguageId', languageId);\n            this.getList();\n        },\n\n        onInlineEditSave(promise, currency) {\n            promise.then(() => {\n                this.createNotificationSuccess({\n                    message: this.$tc('sw-settings-currency.detail.messageSaveSuccess', 0, { name: currency.name }),\n                });\n            }).catch(() => {\n                this.getList();\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-currency.detail.messageSaveError'),\n                });\n            });\n        },\n\n        onDelete(id) {\n            this.showDeleteModal = id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete(id) {\n            this.showDeleteModal = false;\n\n            return this.currencyRepository.delete(id).then(() => {\n                this.getList();\n            });\n        },\n\n\n        getCurrencyColumns() {\n            return [{\n                property: 'name',\n                dataIndex: 'name',\n                inlineEdit: 'string',\n                label: 'sw-settings-currency.list.columnName',\n                routerLink: 'sw.settings.currency.detail',\n                width: '250px',\n                primary: true,\n            }, {\n                property: 'shortName',\n                inlineEdit: 'string',\n                label: 'sw-settings-currency.list.columnShortName',\n            }, {\n                property: 'symbol',\n                inlineEdit: 'string',\n                label: 'sw-settings-currency.list.columnSymbol',\n            }, {\n                property: 'factor',\n                inlineEdit: 'string',\n                label: 'sw-settings-currency.list.columnFactor',\n            }];\n        },\n    },\n};\n"],"sourceRoot":""}